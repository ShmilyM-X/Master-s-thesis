window.data = {"similarity_ref":0,"notes":[],"similarity_remove_self":0.176,"source_max_similar_title":"Verilog HDL应用程序设计实例精讲","references":[],"similarity_custom":0,"kinds":"default,","title":"FPGA资源估算","word_count":44835,"source_max_similar_url":"","similarity":0.176,"report_laconic":{"word_pro_count":0,"similarity_ref":0,"word_ref_count":0,"word_similar_count":7896,"word_custom_count":0,"chapters":[{"word_pro_count":0,"similarity_ref":0,"chapter":"中英文摘要等","word_similar_count":302,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000202562427011","author":"","similarity":0.023,"self":false,"similar_word_count":86,"source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000142555028611","author":"","similarity":0.016,"self":false,"similar_word_count":61,"source":"网页","title":"微网·微波论坛·ads P21_32-by_bubulong_文档库","url":"http://www.wendangku.net/doc/f7a6c619c5da50e2524d7ffd.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000132163561611","author":"","similarity":0.015,"self":false,"similar_word_count":57,"source":"网页","title":"GBT - 信息安全技术 安全处理器技术规范 - 道客巴巴","url":"http://www.doc88.com/p%2D9866157742471.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.014,"self":false,"similar_word_count":55,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000458370111","author":"","similarity":0.013,"self":false,"similar_word_count":50,"source":"大学生论文联合库","title":"基于遗传算法的汽车电气故障诊断研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203081199911","author":"","similarity":0.012,"self":false,"similar_word_count":47,"source":"网页","title":"一种字典更新方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011335384.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000427064411","author":"周燕美","similarity":0.012,"self":false,"similar_word_count":47,"source":"大学生论文联合库","title":"中药质量控制方法","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000368749211","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"大学生论文联合库","title":"电力系统中的变压器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133380057111","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"网页","title":"基于FPGA的人脸识别算法及其实现 - 道客巴巴","url":"http://www.doc88.com/p%2D0032550396430.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133699744011","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"使用混合式分裂束激光划线处理及等离子体蚀刻的晶圆切割的制作方法","url":"http://www.xjishu.com/zhuanli/59/201280038309.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203132291211","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"内窥镜用处理器、程序、信息处理方法和信息处理装置与流程","url":"http://www.xjishu.com/zhuanli/55/202080019466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186245429911","author":"","similarity":0.011,"self":false,"similar_word_count":43,"source":"网页","title":"多重编解码器编码器及多重编解码器编码系统","url":"http://www.doc88.com/p%2D31073366987892.html"},{"reference":false,"teacher":"","datatype":"book","year":"1997","docid":"1900023554017211","author":"胡乾斌等著","similarity":0.01,"self":false,"similar_word_count":39,"source":"武汉：华中理工大学出版社","title":"数字集成电子技术基础","url":""}],"similarity_pro":0,"word_copy_count":302,"word_self_count":0,"word_count":3814,"similarity":0.079,"similarity_copy":0.079,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"绪论","word_similar_count":7594,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.045,"self":false,"similar_word_count":1776,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.031,"self":false,"similar_word_count":1232,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.019,"self":false,"similar_word_count":742,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.013,"self":false,"similar_word_count":497,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.011,"self":false,"similar_word_count":447,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183209387311","author":"","similarity":0.009,"self":false,"similar_word_count":358,"source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1"},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":285,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.007,"self":false,"similar_word_count":278,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.006,"self":false,"similar_word_count":245,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.006,"self":false,"similar_word_count":224,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138838221611","author":"","similarity":0.004,"self":false,"similar_word_count":158,"source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135414128511","author":"","similarity":0.004,"self":false,"similar_word_count":142,"source":"网页","title":"数学分类","url":"https://blog.csdn.net/qq_30815237/article/details/88739072"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"journal","year":"2018","docid":"1000027943830211","author":"钟海燕;李玲;麦雄发;王雨","similarity":0.003,"self":false,"similar_word_count":136,"source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000126492999811","author":"","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","similarity":0.003,"self":false,"similar_word_count":128,"source":"","title":"Verilog HDL数字系统设计及实践","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135879019911","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128075291811","author":"","similarity":0.003,"self":false,"similar_word_count":127,"source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000178176625511","author":"","similarity":0.003,"self":false,"similar_word_count":116,"source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016047965011","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181730880511","author":"","similarity":0.003,"self":false,"similar_word_count":102,"source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186521686911","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015763116111","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030621911","author":"","similarity":0.002,"self":false,"similar_word_count":96,"source":"网页","title":"Verilog程序如何优化减少逻辑单元的使用数量","url":"https://blog.csdn.net/u010173859/article/details/17511749"},{"reference":false,"teacher":"","datatype":"wiki","year":"","docid":"9100005028085811","author":"","similarity":0.002,"self":false,"similar_word_count":91,"source":"百科","title":"Verilog HDL","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181240768511","author":"","similarity":0.002,"self":false,"similar_word_count":88,"source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000208370017111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128720481111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"西瓜书学习笔记——第八章：集成学习_Andrewings-CSDN博客","url":"https://blog.csdn.net/shichensuyu/article/details/93312974"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":81,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138505610111","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"随机森林算法梳理_sanpang2288的博客-CSDN博客","url":"https://blog.csdn.net/sanpang2288/article/details/89024781"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000185145501211","author":"","similarity":0.002,"self":false,"similar_word_count":73,"source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191352255511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000184235326811","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000029360914111","author":"冯静达;焦学军;李启杰;郭娅美;杨涵钧;楚洪祚","similarity":0.002,"self":false,"similar_word_count":72,"source":"航天医学与医学工程","title":"基于心率和呼吸特征结合的睡眠分期研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000141550370811","author":"","similarity":0.002,"self":false,"similar_word_count":71,"source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189446884611","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000941227311","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"光学计算机程序设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015758038411","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000798956911","author":"JXT","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000524795711","author":"-","similarity":0.002,"self":false,"similar_word_count":69,"source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110384254911","author":"","similarity":0.002,"self":false,"similar_word_count":69,"source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000017085073411","author":"","similarity":0.002,"self":false,"similar_word_count":68,"source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000207907782911","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"逻辑综合中的工艺映射算法研究","url":"https://www.docin.com/p%2D851853545.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015681295811","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2015","docid":"2200000669311311","author":"戚薏","similarity":0.002,"self":false,"similar_word_count":65,"source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000180302201811","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189917812511","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138770563211","author":"","similarity":0.002,"self":false,"similar_word_count":62,"source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082132296211","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023653559711","author":"何海群著","similarity":0.001,"self":false,"similar_word_count":59,"source":"","title":"零起点  Python足彩大数据与机器学习实盘分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079748404511","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146036562311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"选择题   数字系统设计","url":"https://wenku.baidu.com/view/dd29f7e9b8f67c1cfad6b8c1"},{"reference":false,"teacher":"","datatype":"journal","year":"2019","docid":"1000029331339811","author":"刘博;卢婷婷;陈国磊;赵璐","similarity":0.001,"self":false,"similar_word_count":58,"source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120314096811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179275463811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于Verilog的8051微控制器中断系统的设计---优秀毕业论文 参考文献 可复..","url":"https://www.docin.com/p%2D827308466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"}],"similarity_pro":0,"word_copy_count":7594,"word_self_count":0,"word_count":39476,"similarity":0.192,"similarity_copy":0.192,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"总结与展望","word_similar_count":0,"word_ref_count":0,"sources":[],"similarity_pro":0,"word_copy_count":0,"word_self_count":0,"word_count":1545,"similarity":0,"similarity_copy":0,"similarity_self":0}],"similarity_custom":0,"similarity_pro":0,"last_part_similar_count":6214,"word_copy_count":7896,"chapter_similar_count":2,"max_source_info":{"source_max_similar_docid":"1900023715219511","source_max_similar_url":"","source_max_similar_title":"Verilog HDL应用程序设计实例精讲","source_max_similar_count":1301},"chapter_min_similar_word_count":302,"front_part_similar_count":1682,"chapter_max_similar_word_count":7594,"word_self_count":0,"similarity":0.176,"similarity_copy":0.176,"similarity_self":0,"similarityPercentage":"17.6%","SSetForT_Str":"{◑T1I0◑:[◑2S4I7◑,◑2S4I6◑],◑T90I6◑:[◑91S223I13◑],◑T14I0◑:[◑15S35I4◑],◑T37I0◑:[◑38S68I3◑],◑T90I0◑:[◑91S223I7◑,◑91S224I5◑],◑T14I1◑:[◑15S35I4◑],◑T103I2◑:[◑104S259I8◑,◑104S260I17◑],◑T90I4◑:[◑91S223I11◑,◑91S224I9◑],◑T90I5◑:[◑91S224I10◑],◑T90I2◑:[◑91S223I9◑,◑91S224I7◑],◑T90I3◑:[◑91S223I10◑,◑91S224I8◑],◑T26I8◑:[◑27S50I11◑],◑T49I8◑:[◑50S100I8◑],◑T26I7◑:[◑27S50I10◑],◑T49I9◑:[◑50S100I8◑],◑T26I6◑:[◑27S50I9◑],◑T26I4◑:[◑27S50I7◑],◑T26I2◑:[◑27S50I6◑],◑T26I1◑:[◑27S50I5◑],◑T49I1◑:[◑50S100I0◑],◑T49I2◑:[◑50S100I0◑],◑T49I6◑:[◑50S100I5◑,◑50S100I6◑],◑T115I2◑:[◑116S282I3◑],◑T115I3◑:[◑116S281I6◑],◑T115I4◑:[◑116S282I3◑,◑116S281I7◑],◑T138I4◑:[◑139S341I10◑,◑139S342I5◑,◑139S341I11◑,◑139S342I4◑,◑139S341I9◑],◑T115I5◑:[◑116S281I8◑],◑T115I6◑:[◑116S282I3◑,◑116S281I9◑],◑T15I7◑:[◑16S37I13◑],◑T15I8◑:[◑16S37I14◑],◑T15I5◑:[◑16S37I11◑],◑T15I6◑:[◑16S37I12◑],◑T38I3◑:[◑39S69I8◑],◑T15I4◑:[◑16S37I10◑],◑T38I2◑:[◑39S69I6◑,◑39S70I8◑],◑T15I1◑:[◑16S37I6◑],◑T38I1◑:[◑39S70I7◑,◑39S69I10◑],◑T38I0◑:[◑39S69I4◑],◑T0I1◑:[◑1S2I10◑,◑1S2I11◑],◑T0I0◑:[◑1S2I7◑,◑1S2I8◑],◑T125I0◑:[◑126S315I7◑,◑126S311I4◑,◑126S314I2◑,◑126S312I5◑,◑126S313I4◑],◑T36I1◑:[◑37S67I10◑],◑T125I2◑:[◑126S312I8◑,◑126S313I7◑,◑126S311I7◑],◑T36I0◑:[◑37S67I8◑,◑37S67I7◑],◑T125I1◑:[◑126S315I8◑,◑126S316I12◑,◑126S315I7◑,◑126S316I11◑,◑126S311I4◑,◑126S311I5◑,◑126S312I5◑,◑126S314I3◑,◑126S312I6◑,◑126S313I5◑],◑T125I4◑:[◑126S316I13◑,◑126S316I22◑],◑T13I0◑:[◑14S34I10◑,◑14S34I9◑,◑14S33I7◑,◑14S34I6◑,◑14S33I8◑,◑14S34I7◑],◑T102I6◑:[◑103S257I3◑],◑T125I6◑:[◑126S315I8◑,◑126S313I9◑,◑126S316I11◑,◑126S311I5◑,◑126S314I3◑,◑126S312I6◑,◑126S313I5◑,◑126S316I16◑,◑126S313I10◑,◑126S311I13◑,◑126S316I12◑,◑126S316I15◑,◑126S312I19◑],◑T102I8◑:[◑103S257I7◑,◑103S256I6◑,◑103S256I5◑],◑T102I9◑:[◑103S256I7◑,◑103S257I8◑],◑T25I3◑:[◑26S49I9◑],◑T25I2◑:[◑26S49I8◑,◑26S49I6◑,◑26S49I0◑],◑T48I1◑:[◑49S98I2◑,◑49S98I3◑,◑49S98I8◑,◑49S98I10◑,◑49S98I6◑],◑T48I2◑:[◑49S94I4◑,◑49S95I3◑,◑49S94I1◑,◑49S96I9◑],◑T48I3◑:[◑49S94I5◑,◑49S95I4◑,◑49S96I10◑,◑49S95I6◑,◑49S94I2◑,◑49S94I8◑,◑49S95I8◑,◑49S96I13◑],◑T48I5◑:[◑49S96I12◑,◑49S94I7◑,◑49S95I6◑,◑49S94I8◑,◑49S95I8◑,◑49S96I13◑],◑T48I0◑:[◑49S98I0◑,◑49S98I1◑,◑49S98I2◑,◑49S94I0◑,◑49S94I3◑,◑49S95I2◑,◑49S98I4◑,◑49S98I5◑,◑49S96I8◑],◑T114I0◑:[◑115S278I13◑,◑115S278I11◑],◑T114I1◑:[◑115S278I12◑,◑115S278I11◑],◑T25I0◑:[◑26S49I6◑,◑26S49I0◑],◑T114I2◑:[◑115S278I15◑,◑115S278I14◑,◑115S278I11◑],◑T137I0◑:[◑138S340I8◑],◑T14I8◑:[◑15S35I11◑,◑15S36I9◑],◑T14I9◑:[◑15S35I12◑,◑15S36I8◑],◑T14I7◑:[◑15S35I10◑],◑T14I4◑:[◑15S35I7◑,◑15S36I7◑],◑T14I5◑:[◑15S36I6◑,◑15S35I6◑,◑15S35I8◑],◑T37I1◑:[◑38S68I1◑],◑T92I4◑:[◑93S227I12◑],◑T101I1◑:[◑102S252I2◑],◑T101I2◑:[◑102S253I8◑,◑102S252I3◑,◑102S254I3◑],◑T101I3◑:[◑102S253I9◑,◑102S252I4◑,◑102S254I3◑],◑T101I4◑:[◑102S252I5◑],◑T92I3◑:[◑93S227I10◑,◑93S227I20◑],◑T92I0◑:[◑93S227I8◑],◑T92I1◑:[◑93S227I9◑],◑T28I5◑:[◑29S52I6◑],◑T28I4◑:[◑29S52I5◑],◑T28I0◑:[◑29S52I2◑],◑T81I1◑:[◑82S190I3◑],◑T81I3◑:[◑82S190I7◑,◑82S191I11◑],◑T81I2◑:[◑82S190I3◑,◑82S191I7◑],◑T17I5◑:[◑18S39I9◑],◑T17I6◑:[◑18S39I10◑],◑T17I3◑:[◑18S39I7◑],◑T17I4◑:[◑18S39I8◑],◑T17I2◑:[◑18S39I6◑],◑T17I0◑:[◑18S39I5◑],◑T100I0◑:[◑101S246I1◑,◑101S247I9◑,◑101S248I6◑,◑101S249I3◑,◑101S248I5◑],◑T100I1◑:[◑101S246I2◑,◑101S249I5◑,◑101S248I7◑,◑101S247I6◑,◑101S249I4◑],◑T100I2◑:[◑101S246I3◑,◑101S247I7◑,◑101S249I5◑,◑101S249I6◑],◑T123I2◑:[◑124S309I1◑],◑T100I3◑:[◑101S246I4◑,◑101S246I3◑,◑101S248I9◑,◑101S247I7◑,◑101S249I5◑,◑101S247I8◑,◑101S249I6◑],◑T123I1◑:[◑124S309I1◑],◑T100I4◑:[◑101S246I5◑,◑101S251I8◑,◑101S246I1◑,◑101S248I10◑,◑101S247I9◑,◑101S248I5◑],◑T15I0◑:[◑16S37I5◑],◑T91I0◑:[◑92S226I1◑],◑T100I6◑:[◑101S246I6◑,◑101S246I10◑],◑T100I7◑:[◑101S246I7◑],◑T100I8◑:[◑101S246I8◑],◑T91I4◑:[◑92S226I5◑],◑T91I2◑:[◑92S226I5◑],◑T27I6◑:[◑28S51I7◑],◑T27I5◑:[◑28S51I6◑],◑T27I2◑:[◑28S51I4◑],◑T27I1◑:[◑28S51I3◑],◑T27I0◑:[◑28S51I2◑],◑T80I5◑:[◑81S184I6◑,◑81S185I6◑,◑81S186I11◑],◑T112I0◑:[◑113S275I13◑,◑113S276I7◑,◑113S275I7◑,◑113S276I1◑,◑113S275I1◑,◑113S275I26◑,◑113S276I13◑,◑113S275I19◑,◑113S276I20◑],◑T112I1◑:[◑113S275I8◑,◑113S275I27◑,◑113S275I14◑,◑113S276I2◑,◑113S276I21◑,◑113S276I8◑],◑T112I2◑:[◑113S276I15◑,◑113S275I21◑,◑113S275I28◑,◑113S276I22◑,◑113S276I3◑,◑113S275I3◑,◑113S275I9◑],◑T112I3◑:[◑113S276I23◑,◑113S275I29◑],◑T80I0◑:[◑81S188I4◑,◑81S187I6◑],◑T80I2◑:[◑81S188I5◑,◑81S189I7◑,◑81S186I9◑,◑81S184I4◑,◑81S185I4◑],◑T80I1◑:[◑81S188I4◑,◑81S187I6◑,◑81S186I8◑,◑81S189I6◑,◑81S185I3◑,◑81S184I3◑],◑T80I4◑:[◑81S186I10◑,◑81S185I5◑,◑81S187I9◑,◑81S188I6◑,◑81S187I8◑,◑81S188I7◑,◑81S184I5◑],◑T80I3◑:[◑81S188I5◑],◑T39I5◑:[◑40S72I8◑],◑T39I4◑:[◑40S73I2◑,◑40S72I7◑],◑T39I3◑:[◑40S73I0◑,◑40S73I2◑,◑40S72I4◑,◑40S72I5◑,◑40S72I7◑],◑T16I2◑:[◑17S38I9◑],◑T16I0◑:[◑17S38I5◑],◑T16I1◑:[◑17S38I8◑,◑17S38I7◑],◑T56I0◑:[◑57S116I4◑,◑57S115I7◑,◑57S116I6◑,◑57S115I8◑,◑57S119I5◑],◑T79I0◑:[◑80S182I5◑,◑80S183I4◑],◑T56I1◑:[◑57S115I9◑,◑57S116I9◑,◑57S119I6◑,◑57S118I9◑,◑57S116I10◑,◑57S115I12◑],◑T56I2◑:[◑57S115I9◑,◑57S116I8◑,◑57S119I6◑,◑57S118I9◑,◑57S115I11◑,◑57S115I10◑],◑T79I2◑:[◑80S182I8◑,◑80S182I7◑],◑T122I3◑:[◑123S306I10◑,◑123S302I6◑,◑123S304I6◑,◑123S303I6◑,◑123S304I5◑,◑123S305I4◑,◑123S307I7◑],◑T56I3◑:[◑57S117I4◑,◑57S119I6◑,◑57S118I9◑,◑57S115I13◑],◑T79I1◑:[◑80S182I6◑,◑80S183I5◑],◑T122I2◑:[◑123S306I9◑,◑123S302I4◑,◑123S303I5◑,◑123S305I3◑,◑123S302I5◑,◑123S303I4◑,◑123S305I2◑,◑123S304I5◑,◑123S306I8◑],◑T122I4◑:[◑123S306I10◑,◑123S302I6◑,◑123S304I6◑,◑123S303I6◑,◑123S305I4◑,◑123S307I7◑],◑T10I0◑:[◑11S27I7◑,◑11S27I6◑,◑11S28I12◑,◑11S28I13◑],◑T45I0◑:[◑46S87I0◑,◑46S88I0◑],◑T68I0◑:[◑69S143I2◑,◑69S143I1◑,◑69S145I8◑,◑69S145I7◑],◑T111I0◑:[◑112S274I10◑,◑112S274I23◑,◑112S274I16◑,◑112S274I4◑],◑T111I1◑:[◑112S274I11◑,◑112S274I24◑,◑112S274I5◑],◑T68I2◑:[◑69S143I4◑],◑T111I2◑:[◑112S274I12◑,◑112S274I19◑],◑T45I3◑:[◑46S88I4◑,◑46S87I4◑],◑T68I1◑:[◑69S143I3◑,◑69S145I9◑],◑T134I1◑:[◑135S337I13◑],◑T22I1◑:[◑23S46I6◑],◑T22I0◑:[◑23S46I5◑],◑T34I8◑:[◑35S62I10◑,◑35S62I11◑,◑35S62I0◑],◑T34I7◑:[◑35S62I8◑],◑T55I0◑:[◑56S109I13◑],◑T78I1◑:[◑79S177I13◑,◑79S178I10◑],◑T55I2◑:[◑56S110I9◑,◑56S113I4◑,◑56S109I3◑],◑T78I0◑:[◑79S177I12◑,◑79S178I8◑,◑79S177I11◑,◑79S178I9◑],◑T121I1◑:[◑122S299I5◑,◑122S300I4◑,◑122S301I3◑],◑T55I3◑:[◑56S114I5◑,◑56S109I0◑,◑56S113I7◑,◑56S114I3◑,◑56S110I12◑,◑56S109I5◑,◑56S109I6◑],◑T55I4◑:[◑56S109I0◑,◑56S114I6◑,◑56S114I4◑,◑56S110I12◑,◑56S113I8◑,◑56S109I7◑],◑T78I2◑:[◑79S178I11◑,◑79S181I6◑,◑79S177I14◑,◑79S180I12◑],◑T32I2◑:[◑33S59I3◑],◑T32I1◑:[◑33S59I3◑],◑T21I6◑:[◑22S45I12◑],◑T44I5◑:[◑45S86I9◑],◑T44I7◑:[◑45S86I10◑],◑T44I8◑:[◑45S86I11◑],◑T44I0◑:[◑45S86I5◑],◑T110I0◑:[◑111S273I23◑,◑111S273I4◑,◑111S273I16◑],◑T44I1◑:[◑45S86I6◑],◑T67I1◑:[◑68S142I4◑,◑68S142I3◑,◑68S142I6◑,◑68S142I5◑],◑T110I1◑:[◑111S273I24◑,◑111S273I5◑],◑T67I0◑:[◑68S142I4◑],◑T110I2◑:[◑111S273I12◑,◑111S273I19◑],◑T44I3◑:[◑45S86I7◑],◑T133I3◑:[◑134S335I3◑,◑134S335I4◑],◑T44I4◑:[◑45S86I11◑,◑45S86I8◑],◑T133I2◑:[◑134S336I2◑,◑134S336I3◑],◑T21I5◑:[◑22S45I11◑],◑T133I5◑:[◑134S336I6◑,◑134S335I6◑],◑T21I4◑:[◑22S45I10◑],◑T133I4◑:[◑134S335I5◑,◑134S336I5◑],◑T21I3◑:[◑22S45I9◑],◑T21I2◑:[◑22S45I8◑],◑T21I1◑:[◑22S45I7◑],◑T21I0◑:[◑22S45I6◑],◑T14I10◑:[◑15S35I13◑],◑T56I4◑:[◑57S115I14◑,◑57S115I17◑,◑57S117I5◑,◑57S118I18◑,◑57S117I7◑,◑57S118I11◑,◑57S118I10◑,◑57S115I4◑],◑T56I5◑:[◑57S117I6◑,◑57S115I18◑,◑57S117I8◑],◑T56I6◑:[◑57S115I14◑,◑57S115I17◑,◑57S117I5◑,◑57S118I18◑,◑57S117I7◑,◑57S119I20◑,◑57S118I11◑,◑57S118I10◑],◑T56I7◑:[◑57S117I6◑,◑57S115I18◑,◑57S117I8◑,◑57S119I14◑],◑T120I1◑:[◑121S298I5◑,◑121S298I6◑,◑121S295I6◑,◑121S296I6◑,◑121S297I8◑,◑121S297I9◑],◑T120I0◑:[◑121S295I5◑,◑121S297I6◑,◑121S296I5◑,◑121S298I4◑],◑T120I3◑:[◑121S295I10◑,◑121S296I9◑],◑T120I2◑:[◑121S296I7◑,◑121S295I7◑],◑T58I0◑:[◑59S122I6◑,◑59S122I5◑,◑59S124I8◑,◑59S123I8◑,◑59S124I7◑],◑T58I1◑:[◑59S124I9◑,◑59S122I7◑,◑59S123I8◑],◑T35I2◑:[◑36S65I10◑,◑36S64I10◑],◑T35I1◑:[◑36S65I9◑,◑36S64I7◑,◑36S66I10◑,◑36S66I9◑],◑T35I0◑:[◑36S66I8◑],◑T47I2◑:[◑48S92I7◑,◑48S93I4◑],◑T132I2◑:[◑133S334I4◑],◑T132I1◑:[◑133S334I5◑],◑T47I0◑:[◑48S92I5◑,◑48S93I2◑],◑T47I1◑:[◑48S92I6◑,◑48S93I3◑],◑T24I2◑:[◑25S48I6◑],◑T24I1◑:[◑25S48I5◑,◑25S48I4◑],◑T24I0◑:[◑25S48I5◑,◑25S48I4◑],◑T59I1◑:[◑60S126I3◑,◑60S126I4◑,◑60S125I13◑,◑60S125I8◑,◑60S125I6◑,◑60S126I5◑,◑60S125I7◑],◑T59I2◑:[◑60S125I12◑],◑T57I0◑:[◑58S120I9◑,◑58S120I8◑,◑58S121I4◑,◑58S121I3◑],◑T57I1◑:[◑58S121I5◑,◑58S120I10◑],◑T11I0◑:[◑12S30I9◑,◑12S30I8◑,◑12S29I6◑,◑12S29I7◑],◑T69I3◑:[◑70S146I7◑],◑T69I2◑:[◑70S146I5◑],◑T69I4◑:[◑70S146I7◑],◑T131I1◑:[◑132S329I9◑,◑132S328I0◑,◑132S330I9◑,◑132S331I5◑],◑T131I0◑:[◑132S329I8◑,◑132S330I8◑],◑T131I2◑:[◑132S329I10◑,◑132S330I10◑,◑132S328I1◑,◑132S331I6◑],◑T69I1◑:[◑70S146I4◑],◑T131I5◑:[◑132S328I12◑,◑132S332I4◑],◑T46I2◑:[◑47S89I5◑,◑47S91I4◑,◑47S91I5◑,◑47S90I7◑,◑47S91I6◑],◑T69I0◑:[◑70S146I3◑],◑T131I4◑:[◑132S328I11◑,◑132S328I14◑,◑132S332I3◑],◑T23I2◑:[◑24S47I5◑],◑T131I6◑:[◑132S328I13◑,◑132S332I5◑],◑T23I1◑:[◑24S47I4◑],◑T23I0◑:[◑24S47I3◑],◑T35I4◑:[◑36S65I11◑,◑36S64I11◑,◑36S65I12◑],◑T58I2◑:[◑59S122I8◑],◑T58I3◑:[◑59S124I8◑,◑59S124I7◑],◑T52I0◑:[◑53S103I7◑],◑T75I0◑:[◑76S168I6◑,◑76S168I5◑,◑76S169I4◑,◑76S169I3◑,◑76S167I3◑],◑T98I0◑:[◑99S240I6◑],◑T52I1◑:[◑53S103I8◑],◑T98I1◑:[◑99S240I7◑],◑T52I2◑:[◑53S103I9◑],◑T75I2◑:[◑76S170I2◑,◑76S168I8◑,◑76S170I1◑,◑76S169I6◑,◑76S167I7◑,◑76S167I5◑,◑76S171I6◑],◑T75I1◑:[◑76S169I11◑,◑76S168I7◑,◑76S169I5◑,◑76S167I4◑,◑76S168I1◑,◑76S170I5◑],◑T75I3◑:[◑76S168I9◑,◑76S167I6◑],◑T75I6◑:[◑76S170I2◑,◑76S169I6◑,◑76S167I7◑,◑76S167I5◑,◑76S171I6◑],◑T40I12◑:[◑41S74I6◑],◑T40I13◑:[◑41S74I6◑],◑T40I10◑:[◑41S74I9◑],◑T41I0◑:[◑42S75I3◑,◑42S76I2◑,◑42S75I5◑,◑42S75I4◑],◑T87I0◑:[◑88S217I11◑],◑T87I1◑:[◑88S217I11◑],◑T64I4◑:[◑65S138I4◑],◑T64I3◑:[◑65S138I3◑],◑T64I5◑:[◑65S138I5◑],◑T87I3◑:[◑88S217I12◑],◑T99I7◑:[◑100S243I3◑,◑100S244I7◑,◑100S242I8◑,◑100S241I20◑],◑T99I5◑:[◑100S243I2◑,◑100S241I19◑,◑100S241I18◑,◑100S244I7◑,◑100S242I7◑,◑100S242I6◑,◑100S243I1◑],◑T99I6◑:[◑100S243I4◑,◑100S243I5◑,◑100S243I6◑,◑100S243I7◑,◑100S244I7◑,◑100S244I8◑,◑100S242I9◑,◑100S242I8◑,◑100S241I21◑,◑100S241I20◑],◑T74I1◑:[◑75S166I13◑,◑75S162I2◑,◑75S165I10◑,◑75S161I6◑,◑75S163I4◑],◑T74I0◑:[◑75S162I0◑,◑75S161I5◑,◑75S163I3◑],◑T97I2◑:[◑98S239I8◑],◑T74I3◑:[◑75S163I8◑,◑75S161I10◑,◑75S164I4◑,◑75S162I7◑],◑T74I2◑:[◑75S165I9◑,◑75S166I15◑,◑75S164I2◑,◑75S164I3◑,◑75S162I6◑,◑75S161I9◑,◑75S163I7◑],◑T97I0◑:[◑98S239I6◑],◑T74I5◑:[◑75S162I9◑,◑75S164I7◑,◑75S161I12◑,◑75S163I10◑,◑75S164I6◑],◑T74I4◑:[◑75S163I9◑,◑75S161I11◑,◑75S164I5◑,◑75S162I8◑],◑T8I0◑:[◑9S21I9◑,◑9S21I8◑],◑T51I0◑:[◑52S102I7◑],◑T40I9◑:[◑41S74I8◑],◑T63I1◑:[◑64S132I7◑,◑64S133I6◑,◑64S134I9◑],◑T86I0◑:[◑87S215I7◑,◑87S216I6◑,◑87S216I5◑],◑T40I2◑:[◑41S74I6◑],◑T63I0◑:[◑64S133I3◑,◑64S132I5◑,◑64S133I4◑,◑64S132I6◑,◑64S134I4◑,◑64S134I5◑,◑64S135I8◑],◑T63I2◑:[◑64S135I14◑,◑64S132I8◑,◑64S133I7◑],◑T40I7◑:[◑41S74I6◑],◑T40I8◑:[◑41S74I17◑,◑41S74I7◑],◑T54I0◑:[◑55S106I9◑,◑55S106I3◑,◑55S107I2◑],◑T77I0◑:[◑78S176I4◑],◑T54I5◑:[◑55S108I2◑],◑T31I4◑:[◑32S58I3◑,◑32S57I14◑,◑32S57I24◑,◑32S58I13◑],◑T31I3◑:[◑32S58I3◑,◑32S57I23◑,◑32S57I13◑,◑32S58I13◑],◑T31I2◑:[◑32S57I22◑,◑32S58I3◑,◑32S57I12◑],◑T7I0◑:[◑8S20I9◑,◑8S19I5◑,◑8S19I6◑,◑8S20I10◑,◑8S19I11◑,◑8S19I12◑,◑8S20I3◑],◑T20I7◑:[◑21S43I11◑],◑T43I6◑:[◑44S84I6◑,◑44S83I11◑,◑44S83I12◑,◑44S83I13◑],◑T89I4◑:[◑90S220I19◑,◑90S222I6◑],◑T66I0◑:[◑67S141I2◑,◑67S140I9◑,◑67S140I8◑],◑T43I1◑:[◑44S83I7◑],◑T43I2◑:[◑44S83I7◑],◑T66I2◑:[◑67S141I3◑,◑67S140I10◑],◑T89I2◑:[◑90S220I18◑,◑90S222I5◑],◑T43I3◑:[◑44S84I3◑,◑44S83I8◑],◑T66I1◑:[◑67S141I3◑,◑67S140I10◑],◑T89I3◑:[◑90S222I5◑,◑90S220I17◑],◑T89I0◑:[◑90S220I15◑],◑T43I5◑:[◑44S84I5◑,◑44S83I10◑],◑T89I1◑:[◑90S222I4◑,◑90S222I5◑,◑90S221I15◑,◑90S220I16◑],◑T20I6◑:[◑21S44I9◑],◑T20I5◑:[◑21S43I12◑,◑21S43I9◑,◑21S44I8◑,◑21S43I8◑],◑T20I4◑:[◑21S44I8◑,◑21S43I6◑],◑T20I3◑:[◑21S43I5◑,◑21S44I5◑],◑T20I2◑:[◑21S44I4◑,◑21S43I4◑],◑T20I1◑:[◑21S43I3◑],◑T78I4◑:[◑79S178I12◑,◑79S177I0◑],◑T99I0◑:[◑100S243I13◑,◑100S243I14◑],◑T53I1◑:[◑54S104I14◑,◑54S104I8◑],◑T76I1◑:[◑77S172I5◑,◑77S173I5◑,◑77S174I8◑,◑77S175I7◑],◑T76I0◑:[◑77S172I4◑,◑77S173I1◑,◑77S174I7◑,◑77S175I6◑],◑T53I3◑:[◑54S105I2◑,◑54S104I14◑,◑54S104I8◑],◑T99I3◑:[◑100S245I12◑,◑100S245I11◑,◑100S244I3◑,◑100S244I4◑,◑100S244I5◑,◑100S241I15◑,◑100S241I14◑,◑100S241I13◑,◑100S245I9◑,◑100S243I0◑,◑100S245I10◑,◑100S242I3◑],◑T53I4◑:[◑54S105I3◑,◑54S104I14◑,◑54S104I8◑,◑54S104I11◑],◑T76I2◑:[◑77S173I6◑,◑77S172I6◑,◑77S175I8◑],◑T99I4◑:[◑100S243I2◑,◑100S241I19◑,◑100S241I18◑,◑100S242I7◑,◑100S242I6◑,◑100S242I5◑,◑100S243I1◑],◑T53I5◑:[◑54S105I4◑,◑54S104I14◑,◑54S104I8◑,◑54S104I11◑],◑T99I2◑:[◑100S242I2◑,◑100S244I2◑,◑100S245I8◑,◑100S241I11◑],◑T30I6◑:[◑31S56I9◑],◑T30I5◑:[◑31S56I9◑],◑T30I4◑:[◑31S56I8◑],◑T30I3◑:[◑31S56I7◑],◑T30I2◑:[◑31S56I6◑],◑T6I0◑:[◑7S17I7◑,◑7S17I6◑],◑T30I1◑:[◑31S56I5◑],◑T108I3◑:[◑109S270I4◑],◑T108I5◑:[◑109S270I3◑],◑T42I0◑:[◑43S81I3◑,◑43S79I1◑,◑43S78I0◑,◑43S77I2◑,◑43S82I4◑],◑T42I1◑:[◑43S77I3◑,◑43S79I2◑,◑43S78I1◑,◑43S82I5◑,◑43S80I6◑,◑43S81I4◑],◑T65I1◑:[◑66S139I6◑],◑T42I2◑:[◑43S79I3◑,◑43S78I2◑,◑43S77I4◑,◑43S82I6◑,◑43S80I7◑,◑43S81I5◑],◑T65I0◑:[◑66S139I5◑],◑T42I3◑:[◑43S81I2◑,◑43S82I0◑,◑43S80I1◑,◑43S77I5◑,◑43S79I4◑,◑43S78I3◑],◑T42I4◑:[◑43S79I5◑,◑43S78I4◑,◑43S77I6◑],◑T65I2◑:[◑66S139I12◑],◑T65I5◑:[◑66S139I13◑],◑T88I1◑:[◑89S219I14◑],◑T65I4◑:[◑66S139I13◑],◑T88I2◑:[◑89S219I13◑],◑T54I6◑:[◑55S108I3◑,◑55S106I4◑,◑55S107I3◑,◑55S106I2◑],◑T71I4◑:[◑72S151I5◑,◑72S150I11◑,◑72S151I6◑,◑72S149I7◑,◑72S148I7◑,◑72S149I6◑],◑T94I4◑:[◑95S229I14◑,◑95S230I7◑,◑95S230I8◑],◑T71I3◑:[◑72S152I8◑,◑72S150I10◑,◑72S148I6◑,◑72S149I5◑],◑T94I2◑:[◑95S232I7◑,◑95S233I8◑,◑95S229I8◑,◑95S232I11◑,◑95S232I10◑,◑95S231I3◑,◑95S230I5◑,◑95S232I6◑],◑T71I5◑:[◑72S150I12◑,◑72S151I7◑,◑72S149I8◑,◑72S148I8◑,◑72S149I9◑],◑T94I3◑:[◑95S229I11◑,◑95S230I6◑],◑T71I0◑:[◑72S148I3◑,◑72S153I5◑,◑72S152I5◑,◑72S153I4◑,◑72S149I3◑],◑T71I2◑:[◑72S150I9◑,◑72S152I7◑,◑72S148I5◑,◑72S149I4◑],◑T71I1◑:[◑72S150I8◑,◑72S152I6◑,◑72S149I4◑,◑72S148I4◑],◑T83I3◑:[◑84S203I6◑,◑84S205I2◑,◑84S202I4◑,◑84S201I4◑,◑84S200I4◑],◑T60I4◑:[◑61S127I9◑],◑T83I5◑:[◑84S204I8◑,◑84S205I4◑,◑84S202I6◑,◑84S201I6◑,◑84S203I4◑,◑84S200I6◑],◑T83I4◑:[◑84S205I3◑,◑84S202I5◑,◑84S201I5◑,◑84S203I3◑,◑84S200I5◑],◑T83I7◑:[◑84S205I6◑,◑84S202I8◑,◑84S204I10◑,◑84S201I8◑,◑84S203I6◑,◑84S200I8◑,◑84S205I2◑,◑84S202I4◑,◑84S201I4◑,◑84S200I4◑],◑T83I6◑:[◑84S204I9◑,◑84S205I5◑,◑84S202I7◑,◑84S201I7◑,◑84S203I5◑,◑84S200I7◑,◑84S203I0◑],◑T60I0◑:[◑61S127I3◑],◑T60I1◑:[◑61S127I5◑],◑T83I1◑:[◑84S204I6◑,◑84S204I5◑,◑84S203I2◑,◑84S205I0◑,◑84S202I2◑,◑84S201I2◑,◑84S200I2◑],◑T60I2◑:[◑61S127I5◑],◑T83I0◑:[◑84S203I1◑,◑84S202I1◑,◑84S201I1◑,◑84S200I1◑],◑T19I3◑:[◑20S42I8◑],◑T19I4◑:[◑20S42I8◑],◑T19I2◑:[◑20S42I7◑],◑T19I0◑:[◑20S42I5◑],◑T70I4◑:[◑71S147I6◑],◑T70I6◑:[◑71S147I10◑],◑T102I14◑:[◑103S256I12◑,◑103S257I12◑],◑T129I0◑:[◑130S326I4◑],◑T70I1◑:[◑71S147I8◑],◑T102I10◑:[◑103S256I8◑,◑103S257I9◑,◑103S256I9◑],◑T129I2◑:[◑130S326I10◑],◑T129I1◑:[◑130S326I5◑],◑T102I12◑:[◑103S256I11◑,◑103S257I11◑],◑T70I2◑:[◑71S147I9◑],◑T129I3◑:[◑130S326I11◑],◑T129I5◑:[◑130S326I5◑],◑T29I1◑:[◑30S53I11◑],◑T29I0◑:[◑30S53I10◑],◑T82I6◑:[◑83S197I8◑,◑83S198I7◑,◑83S194I8◑,◑83S196I6◑],◑T82I5◑:[◑83S197I9◑,◑83S198I8◑,◑83S194I9◑,◑83S196I7◑],◑T82I0◑:[◑83S199I7◑],◑T118I1◑:[◑119S286I6◑,◑119S288I4◑,◑119S286I5◑,◑119S291I3◑,◑119S290I7◑],◑T118I2◑:[◑119S286I9◑,◑119S288I5◑,◑119S291I4◑,◑119S290I8◑],◑T118I3◑:[◑119S286I10◑,◑119S288I6◑,◑119S290I9◑],◑T82I1◑:[◑83S199I6◑],◑T18I4◑:[◑19S40I9◑,◑19S41I6◑],◑T18I5◑:[◑19S40I10◑,◑19S41I6◑],◑T18I2◑:[◑19S40I7◑,◑19S41I5◑],◑T18I3◑:[◑19S40I8◑,◑19S41I5◑],◑T18I0◑:[◑19S40I6◑],◑T73I2◑:[◑74S158I5◑,◑74S156I5◑,◑74S157I5◑,◑74S158I4◑,◑74S159I7◑,◑74S160I1◑],◑T73I1◑:[◑74S156I4◑,◑74S157I3◑,◑74S156I2◑,◑74S158I3◑,◑74S160I2◑,◑74S160I1◑],◑T96I3◑:[◑97S238I8◑],◑T96I0◑:[◑97S238I4◑],◑T73I3◑:[◑74S160I1◑],◑T96I1◑:[◑97S238I4◑],◑T105I0◑:[◑106S267I6◑,◑106S266I5◑,◑106S265I4◑,◑106S264I6◑],◑T105I1◑:[◑106S267I7◑,◑106S264I7◑,◑106S266I6◑,◑106S265I5◑],◑T128I1◑:[◑129S323I11◑,◑129S323I9◑,◑129S324I8◑,◑129S324I6◑],◑T105I2◑:[◑106S267I8◑,◑106S266I7◑,◑106S265I6◑,◑106S264I8◑],◑T128I0◑:[◑129S323I13◑,◑129S325I5◑,◑129S324I10◑],◑T105I3◑:[◑106S267I9◑,◑106S264I9◑,◑106S265I8◑,◑106S266I8◑],◑T128I2◑:[◑129S324I7◑,◑129S325I4◑,◑129S323I10◑],◑T50I0◑:[◑51S101I3◑],◑T73I0◑:[◑74S156I1◑],◑T85I1◑:[◑86S214I8◑],◑T85I0◑:[◑86S212I13◑,◑86S212I12◑],◑T62I4◑:[◑63S130I8◑,◑63S130I7◑],◑T85I3◑:[◑86S212I6◑],◑T62I6◑:[◑63S130I11◑,◑63S130I10◑],◑T85I4◑:[◑86S212I7◑,◑86S212I8◑],◑T62I7◑:[◑63S130I13◑],◑T117I0◑:[◑118S285I5◑],◑T117I1◑:[◑118S285I5◑],◑T62I0◑:[◑63S130I6◑,◑63S131I6◑],◑T95I3◑:[◑96S234I10◑,◑96S235I7◑],◑T95I4◑:[◑96S234I10◑,◑96S235I7◑],◑T95I2◑:[◑96S234I8◑,◑96S235I7◑],◑T95I7◑:[◑96S235I9◑,◑96S234I12◑],◑T95I8◑:[◑96S235I10◑,◑96S234I13◑],◑T95I5◑:[◑96S234I10◑],◑T95I6◑:[◑96S235I9◑,◑96S234I12◑],◑T104I0◑:[◑105S261I2◑,◑105S263I1◑,◑105S262I3◑],◑T104I1◑:[◑105S261I1◑,◑105S263I0◑,◑105S262I3◑],◑T104I2◑:[◑105S261I3◑,◑105S263I2◑,◑105S262I4◑,◑105S262I10◑],◑T104I3◑:[◑105S261I4◑,◑105S263I3◑,◑105S262I5◑],◑T104I4◑:[◑105S261I5◑,◑105S263I4◑,◑105S262I6◑],◑T104I5◑:[◑105S261I6◑,◑105S263I5◑,◑105S262I7◑],◑T104I6◑:[◑105S261I7◑,◑105S263I6◑,◑105S262I8◑],◑T104I7◑:[◑105S261I8◑,◑105S263I7◑,◑105S262I9◑],◑T61I3◑:[◑62S128I8◑,◑62S129I5◑],◑T84I2◑:[◑85S207I2◑,◑85S208I1◑,◑85S206I5◑],◑T61I2◑:[◑62S129I2◑,◑62S128I5◑],◑T84I1◑:[◑85S206I4◑,◑85S207I1◑,◑85S208I0◑],◑T61I5◑:[◑62S129I7◑,◑62S128I10◑],◑T84I4◑:[◑85S211I4◑,◑85S206I8◑,◑85S207I6◑,◑85S208I5◑,◑85S209I4◑,◑85S210I6◑],◑T61I4◑:[◑62S128I9◑,◑62S129I6◑],◑T84I3◑:[◑85S210I5◑,◑85S211I3◑,◑85S206I7◑,◑85S207I2◑,◑85S208I1◑,◑85S206I6◑,◑85S207I5◑,◑85S208I4◑,◑85S209I3◑,◑85S206I5◑],◑T84I6◑:[◑85S207I7◑,◑85S208I6◑,◑85S206I9◑,◑85S210I7◑,◑85S211I5◑],◑T84I5◑:[◑85S207I7◑,◑85S208I6◑,◑85S209I5◑,◑85S206I9◑,◑85S210I7◑,◑85S211I5◑],◑T139I1◑:[◑140S343I5◑,◑140S344I5◑],◑T139I0◑:[◑140S344I4◑,◑140S344I5◑,◑140S343I3◑],◑T139I2◑:[◑140S343I5◑],◑T61I1◑:[◑62S128I4◑,◑62S129I1◑]}"},"similarityPercentage":"17.6%","chapter_count":3,"taskid":"oem-87deadd2-0dd5-4cf0-aa0f-4103a3ac6a74","source_max_similar_docid":"1900023715219511","report_remove_self":{"similar_offsets":[{"reference":false,"start":3173,"end":3238},{"reference":false,"start":3238,"end":3278},{"reference":false,"start":3463,"end":3491},{"reference":false,"start":3491,"end":3528},{"reference":false,"start":3528,"end":3564},{"reference":false,"start":3633,"end":3687},{"reference":false,"start":3726,"end":3754},{"reference":false,"start":3782,"end":3814},{"reference":false,"start":3824,"end":3980},{"reference":false,"start":3980,"end":4135},{"reference":false,"start":4135,"end":4212},{"reference":false,"start":4212,"end":4288},{"reference":false,"start":4288,"end":4380},{"reference":false,"start":4380,"end":4506},{"reference":false,"start":4506,"end":4641},{"reference":false,"start":4641,"end":4752},{"reference":false,"start":4752,"end":4783},{"reference":false,"start":4783,"end":4846},{"reference":false,"start":4846,"end":4906},{"reference":false,"start":4906,"end":4995},{"reference":false,"start":4995,"end":5193},{"reference":false,"start":5193,"end":5362},{"reference":false,"start":5392,"end":5487},{"reference":false,"start":6364,"end":6465},{"reference":false,"start":6465,"end":6509},{"reference":false,"start":6698,"end":6883},{"reference":false,"start":8095,"end":8282},{"reference":false,"start":9219,"end":9397},{"reference":false,"start":9598,"end":9701},{"reference":false,"start":9701,"end":9829},{"reference":false,"start":9829,"end":9965},{"reference":false,"start":9975,"end":10133},{"reference":false,"start":10133,"end":10241},{"reference":false,"start":10677,"end":10847},{"reference":false,"start":11106,"end":11169},{"reference":false,"start":11169,"end":11308},{"reference":false,"start":11308,"end":11393},{"reference":false,"start":11393,"end":11563},{"reference":false,"start":11563,"end":11613},{"reference":false,"start":11613,"end":11784},{"reference":false,"start":11967,"end":12035},{"reference":false,"start":12035,"end":12217},{"reference":false,"start":12217,"end":12408},{"reference":false,"start":12408,"end":12567},{"reference":false,"start":12618,"end":12656},{"reference":false,"start":12656,"end":12711},{"reference":false,"start":12774,"end":12909},{"reference":false,"start":13160,"end":13310},{"reference":false,"start":13323,"end":13417},{"reference":false,"start":13417,"end":13583},{"reference":false,"start":13601,"end":13701},{"reference":false,"start":13721,"end":13895},{"reference":false,"start":14331,"end":14414},{"reference":false,"start":14580,"end":14720},{"reference":false,"start":14793,"end":14920},{"reference":false,"start":14920,"end":15083},{"reference":false,"start":15268,"end":15372},{"reference":false,"start":15477,"end":15587},{"reference":false,"start":15597,"end":15699},{"reference":false,"start":15703,"end":15770},{"reference":false,"start":15770,"end":15872},{"reference":false,"start":15872,"end":15959},{"reference":false,"start":15959,"end":16061},{"reference":false,"start":16061,"end":16172},{"reference":false,"start":17002,"end":17100},{"reference":false,"start":17743,"end":17839},{"reference":false,"start":17846,"end":17962},{"reference":false,"start":17962,"end":18056},{"reference":false,"start":18061,"end":18169},{"reference":false,"start":18169,"end":18219},{"reference":false,"start":18219,"end":18320},{"reference":false,"start":18320,"end":18410},{"reference":false,"start":18425,"end":18541},{"reference":false,"start":18550,"end":18654},{"reference":false,"start":18690,"end":18805},{"reference":false,"start":18805,"end":18923},{"reference":false,"start":18923,"end":19084},{"reference":false,"start":19084,"end":19171},{"reference":false,"start":19171,"end":19208},{"reference":false,"start":19219,"end":19267},{"reference":false,"start":19289,"end":19319},{"reference":false,"start":19319,"end":19423},{"reference":false,"start":19440,"end":19573},{"reference":false,"start":19583,"end":19669},{"reference":false,"start":19669,"end":19739},{"reference":false,"start":19831,"end":19925},{"reference":false,"start":19925,"end":20052},{"reference":false,"start":20123,"end":20222},{"reference":false,"start":20222,"end":20278},{"reference":false,"start":20278,"end":20323},{"reference":false,"start":20334,"end":20456},{"reference":false,"start":20465,"end":20628},{"reference":false,"start":20628,"end":20738},{"reference":false,"start":20738,"end":20936},{"reference":false,"start":21281,"end":21316},{"reference":false,"start":21321,"end":21401},{"reference":false,"start":21401,"end":21522},{"reference":false,"start":29006,"end":29132},{"reference":false,"start":29572,"end":29600},{"reference":false,"start":29600,"end":29623},{"reference":false,"start":29672,"end":29709},{"reference":false,"start":31582,"end":31606},{"reference":false,"start":32618,"end":32761},{"reference":false,"start":33883,"end":33980},{"reference":false,"start":33980,"end":34069},{"reference":false,"start":34596,"end":34726},{"reference":false,"start":34726,"end":34882},{"reference":false,"start":35222,"end":35388},{"reference":false,"start":35388,"end":35473},{"reference":false,"start":36421,"end":36535},{"reference":false,"start":37239,"end":37305},{"reference":false,"start":37397,"end":37536},{"reference":false,"start":38419,"end":38581},{"reference":false,"start":38937,"end":39091},{"reference":false,"start":39501,"end":39640},{"reference":false,"start":39912,"end":39997},{"reference":false,"start":40427,"end":40497},{"reference":false,"start":40538,"end":40650},{"reference":false,"start":40658,"end":40725}],"chapter_max_similar_word_count":7594,"word_similar_count":7896,"chapters":[{"chapter":"中英文摘要等","word_count":3814,"word_similar_count":302,"sources":[{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000202562427011","author":"","similarity":0.023,"self":false,"similar_word_count":86,"source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000142555028611","author":"","similarity":0.016,"self":false,"similar_word_count":61,"source":"网页","title":"微网·微波论坛·ads P21_32-by_bubulong_文档库","url":"http://www.wendangku.net/doc/f7a6c619c5da50e2524d7ffd.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000132163561611","author":"","similarity":0.015,"self":false,"similar_word_count":57,"source":"网页","title":"GBT - 信息安全技术 安全处理器技术规范 - 道客巴巴","url":"http://www.doc88.com/p%2D9866157742471.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.014,"self":false,"similar_word_count":55,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000458370111","author":"","similarity":0.013,"self":false,"similar_word_count":50,"source":"大学生论文联合库","title":"基于遗传算法的汽车电气故障诊断研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203081199911","author":"","similarity":0.012,"self":false,"similar_word_count":47,"source":"网页","title":"一种字典更新方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011335384.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000427064411","author":"周燕美","similarity":0.012,"self":false,"similar_word_count":47,"source":"大学生论文联合库","title":"中药质量控制方法","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000368749211","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"大学生论文联合库","title":"电力系统中的变压器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133380057111","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"网页","title":"基于FPGA的人脸识别算法及其实现 - 道客巴巴","url":"http://www.doc88.com/p%2D0032550396430.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133699744011","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"使用混合式分裂束激光划线处理及等离子体蚀刻的晶圆切割的制作方法","url":"http://www.xjishu.com/zhuanli/59/201280038309.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203132291211","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"内窥镜用处理器、程序、信息处理方法和信息处理装置与流程","url":"http://www.xjishu.com/zhuanli/55/202080019466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186245429911","author":"","similarity":0.011,"self":false,"similar_word_count":43,"source":"网页","title":"多重编解码器编码器及多重编解码器编码系统","url":"http://www.doc88.com/p%2D31073366987892.html"},{"reference":false,"teacher":"","datatype":"book","year":"1997","docid":"1900023554017211","author":"胡乾斌等著","similarity":0.01,"self":false,"similar_word_count":39,"source":"武汉：华中理工大学出版社","title":"数字集成电子技术基础","url":""}],"similarity":0.079,"similarityPercentage":"7.9%","text":"<p>摘要</p><p>随着后摩尔时代的到来,在超大规模集成电路设计阶段验证已经逐渐成为困扰各大芯片设计人员的关键问题,虽然可以使用软件仿真、硬件加速仿真等验证方法来加速验证流程,但是随着集成电路设计规模逐渐增大,原先的验证方法在时间成本上已经无法满足当前快速设计迭代的需求,使用FPGA进行芯片设计原型验证已逐渐成为验证阶段主流。但随着设计的规模剧增,单片FPGA已无法满足超大型集成电路设计的验证需求,从而衍生出高密度FPGA原型验证系统与配套EDA软件。而如何将超大型集成电路设计在满足资源约束的前提下合理的划分至高密度FPGA原型验证系统中的每个FPGA中,将成为集成电路验证划分阶段的关键问题,而超大型集成电路设计所需要的FPGA片上资源数量将作为合理划分电路的重要依据。同时随着机器学习的快速发展,将EDA软件与机器学习进行结合从而提升时间性能也逐步成为EDA行业的发展趋势。</p><p>论文主要对高密度FPGA原型验证系统中的划分阶段如何对集成电路进行快速资源估算进行了研究,基于C++语言并结合相关FPGA验证原理,设计了一款RTL级快速资源估算模型,并实际应用于商业软件中,解决了FPGA原型验证RTL划分阶段快速资源估计这一工程问题,为我国自主研发的高密度FPGA原型验证系统及配套EDA工具做出了一定贡献。同时为进一步研究快速的RTL级资源估算方法,将RTL级设计资源预测与机器学习相结合,设计并实现了面向RTL级资源估算机器学习模型,为EDA软件与机器学习的结合论证了可行性。本论文的主要工作与成果如下:</p><p>(1)对原型验证流程中综合及技术映射阶段进行基本研究,并举例简述在逻辑综合的基本原则及技术映射阶段的基本算法,以此为依据使用Parser作为底层软件基础,并使用C++设计了基于传统集成电路流程的快速资源估算模型工具,之后使用来自多个行业的超大规模集成电路进行验证,在未进行优化时,时间性能提升超过100%,对LUT与FF资源平均估算准确度达60%以上。在上述传统快速资源估算模型的基础上设计了为满足于高密度FPGA原型验证系统划分阶段需求的BottomToUp算法,使得对RTL级设计资源估算时间较优化前时间利用率提升达220%以上,同时为进一步提升估算精度,设计了LUT合并、面积约束等优化与约束项算法,使得不考虑特殊器件及工艺的情况下LUT及FF等资源的估算准确率最高可达90.11%,更加完善了快速资源估算模型的性能及易用性。</p><p>(2)研究人工智能与传统EDA工具相结合的可能性,并使用Verific为基础,通过进一步分析逻辑综合与技术映射的原理,分析集成电路RTL级描述语言特征,构建RTL级描述特征提取器,实现提取RTL级描述特征67种。对特征相关性、贡献度进行进一步分析后进行特征工程,并结合线性回归、随机森林、SVM支持向量机、人工神经网络构造适用于RTL级设计FPGA片上资源估算的机器学习模型,并完成超参数调校及训练,实现平均LUT、FF、DSP等资源估算模型确定系数为73.4%的神经网络模型。最后通过对其数据进行分析,进一步验证了机器学习在原型验证划分阶段集成电路快速资源估算领域的可行性。</p><p>关键词:FPGA原型验证,资源估算,特征工程,机器学习</p><p>ABSTRACT</p><p>插图索引</p><p>图1.1高密度FPGA原型验证系统2</p><p>图1.2高密度FPGA原型验证流程3</p><p>图1.32008年Xilinx公司快速资源估算模型[17]5</p><p>图2.1 FPGA基本组成图示9</p><p>图2.2 LUT结构图示10</p><p>图2.3 LUT基本工作原理10</p><p>图2.4 D触发器11</p><p>图2.5 FPGA设计基本流程11</p><p>图2.6 FPGA逻辑综合流程13</p><p>图2.7连续赋值语句综合图示14</p><p>图2.8阻塞赋值语句综合图例15</p><p>图2.9非阻塞赋值语句综合图例15</p><p>图2.10非阻塞赋值语句综合图例16</p><p>图2.11算数运算符综合图例16</p><p>图2.12 if语句综合图例16</p><p>图2.13 case语句综合图例17</p><p>图2.14循环语句综合图例17</p><p>图2.15函数语句综合图例18</p><p>图2.16工艺映射流程图19</p><p>图2.17电设计转化为DAG图20</p><p>图2.18逻辑划分20</p><p>图2.19器件覆盖21</p><p>图2.20 Mapping算法伪代码22</p><p>图2.21机器学习实现RTL级设计资源估算流程23</p><p>图2.22 Bagging算法伪代码24</p><p>图2.23决策树学习基本算法25</p><p>图2.24随机森林模型算法伪代码27</p><p>图2.25神经元计算图示28</p><p>图2.26感知器结构图示29</p><p>图2.27多层感知机结构图示30</p><p>图3.1 VeriTreeNode类视图34</p><p>图3.2 VeriModule类视图35</p><p>图3.3 Verific-Netlist-DataBase数据结构图36<br />图3.4快速资源估算模型文件流37</p><p>图3.5快速资源估算模型流程图示38</p><p>图3.6快速资源估算模型Parse-Design流程39</p><p>图3.7 RTL Elaborate操作图示39</p><p>图3.8 Flatten操作电路图示40</p><p>图3.9 Flatten操作树结构图示40</p><p>图3.10 RTL级基本器件库41</p><p>图3.11快速资源估算模型计算结果41</p><p>图3.12 RTL代码中的Glue Logic和Instance 42</p><p>图3.13 BottomToUp算法数据结构43</p><p>图3.14 RTL设计树结构示意图43</p><p>图3.15 BottomToUp算法伪代码44</p><p>图3.16优化后快速资源估算模型输出45</p><p>图3.17 LUT-5 Base FPGA结构图示46</p><p>图3.184输入查找表真值表47</p><p>图4.1特征提取器结构图52</p><p>图4.2 Verilog操作符图示53</p><p>图4.3运算符特征提取伪代码54</p><p>图4.4连续赋值语句特征提取伪代码55</p><p>图4.5 Verilog Always过程块语法格式55</p><p>图4.6 Always特征提取伪代码|56</p><p>图4.7 Verilog过程赋值语句语法格式56</p><p>图4.8 Verilog If条件语句语法格式57</p><p>图4.9 If条件语句特征提取伪代码58</p><p>图4.10 Verilog Case语句语法格式58</p><p>图4.11 Case条件分支语句特征提取伪代码59</p><p>图4.12 Verilog循环语句语法格式59</p><p>图4.13循环语句特征提取伪代码60</p><p>图4.14 Verilog HDL Function语法结构61</p><p>图4.15 RTL语法特征提取器流程图62</p><p>图4.16特征数据集直方图64</p><p>图4.17特征热力图65</p><p>图4.18特征预处理流水线69</p><p>图4.19模型训练开发流程70</p><p>图4.20各模型尝试预测LUT资源结果71</p><p>图4.21机器学习模型训练及调优流程71</p><p>图4.22随机森林预测LUT模型参数搜索学习曲线72</p><p>图4.23随机森林LUT预测模型学习曲线72</p><p>图4.24随机森林预测FF特征搜索学习曲线73</p><p>图4.25随机森林FF预测模型学习曲线73</p><p>图4.26神经网络学习曲线,左图为超参数调优前学习曲线74</p><p>图4.27神经网络模型结构图75</p><p>图4.28神经网络与LUT模型学习曲线75</p><p>图4.29神经网络模型结构图76</p><p>图4.30神经网络模型预测FF资源学习曲线76</p><p>图4.31机器学习模型验证结果77</p><p>表格索引</p><p>表2.1典型多层感知机架构31</p><p>表3.1快速资源估算模型无优化结果对比48</p><p>表3.2快速资源估算模型增加优化结果对比48</p><p>表4.1 Verilog主要语法类型与关键字51</p><p>表4.2部分基本数据集数据图示63</p><p>表4.3数据集基本概要63</p><p>表4.4 RTL级特征与LUT资源的相关性数据66</p><p>表4.5 RTL级特征与FF资源的相关性数据66</p><p>表4.6 RTL级特征与BUFG资源的相关性数据67</p><p>表4.7 RTL级特征与IO资源的相关性数据67</p><p>表4.8模型评估77</p><p>符号对照表</p><p>符号符号名称</p><p>F 激活函数</p><p>L 损失函数</p><p>I(X,Y)特征权值分数</p><p>H(Y)熵</p><p>D 特征个数</p><p>\\nabla f 梯度</p><p>G 二维高斯函数</p><p>d\\prime 保留的特征个数</p><p>M 正交基向量</p><p>Q 协方差矩阵</p><p>Z 加权和</p><p>缩略语对照表</p><p>缩略语英文全称中文对照</p><p><em class='similar'>ASIC Application Specific Integrated Circuit 专用集成电路</em><em class='similar'><br />SoC System on Chip 片上系统</em></p><p><em class='similar'>FPGA Field Programmable Gate Array 现场可编程逻辑门阵列</em></p><p>RTL Register Transfer Level 寄存器传输级别</p><p>LUT Look Up Table 显示查找表</p><p>DSP Digital Signal Processing 数字信号处理单元<br />BRAM Block RAM 块状存储</p><p>HLS High Level Sythesis 高层次综合</p><p>LB Logic Block 逻辑块</p><p>FF Flip-Flop 触发器</p><p>CLB Configurable Logic Block 可配置逻辑块</p><p><em class='similar'>RAM Random Access Memory 随机存取存储器</em></p><p><em class='similar'>SRAM Static Random Access Memory 静态随机存取存储器</em></p><p><em class='similar'>HDL Hardware Description Language 硬件描述语言</em></p><p>API Application Programming Interface 应用程序接口<br />CAD Computer Aided Design 计算机辅助设计</p><p><em class='similar'>EDA Electronic Design Automation 电子设计自动化</em><br />RF Random Forest 随机森林</p><p>LR Linear Regression 线性回归</p><p>DT Decision Tree 决策树</p><p><em class='similar'>SVM Support Vector Machine 支持向量机</em></p><p>MLP Multilayer Perceptron 多层感知机</p><p><em class='similar'>ANN Artificial Neural Network 人工神经网络</em></p><p class='uncheck'>目录</p><p class='uncheck'>摘要 I</p><p class='uncheck'>ABSTRACT III</p><p class='uncheck'>插图索引 V</p><p class='uncheck'>表格索引 IX</p><p class='uncheck'>符号对照表 XI</p><p class='uncheck'>缩略语对照表 XII</p><p class='uncheck'>第一章 绪论 15</p><p class='uncheck'>1.1 研究背景 15</p><p class='uncheck'>1.1.1 论文研究背景 15</p><p class='uncheck'>1.1.2 高密度FPGA原型验证系统及EDA 16</p><p class='uncheck'>1.2 国内外研究现状 18</p><p class='uncheck'>1.3 研究的意义 19</p><p class='uncheck'>1.4 主要内容及组织结构 20</p><p class='uncheck'>第二章 FPGA资源估计方法 23</p><p class='uncheck'>2.1 FPGA基本结构与资源组成 23</p><p class='uncheck'>2.2 FPGA逻辑综合与技术映射 26</p><p class='uncheck'>2.2.1 行为级硬件描述语言 26</p><p class='uncheck'>2.2.2 FPGA逻辑综合 27</p><p class='uncheck'>2.2.1 FPGA技术映射 32</p><p class='uncheck'>2.3 机器学习模型与资源估计方法 36</p><p class='uncheck'>2.3.1 机器学习与EDA结合的可行性 36</p><p class='uncheck'>2.3.2 特征提取方法 37</p><p class='uncheck'>2.3.3 随机森林 37</p><p class='uncheck'>2.3.4 人工神经网络 41</p><p class='uncheck'>2.4 机器学习性能评估指标 45</p><p class='uncheck'>第三章 快速RTL级资源估算模型的设计与实现 47</p><p class='uncheck'>3.1 Verific及相关数据结构 47</p><p class='uncheck'>3.1.1 Verific平台介绍 47</p><p class='uncheck'>3.1.2 Parse-Tree数据结构 47</p><p class='uncheck'>3.1.3 Netlist数据结构 49</p><p class='uncheck'>3.2 资源估算模型流程与构造 51</p><p class='uncheck'>3.2.1 资源估算模型流程设计 51</p><p class='uncheck'>3.2.2 资源估算模型构造实现 52</p><p class='uncheck'>3.3 快速资源估算模型优化 56</p><p class='uncheck'>3.3.1 BottomToUP算法的设计与实现 56</p><p class='uncheck'>3.3.2 冗余逻辑优化及合并 60</p><p class='uncheck'>3.3.3 最小面积优化方法 61</p><p class='uncheck'>3.4 结果分析 63</p><p class='uncheck'>3.5 本章小结 64</p><p class='uncheck'>第四章 基于机器学习的RTL级资源估算 65</p><p class='uncheck'>4.1 Verilog HDL 语法特征分析 65</p><p class='uncheck'>4.2 RTL级设计特征提取方法设计 66</p><p class='uncheck'>4.3 自动化特征提取器的实现 75</p><p class='uncheck'>4.4 数据集分析 76</p><p class='uncheck'>4.4.1 数据集构建 76</p><p class='uncheck'>4.4.2 数据集分析 77</p><p class='uncheck'>4.5 特征工程 82</p><p class='uncheck'>4.5.1 特征预处理 82</p><p class='uncheck'>4.5.2 转换流水线 83</p><p class='uncheck'>4.6 模型框架选择 84</p><p class='uncheck'>4.7 机器学习模型训练 85</p><p class='uncheck'>4.7.1 随机森林 86</p><p class='uncheck'>4.7.2 人工神经网络 88</p><p class='uncheck'>4.8 结果与分析 91</p><p class='uncheck'>4.9 本章小结 92</p><p class='uncheck'>第五章 总结与展望 93</p><p class='uncheck'>5.1 工作总结 93</p><p class='uncheck'>5.2 工作展望 94</p><p class='uncheck'>参考文献 95</p><p class='uncheck'>致谢 99</p><p class='uncheck'>作者简介 101</p>"},{"chapter":"绪论","word_count":39476,"word_similar_count":7594,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.045,"self":false,"similar_word_count":1776,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.031,"self":false,"similar_word_count":1232,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.019,"self":false,"similar_word_count":742,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.013,"self":false,"similar_word_count":497,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.011,"self":false,"similar_word_count":447,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183209387311","author":"","similarity":0.009,"self":false,"similar_word_count":358,"source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1"},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":285,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.007,"self":false,"similar_word_count":278,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.006,"self":false,"similar_word_count":245,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.006,"self":false,"similar_word_count":224,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138838221611","author":"","similarity":0.004,"self":false,"similar_word_count":158,"source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135414128511","author":"","similarity":0.004,"self":false,"similar_word_count":142,"source":"网页","title":"数学分类","url":"https://blog.csdn.net/qq_30815237/article/details/88739072"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"journal","year":"2018","docid":"1000027943830211","author":"钟海燕;李玲;麦雄发;王雨","similarity":0.003,"self":false,"similar_word_count":136,"source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000126492999811","author":"","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","similarity":0.003,"self":false,"similar_word_count":128,"source":"","title":"Verilog HDL数字系统设计及实践","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135879019911","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128075291811","author":"","similarity":0.003,"self":false,"similar_word_count":127,"source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000178176625511","author":"","similarity":0.003,"self":false,"similar_word_count":116,"source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016047965011","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181730880511","author":"","similarity":0.003,"self":false,"similar_word_count":102,"source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186521686911","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015763116111","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030621911","author":"","similarity":0.002,"self":false,"similar_word_count":96,"source":"网页","title":"Verilog程序如何优化减少逻辑单元的使用数量","url":"https://blog.csdn.net/u010173859/article/details/17511749"},{"reference":false,"teacher":"","datatype":"wiki","year":"","docid":"9100005028085811","author":"","similarity":0.002,"self":false,"similar_word_count":91,"source":"百科","title":"Verilog HDL","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181240768511","author":"","similarity":0.002,"self":false,"similar_word_count":88,"source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000208370017111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128720481111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"西瓜书学习笔记——第八章：集成学习_Andrewings-CSDN博客","url":"https://blog.csdn.net/shichensuyu/article/details/93312974"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":81,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138505610111","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"随机森林算法梳理_sanpang2288的博客-CSDN博客","url":"https://blog.csdn.net/sanpang2288/article/details/89024781"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000185145501211","author":"","similarity":0.002,"self":false,"similar_word_count":73,"source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191352255511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000184235326811","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000029360914111","author":"冯静达;焦学军;李启杰;郭娅美;杨涵钧;楚洪祚","similarity":0.002,"self":false,"similar_word_count":72,"source":"航天医学与医学工程","title":"基于心率和呼吸特征结合的睡眠分期研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000141550370811","author":"","similarity":0.002,"self":false,"similar_word_count":71,"source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189446884611","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000941227311","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"光学计算机程序设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015758038411","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000798956911","author":"JXT","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000524795711","author":"-","similarity":0.002,"self":false,"similar_word_count":69,"source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110384254911","author":"","similarity":0.002,"self":false,"similar_word_count":69,"source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000017085073411","author":"","similarity":0.002,"self":false,"similar_word_count":68,"source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000207907782911","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"逻辑综合中的工艺映射算法研究","url":"https://www.docin.com/p%2D851853545.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015681295811","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2015","docid":"2200000669311311","author":"戚薏","similarity":0.002,"self":false,"similar_word_count":65,"source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000180302201811","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189917812511","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138770563211","author":"","similarity":0.002,"self":false,"similar_word_count":62,"source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082132296211","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023653559711","author":"何海群著","similarity":0.001,"self":false,"similar_word_count":59,"source":"","title":"零起点  Python足彩大数据与机器学习实盘分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079748404511","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146036562311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"选择题   数字系统设计","url":"https://wenku.baidu.com/view/dd29f7e9b8f67c1cfad6b8c1"},{"reference":false,"teacher":"","datatype":"journal","year":"2019","docid":"1000029331339811","author":"刘博;卢婷婷;陈国磊;赵璐","similarity":0.001,"self":false,"similar_word_count":58,"source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120314096811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179275463811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于Verilog的8051微控制器中断系统的设计---优秀毕业论文 参考文献 可复..","url":"https://www.docin.com/p%2D827308466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"}],"similarity":0.192,"similarityPercentage":"19.2%","text":"<p>研究背景</p><p>论文研究背景</p><p><em class='similar'>随着市场环境的逐步升级,</em><em class='similar'>市场需求对与IC的功能愈加严格,</em>IC的复杂度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em>设计,<em class='similar'>这项又称为片上系统SoC</em><em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的集成电路技术在业界已经得到广泛的认可与应用,</em>且当代的SoC设计也不在局限于一块IC上<em class='similar'>一般情况下</em>,<em class='similar'>由于采用ASIC设计具有功耗低、</em>投产成本低、迭代周期快等优势,<em class='similar'>所以ASIC可容纳更为复杂和灵活的逻辑设计。</em><em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em><em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发本的损失,</em>所以,IC正确性验证逐步变为超高复<em class='similar'>杂度IC研发过程中必备且关键的环节。</em><em class='similar'>最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,</em><em class='similar'>验证所花费的时间也占到产品研发周期的一半以上,</em><em class='similar'>找到有效可行的验证方法成为验证的关键</em>[4]。<em class='similar'>目前,</em><em class='similar'>最常见的验证方法是软件仿真技术,</em><em class='similar'>但是软件仿真虽然简单易行,</em><em class='similar'>在面对复杂的集成电路设计时,</em><em class='similar'>其验证效率过低,</em><em class='similar'>最终可能影响到产品的及时发布</em>[6]。<em class='similar'>而基于FPGA的原型验证方法,</em><em class='similar'>依靠其可反复擦除、</em><em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>[6]。</p><p><em class='similar'>目前随着高性能ASIC芯片设计复杂度的提升以及体系结构的不断升级换代及创新,</em>SoC设计的规模在快速膨胀,<em class='similar'>研发中的验证阶段已成为高性能芯片研发过程中的关键环节,</em><em class='similar'>因此为保证验证的高效性和准确性,</em><em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。</em>在具有超高复杂与高性能IC验证上,<em class='similar'>主流验证方法分为以下三类:</em><em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证、</em><em class='similar'>FPGA原型验证。</em><em class='similar'>软件模拟验证是验证集成电路设计功能正确性上最常采用的方法,</em><em class='similar'>其具有模拟精确、</em><em class='similar'>方便灵活等优点,</em>因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,<em class='similar'>当芯片整体复杂度提升,</em><em class='similar'>软件模拟的效率也在不断下降,</em><em class='similar'>同时也将难以覆盖整体IC功能的验证。</em><em class='similar'>实践表明,</em><em class='similar'>不论使用哪种算法去设计EDA工具的仿真方式,</em><em class='similar'>当IC设计所包含的电路门数超过一定数目时,</em><em class='similar'>EDA工具对于系统信号的反应将很难保证,</em><em class='similar'>验证的效率也将会被极大制约,</em><em class='similar'>从而很难高效的实现验证结果</em>[3]。<em class='similar'>针对软件模拟仿真的局限性,</em><em class='similar'>各大EDA厂商与集成电路厂商进而提出通过硬件加速器来实现仿真验证,</em><em class='similar'>其主要思想是通过专门的硬件加速器,</em><em class='similar'>将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,</em><em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em><em class='similar'>最终提升整体上的验证效率。</em><em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em>相比于完全使用软件来实现仿真,<em class='similar'>硬件加速器使用了真实的硬件仿真环境,</em><em class='similar'>可以更加真实的反映集成电路设计系统的各种问题,</em>从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar'>但是硬件仿真器也存在固有的缺陷,</em>因为其需要针对特定的电路构造特点的硬件加速设备,<em class='similar'>同时还需要EDA软件与硬件加速设备间的通信接口,</em><em class='similar'>而一旦所验证的设计改变,</em><em class='similar'>原有的硬件加速固件将可能无法复用,</em>从而需要重新设计硬件固件及相关接口。从理论上讲,<em class='similar'>本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,</em><em class='similar'>但硬件仿真器的成本高昂,</em><em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em></p><p>高密度FPGA原型验证系统及EDA</p><p>高密度FPGA原型验证系统</p><p><em class='similar'>近年来,</em>随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,<em class='similar'>仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,</em><em class='similar'>因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</em></p><p>对于能够使用多FPGA进行正确的验证,则必然需要进行逻辑划分,而为实现正确且合理的逻辑划分,首先要解决的就是设计逻辑综合时间长的问题[4]。一个设计规模达到几亿门甚至数十亿门的大规模SoC设计,若使用整个设计先进行综合,再进行逻辑分割的方式,设计的综合时间会非常的漫长,一次综合流程就有可能花费的时间长达数天甚至数周,若设计的规模特别大,甚至会出现编译软件或服务器崩溃的情况[5]。显然,面对超大规模的SoC设计采用RTL(Register Transfer Level,寄存器传输级别)级分割,将会成为最优的选择,RTL-Partition流程如图1.2所示。</p><p>高密度FPGA原型验证流程</p><p>使用RTL划分通过在RTL阶段将设计划分为个子设计后,便可以有效解决设计逻辑综合时间长的问题,同时实现并行编译、综合、布局布线的流程,从而有效提升FPGA原型验证的效率。但为正确实现RTL级的逻辑划分,则需要解决以下几个关键问题:</p><p>(1)首先,在对超大型SoC设计不进行逻辑综合前提下进行RTL级别分割时,需确定最合理的逻辑划分的边界,满足SoC设计的全局时钟树,同时使得进行逻辑划分后的SoC设计满足整个大型FPGA原型验证系统的互联资源和每个划分后的子设计不超出每个FPGA可综合的资源的数量(为增加FPGA综合及布局布线的成功率,常使用FPGA资源总量的60%-70%);</p><p>(2)其次,由于无法对设计进行整体综合,则无法获得设计在FPGA上所需的准确片上资源数量,则如何对设计在RTL级进行快速资源估算,在不进行逻辑综合为前提下获得设计中每个模块的资源,从而为确认划分的边界提供参考依据将成为关键问题;</p><p>(3)最后,如何通过已经获得的RTL级设计的资源与大型原型FPGA设计平台相结合,能同时满足FPGA间的互联结构、互联资源、片上逻辑资源等条件实现合理的逻辑划分,并且划分结果与原始设计逻辑等价;</p><p>本文将主要讨论上述问题中的(1)(2),即如何对RTL设计进行快速且满足RTL级逻辑划分所需精度的快速逻辑资源估算方法并尝试结合机器学习探究解决该问题的方法。</p><p>国内外研究现状</p><p><em class='similar'>当设计者通过硬件描述语言完成对集成电路寄存器传输级</em><em class='similar'>(Register Transfer Level,</em>RTL)的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>逻辑打包、</em><em class='similar'>布局、</em><em class='similar'>布线等。</em></p><p>FPGA的硬件组成结构中包含许多不同类别的片上资源,主要有实现逻辑电路所需要的逻辑资源,用于提供外部输入/输出接口的资源,以及连接并导通前两种资源的布线资源。具体来讲,一般包括触发器(F-F)、数字处理单元(DSP)、查找表(LUT)、块状存储(Block RAM,BRAM)等多种片上起源。其中,LUT和FF等逻辑资源一般存在于逻辑块LB(Logic Block或slice)中。</p><p>由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、<em class='similar'>RTL级设计分割、</em><em class='similar'>逻辑综合、</em><em class='similar'>工艺映射、</em>单个FPGA的布局和布线等,由于高密度FPGA原型验证流程步骤繁多且耗时较长,设计者在编写和修改RTL描述时,无法快速预估待划分电路在FPGA上实现时需要的片上硬件资源数量,这样就可能导致无法完成综合流程或者无法完成FPGA布局布线,或互联关系复杂,无法满足FPGA间组网关系,从而需要多次设计迭代来解决上述问题。另外,在逻辑综合流程中,每一部分RTL级描述所需要的实际FPGA片上资源的数量,也将对RTL到门级网表的转化与优化过程有指导意义。</p><p>综上所述,在RTL级分割阶段如何能够快速且准确的得到RTL级描述所需要的FPGA片上资源使用量,是一个很关键且重要的问题。虽然在国内也有部分针对大型设计提供EDA及FPGA原型验证厂家,但是对于在划分阶段涉及的资源估算问题在我国国内暂时没有可商业使用的较成熟的解决方案。</p><p>随着FPGA设计规模的越来越大,对于片上资源估算这一环节的重要性越发明显,也是必不可少的步骤,使得FPGA资源估算这一问题也逐渐成为学者和EDA厂商的研究重点,随之而来的也是多种多样的估算方法也都各有优劣。</p><p>2008年Xilinx公司Paul Schumacher 和 Pradip Jha提出由于用户在对FPGA设计的开发使用过程中,无法规避对设计进行逻辑综合这一步骤,从而可以通过使用快速逻辑综合生成的网表结构,通过在设计的宏观层面对现有的器件匹配库对原设计进行匹配替换,从而得到初步的资源估算结果,使用该方法可以较快速的得到不计精度的资源粗略估计值[17]。</p><p>2008年Xilinx公司快速资源估算模型[17]</p><p>2011年代尔夫特工业大学Roel Meeuws等人提出可以通过深度学习建立基于统计方法的高级定量硬件预测模型设想,并做出了初步的验证,为人工智能在资源估计这一问题上的实现建立可行性分析[11]。</p><p>2017年法国瓦伦西亚大学Mariem MakniLAMIH发布的论文中提出一种面向异构FPGA的SoC片上资源估算方法,其出发点是通过结合HSL(High Level Sythesis,高层次综合)报告构建模型对布局后FPGA真实面积进行估算[13]。</p><p>2018年Steve Dai,Yuan Zhou等人在IEEE会议上发表的论文中提出了一种通过提取HLS报告相关信息特征对FPGA布局布线后资源及时序进行预测的方法,并且达到了一个较好的预测结果,由于HLS是比RTL级在设计流程上更高层级、更抽象的表述方法,所以该方法的提出进一步为通过RTL级特征预测实际所需FPGA片上资源提供了可行性[12]。</p><p>通过对国内外研究现状的分析,我们可以发现在面向高密度FPGA原型验证系统的RTL级资源估算方面我国还存在较大的待填补的空白。</p><p>研究的意义</p><p>对于高密度FPGA原型验证系统而言,面向的设计都是规模上千万门或设计规模超过亿门,更有甚者规模超过百亿门,需要上百片当代先进FPGA才可容纳下整个设计,但是对于给定的RTL描述,它所需的FPGA片上硬件资源数量一般需要在完成逻辑打包和布线后,才可以全部得到。但对于规模较大的电路设计,从RTL描述到布线的设计综合流程往往需要花费几个小时乃至数十小时。当出现片上资源不足的问题时,设计者需要修改RTL描述并进行耗时较长的设计综合流程迭代。</p><p>若用户的设计超过百亿门时,<em class='similar'>进行一次迭代所耗费的时间成本,</em><em class='similar'>人力成本都是不可预估的,</em>所以若可以在不进行综合、布局布线等流程时快速获得所需要的所需要资源的估计值,将会为缩短开发人员的迭代周期提供帮助。同时由于高密度FPGA原型验证划分阶段需要以设计资源使用情况来划分合理的分割边界,合理的分割边界将会对设计在满足硬件FPGA组网前提下为系统的运行,规划,验证,调试提供良好的帮助,而分割边界的确认需要以RTL设计中的每个层级中每个节点的Instance的各项资源作为依据。</p><p>综上所述不论对于开发人员还是对于高密度FPGA原型系统而言,能够快速且���确的获取到大型设计所需的FPGA片上资源及对应层级所需的资源的估计值将具有巨大的意义。</p><p>主要内容及组织结构</p><p>针对我国需要开发具有自主知识产权的大型FPGA原型验证流程和相应的支持EDA软件,本文首先介绍了FPGA的基本结构及大型FPGA原型验证流程中的逻辑综合、技术映射与机器学习模型的一般方法作了详细描述,最后分别以上述基本流程为基础实现了以传统流程为基础的快速资源估算模型及以机器学习为基础的RTL级资源估算模型。本文的组织结构如下:</p><p>绪论主要介绍了当前集成电路设计阶段中验证阶段的重要性及相关的验证手段,并介绍了高密度FPGA原型验证系统与快速资源估算在RTL划分阶段的重要性、意义与待解决的关键问题,并对论文中的主要工作内容进行简要叙述。</p><p>FPGA资源估算方法介绍了FPGA的基本结构与资源组成,并进一步介绍了FPGA设计与验证流程中的快速逻辑综合与技术映射的相关原理,为第三章资源估算模型的实现打下基础,同时分析了EDA工具与机器学习的可能性,并着重介绍了本文第四章实现所用的特征提取方法与机器学习模型。</p><p>快速RTL级资源估算模型的设计与实习本章主要介绍了基于C++与第三方Parser,结合第二章所述的相关原理与方法,如何设计及实现RTL级设计进行快速资源估算的模型,并再次基础上为进一步提升运算速度与估算准确度并满足高密度FPGA原型验证系统RTLPartition的需求,设计并实现了BottomToUp算法,并论述了模型中增加的优化方法与约束项。</p><p>基于机器学习的RTL级资源估算本章主要结合第二章所述的机器学习模型方法,通过分析进一步RTL语法与综合、技术映射的关系,基于C++实现了面向RTL设计的自动化特征提取器,并通过尝试多种机器学习模型,基于Python构建了面向RTL级设计的机器学习资源估算模型,并使用多个Case进行验证,并对模型的预测结果进行分析。</p><p>总结与展望总体概括了论文的工作,并总结了论文中可改进的方式方法与方向。</p><p>FPGA资源估计方法</p><p>FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。<em class='similar'>在这种时代背景下,</em><em class='similar'>现场可编程门阵列FPGA应运而生。</em>相对于其他相同种类的芯片,由于其可反复擦除的特性,使得基于FPGA进行研发的容错率更好,成本降低。在目前的多数集成电路研发团队的研发过程中,研发团队会先基于一定数量的FPGA芯片对集成电路功能、算法进行实现,并根据实际情况进行修改直到设计达到预期的效果,最后再将达到要求的设计用ASIC实现并最终投入生产。</p><p>FPGA的本质结构是在现场可编程的门阵列芯片。但FPGA实际上并不是仅依靠简单的门级结构所组成。本章将主要介绍FPGA的基本构成资源及高密度FPGA原型验证的基本流程。</p><p>FPGA基本结构与资源组成</p><p>FPGA大致<em class='similar'>由三部分构成</em>:<em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em><em class='similar'>(Logic Block,</em>LB)<em class='similar'>也就是我们常说的基本逻辑单元,</em>可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等<em class='similar'>,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,</em><em class='similar'>FF等数据存储电路和数据选择器组成</em>[43]。逻辑要素是在FPGA设计开发流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar'>(Configurable Logic Block)</em>,是以LUT来构成的。第二部分则是用以组成信号输入和输出的重要部分即IO块,主要用于与FPGA外部信号进行交互,第三部分是连接FPGA内部互联资源的内部布线资源。</p><p>FPGA基本组成图示</p><p><em class='similar'>上述FPGA三部分主要组成具体包括以下内容:</em><em class='similar'>可编程输入输出及内嵌RAM、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在以上FPGA的结构中,设计者及其支持软件中最关系、<em class='similar'>最重要的是可编程逻辑单元,</em><em class='similar'>它主要包括触发器和查找表两部分。</em><em class='similar'>查找表</em>在功能实际上等效为一种特殊的静态存储器SRAM。</p><p>可编程逻辑单元中,LUT表示的是一张内存表,其存储的字数或容量实际取决于存储地址的位数。FPGA上LUT的基本存储单元大多使用静态随机存储器实现。LUT单元的具体结构如图2.2所示<br />LUT结构图示</p><p>如图2.2中所示的查找表,它拥有三个输入,则说明其可实现任何逻辑运算函数为三输入。一般输入的LUT由个静态随机存储单元和一个输入的数据复选器组成。</p><p>LUT基本工作原理</p><p>LUT基本工作原理如图2.3所示,上图左侧为电路的实现逻辑及真值表,上图右侧则对应的等效查找表。由图2.3可以知,查找表中的实际内容是将逻辑的输入等效转化为对应的存储地址,对应的输出的则是存储地址中的具体内容。最终的结果是查找表将对应的复杂逻辑运算对等的映射为存储器中的数值,这也是使用FPGA进行验证效率远远高于使用软件模拟的方法的主要因素。所以LUT资源是在对大型集成电路设计使用FPGA进行原型验证时的紧俏资源。此外,当面对的是时序逻辑电路,则FPGA会通过在每个查找表的后侧通过触发器的配置来完成。</p><p>D触发器</p><p>可编程逻辑单元中的另一种重要资源FF(Flip Flop)<em class='similar'>触发器,</em>其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。<em class='similar'>触发器</em><em class='similar'>(flip-flops)</em><em class='similar'>电路之间是相互关联的,</em><em class='similar'>从而形成数字集成电路的逻辑门。</em>在FPGA中存在有多种类型的FF,<em class='similar'>如切换触发器、</em><em class='similar'>重置触发器、</em>JK触发器和D信号触发器等。常见的触发器结构通常包含最多2个输入信号、时钟信号及输出信号。触发器资源通常在大型RTL设计进行高密度FPGA原型验证时也是一种常常面临资源紧俏的情况。</p><p>FPGA逻辑综合与技术映射</p><p>在本文中提到的FPGA原型验证方法流程中的起点如图2.5均为RTL级硬件描述语言代码,故本章我们先对硬件描述语言verilog HDL语法及逻辑进行简略的介绍,同时进一步介绍基于Verilog HDL的逻辑综合及工艺映射基本原理及基本算法,上述内容将为后续我们进一步建立可工程化的快速资源估算模型提供基础。</p><p>行为级硬件描述语言</p><p>FPGA设计基本流程</p><p><em class='similar'>Verilog HDL是用以描述硬件行为级的一种高级硬件描述语言,</em>其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。<em class='similar'>通过合理的使用该语言可以表示正确表示逻辑电路图、</em><em class='similar'>逻辑表达式等,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar'>Verilog HDL是当前世界上最流行的两种硬件描述语言之一,</em><em class='similar'>都是在20世纪80年代中期开发出来的。</em>根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>修改[16]。</p><p><em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>通过使用连续性赋值表达式,<em class='similar'>其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,</em><em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,<em class='similar'>每个模块都将用于描述该模块对应的功能描述逻辑</em>[16]。这些模块将被开发者进行抽象,<em class='similar'>然后通过线网连接。</em></p><p>而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,<em class='similar'>首选通过使用Verilog HDL等硬件描述语言编写寄存器传输级</em>(RTL)代码来描述电路设计的行为级逻辑即RTL级描述。RTL级描述通过逻辑综合得到电路网表(Netlist),通过对网表进行优化、技术映射、FPGA布局布线等操作后,最后生成FPGA配置数据(bitstream)。其中对于大型原型验证系统最为关注的前端工程就是逻辑综合和技术映射,这个过程是验证Verilog HDL语法正确性和计算该设计所需FPGA片上资源总数的重要过程。其中逻辑综合和技术映射的过程就是将Verilog HDL语言描述的寄存器级代码转换映射至具有工艺概念的逻辑器件的过程,也是本文中结合机器学习人工智能进行FPGA资源估算设计过程中重点关注的过程。</p><p>FPGA逻辑综合</p><p><em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级</em><em class='similar'>(RTL)</em><em class='similar'>电路抽象级模型构造出对应的门级电路网表的过程。</em></p><p><em class='similar'>综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,</em><em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>如HLS综合;<em class='similar'>而逻辑综合是从RTL级描述转换到包含有多级触发的逻辑门级的过程,</em>也是在FPGA片上资源估算过程中最关注的步骤,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。</p><p>综合整个ASIC设计流程的中间步骤,<em class='similar'>综合后生成的网表文件,</em><em class='similar'>其本质是基于导线来进行连接的RTL级功能块</em>(如FF、LB和MUX等)所组成。<em class='similar'>而这里一般就需要使用RTL模块构造器来通过用户所注明或进一步指定的目标工艺元件库中构造或从已有库中获取必须的RTL级功能模块。</em>综合产生网表文件后,<em class='similar'>逻辑优化器会读入网表,</em><em class='similar'>并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。</em>并且,<em class='similar'>这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。</em>既然综合器的目标是能将硬件描述语言转换成为底层的门级网表,那么综合器必定有一种映射的机制,能够实现Verilog代码中的某些变量、组件映射成对应的硬件元件,这种映射机制将是后续我们基于机器学习进行资源映射方法研究所重点关注的对象。</p><p>FPGA逻辑综合流程</p><p>①综合首先需要使用RTL代码构成的电路行为级描述进行编译使其转换为GATE级描述;</p><p><em class='similar'>②RTL模块构造器从用户指定或综合器所携带的工艺库中里提取并生成对应的模块;</em></p><p><em class='similar'>③逻辑优化器读取未优化的门级网表,</em><em class='similar'>并按照用户所期望的布局后面积和系统运行各个信号的时序约束,</em><em class='similar'>进行进一步的优化;</em></p><p>由于本文中主要涉及计算RTL模块构造器从工艺库中提取对应的语法及模块进行Technology Mapping映射后所得到的资源,所以当我们聚焦于本文所述的基于机器学习资源估算模型,<em class='similar'>更加关注于Verilog HDL语句是如何转换成实际硬件器件的,</em>如:<em class='similar'>数据类型是如何映射成硬件的,</em><em class='similar'>常量是如何转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。</p><p>1、储值单元的综合原则</p><p>对于FPGA上的实际硬件主要有三种基本的存储数值的单元分别是:线网、锁存器、触发器,分别对应于Verilog语言中的net和reg类型关键字,其综合的映射原则是对net类型的关键字在综合后将映射为FPGA片上的布线资源,而reg类型关键字综合后将根据行为级描述的逻辑可能被综合为片上布线资源、触发器资源或锁存器资源即存储器资源,当reg在always模块中即时序电路逻辑中以临时变量被使用时其综合结果取决于设计的具体逻辑实现[44]。</p><p>2、连续赋值语句的综合原则</p><p>连续赋值语句综合图示</p><p><em class='similar'>连续赋值语句</em>(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中综合器会将连续赋值语句右侧的表达式逻辑进行提取,用于驱动该语句中左侧的net类型资源,<em class='similar'>连续赋值语句的右侧表达式中逻辑功能实现后</em>,<em class='similar'>赋值表达式中信号的变化随机会被传输至赋值线网型数据的取值上</em>[16]。</p><p>3、过程赋值语句的综合原则</p><p><em class='similar'>过程过程赋值语句</em>(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现是:</em><em class='similar'>从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em>但是有个语法前提,<em class='similar'>就是用于驱动赋值语句左边的变量是reg类型,</em><em class='similar'>且只有Always语句块中的过程赋值语句才可以被综合器综合,</em><em class='similar'>若出现在initial语句块中将被仅用于仿真。</em><em class='similar'>���程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(Non-blocking Assignment Statement)</em></p><p>阻塞赋值语句综合</p><p>阻塞赋值语句综合图例</p><p><em class='similar'>阻塞赋值语句简而言之就是在一个always语句块中,</em><em class='similar'>语句是从上到下顺序执行,</em>综合时将会在依据赋值语句逻辑原理结合always块的触发器来实现逻辑综合,阻塞赋值语句RTL级描述与电路映射如图2.8所示。</p><p>非阻塞赋值语句综合</p><p>非阻塞赋值语句综合图例</p><p><em class='similar'>非阻塞赋值语句简而言之是在一个always语法块中,</em><em class='similar'>语句是并行执行的,</em>非阻塞赋值语句RTL级描述与电路映射图2.9所示,<em class='similar'>对比上图可以得到对于一个Always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,</em>但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。</p><p>4、逻辑运算的综合原则</p><p>进行逻辑综合时Verilog HDL语法中的逻辑运算符将会被直接转换成对应的基本逻辑门,如与或非、异或门等[43]。</p><p>非阻塞赋值语句综合图例</p><p>5、算术运算符的综合原则:</p><p>在Verilog HDL语句中支持各种算术运算符如、、、等,在进行综合时RTL构造器会将其构造为加法器、减法器、除法器等源语器件。如图2.11所示为加法运算综合后器件映射图。</p><p>算数运算符综合图例</p><p>always语句块的综合原则</p><p>在Verilog HDL设计中用的最多的就是always语句块,always关键字用于描述组合逻辑和时序逻辑,两种逻辑的主要区别在于敏感触发信号是否为时序信号,alway语句块中多包裹其余语法使用,单独使用不具有任何意义。</p><p>if及条件语句的综合原则</p><p>在Verilog HDL语句中的单条if-then语句常表达条件判断行为,故常被综合为MUX数据复选器,若为嵌套组合预计,常会被逻辑综合为收到触发条件控制的纯组合逻辑电路,如图2.12所示。</p><p>if语句综合图例</p><p>case语句的综合原则</p><p>在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。</p><p>case语句综合图例</p><p>10、循环语句的综合</p><p>对于循环语句,在逻辑综合时依据行为级的逻辑描述若其循环体内部逻辑不存在依赖性或关联性,则循环体内部语句将被展开为并行语句后进行逻辑综合,且语句执行先后顺序不会影响到最终的结果,如:For循环语句在逻辑综合后会依据循环体内部的逻辑构成级联的链式组合逻辑电路。</p><p>循环语句综合图例</p><p>11、函数语句的综合</p><p><em class='similar'>在verilog HDL语句中。</em><em class='similar'>function如C++的内联函数一样,</em><em class='similar'>在逻辑综合时,</em>将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。</p><p>函数语句综合图例</p><p>FPGA技术映射</p><p>在综合优化过程中,技术映射是将技术映射作为综合优化的重要组成部分,也是FPGA支持软件工具EDA中最为关键的部分,技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em><em class='similar'>进而最终影响芯片的性能成本,</em><em class='similar'>故而已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em><em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em></p><p><em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为进行逻辑转换的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>运行速度相当重要。</p><p>工艺映射流程图</p><p>技术映射的本质是将电路所描述的行为逻辑所对应的布尔网络,通过算法与特定FPGA的工艺器件库,将布尔网络转换为对应FPGA最小逻辑单元的过程。其目的是对用户输入的RTL级电路经过逻辑综合后构成的布尔网络通过先进的算法来进行划分,使得原设计中的每一小块电路的逻辑功能可以借由FPGA的一部分CLB来实现。我们可以参考图2.16来进一步对技术映射的流程进行分析。</p><p><em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em></p><p>由图2.16可以看出划分是工艺映射流程的第一个步骤,划分的本质是对已经获得的用以表示电路逻辑的布尔网络依据其所实现的功能逻辑进行分割,划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。</p><p>电设计转化为DAG图</p><p><em class='similar'>逻辑分解是将电路进行逻辑等价的转换,</em><em class='similar'>目的是将复杂的逻辑单元用基本的逻辑形式表达,</em><em class='similar'>以便于以后的匹配和映射</em>[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em></p><p>逻辑划分</p><p><em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。</p><p><em class='similar'>在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,</em><em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。<em class='similar'>既依据一定的规则分离出部分子图进行匹配,</em><em class='similar'>并从匹配集中选出库单元,</em><em class='similar'>完成布尔网图到工艺网表的实际映射。</em><em class='similar'>要保证每完成的一组匹配单元,</em><em class='similar'>其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,</em>且每组单元间不存在重叠关系。<em class='similar'>工艺映射的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集,</em>从而满足用户所期望的对面积、<em class='similar'>功耗、</em>速度的需求。<em class='similar'>最后以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。</p><p>器件覆盖</p><p>下面我们通过分析具有代表性的FlowMap的LUT工艺映射原理,借由以下实例对工艺映射流程进行进一步说明。</p><p>无论多么先进的FPGA芯片中其基本资源中其查找表的输入数是既定的,如LUT1、LUT2、LUT3等,基于图2.2可知,查找表可以实现所有输入不大于其本身输入数量的任意逻辑。而FPGA的工艺映射的目的就是要从目标电路的布尔逻辑图中不断划分出输入数在组成该FPGA的最小查找表之内的等效逻辑。</p><p>首先将图2.17中的门级网表转换为图中的DAG有向图的方式来表示。最上层的节点成为主输入,最下层的节点称为主输出,从而可以得到如图2.18所示的映射范围,图2.19所示为在映射范围下进行切分和标注求解的过程及将映射范围的有向图依据主输入及主输出进行逻辑分层,从而标注拓扑序列,进而完成覆盖。其具体步骤伪代码如图2.20所示。</p><p>Mapping算法伪代码</p><p>通过上述计算可以得到每一层的标注为依据上层计算所得出的最小值,从而可以保证使用最浅的逻辑层深度。之后对电路的主输出开始进行器件映射,每映射一个后主输出将发生变更,对所有的主输出依次进行算法映射后,便可得到相对应的查找表及网表图,如21所示。</p><p>对目标电路进行切分和映射方法的历史发展中,有很多根据不同工艺、不同划分或覆盖思路形成的优秀技术映射算法,如:哥伦比亚大学Steve Wilton团队所开发的更倾向于改善逻辑电路映射后功耗的EMAP算法、多伦多大学Stephen Brown团队所开发的应用比较广泛的IMAP算法等[2]。</p><p>机器学习模型与资源估计方法</p><p>本章前两节主要叙述了关于面向FPGA的逻辑综合与技术映射的基本流程,为本文后续建立基于传统意义上的快速资源估算模型建立基本方法论,而本节将主要介绍再上述两节所述的传统框架基础下,结合机器学习来构建的FPGA设计资源估算的可行性与模型的方法论,包括机器学习与EDA相结合的可行性、随机森林模型,人工神经网络(ANN)及学习模型评估指标。</p><p>机器学习与EDA结合的可行性</p><p><em class='similar'>机器学习是一门多学科交叉领域,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行对应知识体系划分来有效提高学习效率的方法</em>[3]。</p><p>通过机器学习的定义同时结合FPGA设计逻辑综合流程及技术映射原理,我们可以得出对于大型FPGA设计在综合阶段存在的资源估算的时间长的弊端,我们可以使用机器学习方式以Verilog HDL的各种语法及参数的数量及值作为特征,Vivado综合的资源数值为标签,来训练监督学习的回归模型,从而实现快速的资源估算。基于机器学习实现资源估计方法的流程如图<br />机器学习实现RTL级设计资源估算流程</p><p>特征提取方法</p><p>对于机器学习或人工智能而言,模型的选择与好坏并不能最终决定预测精度的上限与下限,最终模型的上限取决于特征与样本的优劣,所以特征对于机器学习模型的学习与预测是相当重要的。</p><p>特征的优化和清洗将对机器学习最终的结果产生较大的影响,所以在选择学习模型与训练器前需要先对样本进行特征提取,对于在RTL级进行资源预测这个命题,我们需要在RTL级提取尽可能多的语法特征,从而确保不会丢失重要特征,虽然会获得很多无关特征或冗余特征,但在进行特征工程及训练模型迭代时可以进一步对特征进行优化,从而保留相关特征和重要特征。</p><p>由于RTL级设计是基于Verilog HDL语言开发的编程语言,所以我们采用尽可能细致的特征提取方法,即将Verilog HDL抽象为数据结构,并结合IEEE 1800所示Verilog语法标准,通过进一步解析数据结构来尽可能全面的提取Verilog HDL语言的语法特征,从而构建在基于2.2节原理的基础上的合理特征集。具体的特征提取算法与特征提取的构建将在错误!未找到引用源。进行详尽的阐述。</p><p>随机森林</p><p><em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em><em class='similar'>这个算法是多学习集成学习的典型模型。</em></p><p>Bagging</p><p><em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em><em class='similar'>它基于自主采样法,</em><em class='similar'>即给定一个数据集拥有固定m个数据样本,</em><em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em><em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em><em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样机,</em><em class='similar'>初始训练集中有的样本在采样集中多次出现,</em><em class='similar'>有的则从未出现。</em>由式(2-1)<em class='similar'>可知采样集中将会出现训练集中约三分之二的数据。</em></p><p>(2-1)</p><p><em class='similar'>通过上述算法可以采样出个含个训练样本的采样数据集,</em><em class='similar'>随后基于每个采样集训练出对应的弱学习器,</em><em class='similar'>再通过将这些基学习器的学习结果进行进一步的结合。</em>从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的计算复杂度为,</em>则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,<em class='similar'>而通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em><em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、<em class='similar'>较高学习效率的集成学习算法。</em></p><p><em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>由于Bagging学习算法的主要关注点在于如何降低方差,</em><em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显。</em>Bagging的算法伪代码如图2.22所示。</p><p>Bagging算法伪代码</p><p>决策树</p><p><em class='similar'>决策树是一种常见的机器学习算法,</em><em class='similar'>决策树学习的目的是为了构造具有泛化能力强,</em><em class='similar'>处理未见示例能力强的二叉树,</em><em class='similar'>该树能够对泛化样本进行正确且合理的决策,</em><em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略,</em><em class='similar'>决策树学习基本算法伪代码实现如图2.23所示。</em></p><p>决策树学习基本算法</p><p>显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。<em class='similar'>在决策树的决策过程中我们更关心的肯定是如何划分,</em><em class='similar'>或者说如何选择最优划分属性,</em><em class='similar'>即结点的&quot;纯度&quot;,</em>决策树中衡量一个结点的纯度的高低有以下几类指标:</p><p>信息熵公式:</p><p>(2-2)</p><p>增益率公式:</p><p>(2-3)</p><p>基尼指数:</p><p>(2-4)</p><p>随机森林</p><p><em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器(决策树)所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入随机属性选择,</em><em class='similar'>��以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em><em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分</em>[30]。</p><p>随机森林在多种多样的决策与回归任务中展现了超乎预期的强大的性能,<em class='similar'>随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,</em><em class='similar'>但继承了Bagging中所具有的学习多样性,</em><em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em><em class='similar'>这就使得最终集成后的强学习器的泛化性能上的提升,</em><em class='similar'>其可通过弱学习器之间差异度的互补来增强。</em></p><p><em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar'>泛化能力强、</em><em class='similar'>鲁棒性强等优势,</em>可有效避免模型过拟合的现象出现,适用于高维数据的处理。</p><p><em class='similar'>随机森林的回归预测结果是棵决策树的预测结果取均值而得到的,</em>它满足以下定理:</p><p>定理1当时,</p><p>(2-5)</p><p><em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar'>则表示一课决策树的平均泛化误差即</em><br />(2-6)</p><p>定理2对所有随机生成的训练集都有,</p><p>(2-7)</p><p>式(2-7)<em class='similar'>中是在与相互独立的情况下,</em><em class='similar'>残差和的加权相关系数。</em></p><p><em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em><em class='similar'>随机森林回归选择对相关系数进行加权处理。</em><em class='similar'>随机森林</em>的具体算法步骤伪代码可概括为下图2.24所示。</p><p>随机森林模型算法伪代码</p><p>人工神经网络</p><p><em class='similar'>人工神经网络是深度学习的核心。</em>其在当代用途广泛、<em class='similar'>功能强大且可扩展,</em><em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar'>例如对数十亿张图像进行分类,</em><em class='similar'>例如</em>Googal的Images,<em class='similar'>或者为语音识别服务提供支持</em>[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。</p><p>感知器</p><p>神经元计算图示</p><p><em class='similar'>感知器架构是最为简单的神经网络基础架构之一。</em>结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar'>也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。</p><p>(2-8)</p><p>sgn\\left(z\\right)=-1,&amp;z&lt;00,&amp;z=0+1,&amp;z&gt;0(2-9)</p><p>感知器是一层阈值逻辑单元单元所构成的,每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元时,</em><em class='similar'>该层通常称为全连接层。</em><em class='similar'>所有输入神经元形成输入层,</em>用以与感知器的输入数据互联。同时,<em class='similar'>每一个神经元会特别增加一个额外的偏置特征,</em><em class='similar'>并通过偏置神经元</em><em class='similar'>(一种特殊类型的神经元)</em><em class='similar'>来保证其输出始终为1。</em><em class='similar'>具有,</em><em class='similar'>作为输入的感知器如图2.26所示。</em><em class='similar'>该感知器可以将输入的数据同时借由输入层来分为三个不同的二进制类,</em>并作为输出。</p><p>感知器结构图示</p><p>借助线性代数的数学关系,通过公式(2-10)可以计算出当存在多个输入时计算全连接层感知机的输出结果,且计算是高效的。</p><p>(2-10)</p><p><em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em>同时每个训练样本进行预测。<em class='similar'>从而对产生错误预测的神经元的权重进行调整,</em>如增大,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。</p><p>(2-11)</p><p>多层感知机</p><p><em class='similar'>多层感知器也称深度人工神经网络,</em>则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。</em><em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em><em class='similar'>每一层都拥有一个偏置神经元并全连接下一层神经元,</em><em class='similar'>除输出层外。</em></p><p>多层感知机结构图示</p><p><em class='similar'>常见的人工神经网络结构是如图2.27所示的多层级结构,</em><em class='similar'>每层的单个神经元与下一层神经元之间实现全连接,</em><em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em><em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em><em class='similar'>最终结果由输出层输出预测结果;</em>换句话说,<em class='similar'>输入层只接受输入而不对输入样本进行任何处理,</em><em class='similar'>隐藏层和输出层包含函数神经元。</em><em class='similar'>神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em><em class='similar'>神经网络所学习的主要内容包含在连接权重和阈值中。</em></p><p>当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,分为前向传播和后向传播。反向传播是目前使用的学习算法。<em class='similar'>使用有效的技术自动计算此级别。</em>只穿越电平两次,<em class='similar'>即一前一后传播算法可以计算每个模型参数的网络误差梯度。</em><em class='similar'>换句话说,</em><em class='similar'>可以用以学习如何修复每个连接权重和每个偏移项错误。</em>当找到这些梯度时,<em class='similar'>常规梯度会执行下降步骤,</em>直到梯度难以拟合,<em class='similar'>然后它会更新整个过程。</em>常见的DNN网络超参数与典型值如表2.1所示,后续基于机器学习建立快速资源估算模型会进一步对超参数进行调整及介绍。</p><p>典型多层感知机架构</p><p>机器学习性能评估指标</p><p>评价模型性能的指标有很多种,需要我们根据特定的任务选择合适的评价指标。不恰当的评价指标不仅无法模型进行评估,反而会造成误导,得出错误的结论。一个评价指标可以展现模型在某一方面的能力,所以一般情况下,需要构造多个评价指标,来对模型进行全面的分析。针对大型RTL设计的FPGA资源估算模型的需求分析,其为回归问题模型,对于回归问题模型的特点有如下几种模型性能评估指标:</p><p>均方误差</p><p>均方误差是在回归问题的机器学习模型中常见的衡量泛化误差的学习指标,均方误差是反映样本真实值与实际预测值之间差异程度的度量[20]。评价点估计的常用标准即均方误差均方误差公式如(2-12)所示。</p><p>(2-12)</p><p>式(2-11)说明,<em class='similar'>均方误差由点估计的方差与偏差的和的平方两部分组成。</em></p><p>均方根误差</p><p><em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习的精密度。</em><em class='similar'>这也是均方根误差在工程领域被广泛使用作为评估指标的原因。</em>因此,均方根误差是常用来度量预测值同真实值之间的偏差,其计算过程公式如(2-13)所示。</p><p>(2-13)</p><p>3、R-Squared</p><p>是统计学里常用的统计量,的名字是coefficient of determination,另一个名字是Nash-Sutcliffe model efficiency coefficient。给定一系列真值和对应的预测值,的定义如公式(2-13)所示。</p><p>(2-14)</p><p>的含义是,预测值解释了变量的方差的比例差距,其度量的是预测值对于实际值的拟合程度。进一步理解,假定的方差为1,则使用表示该模型之后,的残差的方差减少了多少。比如等于0.8,则使用该模型之后残差的方差为原始值方差的20%。</p><p>:最理想情况,所有的预测值等于真值。</p><p>:一种可能情况是&quot;简单预测所有值等于平均值&quot;,即所有都等于真实值的平均数。</p><p>:模型预测能力差,比&quot;简单预测所有值等于平均值&quot;的效果还差。这表示可能用了错误模型,或者模型假设不合理。</p><p>的最小值没有下限,因为预测可以任意程度的差。因此,其范围是。</p><p>快速RTL级资源估算模型的设计与实现</p><p>本章将结合对第二章所述的FPGA逻辑综合原理与技术映射原理的研究,使用C++语言设计并构建基于传统框架下的快速资源估算模型,并基于该模型结合第一章所述高密度FPGA原型验证系统所需要解决的关键问题及基本需求增加算法优化与约束项优化,实现符合基本原理与能够解决实际工程问题的快速RTL级设计资源估算模型。</p><p>Verific及相关数据结构</p><p>Verific平台介绍</p><p>Verific Design Automation是Verific公司开发的一款用于解析与构建SystemVerilog、VHDL和UPF的解析器平台,使其客户能够以低成本快速开发高级EDA产品。</p><p>Verific分析创建解析树并执行类型推断以解析标识符的含义。解析器/分析器模块支持整个系统Verilog IEEE 1800(包括Verilog IEEE 1364)、VHDL-IEEE-1076和UPF-IEEE-1801语言。生成的解析树/数据模型附带了大量成熟的C++ API。Verific的解析器平台分发为C++源代码,并在所有32位和64位UNIX、Linux、MAC和Windows操作系统上进行编译。Verific的解析器平台目前在全球许多公司的生产和开发中使用,从EDA初创公司到《财富》500强半导体供应商等。</p><p>我们将使用Verific,并基于Verific生成的语法树来完成后续的模型构建操作,由于Verific具有当前行业认可的Parse和Analyze功能,并基于C++平台实现开发,提供广泛的语法树API作为二次开发的基础,故我们选择在Verific的基础上实现可商业化使用的快速资源估算模型。首先需先对Verific所构造的基本数据结构进行相关了解及分析,从而选择构造合理的数据机构及API进行模型建模实现;Verific主要数据结构分为以下两个主要部分:基于RTL的语法树结构和基于Netlist的Database结构,下文将主要介绍构建资源估算模型使用的主要数据结构。</p><p>Parse-Tree数据结构</p><p>Verific在RTL级别Verilog VHDL的语法树Parser上有丰富的经验,通过对语法进行文本级别的流解析在内存中构建层次树(Hierarchy-Tree)结构用以表述Verilog VHDL语法信息,层次结构树(hier Tree)是设计层次结构的独立于语言的表示形式。设计的层次结构由Verilog语言中使用的模块实例化和生成语句定义。随后在本文档中,我们将此数据结构称为hier树或Parse-Tree。这个层次结构树结构是一个轻量级的静态详细层,位于分析的解析树之上,保存着关于各种设计对象的关键信息。树的每个节点都存储有关它所表示的设计对象的信息,以及该层次结构路径中特定于该设计对象的参数和泛型等常量的值。语法树结构主要由以下几种类结构:</p><p>①VeriTreeNode是所有Verilog树节点元素的基类。因此,它包含行文件信息和在所有解析树节点上的数据信息。其中VeriExpression、VeriIdDef、VeriStatement等中非常常用的派生类,用于对Verilog Design作进一步数据构造,下图为VeriTreeNode的继承示图:</p><p>VeriTreeNode类视图</p><p>②VeriIdDef是标识符定义树节点,是标识符节点的基类。Verilog中声明的任何标识符都将成为VeriIdDef结构类。下图为VeriIdDef的类关系视图,其中VeriidDef的继承类VeriModuleID、VeriOperatorID、VeriInstID等为进一步对Verilog语言语法的描述类。</p><p>③VeriExpression是所有Verilog表达式解析树节点的基类。其继承类用于描述包括常量、名称引用、运算符以及出现在实例化端口关联列表和模块端口列表中的端口关联信息等。下图为VeriExpression的类关系视图。</p><p>④VeriStatement是所有Verilog statement 节点的基类,包括所有Always语句块等语法</p><p>⑤VeriModule位于任何Verilog解析树的顶部,是模块节点的基类。它以解析树的形式表示一个完整的Verilog模块。VeriModules存储在静态哈希表中,该哈希表表示已分析的所有Verilog模块。</p><p>VeriModule类视图</p><p>上述5种数据结构为Verific中最基本的基类,所有语法树的语法表述及存储均可由其中一种进行表述,在本文中所有RTL代码的语法将会使用上述类进行语法树处理及构造,从而获取正确的设计层级及内容。</p><p>Netlist数据结构</p><p>由于传统技术映射是在网表级的基础上通过器件库使用图划分算法,将网表节点映射至对应的器件,所以为构建基于传统方法的快速资源估算模型,也需要使用Verific的Netlist数据结构来实现,Verific Netlist Database数据结构如下:</p><p>Verific-Netlist-DataBase数据结构图</p><p>①Libset是一个单例对象(只实例化一次的对象),它包含(char*)lib_name到Library*映射的映射。Libset没有所有者,因此被视为全局对象;</p><p>②Library是Libset拥有的对象,它包含所有Module模块命名到cell指针映射的映射。库对应于它的VHDL或Verilog等价物。例如,在VHDL中,将用户实体/体系结构对分析到一个名为&quot;user&quot;的库中,然后详细描述解析树,��么将创建一个名为&quot;user&quot;的库对象并将其添加到全局库集中。</p><p>③Cell是库所拥有的对象,它包含Netlist_name到netlist*映射的映射。当处理Verilog时,单元是包含单个网络列表的模块。就VHDL而言,单元是一个可以有多种体系结构(网络表)的实体。</p><p>④网络列表是数据库层次结构中的关键组件。它是一个由单元拥有的对象,包含其他网络列表实例化形式的功能(通过称为网络、端口和端口引用的对象连接在一起)。它还包含一组自身正在实例化的引用(从其他网络列表中)。</p><p>如上图所示,基本数据结构为LibSet用以存储所有的Library库,Library库为设计网表存储基本数据结构,Cell结构对应为VHDL代码中Module模块,每个Cell尤其仅有一个对应的Netlist结构,Netlist结构用以存储该Module所有互联信息及实例化信息,如:Port、Net、Instance,包括Net位宽、方向等。</p><p>基于Verific的上述数据结构以及相关的API,使得我们可以在后续基于C++语言实现传统快速资源估算模型提供基本数据基础。</p><p>资源估算模型流程与构造</p><p>本节将主要介绍使用C++构建基于传统框架下的快速资源估算模型的算法分析及具体实现步骤。</p><p>资源估算模型流程设计</p><p>基于第二章节所述逻辑综合及资源映射原理,我们对模型的构建做出进一步的分析,模型输入为RTL级设计文件即Verilog VHDL文件,模型输出为该设计所需FPGA资源数目,其中对于面向大型RTL设计Partition中所需的最重要的关键的资源为FF及LUT,文件流如下图所示。</p><p>快速资源估算模型文件流</p><p>基于Technology Mapping的原理进一步分析,为实现传统框架下较为准确的资源估算,则需要将输入的原始设计从RTL级代码转换至Netlist级别才能实现进一步的Technology Mapping,但是由于获取最直接的网表解构就需要使用综合器对RTL设计进行综合,通过前面对综合原理的分析,可知道综合主要分为以下几步,即RTL设计细化,Flatten,综合优化,综合约束,技术映射等几个步骤,但由于需要面向大型FPGA设计,综合器耗时太长,所以我们选择通过使用Verific来对设计进行静态细化及初步细化,使RTL级设计在内存中转变为伪网表,通过在内存中对伪网表进行Flatten操作,将伪网表所有的层级结构UnGroup至顶层,从而实现与基本综合器相对应的操作的快速版本,对Flatten至顶层的设计依据TechMapping原理使用已经获得的器件库进行器件匹配,基于本节分析及初步设计结果,着手使用Verific对传统资源估算进行进一步分析及模型构建,具体流程如图所示,关键操作及相关原理将在下文着重叙述。</p><p>快速资源估算模型流程图示</p><p>资源估算模型构造实现</p><p>我们以上一节中对快速资源估算模型分析的流程进行进一步的分析,同时进行实现:</p><p>1、Parse-Design操作</p><p>通过将原始设计使用Verific的Parser接口进行设计读入,由于需要商业使用,需要考虑多种用户输入情况,首先考虑常见的通过Filelist进行读入,并支持对于文件正确性校验及报错,并支持输入文件包括.sv\\.v\\.vh\\.svh等多种文件输入,同时支持通过路径进行设计输入,并对设计进行正确性校验,如图3.6所示。</p><p>快速资源估算模型Parse-Design流程</p><p>2、Elaborate操作</p><p>通过对上一步骤获得的完整输入设计的Parse-Tree进行Elaborate,从而获得对应设计的由Verific GTec Cell构成的伪Netlist的设计文件,Elaborate后的设计语法依旧满足Verilog HDL的语法信息,RTL Elaborate会使用门级的网表来表示之的RTL级代码。Elaborate会将RTL级代码进行逻辑展开,获得具有符合电路逻辑的门级视图网络和门级逻辑电路的VerilogHDL表述,该步骤为FPGA设计流程中综合的前置步骤,为下一步进行优化的技术映射做好基础工作,Elaborate操作如图3.10所示。</p><p>RTL Elaborate操作图示</p><p>3、Flatten操作</p><p>在步骤2的基础上,我们将对设计进行Flatten操作,Flatten操作顾名思义是将现有包含层级关系的层级设计进行展平操作,也可以称为ungroup操作,参考下图样例可以更好的说明Flatten操作对于设计的操作,如图3.8所示。</p><p>Flatten操作电路图示</p><p>Flatten操作树结构图示</p><p>在FPGA设计综合流程中Flatten操作会将一些层次树底层的Module、逻辑提升至顶层,将可以合并的逻辑进行合并,同时将一些冗余的互联Net进行优化,为进步一的综合优化和器件映射做好准备,因为对于FPGA或者数字集成电路而言,它是没有层次的概念的,所以Flatten操作可以更好的让寄存器级设计与物理器件之间建立更进一步的联系。</p><p>4、基本器件库</p><p>由于我们中所设计的快速资源估算模型是面向Xilinx的FPGA的模型,所使用的基本器件库是Xilinx公司Virtex系列器件库,其中主要包含的为基本逻辑单元即CLB,具体为MUX、LUT1~6、各形式的触发器即FF、FDR等,一些IP器件由于知识产权等问题无法直接使用,如图3.10以LUT、FF、MUX为例进行说明。</p><p>RTL级基本器件库</p><p>5、Technology Mapping</p><p>对步骤4中完成Flatten后的网表文件进行Technology Mapping,具体原理如2.2.1节中所述,具体操作为:将Flatten后的Netlist网表文件依据设计逻辑对将步骤4中的器件库的器件进行匹配和覆盖使用算法为EMAP,匹配后的网表将不存在基本的门级逻辑(布尔逻辑),而将会被器件库中的基本逻辑器件所替代,如MUX、D-FLIP-FLOP触发器、4-输入LUT器件等。</p><p>6、估算结果展示</p><p>下图为以上述思路构建的快速资源估算模型的初步估算结果,如图图3.11可以获得输入的RTL设计所使用的FPGA片上LUT1-6、BUFG、FF等器件资源数量。</p><p>快速资源估算模型计算结果</p><p>快速资源估算模型优化</p><p>通过图3.11与Vivado综合后结果对比,可以发现,在无优化的情况下仅对设计进行细化及基本技术映射虽然可以得到基本的资源,且在速度上得到了有效的提升,但是存在较大的误差,通过分析Xilinx的综合器Vivado细节及TechMapping,我们可以知道在与FPGA板载器件进行基本逻辑单元及触发器映射时存在优化项,可以理解为约束项,如:面积约束、功耗约束、时序约束、逻辑门约束等多种约束;结合面向大型RTL设计分割流程的实际需求,增加以下优化方案。</p><p>BottomToUP算法的设计与实现</p><p>由于使用Verific进行Elaborate处理及Flatten后无法得到每个层级对应的资源数量,且对整个设计进行Elaborate及Flatten所花费的时间较高,同时由于该资源估算模型面向RTLPartition进行使用,所以需要每个层级每个Inst的资源用于确认RTLPartition时正确的分割边界,所以我们从Verilog HDL与FPGA片上资源映射关系角度出发,在不考虑优化的前提下,每个Module的资源是由其所例化的Instance对应的Module的资源与该Module本身的胶水逻辑所组成,如下图样例所示,红框标注分别为例化Instance与胶水逻辑。</p><p>RTL代码中的Glue Logic和Instance</p><p>以上述分析为出发点,我们希望可以结合Verilog HDL设计的结构化建模方式,以该方式为参考,能够更加准确,更加快速的计算每个Module和Instance节点的资源,我们以RTL设计及计算资源所需数据为出发,设计以下数据机构用于存储每个节点的资源,如图3.13所示。</p><p>BottomToUp算法数据结构</p><p>RTL设计树结构示意图</p><p>通过以上述数据结构,用以实现Bottom to up的计算方式,通过对RTL设计树层次如图3.14所示,进行树遍历算法及递归算法构造存储当前Parse_tree对应的树结构及查找表,该查找表用以存储已被计算过的Module的资源,同时对多个不同参数例化的Module分别计算资源同时通过匹配算法将树结构上的节点与已计算资源节点进行匹配,本算法可以最大程度的减少重复计算,同时为减少网表结构带来的peak memory过大问题,每次计算都将使用不同的库进行技术映射,并在计算完毕后进行释放。另外由于本算法设计数据结构从资源复用角度出发,在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而加快计算速度。算法伪代码如图3.15所示。</p><p>BottomToUp算法伪代码</p><p>通过上图所示算法,在3.2节实现的快速资源估算模型的基础实现快速层次资源估算,输入为RTL级Verilog HDL设计,输出为该设计每个层级所使用的资源数量及相对应的树结构层次,若在输入时提供FPGA型号和资源,程序也会评估该设计所需要的FPGA的数量。如图3.16所示。</p><p>快速资源估算执行图示</p><p>可复用估算结果的Json文件</p><p>优化后快速资源估算模型输出报告</p><p>图3.18中为开源设计openrisc经过该快速资源估算模型新增的Bottom-to-Up算法计算所获得资源数量与每个Hierarchy对应的资源数量,从图中我们可以看到经过资源计算后设计的具体层级,每个层级前标注序号为该Instance节点名称及对应的树层级结构层次,节点后中括号内分别为RTLPartition流程所关注的十种资源数目,同时可以获得在给定的FPGA_Type、FPGA资源阈值下该设计所需的FPGA数量并且会���出如图3.17所示的一份Json文件用以存储每个Module对应的资源,便于复用。</p><p>经过同Vivado进行对比后发现,虽然该算法已经很好的解决了资源估算的速度问题,但是在准确度上还存在可优化空间及约束项,经过对逻辑综合与技术映射技术的进一步分析我们将在Elaborate后增加优化策略与约束策略,从而使估计结果更加符合实际应用场景。</p><p>冗余逻辑优化及合并</p><p>在进行逻辑综合和技术映射时,EDA综合器会对集成电路的规模、运行速度进行优化。综合的优化过程中会去掉常数输入、悬空输出等信号,还会针对源文件中未连接的输入或具有多个驱动的输出等问题报告错误或者警告[16]。若EDA工具发现设计存在部分缺陷如非关键输出悬空能,通常EDA工具都将依据自己的方式进行优化修复,但多所带的结果是可能优化结果并不满足设计者的初衷。综合常见的优化过程还对逻辑进行组合置换,从而进一步减少集成电路所需FPGA资源、功耗、并尽可能提升系统运行速度与减少阻塞。</p><p>通过前述步骤得到的快速资源估算模型,虽然已经可以得到资源的结果,同时若使用Bottom-to-Up的算法可以得到每个层级的资源结果,但是我们通过第二章的综合和技术映射的原理可以得知,在实际的综合和技术映射过程中,是对设计进行了大量的优化和处理的操作,所以如果我们不对当前的快速资源估算模型进行优化和约束,那么该模型的结果是不可用,没有价值和意义的。</p><p>所以我们为使我们资源估算的精确度更加高,所以需要符合逻辑综合和优化的过程,通过分析逻辑综合流程,在逻辑综合的工程中会对冗余逻辑进行优化,比如一些复选器或单纯的数值传递等非有效逻辑进行合并。</p><p>快速资源模型将会查找并发现没有负载或被禁用的逻辑(例如,当选择线保持高位时,驱动多路复用器上第一个选择的逻辑),并假设消耗了零资源。一旦找到一个这样的元件,所有驱动逻辑也会被移除,同时采取预防措施确保其他逻辑也不会被该元件驱动。</p><p>最小面积优化方法</p><p>通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、<em class='similar'>减少硬件资源消耗等,</em>所以在快速资源估算模型中也需加入相关优化项,<em class='similar'>来对RTL设计进行进一步的优化,</em>从而使得资源估算模型的结果更加的精确。</p><p>首先我们考虑资源共享,即在互斥条件下共享算术逻辑单元,主要有关系运算、加法运算、减法运算、除法运算等。</p><p>LUT-5 Base FPGA结构图示</p><p>根据FPGA的结构,可以知道不同系列、不同世代、不同型号的FPGA在逻辑单元的组成上是有很大区别的,比如对于赛灵思的VU440,其基本逻辑单元即CLB单元是以LUT5为基础,同理也有以LUT1、LUT2、LUT3、LUT4、LUT6为基础,支持至最高为LUT8的FPGA,由于LUT1~8之间存在换算关系,LUT的本质就是如图3.18的2进制查找表,故而2个LUT1可以合并组成为一个LUT2,同理以LUT5为Base的FPGA,可以使用多个LUT5来组成LUT6等高维度资源,从而有效的是缩小FPGA布线后使用的面积即器件使用的数量。</p><p>4输入查找表真值表</p><p>在进行资源共享优化时我们遵循以下原则:</p><p>运算符和操作数均相同,则一定可以贡献逻辑单元。</p><p>对于具有相同运算符的表达式,且操作数或操作表达式相同时,为实现逻辑共享我们可以加入一个多路复用开关来完成。</p><p><em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em><em class='similar'>可以共享逻辑单元</em>[16]。</p><p><em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em><em class='similar'>可以共享逻辑单元。</em></p><p>对于运算符不相同的运算表达式,若其有且仅有一个公共的操作数,则为实现逻辑共享可以引入MUX来实现。</p><p><em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em><em class='similar'>从而实现逻辑单元的共享。</em></p><p>除去资源共享优化外,本文基于对RTL代码的分析,通过对公共子表达式增加逻辑优化合并,使并借由数据结构来保存公共部分的运算结果数值,这样在模块内部后续使用相同表达式的地方则可以直接调用该值。</p><p>所以基于以上原理,在进行冗余逻辑优化和合并的基础上,可以增加最小面积优化方法,在资源估算时,以LUT4为base进行初步资源估算,在当前基础上,以LUT4之间的优化方法,我们可以以高维度LUT为Base的FPGA作为方向,将多个LUT在合理的范围内进行合并,合理的范围即在一个Module内的组合逻辑或连续赋值、阻塞赋值、非阻塞赋值等LUT合并至LUT6,从而实现以最小面积为目标的优化策略。</p><p>资源估算模型将找到具有共同输入的共同元素类型并假设共享资源。例如,如果找到两个加法器,均为 A+B,则假定加法器逻辑是共享的。对合并的元素数量设置限制,以限制扇出。同时模型将查找将使用LUT实现的二进制逻辑函数序列,并根据树的唯一输入数和输出数对其进行优化。</p><p>结果分析</p><p>快速资源估算模型无优化结果对比</p><p>快速资源估算模型增加优化结果对比</p><p>表3.1、表3.2分别为快速资源估算模型在5个基本Case下,未增加优化项与优化算法的估算结果与增加优化项及优化算法后的准确值与估算时间的对比,通过分析我们可以发现在不增加优化项及优化算法的情况下在使用资源量即电路逻辑复杂度较低的情况下准确度较好,但随着设计规模的增加电路复杂度的上升其预测资源准确度越来越差,由于对电路的过度精细化导致在面对设计规模较大的电路时由于内存原因导致无法得到估算结果,但是在时间性能上已经较综合布局得到较高的提升最小的设计时间提升约15倍,随着设计负责度的增加,在时间性能提升越明显,同时对比优化后结果可以得出首先由于设计规模较大无法计算的资源已经可以得到结果,且各个Case的估算结果准确度较好,LUT资源估算平均准确度达90.11%,FF资源估算平均准确度达88%,并且在时间性能上进一步提升,较未优化模型提升2倍,已满足在高密度FPGA原型验证系统划分阶段中对超大型设计进行快速资源估算并借以确定划分边界的实际需求。</p><p>本章小结</p><p>本章详细叙述了,在以第二章理论为基础的前提下,使用Verific基础数据结构基于C++语言构建面向高密度FPGA原型验证系统RTLPartition的FPGA设计的快速资源估算模型,同时提供多种优化及约束方案,对模型进行约束及二次优化,使得对设计在FPGA上的资源估算精确度达90%以上,并得到了较好的时间性能,在超过百亿门的电路估算时间仅需几十分钟,时间较完整的综合流程缩短200%以上,同时快速资源估算模型为支持高密度FPGA原型验证系统,为用户提供多种额外功能,如用户指定资源输入、对应不同FPGA的使用数量评估等作为商业软件对用户的友好性功能。同时也为后续基于人工智能的FPGA资源估算模型提供思路及开发基础。</p><p>基于机器学习的RTL级资源估算</p><p>对于机器学习项目,决定预测准确度的上限并不取决于模型的算法的高深或模型算法的先进性,而决定模型预测上限的是特征的全面性、准确性和样本。所以特征的选择和提取尤为重要。</p><p>本章主要���述基于第二章中提到特征提取方法,使用Verific的Parse-tree来对输入的RTL设计进行二次解析并提取所需要的信息作为后续机器学习的输入特征。构建基于C++的自动化特征提取器并对样本数据构建数据集,并对数据集样本进行分析,洞见特征数据间的数学联系及统计学关系,并尝试多种机器学习回归模型,选择表现较好模型进行进一步训练。</p><p>Verilog HDL 语法特征分析</p><p>基于前一步骤实现的基于Verific的快速资源估算建模所获取的资源之间的映射关系,优化技巧等理论及实践基础,我们发现对于综合后技术映射的基本逻辑就是将Verilog HDL预计合理的使用FPGA上的器件来实现Verilog代码中所需要的数字逻辑,所以我们可以分析将Verilog HDL设计语言和器件间的典型关系,提取VerilogHDL中的语法特征,通过这些特征来构建机器学习模型,从而实现更加快速精确的大型FPGA设计所需要的FPGA片上资源数量,首先我们基于IEEE1801所给出的Verilog的技术文档,对VerilogHDL进行全面特征提取。</p><p>通过对Verilog HDL基本语法分析结合IEEE Verilog 标准、RTL样例设计,拟提取Verlog HDL语法特征对应关键字如表4.1所示。</p><p>Verilog主要语法类型与关键字</p><p>语法类型语法关键字</p><p>端口 Input Output Inout</p><p>线网 Wire Reg</p><p><em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符+-*/^|&amp;</em></p><p>连续赋值语句 Assign</p><p>Always过程块 Always</p><p>过程赋值语句=&lt;=</p><p>条件表达式 If else then</p><p>条件分支语句 case</p><p>循环语句 For While Repeat</p><p>函数语句 Function</p><p>RTL级设计特征提取方法设计</p><p>首先我们通过第二章的综合及技术映射原理已知Verilog HDL语句的综合原则及对应的FPGA片上器件的映射规则,所以我们基于以上原理,借由Verific的Parse-Tree对当前读入的Verilog设计进行二次解析,具体流程图如下:</p><p>特征提取器结构图</p><p>通过解析Verific读入设计时构建的Parse-tree对所有Verific进行提取主要包含以下所述特征。</p><p>(1)端口信息特征提取</p><p>首先对于FPGA上的IO资源是通过RTL中Module的端口映射而来,所以我们首先提取Module的端口信息,对于一个Module的端口信息在Verific的Parse-Tree数据结构中存储在VeriModule类下的VeriDataDeclar类下面,所以我们通过重载Verific提供的Visitor虚函数来获取端口数据类型指针,通过解析VeriDataDeclar下的数据解析出端口数量包括Input、Output、Inout,同时通过解析VeriDataDeclar下的VeriDatatype数据类型,获取对应的端口位宽,并存储为RTL_InputWidth、RTL_OutputWidth、RTL_InoutWidth特征,实现对Module端口特征信息的提取。</p><p>(2)线网信息特征提取</p><p>Verilog VHDL线网类型语法在RTL级描述中也是很重要的存在,基于第二章中描述的综合及技术映射理论可知,线网通常用于赋值语句左右,或被映射为寄存器结构,所以获取Verilog设计的线网类数据信息对于机器学习模型的训练而言应相对重要。</p><p>对于线网结构在Verilog HDL语法中主要体现为Wire和Reg关键字,在Verific的Parse-Tree数据结构中线网结构被构造为VeriNetDecl类进行存储,我们通过重载Visitor基类来获取Module下的全部的VeriNetDecl类,通过解析可获得Reg和Wire关键字的数量以及对应的信号位宽,分别存储为特征RTL_Reg、RTL_RegWidth、RTL_Wire、RTL_WireWidth特征,从而实现对Module线网信息的特征提取。</p><p>(3)操作符及运算表达式特征提取</p><p>在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行联结运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。</p><p>Verilog操作符图示</p><p>首先已知逻辑运算符、算术运算符和关系运算符等操作符在进行逻辑综合后会被综合器转换为对应的逻辑运算门,所以符号表达式的特征信息也是关键特征,所以我们通过如下方式对表达式进行解析从而获得,首先整个表达式在Verific的Parse-tree中被存储在VeriExpression类下,通过解析VeriExpression类获得表达式存储类VeriOpenbinery类,通过判断VeriOpenbinery类下的Type类型获取运算符类型,如OR、AND、PLUS、AlTERSHIFT等,并存储至特征Hash表中,通过获取运算符左右两侧表达式,通过递归算法递归解析剩余运算符两次表达式,从而获取运算符两次表达式位宽,并存储至特征Hash表中,递归完毕后既可以完成对运算符表达式的特征提取,算法伪代码如图4.3所示。</p><p>运算符特征提取伪代码</p><p>(4)连续赋值语句特征提取</p><p>连续赋值语句是在Verilog HDL语法中比较重要且常用的语句,常被综合为FF及LUT等关键器件,所以连续赋值语句的特征提取尤为重要,由于连续赋值语句常包含组合或嵌套式语法,通过IEEE标准中对Verilog连续赋值语句的定义可知,连续赋值语句左侧只能为线网结构即wire类型,而右侧可以包含逻辑运算符(&amp;、|、~)、算术运算符(+、-、*、/)、选择表达式(A?B:C)等多种语法嵌套组合。</p><p>由于需要解析嵌套语法且种类较多,所以采用递归算法对表达式进行解析,首先根据=号左右获取AssignStatement,由于左侧只能为线网结构,所以将表达式左侧存储为AssignRightWidth用以存储assign语句左侧位宽,右侧进一步根据符号进行拆分,若存在逻辑运算符则存储逻辑运算符数量如AND(&amp;)、or(&amp;)等符号特征,并存储数量,则先以符号进行左右两侧拆分,若存在括号,则先进行括号匹配,对提取出的表达式进行进一步递归解析,同时计算符号两侧位宽,并保存为ANDRIGHTWIDTH、ANDLEFTWIDTH等;若表达式右侧为选择表达式,则存储选择表达式数量为QUESTIONCOLON特征,进一步解析该选择表达式分别提取if条件并存储为QUESTIONCOLONIF特征,若if条件存在逻辑或算术运算同理递归调用进行解析并存储至对应特征,else则存储至QUESTIONCOLONELSE特征,同时解析else的逻辑与算术运算,同时存储至对应特征中,then语句则存储至QUESTIONCOLONTHEN特征中,同时递归解析Then语句中的逻辑与算术运算并存储至对应的特征统计中,算法伪代码如图4.4所示。</p><p>连续赋值语句特征提取伪代码</p><p>(5)过程结构体特征提取</p><p><em class='similar'>Verilog HDL语法中的过程机构体,</em><em class='similar'>都是由关键字initial或always和其块内内容语句所组成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。</p><p>Verilog Always过程块语法格式</p><p>由于Always过程块的触发是根据敏感事件列表中的变量是否可以被触发来控制,敏感事件列表通常可有1个或多个表达式来组成。</p><p>所以对于Always块的特征信息的提取,主要分为三部分:</p><p>获取Always语法块数量;</p><p>获取Always语法块敏感事件列表、并解析宽度;</p><p>获取Always语法块内容(由于语法块中包含语法种类较多,将在后续着重叙述);</p><p>在Verific Parse-tree中always块构造存储在VeriAlwaysSatement类中,通过重载Visitor函数,来获取Parse-Tree中的Always结构体的数量,通过统计数量可以获得RTL设计中Always块的数量,通过解析获取到的VeriAlwaysStatement结构中的VeriEventExpress类获取Always的敏感事件列表,由于敏感事件列表中多由表达式构成,所以通过使用前述0、0所提及的递归方法来获取敏感事件表达式的宽度,并存储至特征AlwaysEventWidth中;从而完成对Always结构体数量与Always结构敏感事件列表的特征信息提取。</p><p>Always特征提取伪代码|</p><p>(6)过程赋值语句特征提取</p><p>Verilog过程赋值语句语法格式</p><p><em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、阻塞型赋值语句左右线网数量BlockAssignRightNum、BlockAssignLeftNum;非阻塞型赋值赋值语句NonBlockAssign、非阻塞型赋值语句左右位宽NonBlockAssignRightWidth、NonBlockAssignLeftWidth,其中符号表达式部分,将被存储在对应的符号表达式特征中提取过程与方法思路与连续赋值语句一致,可参见图4.4。由于过程赋值表达式主要被用于过程块中,所以0中对语法块内容的提取将在该部分体现。</p><p>(7)If-else条件分支语句特征提取</p><p>条件分支语句对于硬件的行为描述及其重要,且常被综合为FF和LUT器件,是一种高级语言的抽象表达,故在特征信息提取时,也是重点关注的语法;</p><p>If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em><em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。</p><p>通过Verilog HDL语法可知,<em class='similar'>if-else条件分支语句的作用是复选,</em><em class='similar'>即通过是否满足给定的判断条件来判断下一步电路需要执行的操作或逻辑。</em>其主要语法形式如图4.8所示。</p><p>Verilog If条件语句语法格式</p><p>由于if-else条件分支语句常用语Always过程块中,所以我们在0模块的基础上对if-else条件分支语句进行解析,在Verific-Parse-tree中,条件分支语句被存储为VeriQuestionColon类中,通过解析该类可获得if-else条件语句块数量特征Questioncolon,,由于if-else条件语句存在多条件或多if-else条件嵌套组成,所以采用递归方式分别解析if条件、if条件内容、else分支内容、then条件内容,由于if条件内容为条件表达式,所以可以采用0模块进行解析,并存储特征QUESTIONCOLONIF;if条件内容为赋值表达式,所以可以使用0中对过程赋值语句的提取方法来提取,并存储至对应的过程赋值特征中,同理可对Else内容块及Then内容块解析,并提取特征QUESTIONCOLONELSE、QUESTIONCOLONTHEN。从而完成对if-else条件分支语句的特征提取。</p><p>If条件语句特征提取伪代码</p><p>(8)Case条件分支语句特征提取</p><p>基于0中对Verilog HLD分支控制语句的分析可知,case分支控制语句与if-else语句在功能上大同小异,均是实现分支控制选择,但Case语句可以用较少的语法表达提供较多的分支选择,在实际开发中多用于表述状态机的行为级描述,其在实现多路选择控制上更加简便和直观,其通常用于描述译码或状态机,其语法格式如图4.10所示。</p><p>Verilog Case语句语法格式</p><p>在Verific-Parse-Tree中Case语句块被解析构造存储至VeriCase类中,通过统计该类数量可获得Case数量存储至CaseNum特征,VeriCase类中包括Case控制表达式及分支表到式及分支语句块,模块需要对该类及表达式进行解析,解析控制表达式可用0中所述方法进行递归提取,从而获得控制表达式数量CASECONDITIONNUM、控制表达式位宽CASECONDITIONWIDTH、以及分支数量CASTITEM,由于分支语句块内容多为赋值语句,所以可以使用0中模块进行对应特征提取。Case条件分支语句特征提取伪代码如图4.11所示。</p><p>Case条件分支语句特征提取伪代码</p><p>(9)循环语句特征提取</p><p><em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar'>while、</em>for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。</p><p>Verilog循环语句语法格式</p><p>对于循环语句其逻辑综合后为将循环体按循环次数展开,所以也需要对其提取特定特征,主要分为以下两部分即循环次数,循环体内容。</p><p>对于For循环体,由于其循环次数在for语句条件表达式部分,需要解析出for循环初始值、判断条件、补偿、从而计算出��个循环语句块的循环总次数,for循环语句块在Verific-Parse-tree中被构造为VeriFor结构,其中循环次数部分需要二次解析,通过解析后通过计算初始值-终止值/步长来获得循环次数,并存储于特征RTL_ForItem,同时将for结构体数量存储于特征RTL_ForBlock,对于循环体而言,其内容可嵌套if-else、赋值表达式等多种语法,需要使用递归算法对循环体进行解析,使用0、0中所提及的算法进行特征抽取,同时需要对统计的数量再乘以循环体个数,并存储至特征内。</p><p>对于while循环体,由于其判决条件存在与其条件表达式中,所以需要我们通过二次解析条件表达式来获取终止值,同时需要通过判断终止值的变量表达式来计算循环体次数。</p><p>对于repeat循环体,由于repeat循环体的循环次数在其循环次数表达式中,只需对循环次数表达式进行二次解析获得循环次数即可,同理使用上述方法解析循环体特征信息,并存储至对应特征中;</p><p>对于forever循环语句,只需要将Forever语句中的forever循环体内容进行解析即可完成对forever特征的提取,通过以上方式完成对Verilog循环语句的特征提取。</p><p>循环语句特征提取伪代码</p><p>(10)函数语句特征提取</p><p><em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>的语法形式如下,如图4.14所示。</p><p>Verilog HDL Function语法结构</p><p>function函数定义由于只能被定义在Module中,不被允许在Always过程块内调用且函数模块必须具备相应的IO端口用以提供外部互联。</p><p><em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em><em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;</p><p>在Verific的Parse-tree中Function被构造存储于VeriFunction类中,通过重载Visitor函数获取该RTL设计下的VeriFunction类,并统计其数量并存储至FunctionNum特征中,同时进一步获取Function的内部逻辑结构,同时对内部逻辑使用0、0、0模块中提到的方法对组合逻辑进行提取,并存储至对应的类中。从而完成对Funtcon的特征提取。</p><p>自动化特征提取器的实现</p><p>本节将叙述基于4.2节所述的特征提取方法构造对应的模块,使用C++设计并开发特征提取器程序,特征提取器流程框图如图4.15所示,输入为包含待所有待提取特征设计文件绝对或相对路径的Filelist,输出为包含特征的Fileli。使用C++14语言进行开发测试,从而完成自动多Case特征提取器的实现。</p><p>RTL语法特征提取器流程图</p><p>该自动化特征提取器,基本涵盖VerilogHDL的所有关键语法及在逻辑综合和技术映射中常用的重要语法信息。包括逻辑运算如(or、shift)的位宽信息、算术运算符的位宽信息、连续赋值运算的位宽信息、阻塞及非阻塞赋值运算的位宽信息、高级运算语法的解析如循环体、函数体、判断决策语句等。</p><p>数据集分析</p><p>数据集构建</p><p>由于机器学习本质上是使用大量的样本数据,通过计算机实现的数学模型,来探索并计算输入特征之间的数学关系,从而实现预测,所以需要使用大量的样本数据来构建数据集,所以我们使用300个Verilog HDL设计及其在Xilinx Vivado综合工具上综合后输出的资源利用率结果来作为基础数据集及预测标签。</p><p>VerilogHDL数据集来自GitHub、Opencore等开源网站,基本数据集涉及CPU、加法器、乘法器、GPU、机器学习等多种类型。部分数据集展示如表4.2所示,数据集主要描述描述数据如表4.3所示。</p><p>部分基本数据集数据图示</p><p>数据集基本概要</p><p>数据集分析</p><p>数据可视化</p><p>我们对数据集使用第四章构造的特征提取器进行特征提取后对数据进行可视化,将可以便于我们对数据进行进一步的分析,使用直方图来展示数据,如图4.16所示。</p><p>特征数据集直方图</p><p>相关性分析</p><p><em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.5、表4.6、表4.7所示的各个资源与RTL级特征间的皮尔逊相关系数。</p><p>特征热力图</p><p>RTL级特征与LUT资源的相关性数据</p><p>RTL级特征与FF资源的相关性数据</p><p>RTL级特征与BUFG资源的相关性数据</p><p>RTL级特征与IO资源的相关性数据</p><p>通过分析我们可以得到FPGA片上资源LUT对应的RTL级代码使用4.2节所述的特征提取器所提取的特征之间的相关性关系,我们可以发现较多特征与LUT、FF、BUFG、IO资源具有典型相关性,进一步验证了通过4.2节构造的特征提取器提取的特征基本符合第二章中逻辑综合原理与技术映射原理,证明该特征提取存在合理性,同时相关性分析也为我们下一步特征工程特征降维删除不相关体征提供参考及依据。</p><p>特征工程</p><p>本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。</p><p>特征预处理</p><p>数据清理</p><p>机器学习算法无法在存在缺失值的特征上来进行学习,但每次进行手动数据填补或清洗将带来巨大的人力损耗,所以我们可以基于流水线的方式,通过构造些自动化方法其完成对数据的清洗处理,首先就是对于数据存在缺失的情况,为解决它我们选用三种解决办法:</p><p>放弃这些数据缺失的区域;</p><p>放弃整个属性;</p><p>将确实的特征值或实际值以书记进行填充,比如0或者平均数、中位数等;</p><p>通过对预测目标和特征属性的分析,由于该特征目标为预测准确设计所需FPGA资源数值,所以对于数据存在缺失的数据类型,我们选择放弃这些数据缺失的数据,从而不对预测结果产生影响。</p><p>处理文本和分类属性</p><p>由于特征中可能存在除数值属性外的其余数据表达形式的特征,由于机器学习模型是数学模型,所以我们需要将文本数据属性和具有分类含义的数据属性进行抽象处理:</p><p>使用OrdinalEncoder顺序编码对文本属性进行编码;</p><p>使用OneHotEncoder独热编码对分类属性进行编码;</p><p>特征缩放</p><p>由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em><em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em><em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。</p><p>在机器学习领域最常用的同比例缩放所有属性特征的两种常用方法:</p><p>最小-最大缩放(归一化)</p><p>归一化的操作较为简单,即将样本数值重新处理后使其使其最终范围归于区间[0,1]之间,具体的实现方法是将该样本值减去样本数据集中的最小值比上样本最大值与样本最小值的差。</p><p>标准化方法</p><p>与归一化方法相比,标准化则完全不同,其本质将特征数据值先减去平均值,再与方差相除,进而使得特征数据具备满足单位方差的分布。</p><p>标准化方法与最小-最大缩放的典型区别与其优势便是标准化处理不会将输入的特征数值绑定到特定范围内,但是标准化方法对于异常值的敏感程度或受影响程度将会减小。</p><p>转换流水线</p><p>由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。</p><p>特征预处理流水线</p><p>当数据集经过特征预处理流水线处理后,完成基本特征工程便具备了进入模型进行训练的基础。经特征工程处理后最终输入特征张量为61*218,标签为使用Xilinx公司Vivado软件进行综合及布局布线后获得的准确资源利用率数值。</p><p>模型框架选择</p><p>模型训练开发流程</p><p>机器学习模型训练开发流程如图4.19所示,在完成数据分析,特征分析,特征工程后,我们需要先数据集进行划分选择合适的机器学习模型来进行预测,首先我们不知道选择哪种模型的时候,先对各种回归模型进行初步尝试,指标采用R2和RMSE进行评估,然后选择在初始参数及该特征下表现较好的模型框架进一步对模型参数进行配置。</p><p>我们分别使用线性回归、决策树、SVM向量机、随机森林、深度神经网络来对数据集进行初步的训练,从而选择出两种有前途的特种进行进一步的训练和微调从而实现我们的预测目标。</p><p>首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。</p><p>各模型尝试预测LUT资源结果</p><p>通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em></p><p>机器学习模型训练</p><p><em class='similar'>Keras是具有高度模块化且提供易用API的库的神经网络库。</em><em class='similar'>基于Python语言,</em><em class='similar'>能以TensorFlow 或Theano等为后端运行。</em></p><p>Keras 能够非常快速的搭建网络模型,以便迅速的将使用者的想法进行实现。基于上述目的Keras具有以下特征,首先,其可以在CPU与GPU上无缝的切换运行;第二,拥有非常简洁且友好的调用接口,减小了研究人员的工作量;第三,模块化设计,使用者可以根据需求非常方便的配置自己的模型;第四,支持支持任意的网络架构。基于上述的优势,本文选择 Keras作为机器学习的基本框架。</p><p>机器学习模型训练及调优流程</p><p>随机森林</p><p>本节在错误!未找到引用源。所尝试的随机森林模型的基础上对随机森林参数进行调优,并通过学习率曲线结合随机搜索与网格搜索对参数进行进一步优化,我们将主要调整影响度较大的n_estimators与max_depth参数用于寻找最优模型。RF模型进行训练、调优的流程如图4.21所示。</p><p>LUT资源模型训练</p><p>随机森林预测LUT模型参数搜索学习曲线</p><p>随机森林LUT预测模型学习曲线</p><p>依据图4.21所示对随机森林预测LUT模型进行训练,首先通过多次迭代依据借由随机森林模型提供的特征贡献度对特征进行二次调优,通过放弃贡献度较低的模型来提升模型准确度,最终输入张量为59*220。在完成特征二次调整的基础上对模型进行超参调整,主要参数n_estimators与max_depth的的学习曲线如图4.22所示,验证方法使用10折交叉验证,得到在n_estimators取33与max_depth取12时评价指标RMSE最优。</p><p>FF资源模型训练</p><p>随机森林预测FF特征搜索学习曲线</p><p>随机森林FF预测模型学习曲线</p><p>依据图4.21所示对随机森林预测FF模型进行训练,训练流程与4.7.2.2方法一致,通过迭代训练与参数调优,主要参数n_estimators与max_depth的的学习曲线如图4.24所示,验证方法使用10折交叉验证,得到在n_estimators取89与max_depth取7时评价指标RMSE最优。</p><p>人工神经网络</p><p>预测LUT资源模型训练</p><p>神经网络学习曲线,左图为超参数调优前学习曲线</p><p>依据图4.21所示流程图构建神经网络模型,为探究初始数据集在模型上的表现特征,通过对未进行超参数调整的模型进行1000训练可得如图4.26所示学习曲线,通过分析可发现初步训练模型存在过拟合情况,为解决过拟合情况,通过使用随机森林迭代构建的特征,并调整模型深度与宽度来解决该问题,分别使用随机搜索与网格搜索对模型隐藏层层数、神经元数、学习率及采样数进行调整,均采用5折交叉验证及提前终止回调用于终止搜索裁判,通过参数搜索可得神经网络模型如图4.27所示,神经网络包括输入及输出层、隐藏层共计6层,输入层宽度为59,由于为典型回归模型故输出层宽度为1,隐藏层共4层,对应神经元数分别为59、96、110、58,学习率使用搜索最佳学习率为0.000107,对模型进行200轮次训练。神经网络训练学习曲线如图4.28所示,通过观察学习曲线可以发现通过特征迭代与超参数调优已经解决过拟合问题,且拟合情况较好。</p><p>神经网络模型结构图</p><p>神经网络与LUT模型学习曲线</p><p>预测FF资源模型训练</p><p>依据图4.21所示流程图构建神经网络模型,使用神经网络模型预测FF资源的训练方法与4.7.2.1基本一致,分别通过随机搜索与网格搜索对神经网络模型进行空间搜索,得到如图4.29所示的神经网络结构,隐藏层共3层,对应神经元数分别为53、162、27,学习率使用搜索最佳学习率为0.00013,对模型进行235轮次训练。神经网络学习曲线如图4.30所示,我们可以发现模型训练曲线拟合度较好并未出现明显的过或欠拟合情况。</p><p>神经网络模型结构图</p><p>神经网络模型预测FF资源学习曲线</p><p>结果与分析</p><p>机器学习模型验证结果</p><p>模型评估</p><p>图4.31为机器学习模型在验证集上预测值与基准值的验证结果,X轴为验证集的准确值,Y轴为预测值。图(a)、图(b)分别为使用随机森林模型对LUT资源、FF资源进行预测的验证结果,图(c)、图(d)为人工神经网络模型对LUT资源、FF资源进行预测的验证结果。各模型验证集评估指标如表4.8所示,结合R方评估指标与图4.31我们可以发现机器学习模型在4.3节中构造的特征提取器的基础上得到了较好的拟合结果,验证了对VerilogHDL语言特取的特征对LUT与FF资源的预测有较好的数学描述。但同时也能发现在LUT、FF资源的预测上人工神经网络这种对非线性特征的学习能力较高的模型表现结果优于随机森林,对LUT预测和FF分别的模型确定性系数达73.4%、85.06%,证明模型已经可以较好的描述特征所代表的数学意义,同时均方根误差对LUT、FF资源分别为和。我们在测试数据集的基础上选取了模型评价指标较高的模型的结果进行分析,结果表明,在使用随机森林对RTL级设计RTL特征进行资源估算后与基准值进行对比,达到了31.3391、13.2000误差的精度,得到了一个较为满意的结果,同时由于该模型预测结果面向为高密度原型验证系统,主要应用于RTL-Partition阶段,基于其对FPGA片上资源利用��存在阈值,即常规情况下划分结果平均占用FPGA资源的50%~70%,且在划分系统程序中可以通过设定资源阈值控制来调整误差,所以当前模型输出的结果基本符合高密度FPGA原型验证系统的需求,同时除去精度外其更加聚焦于时间性能上的提升,通过统计RF、MLP的模型预测时间,我们可以明显看到机器学习在时间性能方面的巨大优势。</p><p>本章小结</p><p>本章叙述了本文中面向机器学习进行资源估算中最为重要的一部分,本章通过结合第二章所述的特征提取方法,通过对Verilog HDL语言分析,结合其语法在逻辑综合、技术映射上的特征关系,完成特征提取器的设计,通过C++完成开发,实现对RTL级代码的特征提取,为下一步建立机器学习模型的建立打好基础。</p><p>并提出了使用机器学习来进行RTL设计在RTL级对其所需FPGA片上资源估算的方法,在对原始数据集进行特征缩放、特征标准化、特征降维等特征工程处理后分别使用RF、MLP进行回归预测,叙述了对多种机器学习模型在标准参数下对使用文本方法所构建的数据集的预测性能表现及对随机森林、深度神经网络进行进一步预测、参数微调等方法及结果的叙述,最终我们得到了对RTL级设计FPGA片上资源利用率预测符合预期且合理的模型。</p>"},{"chapter":"总结与展望","word_count":1545,"word_similar_count":0,"sources":[],"similarity":0,"similarityPercentage":"0.0%","text":"<p>工作总结</p><p>本文的主要研究方向集中在高密度FPGA原型验证系统软件设计CAD流程中的划分阶段的资源估算领域,研究主要面向的是超大型的SoC设计的RTL级描述,研究主要分为三个方面:首先介绍了原型验证流程中FPGA的设计综合流程,包括逻辑综合原理,逻辑综合中Verilog HDL语法对应的逻辑综合原则,技术映射原理,现阶段工业界常用技术映射算法的描述,其次基于该原理结合高密度FPGA原型验证系统划分阶段需求设计并实现了快速资源估算模型,最后提出在EDA软件中结合机器学习方法,将资源估算与机器学习相结合,最终实现以下内容:</p><p>1、实现以传统思路框架为基础的快速资源估算模型,用户输入RTL级设计即可以快速得到设计所需要得FPGA片上资源数量如LUT、FF、BUFG等资源,有效提升了在超大型集成电路设计原型验证RTL划分阶段的迭代速度。</p><p>2、并在此基础上加入了合理的LUT优化算法,Bottom-To-Up算法,使该快速资源估算模型更加匹配实际划分需求及面向不同设计种类的优化方法及面向不同需求的优化方法,并增加可复用资源结构定义,并支持用户自定义功能user-define,使得原型验证划分阶段的迭代速度和实用性得到显著提升,有效提升约2.2倍,由于自主开发故拥有完善的C++输入输出接口,可集成在商业软件中,且实际应用至Player-Pro RTL Partition工业商用软件中,并在实际客户应用场景中得到检验。</p><p>3、以EDA与机器学习相结合的思路,结合逻辑综合及技术映射原理,构建面向RTL级集成电路行为描述的特征提取器,以Xilinx EDA设计软件为标签,尝试训练了线性回归、决策树、SVM、随机森林、人工神经网络等多种机器学习模型,使运行速率提升15倍,平均准确度达75%,同时验证了EDA软件与人工智能相结合的可行性,进一步提升了在超大规模集成电路设计FPGA原型验证的划分阶段的迭代速度,为EDA与原型验证流程相结合的研究打下基础。</p><p>通过以上三点,本文论述的工作为我国自主研发EDA与高密度FPGA原型验证系统的RTLPartition提供了可使用的工程软件,并在使用机器学习对从RTL级设计出发进行FPGA资源估算领域填补了空白。同时也为EDA软件与人工智能的结合验证了可行性。</p><p>工作展望</p><p>面向RTL级设计的FPGA快速资源估算问题结合了图论、可行性问题、逻辑分解、逻辑优化等众多方面特性,具有一定挑战性,随着设计规模的逐渐增大,在验证方面的需求特性也在增加,如何能有效的快速且准确的得到RTL设计所需的FPGA片上资源,并能有效合理的支持原型验证系统的RTL-Partition划分是未来EDA流程中将面临的一大问题。</p><p>本文虽在这方面做了一些研究和实现,但仍需在一下方面做出进一步的改进:</p><p>1.目前虽然实现快速资源估算模型,并增加了符合实际映射原理的优化及约束选项,但是在特殊的FPGA板上器件映射计算方面依然存在较大误差,如BRAM、LUTRAM等先进器件,所以可以考虑后续在这方面增加进一步的研究,使得资源估算更加精确。</p><p>2.虽然在本文中验证了机器学习方法与资源估算相结合的可行性,但是还处于初步阶段,精确度及估算器件类型上还有待增加,如可参照文章【】中提到的多级估算方法,将初步得到的一般器件估算结果进行二级抽象,得到更高级别的资源类型。</p><p>3.在面向资源估算的机器学习模型中增加更高层级抽象特征,增加实际模型泛化率,可参照文章【】利用HLS高层次综合方法快速构建样本设计从而增加模型训练样本数量,使得机器学习模型的泛化程度更高更有效。</p><p>4.神经网络资源估算模型还可以进一步增加不同设计在不同约束下进行综合的样本,使得机器学习模型可以支撑不同约束下的资源估算结果,如面积优化、功率优化等约束选项。</p>"}],"similarity":0.176,"last_part_similar_count":6187,"similarityPercentage":"17.6%","chapter_similar_count":2,"chapter_min_similar_word_count":302,"front_part_similar_count":1709},"tasktype":0,"word_similar_count":7896,"author":"张曦","IP":"10.42.171.137","source_max_similar_count":1301,"PID":"1@similar-service-cn-part-57b48b7784-rwvfv","source_max_similar_similarity":0.029,"report_online_check_comparison":{"word_pro_count":0,"similarity_ref":0,"word_ref_count":0,"word_similar_count":7896,"word_custom_count":0,"chapters":[{"word_pro_count":0,"similarity_ref":0,"chapter":"中英文摘要等","word_similar_count":302,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000202562427011","author":"","similarity":0.023,"similar_word_count":86,"self":false,"source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000142555028611","author":"","similarity":0.016,"similar_word_count":61,"self":false,"source":"网页","title":"微网·微波论坛·ads P21_32-by_bubulong_文档库","url":"http://www.wendangku.net/doc/f7a6c619c5da50e2524d7ffd.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000132163561611","author":"","similarity":0.015,"similar_word_count":57,"self":false,"source":"网页","title":"GBT - 信息安全技术 安全处理器技术规范 - 道客巴巴","url":"http://www.doc88.com/p%2D9866157742471.html"},{"reference":false,"teacher":"","year":"2004","datatype":"book","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.014,"similar_word_count":55,"self":false,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000458370111","author":"","similarity":0.013,"similar_word_count":50,"self":false,"source":"大学生论文联合库","title":"基于遗传算法的汽车电气故障诊断研究","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000203081199911","author":"","similarity":0.012,"similar_word_count":47,"self":false,"source":"网页","title":"一种字典更新方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011335384.html"},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000427064411","author":"周燕美","similarity":0.012,"similar_word_count":47,"self":false,"source":"大学生论文联合库","title":"中药质量控制方法","url":""},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000368749211","author":"","similarity":0.012,"similar_word_count":45,"self":false,"source":"大学生论文联合库","title":"电力系统中的变压器","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000133380057111","author":"","similarity":0.012,"similar_word_count":45,"self":false,"source":"网页","title":"基于FPGA的人脸识别算法及其实现 - 道客巴巴","url":"http://www.doc88.com/p%2D0032550396430.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000133699744011","author":"","similarity":0.012,"similar_word_count":44,"self":false,"source":"网页","title":"使用混合式分裂束激光划线处理及等离子体蚀刻的晶圆切割的制作方法","url":"http://www.xjishu.com/zhuanli/59/201280038309.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000203132291211","author":"","similarity":0.012,"similar_word_count":44,"self":false,"source":"网页","title":"内窥镜用处理器、程序、信息处理方法和信息处理装置与流程","url":"http://www.xjishu.com/zhuanli/55/202080019466.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000186245429911","author":"","similarity":0.011,"similar_word_count":43,"self":false,"source":"网页","title":"多重编解码器编码器及多重编解码器编码系统","url":"http://www.doc88.com/p%2D31073366987892.html"},{"reference":false,"teacher":"","year":"1997","datatype":"book","docid":"1900023554017211","author":"胡乾斌等著","similarity":0.01,"similar_word_count":39,"self":false,"source":"武汉：华中理工大学出版社","title":"数字集成电子技术基础","url":""}],"similarity_pro":0,"word_copy_count":302,"word_self_count":0,"similar_paragraphs":[{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000202562427011","author":"","university":"","source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html","reference":false,"similarScore":176.3443,"teacher":"","textWithDynamicClass":"ns,gsm)数据的通信方法和相关装置。背景技术:2.目前,<em class='similar 1S2I7' onmouseover=\"highlightSetter('1S2I7',false)\" onmouseout=\"highlightSetter('1S2I7',true)\">无线回传一体化基站多采用专用集成电路</em><em class='similar 1S2I8' onmouseover=\"highlightSetter('1S2I8',false)\" onmouseout=\"highlightSetter('1S2I8',true)\">(application-specific integrated circuit,</em>asic)片上系统","datatype":"webpage","clcs":[],"similarityPercentage":"60.3%","self":false,"text":"ns,gsm)数据的通信方法和相关装置。背景技术:2.目前,<em class='similar'>无线回传一体化基站多采用专用集成电路</em><em class='similar'>(application-specific integrated circuit,</em>asic)片上系统"}],"textWithDynamicClass":"<em class='similar T0I0' onmouseover=\"highlightSetter('T0I0',false)\" onmouseout=\"highlightSetter('T0I0',true)\">ASIC \t\tApplication Specific Integrated Circuit\t\t专用集成电路</em>","similar_word_count":15,"text":"<em class='similar'>ASIC \t\tApplication Specific Integrated Circuit\t\t专用集成电路</em>","suggest":{"synonyms":[],"keyword":["专用集成电路"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000202562427011","author":"","university":"","source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html","reference":false,"similarScore":176.3443,"teacher":"","textWithDynamicClass":"(application-specific integrated circuit,asic)<em class='similar 1S2I10' onmouseover=\"highlightSetter('1S2I10',false)\" onmouseout=\"highlightSetter('1S2I10',true)\">片上系统</em><em class='similar 1S2I11' onmouseover=\"highlightSetter('1S2I11',false)\" onmouseout=\"highlightSetter('1S2I11',true)\">(system-on-a-chip,</em>soc)芯片设计。通常来说,该芯片可以集成长期演进","datatype":"webpage","clcs":[],"similarityPercentage":"56.8%","self":false,"text":"(application-specific integrated circuit,asic)<em class='similar'>片上系统</em><em class='similar'>(system-on-a-chip,</em>soc)芯片设计。通常来说,该芯片可以集成长期演进"}],"textWithDynamicClass":"ASIC \t\tApplication Specific Integrated Circuit\t\t专用集成电路<em class='similar T0I1' onmouseover=\"highlightSetter('T0I1',false)\" onmouseout=\"highlightSetter('T0I1',true)\">SoC System on Chip 片上系统</em>","similar_word_count":9,"text":"ASIC \t\tApplication Specific Integrated Circuit\t\t专用集成电路<em class='similar'>SoC System on Chip 片上系统</em>","suggest":{"synonyms":[],"keyword":["片上系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203081199911","author":"","university":"","source":"网页","title":"一种字典更新方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011335384.html","reference":false,"similarScore":158.66666,"teacher":"","textWithDynamicClass":"grammable logic device,简称cpld)<em class='similar 2S4I6' onmouseover=\"highlightSetter('2S4I6',false)\" onmouseout=\"highlightSetter('2S4I6',true)\">,现场可编程逻辑门阵列</em><em class='similar 2S4I7' onmouseover=\"highlightSetter('2S4I7',false)\" onmouseout=\"highlightSetter('2S4I7',true)\">(field-programmable gate array,</em>简称fpga),通用阵列逻辑(generic ar","datatype":"webpage","clcs":[],"similarityPercentage":"51.6%","self":false,"text":"grammable logic device,简称cpld)<em class='similar'>,现场可编程逻辑门阵列</em><em class='similar'>(field-programmable gate array,</em>简称fpga),通用阵列逻辑(generic ar"}],"textWithDynamicClass":"<em class='similar T1I0' onmouseover=\"highlightSetter('T1I0',false)\" onmouseout=\"highlightSetter('T1I0',true)\">FPGA\t\tField Programmable Gate Array\t\t\t现场可编程逻辑门阵列</em>","similar_word_count":18,"text":"<em class='similar'>FPGA\t\tField Programmable Gate Array\t\t\t现场可编程逻辑门阵列</em>","suggest":{"synonyms":[],"keyword":["现场可编程逻辑门阵列"]}},{"sources":[{"profession":false,"keywords":[],"year":"1997","docid":"1900023554017211","author":"胡乾斌等著","university":"","source":"武汉：华中理工大学出版社","title":"数字集成电子技术基础","url":"","reference":false,"similarScore":133.57141,"teacher":"","textWithDynamicClass":"类集成存储器用于存放二值信息,按使用功能可分为:读写存储器,<em class='similar 7S17I6' onmouseover=\"highlightSetter('7S17I6',false)\" onmouseout=\"highlightSetter('7S17I6',true)\">又称为随机存取存储器RAM</em><em class='similar 7S17I7' onmouseover=\"highlightSetter('7S17I7',false)\" onmouseout=\"highlightSetter('7S17I7',true)\">(Random Access Memory )</em>;只读存储器 ROM (Read Only Mem","datatype":"book","clcs":[],"similarityPercentage":"52.2%","self":false,"text":"类集成存储器用于存放二值信息,按使用功能可分为:读写存储器,<em class='similar'>又称为随机存取存储器RAM</em><em class='similar'>(Random Access Memory )</em>;只读存储器 ROM (Read Only Mem"}],"textWithDynamicClass":"<em class='similar T6I0' onmouseover=\"highlightSetter('T6I0',false)\" onmouseout=\"highlightSetter('T6I0',true)\">RAM\t\tRandom Access Memory\t\t\t\t随机存取存储器</em>","similar_word_count":14,"text":"<em class='similar'>RAM\t\tRandom Access Memory\t\t\t\t随机存取存储器</em>","suggest":{"synonyms":[],"keyword":["随机存取存储器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000133699744011","author":"","university":"","source":"网页","title":"使用混合式分裂束激光划线处理及等离子体蚀刻的晶圆切割的制作方法","url":"http://www.xjishu.com/zhuanli/59/201280038309.html","reference":false,"similarScore":203.57141,"teacher":"","textWithDynamicClass":"SDRAM)或 Rambus DRAM (RDRAM)<em class='similar 8S20I3' onmouseover=\"highlightSetter('8S20I3',false)\" onmouseout=\"highlightSetter('8S20I3',true)\">等等的动态随机存取存储器</em>(dynamic random access memory ;DRAM))、静态存储器906(例如:快闪存储器、<em class='similar 8S20I9' onmouseover=\"highlightSetter('8S20I9',false)\" onmouseout=\"highlightSetter('8S20I9',true)\">静态随机存取存储器</em><em class='similar 8S20I10' onmouseover=\"highlightSetter('8S20I10',false)\" onmouseout=\"highlightSetter('8S20I10',true)\">(static random access memory;</em>SRAM)等等)、及辅助存储器918(例如:数据","datatype":"webpage","clcs":[],"similarityPercentage":"53.5%","self":false,"text":"SDRAM)或 Rambus DRAM (RDRAM)<em class='similar'>等等的动态随机存取存储器</em>(dynamic random access memory ;DRAM))、静态存储器906(例如:快闪存储器、<em class='similar'>静态随机存取存储器</em><em class='similar'>(static random access memory;</em>SRAM)等等)、及辅助存储器918(例如:数据"},{"profession":false,"keywords":[],"year":"","docid":"9000186245429911","author":"","university":"","source":"网页","title":"多重编解码器编码器及多重编解码器编码系统","url":"http://www.doc88.com/p%2D31073366987892.html","reference":false,"similarScore":231.47615,"teacher":"","textWithDynamicClass":"220。[0069]第一存储器140可被实施为易失性存储器,<em class='similar 8S19I5' onmouseover=\"highlightSetter('8S19I5',false)\" onmouseout=\"highlightSetter('8S19I5',true)\">例如静态随机存取存储器</em><em class='similar 8S19I6' onmouseover=\"highlightSetter('8S19I6',false)\" onmouseout=\"highlightSetter('8S19I6',true)\">(static random  access  memory,</em>SRAM)。易失性存储器可被实施为随机存取存储器(random  access memory,RAM)、<em class='similar 8S19I11' onmouseover=\"highlightSetter('8S19I11',false)\" onmouseout=\"highlightSetter('8S19I11',true)\">静态随机存取存储器</em><em class='similar 8S19I12' onmouseover=\"highlightSetter('8S19I12',false)\" onmouseout=\"highlightSetter('8S19I12',true)\">(static </em>","datatype":"webpage","clcs":[],"similarityPercentage":"26.7%","self":false,"text":"220。[0069]第一存储器140可被实施为易失性存储器,<em class='similar'>例如静态随机存取存储器</em><em class='similar'>(static random  access  memory,</em>SRAM)。易失性存储器可被实施为随机存取存储器(random  access memory,RAM)、<em class='similar'>静态随机存取存储器</em><em class='similar'>(static </em>"}],"textWithDynamicClass":"<em class='similar T7I0' onmouseover=\"highlightSetter('T7I0',false)\" onmouseout=\"highlightSetter('T7I0',true)\">SRAM\t\tStatic Random Access Memory\t\t\t静态随机存取存储器</em>","similar_word_count":18,"text":"<em class='similar'>SRAM\t\tStatic Random Access Memory\t\t\t静态随机存取存储器</em>","suggest":{"synonyms":[],"keyword":["静态随机存取存储器"]}},{"sources":[{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":123.52942,"teacher":"","textWithDynamicClass":"或为某事项处理而翻转其值时,该属性建立一个BIT类型的信号。<em class='similar 9S21I8' onmouseover=\"highlightSetter('9S21I8',false)\" onmouseout=\"highlightSetter('9S21I8',true)\">第三章 Verilog 结构 HDL是硬件描述语言</em><em class='similar 9S21I9' onmouseover=\"highlightSetter('9S21I9',false)\" onmouseout=\"highlightSetter('9S21I9',true)\">(Hardware Description Language)</em>的缩写。HDL有多种,但最流行和通用的只有 Ver","datatype":"book","clcs":[],"similarityPercentage":"54.8%","self":false,"text":"或为某事项处理而翻转其值时,该属性建立一个BIT类型的信号。<em class='similar'>第三章 Verilog 结构 HDL是硬件描述语言</em><em class='similar'>(Hardware Description Language)</em>的缩写。HDL有多种,但最流行和通用的只有 Ver"}],"textWithDynamicClass":"<em class='similar T8I0' onmouseover=\"highlightSetter('T8I0',false)\" onmouseout=\"highlightSetter('T8I0',true)\">HDL\t\tHardware Description Language\t\t\t硬件描述语言</em>","similar_word_count":13,"text":"<em class='similar'>HDL\t\tHardware Description Language\t\t\t硬件描述语言</em>","suggest":{"synonyms":[],"keyword":["硬件描述语言"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000142555028611","author":"","university":"","source":"网页","title":"微网·微波论坛·ads P21_32-by_bubulong_文档库","url":"http://www.wendangku.net/doc/f7a6c619c5da50e2524d7ffd.html","reference":false,"similarScore":139.99997,"teacher":"","textWithDynamicClass":"ffd.htmlrf-射频(Radio Frequency)<em class='similar 11S27I6' onmouseover=\"highlightSetter('11S27I6',false)\" onmouseout=\"highlightSetter('11S27I6',true)\">eda-电子设计自动化</em><em class='similar 11S27I7' onmouseover=\"highlightSetter('11S27I7',false)\" onmouseout=\"highlightSetter('11S27I7',true)\">(Electronic Design Automation)</em>","datatype":"webpage","clcs":[],"similarityPercentage":"52.2%","self":false,"text":"ffd.htmlrf-射频(Radio Frequency)<em class='similar'>eda-电子设计自动化</em><em class='similar'>(Electronic Design Automation)</em>"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000368749211","author":"","university":"","source":"大学生论文联合库","title":"电力系统中的变压器","url":"","reference":false,"similarScore":126.29631,"teacher":"","textWithDynamicClass":";(3)具有很强的移植能力;(4)设计描述与器件无关;(5)<em class='similar 11S28I12' onmouseover=\"highlightSetter('11S28I12',false)\" onmouseout=\"highlightSetter('11S28I12',true)\">程序易于共享和复用2.2 EDA技术 EDA是世纪电子设计自动化</em><em class='similar 11S28I13' onmouseover=\"highlightSetter('11S28I13',false)\" onmouseout=\"highlightSetter('11S28I13',true)\">(Electronic Design Automation)</em>的缩写,在20世纪90年代初从计算机辅助设计(CA","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"52.2%","self":false,"text":";(3)具有很强的移植能力;(4)设计描述与器件无关;(5)<em class='similar'>程序易于共享和复用2.2 EDA技术 EDA是世纪电子设计自动化</em><em class='similar'>(Electronic Design Automation)</em>的缩写,在20世纪90年代初从计算机辅助设计(CA"}],"textWithDynamicClass":"<em class='similar T10I0' onmouseover=\"highlightSetter('T10I0',false)\" onmouseout=\"highlightSetter('T10I0',true)\">EDA\t\tElectronic Design Automation\t\t\t电子设计自动化</em>","similar_word_count":14,"text":"<em class='similar'>EDA\t\tElectronic Design Automation\t\t\t电子设计自动化</em>","suggest":{"synonyms":[],"keyword":["电子设计自动化"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203132291211","author":"","university":"","source":"网页","title":"内窥镜用处理器、程序、信息处理方法和信息处理装置与流程","url":"http://www.xjishu.com/zhuanli/55/202080019466.html","reference":false,"similarScore":97.777794,"teacher":"","textWithDynamicClass":"进行了说明,但是学习模型9并不限定于nn,也可以是利用svm<em class='similar 12S30I8' onmouseover=\"highlightSetter('12S30I8',false)\" onmouseout=\"highlightSetter('12S30I8',true)\">(support vector machine,</em><em class='similar 12S30I9' onmouseover=\"highlightSetter('12S30I9',false)\" onmouseout=\"highlightSetter('12S30I9',true)\">支持向量机)</em>、贝叶斯网络、回归树等其他学习算法来构建的学习模型","datatype":"webpage","clcs":[],"similarityPercentage":"74.5%","self":false,"text":"进行了说明,但是学习模型9并不限定于nn,也可以是利用svm<em class='similar'>(support vector machine,</em><em class='similar'>支持向量机)</em>、贝叶斯网络、回归树等其他学习算法来构建的学习模型"},{"profession":false,"keywords":[],"year":"","docid":"9000133380057111","author":"","university":"","source":"网页","title":"基于FPGA的人脸识别算法及其实现 - 道客巴巴","url":"http://www.doc88.com/p%2D0032550396430.html","reference":false,"similarScore":92.44444,"teacher":"","textWithDynamicClass":"题得以顺利解决。在这之后,更多2D人脸识别算法也被相应提出,<em class='similar 12S29I6' onmouseover=\"highlightSetter('12S29I6',false)\" onmouseout=\"highlightSetter('12S29I6',true)\">其中支持向量机</em><em class='similar 12S29I7' onmouseover=\"highlightSetter('12S29I7',false)\" onmouseout=\"highlightSetter('12S29I7',true)\">(Support Vector Machine,</em>SVM)是最为突出的15‘7J。相比于国外,国内的","datatype":"webpage","clcs":[],"similarityPercentage":"57.7%","self":false,"text":"题得以顺利解决。在这之后,更多2D人脸识别算法也被相应提出,<em class='similar'>其中支持向量机</em><em class='similar'>(Support Vector Machine,</em>SVM)是最为突出的15‘7J。相比于国外,国内的"}],"textWithDynamicClass":"<em class='similar T11I0' onmouseover=\"highlightSetter('T11I0',false)\" onmouseout=\"highlightSetter('T11I0',true)\">SVM\t\tSupport Vector Machine\t\t\t\t\t支持向量机</em>","similar_word_count":12,"text":"<em class='similar'>SVM\t\tSupport Vector Machine\t\t\t\t\t支持向量机</em>","suggest":{"synonyms":[],"keyword":["支持向量机"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000427064411","author":"周燕美","university":"","source":"大学生论文联合库","title":"中药质量控制方法","url":"","reference":false,"similarScore":215.99997,"teacher":"","textWithDynamicClass":"3.898%的信息。层次聚类分析将样品聚成了4类。1.4.2<em class='similar 14S34I6' onmouseover=\"highlightSetter('14S34I6',false)\" onmouseout=\"highlightSetter('14S34I6',true)\">人工神经网络</em><em class='similar 14S34I7' onmouseover=\"highlightSetter('14S34I7',false)\" onmouseout=\"highlightSetter('14S34I7',true)\">( Artificial Neural Network,</em> ANN )<em class='similar 14S34I9' onmouseover=\"highlightSetter('14S34I9',false)\" onmouseout=\"highlightSetter('14S34I9',true)\">人工神经网络</em><em class='similar 14S34I10' onmouseover=\"highlightSetter('14S34I10',false)\" onmouseout=\"highlightSetter('14S34I10',true)\">( Artificial Neural Network,</em>ANN )最早于1940年—1950年提出来的一","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"54.8%","self":false,"text":"3.898%的信息。层次聚类分析将样品聚成了4类。1.4.2<em class='similar'>人工神经网络</em><em class='similar'>( Artificial Neural Network,</em> ANN )<em class='similar'>人工神经网络</em><em class='similar'>( Artificial Neural Network,</em>ANN )最早于1940年—1950年提出来的一"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000458370111","author":"","university":"","source":"大学生论文联合库","title":"基于遗传算法的汽车电气故障诊断研究","url":"","reference":false,"similarScore":107.999985,"teacher":"","textWithDynamicClass":",主要包括:专家系统(Expert System,,ES)、<em class='similar 14S33I7' onmouseover=\"highlightSetter('14S33I7',false)\" onmouseout=\"highlightSetter('14S33I7',true)\">人工神经网络</em><em class='similar 14S33I8' onmouseover=\"highlightSetter('14S33I8',false)\" onmouseout=\"highlightSetter('14S33I8',true)\">(Artificial Neural Network,</em>ANN)、贝叶斯网络(Bayesian Netwo","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"54.8%","self":false,"text":",主要包括:专家系统(Expert System,,ES)、<em class='similar'>人工神经网络</em><em class='similar'>(Artificial Neural Network,</em>ANN)、贝叶斯网络(Bayesian Netwo"}],"textWithDynamicClass":"<em class='similar T13I0' onmouseover=\"highlightSetter('T13I0',false)\" onmouseout=\"highlightSetter('T13I0',true)\">ANN\t\tArtificial Neural Network\t\t\t\t人工神经网络</em>","similar_word_count":13,"text":"<em class='similar'>ANN\t\tArtificial Neural Network\t\t\t\t人工神经网络</em>","suggest":{"synonyms":[],"keyword":["人工神经网络"]}}],"word_count":3814,"similarity":0.079,"similarity_copy":0.079,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"绪论","word_similar_count":7594,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","year":"2009","datatype":"book","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.045,"similar_word_count":1776,"self":false,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000138222351111","author":"","similarity":0.031,"similar_word_count":1232,"self":false,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000183161741911","author":"","similarity":0.019,"similar_word_count":742,"self":false,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000120761737511","author":"","similarity":0.013,"similar_word_count":497,"self":false,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","year":"2004","datatype":"book","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.011,"similar_word_count":447,"self":false,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000183209387311","author":"","similarity":0.009,"similar_word_count":358,"self":false,"source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1"},{"reference":false,"teacher":"","year":"2002","datatype":"book","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"similar_word_count":285,"self":false,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000191300761211","author":"","similarity":0.007,"similar_word_count":278,"self":false,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","year":"2017","datatype":"book","docid":"1900023845356311","author":"陈海虹","similarity":0.006,"similar_word_count":245,"self":false,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000079599488811","author":"","similarity":0.006,"similar_word_count":224,"self":false,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000138838221611","author":"","similarity":0.004,"similar_word_count":158,"self":false,"source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000135249839711","author":"","similarity":0.004,"similar_word_count":146,"self":false,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000135414128511","author":"","similarity":0.004,"similar_word_count":142,"self":false,"source":"网页","title":"数学分类","url":"https://blog.csdn.net/qq_30815237/article/details/88739072"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000139313011911","author":"","similarity":0.004,"similar_word_count":141,"self":false,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000105741580511","author":"","similarity":0.003,"similar_word_count":138,"self":false,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000160699485011","author":"","similarity":0.003,"similar_word_count":138,"self":false,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000010354498311","author":"","similarity":0.003,"similar_word_count":138,"self":false,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","year":"2018","datatype":"journal","docid":"1000027943830211","author":"钟海燕;李玲;麦雄发;王雨","similarity":0.003,"similar_word_count":136,"self":false,"source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000203566665711","author":"","similarity":0.003,"similar_word_count":135,"self":false,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000126492999811","author":"","similarity":0.003,"similar_word_count":130,"self":false,"source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"similar_word_count":130,"self":false,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","year":"2011","datatype":"book","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","similarity":0.003,"similar_word_count":128,"self":false,"source":"","title":"Verilog HDL数字系统设计及实践","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000117978237811","author":"","similarity":0.003,"similar_word_count":128,"self":false,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000135879019911","author":"","similarity":0.003,"similar_word_count":128,"self":false,"source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000128075291811","author":"","similarity":0.003,"similar_word_count":127,"self":false,"source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000118484198911","author":"","similarity":0.003,"similar_word_count":119,"self":false,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000178176625511","author":"","similarity":0.003,"similar_word_count":116,"self":false,"source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000031722729511","author":"","similarity":0.003,"similar_word_count":106,"self":false,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000016047965011","author":"","similarity":0.003,"similar_word_count":106,"self":false,"source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000181730880511","author":"","similarity":0.003,"similar_word_count":102,"self":false,"source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000186521686911","author":"","similarity":0.002,"similar_word_count":98,"self":false,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000015763116111","author":"","similarity":0.002,"similar_word_count":98,"self":false,"source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848"},{"reference":false,"teacher":"","year":"2009","datatype":"book","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"similar_word_count":97,"self":false,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000082030621911","author":"","similarity":0.002,"similar_word_count":96,"self":false,"source":"网页","title":"Verilog程序如何优化减少逻辑单元的使用数量","url":"https://blog.csdn.net/u010173859/article/details/17511749"},{"reference":false,"teacher":"","year":"","datatype":"wiki","docid":"9100005028085811","author":"","similarity":0.002,"similar_word_count":91,"self":false,"source":"百科","title":"Verilog HDL","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000181240768511","author":"","similarity":0.002,"similar_word_count":88,"self":false,"source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000208370017111","author":"","similarity":0.002,"similar_word_count":85,"self":false,"source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000128720481111","author":"","similarity":0.002,"similar_word_count":85,"self":false,"source":"网页","title":"西瓜书学习笔记——第八章：集成学习_Andrewings-CSDN博客","url":"https://blog.csdn.net/shichensuyu/article/details/93312974"},{"reference":false,"teacher":"","year":"2020","datatype":"journal","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"similar_word_count":81,"self":false,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000179218349411","author":"","similarity":0.002,"similar_word_count":80,"self":false,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000138505610111","author":"","similarity":0.002,"similar_word_count":78,"self":false,"source":"网页","title":"随机森林算法梳理_sanpang2288的博客-CSDN博客","url":"https://blog.csdn.net/sanpang2288/article/details/89024781"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000107466903911","author":"csdn","similarity":0.002,"similar_word_count":76,"self":false,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000099531543111","author":"","similarity":0.002,"similar_word_count":74,"self":false,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000185145501211","author":"","similarity":0.002,"similar_word_count":73,"self":false,"source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000191352255511","author":"","similarity":0.002,"similar_word_count":72,"self":false,"source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000184235326811","author":"","similarity":0.002,"similar_word_count":72,"self":false,"source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html"},{"reference":false,"teacher":"","year":"2020","datatype":"journal","docid":"1000029360914111","author":"冯静达;焦学军;李启杰;郭娅美;杨涵钧;楚洪祚","similarity":0.002,"similar_word_count":72,"self":false,"source":"航天医学与医学工程","title":"基于心率和呼吸特征结合的睡眠分期研究","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000139286381511","author":"","similarity":0.002,"similar_word_count":72,"self":false,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000141550370811","author":"","similarity":0.002,"similar_word_count":71,"self":false,"source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000189446884611","author":"","similarity":0.002,"similar_word_count":70,"self":false,"source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html"},{"reference":false,"teacher":"","year":"2016","datatype":"unionThesisLibrary","docid":"2200000941227311","author":"","similarity":0.002,"similar_word_count":70,"self":false,"source":"大学生论文联合库","title":"光学计算机程序设计","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000015758038411","author":"","similarity":0.002,"similar_word_count":70,"self":false,"source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f"},{"reference":false,"teacher":"","year":"2016","datatype":"unionThesisLibrary","docid":"2200000798956911","author":"JXT","similarity":0.002,"similar_word_count":70,"self":false,"source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":""},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000524795711","author":"-","similarity":0.002,"similar_word_count":69,"self":false,"source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000110384254911","author":"","similarity":0.002,"similar_word_count":69,"self":false,"source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000017085073411","author":"","similarity":0.002,"similar_word_count":68,"self":false,"source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000207907782911","author":"","similarity":0.002,"similar_word_count":66,"self":false,"source":"网页","title":"逻辑综合中的工艺映射算法研究","url":"https://www.docin.com/p%2D851853545.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000015681295811","author":"","similarity":0.002,"similar_word_count":66,"self":false,"source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000192630159511","author":"","similarity":0.002,"similar_word_count":65,"self":false,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","year":"2015","datatype":"unionThesisLibrary","docid":"2200000669311311","author":"戚薏","similarity":0.002,"similar_word_count":65,"self":false,"source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000180302201811","author":"","similarity":0.002,"similar_word_count":64,"self":false,"source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html"},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000437751211","author":"","similarity":0.002,"similar_word_count":64,"self":false,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000189917812511","author":"","similarity":0.002,"similar_word_count":63,"self":false,"source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000195223375811","author":"","similarity":0.002,"similar_word_count":63,"self":false,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","year":"2001","datatype":"journal","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"similar_word_count":62,"self":false,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000138770563211","author":"","similarity":0.002,"similar_word_count":62,"self":false,"source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html"},{"reference":false,"teacher":"","year":"2001","datatype":"journal","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"similar_word_count":60,"self":false,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000055409152011","author":"","similarity":0.002,"similar_word_count":60,"self":false,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000177068394911","author":"","similarity":0.002,"similar_word_count":60,"self":false,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000082132296211","author":"","similarity":0.001,"similar_word_count":59,"self":false,"source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463"},{"reference":false,"teacher":"","year":"2017","datatype":"book","docid":"1900023653559711","author":"何海群著","similarity":0.001,"similar_word_count":59,"self":false,"source":"","title":"零起点  Python足彩大数据与机器学习实盘分析","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000079748404511","author":"","similarity":0.001,"similar_word_count":59,"self":false,"source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000190761327111","author":"","similarity":0.001,"similar_word_count":59,"self":false,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000146036562311","author":"","similarity":0.001,"similar_word_count":58,"self":false,"source":"网页","title":"选择题   数字系统设计","url":"https://wenku.baidu.com/view/dd29f7e9b8f67c1cfad6b8c1"},{"reference":false,"teacher":"","year":"2019","datatype":"journal","docid":"1000029331339811","author":"刘博;卢婷婷;陈国磊;赵璐","similarity":0.001,"similar_word_count":58,"self":false,"source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000129247961111","author":"","similarity":0.001,"similar_word_count":58,"self":false,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","year":"2018","datatype":"book","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"similar_word_count":58,"self":false,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000120314096811","author":"","similarity":0.001,"similar_word_count":58,"self":false,"source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000179275463811","author":"","similarity":0.001,"similar_word_count":58,"self":false,"source":"网页","title":"基于Verilog的8051微控制器中断系统的设计---优秀毕业论文 参考文献 可复..","url":"https://www.docin.com/p%2D827308466.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000138922963611","author":"","similarity":0.001,"similar_word_count":57,"self":false,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"}],"similarity_pro":0,"word_copy_count":7594,"word_self_count":0,"similar_paragraphs":[{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":443.2727,"teacher":"","textWithDynamicClass":"作者简介.77第一章绪论1第一章绪论1.1研究背景1.1.1<em class='similar 15S35I4' onmouseover=\"highlightSetter('15S35I4',false)\" onmouseout=\"highlightSetter('15S35I4',true)\">论文研究背景随着市场环境对集成电路的功能要求愈加严格,</em>芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC(Application Specific Integrated Circuit,","datatype":"webpage","clcs":[],"similarityPercentage":"49.9%","self":false,"text":"作者简介.77第一章绪论1第一章绪论1.1研究背景1.1.1<em class='similar'>论文研究背景随着市场环境对集成电路的功能要求愈加严格,</em>芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC(Application Specific Integrated Circuit,"}],"textWithDynamicClass":"<em class='similar T14I0' onmouseover=\"highlightSetter('T14I0',false)\" onmouseout=\"highlightSetter('T14I0',true)\">随着市场环境的逐步升级,</em><em class='similar T14I1' onmouseover=\"highlightSetter('T14I1',false)\" onmouseout=\"highlightSetter('T14I1',true)\">市场需求对与IC的功能愈加严格,</em>","similar_word_count":25,"text":"<em class='similar'>随着市场环境的逐步升级,</em><em class='similar'>市场需求对与IC的功能愈加严格,</em>","suggest":{"synonyms":[{"synonyms":["晋级"],"keyword":"升级"},{"synonyms":["越发"],"keyword":"愈加"}],"keyword":["市场环境","升级","市场需求","愈加"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000180302201811","author":"","university":"","source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html","reference":false,"similarScore":153.33333,"teacher":"","textWithDynamicClass":"Device)为实验载的体,以EDA.T00l 为开发环境,以专用集成电路ASIC<em class='similar 15S36I7' onmouseover=\"highlightSetter('15S36I7',false)\" onmouseout=\"highlightSetter('15S36I7',true)\">(Application Specific Integrated Circuit)</em>和片上系统SOC","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"Device)为实验载的体,以EDA.T00l 为开发环境,以专用集成电路ASIC<em class='similar'>(Application Specific Integrated Circuit)</em>和片上系统SOC"},{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":443.2727,"teacher":"","textWithDynamicClass":"作者简介.77第一章绪论1第一章绪论1.1研究背景1.1.1论文研究背景随着市场环境对集成电路的功能要求愈加严格,芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar 15S35I7' onmouseover=\"highlightSetter('15S35I7',false)\" onmouseout=\"highlightSetter('15S35I7',true)\">(Application Specific Integrated Circuit,</em>专用集成电路)","datatype":"webpage","clcs":[],"similarityPercentage":"54.6%","self":false,"text":"作者简介.77第一章绪论1第一章绪论1.1研究背景1.1.1论文研究背景随着市场环境对集成电路的功能要求愈加严格,芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar'>(Application Specific Integrated Circuit,</em>专用集成电路)"}],"textWithDynamicClass":"IC的复杂度在工艺的进步下也逐步增加。目前的ASIC<em class='similar T14I4' onmouseover=\"highlightSetter('T14I4',false)\" onmouseout=\"highlightSetter('T14I4',true)\">(Application Specific Integrated Circuit,</em>","similar_word_count":8,"text":"IC的复杂度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em>","suggest":{"synonyms":[],"keyword":["ic"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000180302201811","author":"","university":"","source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html","reference":false,"similarScore":153.33333,"teacher":"","textWithDynamicClass":"Device)为实验载的体,以EDA.T00l 为开发环境,<em class='similar 15S36I6' onmouseover=\"highlightSetter('15S36I6',false)\" onmouseout=\"highlightSetter('15S36I6',true)\">以专用集成电路ASIC</em>(Application Specific Integrated Circuit)","datatype":"webpage","clcs":[],"similarityPercentage":"91.3%","self":false,"text":"Device)为实验载的体,以EDA.T00l 为开发环境,<em class='similar'>以专用集成电路ASIC</em>(Application Specific Integrated Circuit)"},{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":443.2727,"teacher":"","textWithDynamicClass":"芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC(Application Specific Integrated Circuit,<em class='similar 15S35I8' onmouseover=\"highlightSetter('15S35I8',false)\" onmouseout=\"highlightSetter('15S35I8',true)\">专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,<em class='similar 15S35I10' onmouseover=\"highlightSetter('15S35I10',false)\" onmouseout=\"highlightSetter('15S35I10',true)\">这项称为片上系统 SOC</em>(System On Chip,","datatype":"webpage","clcs":[],"similarityPercentage":"65.5%","self":false,"text":"芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC(Application Specific Integrated Circuit,<em class='similar'>专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,<em class='similar'>这项称为片上系统 SOC</em>(System On Chip,"}],"textWithDynamicClass":"(Application Specific Integrated Circuit,<em class='similar T14I5' onmouseover=\"highlightSetter('T14I5',false)\" onmouseout=\"highlightSetter('T14I5',true)\">专用集成电路)</em><em class='similar'>设计,</em><em class='similar T14I7' onmouseover=\"highlightSetter('T14I7',false)\" onmouseout=\"highlightSetter('T14I7',true)\">这项又称为片上系统SoC</em>","similar_word_count":18,"text":"(Application Specific Integrated Circuit,<em class='similar'>专用集成电路)</em><em class='similar'>设计,</em><em class='similar'>这项又称为片上系统SoC</em>","suggest":{"synonyms":[],"keyword":["专用集成电路","这项","片上系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000180302201811","author":"","university":"","source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html","reference":false,"similarScore":153.33333,"teacher":"","textWithDynamicClass":"(Application Specific Integrated Circuit)<em class='similar 15S36I8' onmouseover=\"highlightSetter('15S36I8',false)\" onmouseout=\"highlightSetter('15S36I8',true)\">和片上系统SOC</em><em class='similar 15S36I9' onmouseover=\"highlightSetter('15S36I9',false)\" onmouseout=\"highlightSetter('15S36I9',true)\">(System Chip)</em>芯片为目标器件,对电子产品进行一系列自动化设计而形","datatype":"webpage","clcs":[],"similarityPercentage":"86.8%","self":false,"text":"(Application Specific Integrated Circuit)<em class='similar'>和片上系统SOC</em><em class='similar'>(System Chip)</em>芯片为目标器件,对电子产品进行一系列自动化设计而形"},{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":443.2727,"teacher":"","textWithDynamicClass":"已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC<em class='similar 15S35I11' onmouseover=\"highlightSetter('15S35I11',false)\" onmouseout=\"highlightSetter('15S35I11',true)\">(System On Chip,</em><em class='similar 15S35I12' onmouseover=\"highlightSetter('15S35I12',false)\" onmouseout=\"highlightSetter('15S35I12',true)\">片上系统)</em>的技术在目前的业界已经得到广泛的应用","datatype":"webpage","clcs":[],"similarityPercentage":"69.1%","self":false,"text":"已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC<em class='similar'>(System On Chip,</em><em class='similar'>片上系统)</em>的技术在目前的业界已经得到广泛的应用"}],"textWithDynamicClass":"专用集成电路)设计,这项又称为片上系统SoC<em class='similar T14I8' onmouseover=\"highlightSetter('T14I8',false)\" onmouseout=\"highlightSetter('T14I8',true)\">(System on Chip,</em><em class='similar T14I9' onmouseover=\"highlightSetter('T14I9',false)\" onmouseout=\"highlightSetter('T14I9',true)\">片上系统)</em>","similar_word_count":8,"text":"专用集成电路)设计,这项又称为片上系统SoC<em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em>","suggest":{"synonyms":[],"keyword":["片上系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":443.2727,"teacher":"","textWithDynamicClass":"片上系统)<em class='similar 15S35I13' onmouseover=\"highlightSetter('15S35I13',false)\" onmouseout=\"highlightSetter('15S35I13',true)\">的技术在目前的业界已经得到广泛的应用</em>[1]。一般情况下,采用 ASIC 的设计功耗更低","datatype":"webpage","clcs":[],"similarityPercentage":"74.7%","self":false,"text":"片上系统)<em class='similar'>的技术在目前的业界已经得到广泛的应用</em>[1]。一般情况下,采用 ASIC 的设计功耗更低"}],"textWithDynamicClass":"(System on Chip,片上系统)<em class='similar T14I10' onmouseover=\"highlightSetter('T14I10',false)\" onmouseout=\"highlightSetter('T14I10',true)\">的集成电路技术在业界已经得到广泛的认可与应用,</em>","similar_word_count":22,"text":"(System on Chip,片上系统)<em class='similar'>的集成电路技术在业界已经得到广泛的认可与应用,</em>","suggest":{"synonyms":[],"keyword":["集成电路技术","在业"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":560.8334,"teacher":"","textWithDynamicClass":"ip,片上系统)的技术在目前的业界已经得到广泛的应用[1]。<em class='similar 16S37I5' onmouseover=\"highlightSetter('16S37I5',false)\" onmouseout=\"highlightSetter('16S37I5',true)\">一般情况下</em>,<em class='similar 16S37I6' onmouseover=\"highlightSetter('16S37I6',false)\" onmouseout=\"highlightSetter('16S37I6',true)\">采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的��辑设计。","datatype":"webpage","clcs":[],"similarityPercentage":"81.4%","self":false,"text":"ip,片上系统)的技术在目前的业界已经得到广泛的应用[1]。<em class='similar'>一般情况下</em>,<em class='similar'>采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的逻辑设计。"}],"textWithDynamicClass":"System on Chip,片上系统)的集成电路技术在业界已经得到广泛的认可与应用,且当代的SoC设计也不在局限于一块IC上<em class='similar T15I0' onmouseover=\"highlightSetter('T15I0',false)\" onmouseout=\"highlightSetter('T15I0',true)\">一般情况下</em><em class='similar'>,</em><em class='similar T15I1' onmouseover=\"highlightSetter('T15I1',false)\" onmouseout=\"highlightSetter('T15I1',true)\">由于采用ASIC设计具有功耗低、</em>","similar_word_count":17,"text":"System on Chip,片上系统)的集成电路技术在业界已经得到广泛的认可与应用,且当代的SoC设计也不在局限于一块IC上<em class='similar'>一般情况下</em><em class='similar'>,</em><em class='similar'>由于采用ASIC设计具有功耗低、</em>","suggest":{"synonyms":[],"keyword":["一般情况","功耗"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":560.8334,"teacher":"","textWithDynamicClass":",采用 ASIC 的设计功耗更低,尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar 16S37I10' onmouseover=\"highlightSetter('16S37I10',false)\" onmouseout=\"highlightSetter('16S37I10',true)\">所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em>也正是由于 ASIC 的复杂性,","datatype":"webpage","clcs":[],"similarityPercentage":"91.2%","self":false,"text":",采用 ASIC 的设计功耗更低,尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar'>所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em>也正是由于 ASIC 的复杂性,"}],"textWithDynamicClass":"投产成本低、迭代周期快等优势,<em class='similar T15I4' onmouseover=\"highlightSetter('T15I4',false)\" onmouseout=\"highlightSetter('T15I4',true)\">所以ASIC可容纳更为复杂和灵活的逻辑设计。</em>","similar_word_count":18,"text":"投产成本低、迭代周期快等优势,<em class='similar'>所以ASIC可容纳更为复杂和灵活的逻辑设计。</em>","suggest":{"synonyms":[{"synonyms":["倾轧"],"keyword":"容纳"}],"keyword":["容纳","逻辑设计"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":560.8334,"teacher":"","textWithDynamicClass":"尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的逻辑设计。<em class='similar 16S37I11' onmouseover=\"highlightSetter('16S37I11',false)\" onmouseout=\"highlightSetter('16S37I11',true)\">也正是由于 ASIC 的复杂性,</em><em class='similar 16S37I12' onmouseover=\"highlightSetter('16S37I12',false)\" onmouseout=\"highlightSetter('16S37I12',true)\">使得 ASIC 的设计风险也大幅增加。</em>一旦芯片设计失败,","datatype":"webpage","clcs":[],"similarityPercentage":"83.3%","self":false,"text":"尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的逻辑设计。<em class='similar'>也正是由于 ASIC 的复杂性,</em><em class='similar'>使得 ASIC 的设计风险也大幅增加。</em>一旦芯片设计失败,"}],"textWithDynamicClass":"所以ASIC可容纳更为复杂和灵活的逻辑设计。<em class='similar T15I5' onmouseover=\"highlightSetter('T15I5',false)\" onmouseout=\"highlightSetter('T15I5',true)\">同样正是由于现代ASIC设计的高复杂度,</em><em class='similar T15I6' onmouseover=\"highlightSetter('T15I6',false)\" onmouseout=\"highlightSetter('T15I6',true)\">使得其研发设计的风险也在大幅增加。</em>","similar_word_count":32,"text":"所以ASIC可容纳更为复杂和灵活的逻辑设计。<em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em>","suggest":{"synonyms":[],"keyword":["复杂度","研发设计"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":560.8334,"teacher":"","textWithDynamicClass":"使得 ASIC 的设计风险也大幅增加。<em class='similar 16S37I13' onmouseover=\"highlightSetter('16S37I13',false)\" onmouseout=\"highlightSetter('16S37I13',true)\">一旦芯片设计失败,</em><em class='similar 16S37I14' onmouseover=\"highlightSetter('16S37I14',false)\" onmouseout=\"highlightSetter('16S37I14',true)\">不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯","datatype":"webpage","clcs":[],"similarityPercentage":"83.6%","self":false,"text":"使得 ASIC 的设计风险也大幅增加。<em class='similar'>一旦芯片设计失败,</em><em class='similar'>不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯"}],"textWithDynamicClass":"同样正是由于现代ASIC设计的高复杂度,使得其研发设计的风险也在大幅增加。<em class='similar T15I7' onmouseover=\"highlightSetter('T15I7',false)\" onmouseout=\"highlightSetter('T15I7',true)\">一旦芯片设计失败,</em><em class='similar T15I8' onmouseover=\"highlightSetter('T15I8',false)\" onmouseout=\"highlightSetter('T15I8',true)\">将会导致大量研发本的损失,</em>","similar_word_count":20,"text":"同样正是由于现代ASIC设计的高复杂度,使得其研发设计的风险也在大幅增加。<em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发本的损失,</em>","suggest":{"synonyms":[],"keyword":["芯片设计"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":474.1964,"teacher":"","textWithDynamicClass":"如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。所以,<em class='similar 17S38I5' onmouseover=\"highlightSetter('17S38I5',false)\" onmouseout=\"highlightSetter('17S38I5',true)\">验证逐步变为复杂芯片研发过程中的关键环节。</em>最新一项统计数据表明,<em class='similar 17S38I7' onmouseover=\"highlightSetter('17S38I7',false)\" onmouseout=\"highlightSetter('17S38I7',true)\">在一些项目中,</em><em class='similar 17S38I8' onmouseover=\"highlightSetter('17S38I8',false)\" onmouseout=\"highlightSetter('17S38I8',true)\">芯片的设计团队规模甚至不如验证团队规模,</em>验证所花费的时间也占到产品研发周期的一半以上,","datatype":"webpage","clcs":[],"similarityPercentage":"67.3%","self":false,"text":"如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。所以,<em class='similar'>验证逐步变为复杂芯片研发过程中的关键环节。</em>最新一项统计数据表明,<em class='similar'>在一些项目中,</em><em class='similar'>芯片的设计团队规模甚至不如验证团队规模,</em>验证所花费的时间也占到产品研发周期的一半以上,"}],"textWithDynamicClass":"一旦芯片设计失败,将会导致大量研发本的损失,所以,IC正确性验证逐步变为超高复<em class='similar T16I0' onmouseover=\"highlightSetter('T16I0',false)\" onmouseout=\"highlightSetter('T16I0',true)\">杂度IC研发过程中必备且关键的环节。</em><em class='similar T16I1' onmouseover=\"highlightSetter('T16I1',false)\" onmouseout=\"highlightSetter('T16I1',true)\">最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,</em>","similar_word_count":51,"text":"一旦芯片设计失败,将会导致大量研发本的损失,所以,IC正确性验证逐步变为超高复<em class='similar'>杂度IC研发过程中必备且关键的环节。</em><em class='similar'>最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,</em>","suggest":{"synonyms":[],"keyword":["研发过程","必备","统计数据","团队规模"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":474.1964,"teacher":"","textWithDynamicClass":"芯片的设计团队规模甚至不如验证团队规模,<em class='similar 17S38I9' onmouseover=\"highlightSetter('17S38I9',false)\" onmouseout=\"highlightSetter('17S38I9',true)\">验证所花费的时间也占到产品研发周期的一半以上,</em>找到有效可行的验证方法成为验证的关键。目前,最常见","datatype":"webpage","clcs":[],"similarityPercentage":"77.9%","self":false,"text":"芯片的设计团队规模甚至不如验证团队规模,<em class='similar'>验证所花费的时间也占到产品研发周期的一半以上,</em>找到有效可行的验证方法成为验证的关键。目前,最常见"}],"textWithDynamicClass":"杂度IC研发过程中必备且关键的环节。最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,<em class='similar T16I2' onmouseover=\"highlightSetter('T16I2',false)\" onmouseout=\"highlightSetter('T16I2',true)\">验证所花费的时间也占到产品研发周期的一半以上,</em>","similar_word_count":22,"text":"杂度IC研发过程中必备且关键的环节。最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,<em class='similar'>验证所花费的时间也占到产品研发周期的一半以上,</em>","suggest":{"synonyms":[{"synonyms":["破钞"],"keyword":"花费"}],"keyword":["花费","研发周期","一半"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":670,"teacher":"","textWithDynamicClass":"验证团队规模,验证所花费的时间也占到产品研发周期的一半以上,<em class='similar 18S39I5' onmouseover=\"highlightSetter('18S39I5',false)\" onmouseout=\"highlightSetter('18S39I5',true)\">找到有效可行的验证方法成为验证的关键。</em>目前,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"验证团队规模,验证所花费的时间也占到产品研发周期的一半以上,<em class='similar'>找到有效可行的验证方法成为验证的关键。</em>目前,"}],"textWithDynamicClass":"验证所花费的时间也占到产品研发周期的一半以上,<em class='similar T17I0' onmouseover=\"highlightSetter('T17I0',false)\" onmouseout=\"highlightSetter('T17I0',true)\">找到有效可行的验证方法成为验证的关键</em>","similar_word_count":18,"text":"验证所花费的时间也占到产品研发周期的一半以上,<em class='similar'>找到有效可行的验证方法成为验证的关键</em>","suggest":{"synonyms":[],"keyword":["可行","验证方法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":670,"teacher":"","textWithDynamicClass":"验证团队规模,验证所花费的时间也占到产品研发周期的一半以上,找到有效可行的验证方法成为验证的关键。<em class='similar 18S39I6' onmouseover=\"highlightSetter('18S39I6',false)\" onmouseout=\"highlightSetter('18S39I6',true)\">目前,</em><em class='similar 18S39I7' onmouseover=\"highlightSetter('18S39I7',false)\" onmouseout=\"highlightSetter('18S39I7',true)\">最常见的验证方法是软件仿真技术,</em><em class='similar 18S39I8' onmouseover=\"highlightSetter('18S39I8',false)\" onmouseout=\"highlightSetter('18S39I8',true)\">但是软件仿真虽然简单易行,</em>在面对复杂的集成电路设计时,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"验证团队规模,验证所花费的时间也占到产品研发周期的一半以上,找到有效可行的验证方法成为验证的关键。<em class='similar'>目前,</em><em class='similar'>最常见的验证方法是软件仿真技术,</em><em class='similar'>但是软件仿真虽然简单易行,</em>在面对复杂的集成电路设计时,"}],"textWithDynamicClass":"[4]。<em class='similar T17I2' onmouseover=\"highlightSetter('T17I2',false)\" onmouseout=\"highlightSetter('T17I2',true)\">目前,</em><em class='similar T17I3' onmouseover=\"highlightSetter('T17I3',false)\" onmouseout=\"highlightSetter('T17I3',true)\">最常见的验证方法是软件仿真技术,</em><em class='similar T17I4' onmouseover=\"highlightSetter('T17I4',false)\" onmouseout=\"highlightSetter('T17I4',true)\">但是软件仿真虽然简单易行,</em>","similar_word_count":29,"text":"[4]。<em class='similar'>目前,</em><em class='similar'>最常见的验证方法是软件仿真技术,</em><em class='similar'>但是软件仿真虽然简单易行,</em>","suggest":{"synonyms":[],"keyword":["验证方法","软件仿真技术","软件仿真","简单易行"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":670,"teacher":"","textWithDynamicClass":"但是软件仿真虽然简单易行,<em class='similar 18S39I9' onmouseover=\"highlightSetter('18S39I9',false)\" onmouseout=\"highlightSetter('18S39I9',true)\">在面对复杂的集成电路设计时,</em><em class='similar 18S39I10' onmouseover=\"highlightSetter('18S39I10',false)\" onmouseout=\"highlightSetter('18S39I10',true)\">其验证效率过低,</em>最终可能影响到产品的及时发布。而基于 FPGA 的","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"但是软件仿真虽然简单易行,<em class='similar'>在面对复杂的集成电路设计时,</em><em class='similar'>其验证效率过低,</em>最终可能影响到产品的及时发布。而基于 FPGA 的"}],"textWithDynamicClass":"目前,最常见的验证方法是软件仿真技术,但是软件仿真虽然简单易行,<em class='similar T17I5' onmouseover=\"highlightSetter('T17I5',false)\" onmouseout=\"highlightSetter('T17I5',true)\">在面对复杂的集成电路设计时,</em><em class='similar T17I6' onmouseover=\"highlightSetter('T17I6',false)\" onmouseout=\"highlightSetter('T17I6',true)\">其验证效率过低,</em>","similar_word_count":20,"text":"目前,最常见的验证方法是软件仿真技术,但是软件仿真虽然简单易行,<em class='similar'>在面对复杂的集成电路设计时,</em><em class='similar'>其验证效率过低,</em>","suggest":{"synonyms":[],"keyword":["集��电路","设计时","验证效率","过低"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":745,"teacher":"","textWithDynamicClass":"真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar 19S40I6' onmouseover=\"highlightSetter('19S40I6',false)\" onmouseout=\"highlightSetter('19S40I6',true)\">最终可能影响到产品的及时发布。</em>而基于 FPGA 的原型验证方法,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar'>最终可能影响到产品的及时发布。</em>而基于 FPGA 的原型验证方法,"}],"textWithDynamicClass":"但是软件仿真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar T18I0' onmouseover=\"highlightSetter('T18I0',false)\" onmouseout=\"highlightSetter('T18I0',true)\">最终可能影响到产品的及时发布</em>","similar_word_count":14,"text":"但是软件仿真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar'>最终可能影响到产品的及时发布</em>","suggest":{"synonyms":[],"keyword":["可能影响"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":745,"teacher":"","textWithDynamicClass":"真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,最终可能影响到产品的及时发布。<em class='similar 19S40I7' onmouseover=\"highlightSetter('19S40I7',false)\" onmouseout=\"highlightSetter('19S40I7',true)\">而基于 FPGA 的原型验证方法,</em><em class='similar 19S40I8' onmouseover=\"highlightSetter('19S40I8',false)\" onmouseout=\"highlightSetter('19S40I8',true)\">凭借其可反复擦除、</em>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,","datatype":"webpage","clcs":[],"similarityPercentage":"93.9%","self":false,"text":"真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,最终可能影响到产品的及时发布。<em class='similar'>而基于 FPGA 的原型验证方法,</em><em class='similar'>凭借其可反复擦除、</em>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,"},{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":213.90642,"teacher":"","textWithDynamicClass":"grammable Gate Array,现场可编程门阵列)<em class='similar 19S41I5' onmouseover=\"highlightSetter('19S41I5',false)\" onmouseout=\"highlightSetter('19S41I5',true)\">的原型验证技术凭借其可反复擦除、</em>可真实的模拟设计中的硬件行为等优势受到验证团队越来越多的重视。","datatype":"webpage","clcs":[],"similarityPercentage":"46.1%","self":false,"text":"grammable Gate Array,现场可编程门阵列)<em class='similar'>的原型验证技术凭借其可反复擦除、</em>可真实的模拟设计中的硬件行为等优势受到验证团队越来越多的重视。"}],"textWithDynamicClass":"[6]。<em class='similar T18I2' onmouseover=\"highlightSetter('T18I2',false)\" onmouseout=\"highlightSetter('T18I2',true)\">而基于FPGA的原型验证方法,</em><em class='similar T18I3' onmouseover=\"highlightSetter('T18I3',false)\" onmouseout=\"highlightSetter('T18I3',true)\">依靠其可反复擦除、</em>","similar_word_count":19,"text":"[6]。<em class='similar'>而基于FPGA的原型验证方法,</em><em class='similar'>依靠其可反复擦除、</em>","suggest":{"synonyms":[],"keyword":["原型","验证方法","擦除"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":745,"teacher":"","textWithDynamicClass":"凭借其可反复擦除、<em class='similar 19S40I9' onmouseover=\"highlightSetter('19S40I9',false)\" onmouseout=\"highlightSetter('19S40I9',true)\">可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar 19S40I10' onmouseover=\"highlightSetter('19S40I10',false)\" onmouseout=\"highlightSetter('19S40I10',true)\">被越来越多的验证团队所采用。</em>近年来,随着便携式可穿戴设备和移动智能手机市场的需","datatype":"webpage","clcs":[],"similarityPercentage":"97.4%","self":false,"text":"凭借其可反复擦除、<em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用。</em>近年来,随着便携式可穿戴设备和移动智能手机市场的需"},{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":213.90642,"teacher":"","textWithDynamicClass":"grammable Gate Array,现场可编程门阵列)的原型验证技术凭借其可反复擦除、<em class='similar 19S41I6' onmouseover=\"highlightSetter('19S41I6',false)\" onmouseout=\"highlightSetter('19S41I6',true)\">可真实的模拟设计中的硬件行为等优势受到验证团队越来越多的重视。</em>本文正是基于多 FPGA 的验证思想,以一款 LT","datatype":"webpage","clcs":[],"similarityPercentage":"54.0%","self":false,"text":"grammable Gate Array,现场可编程门阵列)的原型验证技术凭借其可反复擦除、<em class='similar'>可真实的模拟设计中的硬件行为等优势受到验证团队越来越多的重视。</em>本文正是基于多 FPGA 的验证思想,以一款 LT"}],"textWithDynamicClass":"而基于FPGA的原型验证方法,依靠其可反复擦除、<em class='similar T18I4' onmouseover=\"highlightSetter('T18I4',false)\" onmouseout=\"highlightSetter('T18I4',true)\">可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar T18I5' onmouseover=\"highlightSetter('T18I5',false)\" onmouseout=\"highlightSetter('T18I5',true)\">被越来越多的验证团队所采用</em>","similar_word_count":45,"text":"而基于FPGA的原型验证方法,依靠其可反复擦除、<em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>","suggest":{"synonyms":[],"keyword":["真实的","模拟设计","硬件","系统全面","设计功能"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":544.0563,"teacher":"","textWithDynamicClass":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar 20S42I5' onmouseover=\"highlightSetter('20S42I5',false)\" onmouseout=\"highlightSetter('20S42I5',true)\">集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,","datatype":"webpage","clcs":[],"similarityPercentage":"80.7%","self":false,"text":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar'>集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,"}],"textWithDynamicClass":"<em class='similar T19I0' onmouseover=\"highlightSetter('T19I0',false)\" onmouseout=\"highlightSetter('T19I0',true)\">目前随着高性能ASIC芯片设计复杂度的提升以及体系结构的不断升级换代及创新,</em>","similar_word_count":34,"text":"<em class='similar'>目前随着高性能ASIC芯片设计复杂度的提升以及体系结构的不断升级换代及创新,</em>","suggest":{"synonyms":[],"keyword":["高性能","芯片设计","复杂度","体系结构","升级换代"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":544.0563,"teacher":"","textWithDynamicClass":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,其规模愈加庞大,<em class='similar 20S42I7' onmouseover=\"highlightSetter('20S42I7',false)\" onmouseout=\"highlightSetter('20S42I7',true)\">正确性验证已成为高性能芯片研发过程中的关键环节,</em><em class='similar 20S42I8' onmouseover=\"highlightSetter('20S42I8',false)\" onmouseout=\"highlightSetter('20S42I8',true)\">因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电子科技大学硕士学位论文2验","datatype":"webpage","clcs":[],"similarityPercentage":"77.8%","self":false,"text":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,其规模愈加庞大,<em class='similar'>正确性验证已成为高性能芯片研发过程中的关键环节,</em><em class='similar'>因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电子科技大学硕士学位论文2验"}],"textWithDynamicClass":"SoC设计的规模在快速膨胀,<em class='similar T19I2' onmouseover=\"highlightSetter('T19I2',false)\" onmouseout=\"highlightSetter('T19I2',true)\">研发中的验证阶段已成为高性能芯片研发过程中的关键环节,</em><em class='similar T19I3' onmouseover=\"highlightSetter('T19I3',false)\" onmouseout=\"highlightSetter('T19I3',true)\">因此为保证验证的高效性和准确性,</em>","similar_word_count":41,"text":"SoC设计的规模在快速膨胀,<em class='similar'>研发中的验证阶段已成为高性能芯片研发过程中的关键环节,</em><em class='similar'>因此为保证验证的高效性和准确性,</em>","suggest":{"synonyms":[],"keyword":["高性能","研发过程","关键环节","高效性","准确性"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":544.0563,"teacher":"","textWithDynamicClass":"其规模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,<em class='similar 20S42I8' onmouseover=\"highlightSetter('20S42I8',false)\" onmouseout=\"highlightSetter('20S42I8',true)\">因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电子科技大学硕士学位论文2验","datatype":"webpage","clcs":[],"similarityPercentage":"76.6%","self":false,"text":"其规模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,<em class='similar'>因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电子科技大学硕士学位论文2验"}],"textWithDynamicClass":"研发中的验证阶段已成为高性能芯片研发过程中的关键环节,因此为保证验证的高效性和准确性,<em class='similar T19I4' onmouseover=\"highlightSetter('T19I4',false)\" onmouseout=\"highlightSetter('T19I4',true)\">许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。</em>","similar_word_count":28,"text":"研发中的验证阶段已成为高性能芯片研发过程中的关键环节,因此为保证验证的高效性和准确性,<em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。</em>","suggest":{"synonyms":[{"synonyms":["接踵"],"keyword":"相继"}],"keyword":["集成电路设计公司","相继","验证方法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":493.57147,"teacher":"","textWithDynamicClass":"。在复杂的高性能芯片西安电子科技大学硕士学位论文2验证方面,<em class='similar 21S43I3' onmouseover=\"highlightSetter('21S43I3',false)\" onmouseout=\"highlightSetter('21S43I3',true)\">主要的验证方法分为三类:</em><em class='similar 21S43I4' onmouseover=\"highlightSetter('21S43I4',false)\" onmouseout=\"highlightSetter('21S43I4',true)\">软件模拟验证、</em><em class='similar 21S43I5' onmouseover=\"highlightSetter('21S43I5',false)\" onmouseout=\"highlightSetter('21S43I5',true)\">硬件加速器仿真验证、</em><em class='similar 21S43I6' onmouseover=\"highlightSetter('21S43I6',false)\" onmouseout=\"highlightSetter('21S43I6',true)\">FPGA原型验证</em>[2]。在芯片功能准确性的验证过程中,","datatype":"webpage","clcs":[],"similarityPercentage":"92.1%","self":false,"text":"。在复杂的高性能芯片西安电子科技大学硕士学位论文2验证方面,<em class='similar'>主要的验证方法分为三类:</em><em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证、</em><em class='similar'>FPGA原型验证</em>[2]。在芯片功能准确性的验证过程中,"},{"profession":false,"keywords":[],"year":"","docid":"9000126754842711","author":"","university":"","source":"网页","title":"一款多核处理器FPGA验证平台的设计与实现-论文 - 道客...","url":"https://www.doc88.com/p%2D7854445766655.html","reference":false,"similarScore":283.89612,"teacher":"","textWithDynamicClass":"成功与否的关键因素之一.通常在高性能处理器芯片的验证过程中,<em class='similar 21S44I4' onmouseover=\"highlightSetter('21S44I4',false)\" onmouseout=\"highlightSetter('21S44I4',true)\">软件模拟验证、</em><em class='similar 21S44I5' onmouseover=\"highlightSetter('21S44I5',false)\" onmouseout=\"highlightSetter('21S44I5',true)\">硬件加速器仿真验证和 F PGA </em>( field programmable gate—array)原型验证是最常见的3种方法.<em class='similar 21S44I8' onmouseover=\"highlightSetter('21S44I8',false)\" onmouseout=\"highlightSetter('21S44I8',true)\">软件模拟验证是当今芯片正确性验证的一种最常用的验证手段,</em>具有模拟精准、","datatype":"webpage","clcs":[],"similarityPercentage":"56.7%","self":false,"text":"成功与否的关键因素之一.通常在高性能处理器芯片的验证过程中,<em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证和 F PGA </em>( field programmable gate—array)原型验证是最常见的3种方法.<em class='similar'>软件模拟验证是当今芯片正确性验证的一种最常用的验证手段,</em>具有模拟精准、"}],"textWithDynamicClass":"因此为保证验证的高效性和准确性,许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。在具有超高复杂与高性能IC验证上,<em class='similar T20I1' onmouseover=\"highlightSetter('T20I1',false)\" onmouseout=\"highlightSetter('T20I1',true)\">主流验证方法分为以下三类:</em><em class='similar T20I2' onmouseover=\"highlightSetter('T20I2',false)\" onmouseout=\"highlightSetter('T20I2',true)\">软件模拟验证、</em><em class='similar T20I3' onmouseover=\"highlightSetter('T20I3',false)\" onmouseout=\"highlightSetter('T20I3',true)\">硬件加速器仿真验证、</em><em class='similar T20I4' onmouseover=\"highlightSetter('T20I4',false)\" onmouseout=\"highlightSetter('T20I4',true)\">FPGA原型验证。</em>","similar_word_count":32,"text":"因此为保证验证的高效性和准确性,许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。在具有超高复杂与高性能IC验证上,<em class='similar'>主流验证方法分为以下三类:</em><em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证、</em><em class='similar'>FPGA原型验证。</em>","suggest":{"synonyms":[],"keyword":["主流","验证方法","三类","模拟验证","硬件加速器","仿真验证","原型验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":493.57147,"teacher":"","textWithDynamicClass":"FPGA原型验证[2]。<em class='similar 21S43I8' onmouseover=\"highlightSetter('21S43I8',false)\" onmouseout=\"highlightSetter('21S43I8',true)\">在芯片功能准确性的验证过程中,</em><em class='similar 21S43I9' onmouseover=\"highlightSetter('21S43I9',false)\" onmouseout=\"highlightSetter('21S43I9',true)\">软件模拟验证是最常采用的方法,</em>其优点是模拟精确、<em class='similar 21S43I11' onmouseover=\"highlightSetter('21S43I11',false)\" onmouseout=\"highlightSetter('21S43I11',true)\">方便灵活,</em><em class='similar 21S43I12' onmouseover=\"highlightSetter('21S43I12',false)\" onmouseout=\"highlightSetter('21S43I12',true)\">因此芯片的模块功能验证一般采用软件模拟的方法。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"74.4%","self":false,"text":"FPGA原型验证[2]。<em class='similar'>在芯片功能准确性的验证过程中,</em><em class='similar'>软件模拟验证是最常采用的方法,</em>其优点是模拟精确、<em class='similar'>方便灵活,</em><em class='similar'>因此芯片的模块功能验证一般采用软件模拟的方法。</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000126754842711","author":"","university":"","source":"网页","title":"一款多核处理器FPGA验证平台的设计与实现-论文 - 道客...","url":"https://www.doc88.com/p%2D7854445766655.html","reference":false,"similarScore":283.89612,"teacher":"","textWithDynamicClass":"硬件加速器仿真验证和 F PGA( field programmable gate—array)原型验证是最常见的3种方法.<em class='similar 21S44I8' onmouseover=\"highlightSetter('21S44I8',false)\" onmouseout=\"highlightSetter('21S44I8',true)\">软件模拟验证是当今芯片正确性验证的一种最常用的验证手段,</em><em class='similar 21S44I9' onmouseover=\"highlightSetter('21S44I9',false)\" onmouseout=\"highlightSetter('21S44I9',true)\">具有模拟精准、</em>","datatype":"webpage","clcs":[],"similarityPercentage":"59.5%","self":false,"text":"硬件加速器仿真验证和 F PGA( field programmable gate—array)原型验证是最常见的3种方法.<em class='similar'>软件模拟验证是当今芯片正确性验证的一种最常用的验证手段,</em><em class='similar'>具有模拟精准、</em>"}],"textWithDynamicClass":"主流验证方法分为以下三类:软件模拟验证、硬件加速器仿真验证、FPGA原型验证。<em class='similar T20I5' onmouseover=\"highlightSetter('T20I5',false)\" onmouseout=\"highlightSetter('T20I5',true)\">软件模拟验证是验证集成电路设计功能正确性上最常采用的方法,</em><em class='similar T20I6' onmouseover=\"highlightSetter('T20I6',false)\" onmouseout=\"highlightSetter('T20I6',true)\">其具有模拟精确、</em><em class='similar T20I7' onmouseover=\"highlightSetter('T20I7',false)\" onmouseout=\"highlightSetter('T20I7',true)\">方便灵活等优点,</em>","similar_word_count":42,"text":"主流验证方法分为以下三类:软件模拟验证、硬件加速器仿真验证、FPGA原型验证。<em class='similar'>软件模拟验证是验证集成电路设计功能正确性上最常采用的方法,</em><em class='similar'>其具有模拟精确、</em><em class='similar'>方便灵活等优点,</em>","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"}],"keyword":["模拟验证","集成电路","设计功能","正确性","精确"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":485.18704,"teacher":"","textWithDynamicClass":"便灵活,因此芯片的模块功能验证一般采用软件模拟的方法。但是,<em class='similar 22S45I6' onmouseover=\"highlightSetter('22S45I6',false)\" onmouseout=\"highlightSetter('22S45I6',true)\">随着芯片复杂度的提升,</em><em class='similar 22S45I7' onmouseover=\"highlightSetter('22S45I7',false)\" onmouseout=\"highlightSetter('22S45I7',true)\">软件模拟的效率将迅速降低,</em>并且越来越难以覆盖芯片整体的功能验证。","datatype":"webpage","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"便灵活,因此芯片的模块功能验证一般采用软件模拟的方法。但是,<em class='similar'>随着芯片复杂度的提升,</em><em class='similar'>软件模拟的效率将迅速降低,</em>并且越来越难以覆盖芯片整体的功能验证。"}],"textWithDynamicClass":"方便灵活等优点,因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,<em class='similar T21I0' onmouseover=\"highlightSetter('T21I0',false)\" onmouseout=\"highlightSetter('T21I0',true)\">当芯片整体复杂度提升,</em><em class='similar T21I1' onmouseover=\"highlightSetter('T21I1',false)\" onmouseout=\"highlightSetter('T21I1',true)\">软件模拟的效率也在不断下降,</em>","similar_word_count":23,"text":"方便灵活等优点,因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,<em class='similar'>当芯片整体复杂度提升,</em><em class='similar'>软件模拟的效率也在不断下降,</em>","suggest":{"synonyms":[],"keyword":["复杂度","软件模拟"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":485.18704,"teacher":"","textWithDynamicClass":"软件模拟的效率将迅速降低,<em class='similar 22S45I8' onmouseover=\"highlightSetter('22S45I8',false)\" onmouseout=\"highlightSetter('22S45I8',true)\">并且越来越难以覆盖芯片整体的功能验证。</em><em class='similar 22S45I9' onmouseover=\"highlightSetter('22S45I9',false)\" onmouseout=\"highlightSetter('22S45I9',true)\">实践表明,</em>不论基于何种算法去设计软件工具的模拟方式,","datatype":"webpage","clcs":[],"similarityPercentage":"71.3%","self":false,"text":"软件模拟的效率将迅速降低,<em class='similar'>并且越来越难以覆盖芯片整体的功能验证。</em><em class='similar'>实践表明,</em>不论基于何种算法去设计软件工具的模拟方式,"}],"textWithDynamicClass":"当芯片整体复杂度提升,软件模拟的效率也在不断下降,<em class='similar T21I2' onmouseover=\"highlightSetter('T21I2',false)\" onmouseout=\"highlightSetter('T21I2',true)\">同时也将难以覆盖整体IC功能的验证。</em><em class='similar T21I3' onmouseover=\"highlightSetter('T21I3',false)\" onmouseout=\"highlightSetter('T21I3',true)\">实践表明,</em>","similar_word_count":20,"text":"当芯片整体复杂度提升,软件模拟的效率也在不断下降,<em class='similar'>同时也将难以覆盖整体IC功能的验证。</em><em class='similar'>实践表明,</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":485.18704,"teacher":"","textWithDynamicClass":"实践表明,<em class='similar 22S45I10' onmouseover=\"highlightSetter('22S45I10',false)\" onmouseout=\"highlightSetter('22S45I10',true)\">不论基于何种算法去设计软件工具的模拟方式,</em>当芯片所包含的电路门数超过一定数目时,","datatype":"webpage","clcs":[],"similarityPercentage":"69.9%","self":false,"text":"实践表明,<em class='similar'>不论基于何种算法去设计软件工具的模拟方式,</em>当芯片所包含的电路门数超过一定数目时,"}],"textWithDynamicClass":"同时也将难以覆盖整体IC功能的验证。实践表明,<em class='similar T21I4' onmouseover=\"highlightSetter('T21I4',false)\" onmouseout=\"highlightSetter('T21I4',true)\">不论使用哪种算法去设计EDA工具的仿真方式,</em>","similar_word_count":19,"text":"同时也将难以覆盖整体IC功能的验证。实践表明,<em class='similar'>不论使用哪种算法去设计EDA工具的仿真方式,</em>","suggest":{"synonyms":[],"keyword":["仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":485.18704,"teacher":"","textWithDynamicClass":"不论基于何种算法去设计软件工具的模拟方式,<em class='similar 22S45I11' onmouseover=\"highlightSetter('22S45I11',false)\" onmouseout=\"highlightSetter('22S45I11',true)\">当芯片所包含的电路门数超过一定数目时,</em><em class='similar 22S45I12' onmouseover=\"highlightSetter('22S45I12',false)\" onmouseout=\"highlightSetter('22S45I12',true)\">软件工具将无法准确反映系统信号的变化,</em>","datatype":"webpage","clcs":[],"similarityPercentage":"70.7%","self":false,"text":"不论基于何种算法去设计软件工具的模拟方式,<em class='similar'>当芯片所包含的电路门数超过一定数目时,</em><em class='similar'>软件工具将无法准确反映系统信号的变化,</em>"}],"textWithDynamicClass":"不论使用哪种算法去设计EDA工具的仿真方式,<em class='similar T21I5' onmouseover=\"highlightSetter('T21I5',false)\" onmouseout=\"highlightSetter('T21I5',true)\">当IC设计所包含的电路门数超过一定数目时,</em><em class='similar T21I6' onmouseover=\"highlightSetter('T21I6',false)\" onmouseout=\"highlightSetter('T21I6',true)\">EDA工具对于系统信号的反应将很难保证,</em>","similar_word_count":36,"text":"不论使用哪种算法去设计EDA工具的仿真方式,<em class='similar'>当IC设计所包含的电路门数超过一定数目时,</em><em class='similar'>EDA工具对于系统信号的反应将很难保证,</em>","suggest":{"synonyms":[{"synonyms":["数量"],"keyword":"数目"}],"keyword":["设计所","数目","系统信号"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":126.15385,"teacher":"","textWithDynamicClass":"路门数超过一定数目时,软件工具将无法准确反映系统信号的变化,<em class='similar 23S46I5' onmouseover=\"highlightSetter('23S46I5',false)\" onmouseout=\"highlightSetter('23S46I5',true)\">验证效率受到极大制约,</em><em class='similar 23S46I6' onmouseover=\"highlightSetter('23S46I6',false)\" onmouseout=\"highlightSetter('23S46I6',true)\">很难实现高效的验证效果。</em>针对软件模拟仿真的局限性,各大集成电路公司提出了硬","datatype":"webpage","clcs":[],"similarityPercentage":"77.0%","self":false,"text":"路门数超过一定数目时,软件工具将无法准确反映系统信号的变化,<em class='similar'>验证效率受到极大制约,</em><em class='similar'>很难实现高效的验证效果。</em>针对软件模拟仿真的局限性,各大集成电路公司提出了硬"}],"textWithDynamicClass":"同时也将难以覆盖整体IC功能的验证。实践表明,不论使用哪种算法去设计EDA工具的仿真方式,当IC设计所包含的电路门数超过一定数目时,EDA工具对于系统信号的反应将很难保证,<em class='similar T22I0' onmouseover=\"highlightSetter('T22I0',false)\" onmouseout=\"highlightSetter('T22I0',true)\">验证的效率也将会被极大制约,</em><em class='similar T22I1' onmouseover=\"highlightSetter('T22I1',false)\" onmouseout=\"highlightSetter('T22I1',true)\">从而很难高效的实现验证结果</em>","similar_word_count":26,"text":"同时也将难以覆盖整体IC功能的验证。实践表明,不论使用哪种算法去设计EDA工具的仿真方式,当IC设计所包含的电路门数超过一定数目时,EDA工具对于系统信号的反应将很难保证,<em class='similar'>验证的效率也将会被极大制约,</em><em class='similar'>从而很难高效的实现验证结果</em>","suggest":{"synonyms":[],"keyword":["高效的","验证结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":321.9583,"teacher":"","textWithDynamicClass":"统信号的变化,验证效率受到极大制约,很难实现高效的验证效果。<em class='similar 24S47I3' onmouseover=\"highlightSetter('24S47I3',false)\" onmouseout=\"highlightSetter('24S47I3',true)\">针对软件模拟仿真的局限性,</em><em class='similar 24S47I4' onmouseover=\"highlightSetter('24S47I4',false)\" onmouseout=\"highlightSetter('24S47I4',true)\">各大集成电路公司提出了硬件加速器仿真验证,</em><em class='similar 24S47I5' onmouseover=\"highlightSetter('24S47I5',false)\" onmouseout=\"highlightSetter('24S47I5',true)\">主要思想是做出专门的硬件加速器,</em>将软件模拟中的某些复杂运算交给硬件加速器计算,最后","datatype":"webpage","clcs":[],"similarityPercentage":"80.4%","self":false,"text":"统信号的变化,验证效率受到极大制约,很难实现高效的验证效果。<em class='similar'>针对软件模拟仿真的局限性,</em><em class='similar'>各大集成电路公司提出了硬件加速器仿真验证,</em><em class='similar'>主要思想是做出专门的硬件加速器,</em>将软件模拟中的某些复杂运算交给硬件加速器计算,最后"}],"textWithDynamicClass":"验证的效率也将会被极大制约,从而很难高效的实现验证结果[3]。<em class='similar T23I0' onmouseover=\"highlightSetter('T23I0',false)\" onmouseout=\"highlightSetter('T23I0',true)\">针对软件模拟仿真的局限性,</em><em class='similar T23I1' onmouseover=\"highlightSetter('T23I1',false)\" onmouseout=\"highlightSetter('T23I1',true)\">各大EDA厂商与集成电路厂商进而提出通过硬件加速���来实现仿真验证,</em><em class='similar T23I2' onmouseover=\"highlightSetter('T23I2',false)\" onmouseout=\"highlightSetter('T23I2',true)\">其主要思想是通过专门的硬件加速器,</em>","similar_word_count":58,"text":"验证的效率也将会被极大制约,从而很难高效的实现验证结果[3]。<em class='similar'>针对软件模拟仿真的局限性,</em><em class='similar'>各大EDA厂商与集成电路厂商进而提出通过硬件加速器来实现仿真验证,</em><em class='similar'>其主要思想是通过专门的硬件加速器,</em>","suggest":{"synonyms":[],"keyword":["模拟仿真","局限性","厂商","集成电路","硬件加速器","仿真验证","主要思想"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":387.8704,"teacher":"","textWithDynamicClass":"司提出了硬件加速器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar 25S48I4' onmouseover=\"highlightSetter('25S48I4',false)\" onmouseout=\"highlightSetter('25S48I4',true)\">将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar 25S48I5' onmouseover=\"highlightSetter('25S48I5',false)\" onmouseout=\"highlightSetter('25S48I5',true)\">最后硬件加速器将运算结果传回仿真软件,</em>最终从整体上提升验证效率","datatype":"webpage","clcs":[],"similarityPercentage":"54.4%","self":false,"text":"司提出了硬件加速器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar'>将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em>最终从整体上提升验证效率"}],"textWithDynamicClass":"其主要思想是通过专门的硬件加速器,<em class='similar T24I0' onmouseover=\"highlightSetter('T24I0',false)\" onmouseout=\"highlightSetter('T24I0',true)\">将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,</em>","similar_word_count":27,"text":"其主要思想是通过专门的硬件加速器,<em class='similar'>将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,</em>","suggest":{"synonyms":[{"synonyms":["通告"],"keyword":"告诉"}],"keyword":["软件仿真","运算","告诉","硬件加速器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":387.8704,"teacher":"","textWithDynamicClass":"司提出了硬件加速器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar 25S48I4' onmouseover=\"highlightSetter('25S48I4',false)\" onmouseout=\"highlightSetter('25S48I4',true)\">将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar 25S48I5' onmouseover=\"highlightSetter('25S48I5',false)\" onmouseout=\"highlightSetter('25S48I5',true)\">最后硬件加速器将运算结果传回仿真软件,</em><em class='similar 25S48I6' onmouseover=\"highlightSetter('25S48I6',false)\" onmouseout=\"highlightSetter('25S48I6',true)\">最终从整体上提升验证效率</em>[3]。而且硬件加速器验证的仿真环境也更加真实,相","datatype":"webpage","clcs":[],"similarityPercentage":"78.4%","self":false,"text":"司提出了硬件加速器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar'>将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em><em class='similar'>最终从整体上提升验证效率</em>[3]。而且硬件加速器验证的仿真环境也更加真实,相"}],"textWithDynamicClass":"将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,<em class='similar T24I1' onmouseover=\"highlightSetter('T24I1',false)\" onmouseout=\"highlightSetter('T24I1',true)\">最后硬件加速器将运算结果传回仿真软件,</em><em class='similar T24I2' onmouseover=\"highlightSetter('T24I2',false)\" onmouseout=\"highlightSetter('T24I2',true)\">最终提升整体上的验证效率。</em>","similar_word_count":30,"text":"将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,<em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em><em class='similar'>最终提升整体上的验证效率。</em>","suggest":{"synonyms":[],"keyword":["运算","硬件加速器","运算结果","传回","仿真软件","验证效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":462.27274,"teacher":"","textWithDynamicClass":"<em class='similar 26S49I0' onmouseover=\"highlightSetter('26S49I0',false)\" onmouseout=\"highlightSetter('26S49I0',true)\">司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,最后硬件加速器将运算结果传回仿真软件,最终从整体上提升验证效率[3]。<em class='similar 26S49I6' onmouseover=\"highlightSetter('26S49I6',false)\" onmouseout=\"highlightSetter('26S49I6',true)\">而且硬件加速器验证的仿真环境也更加真实,</em>相比于软件去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"<em class='similar'>司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,最后硬件加速器将运算结果传回仿真软件,最终从整体上提升验证效率[3]。<em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em>相比于软件去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,"}],"textWithDynamicClass":"最后硬件加速器将运算结果传回仿真软件,最终提升整体上的验证效率。<em class='similar T25I0' onmouseover=\"highlightSetter('T25I0',false)\" onmouseout=\"highlightSetter('T25I0',true)\">而且硬件加速器验证的仿真环境也更加真实,</em>","similar_word_count":19,"text":"最后硬件加速器将运算结果传回仿真软件,最终提升整体上的验证效率。<em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em>","suggest":{"synonyms":[],"keyword":["硬件加速器","仿真环境","仿真","硬件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":462.27274,"teacher":"","textWithDynamicClass":"<em class='similar 26S49I0' onmouseover=\"highlightSetter('26S49I0',false)\" onmouseout=\"highlightSetter('26S49I0',true)\">司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,最后硬件加速器将运算结果传回仿真软件,最终从整体上提升验证效率[3]。<em class='similar 26S49I6' onmouseover=\"highlightSetter('26S49I6',false)\" onmouseout=\"highlightSetter('26S49I6',true)\">而且硬件加速器验证的仿真环境也更加真实,</em>相比于软件去实现芯片电路的模型构建,<em class='similar 26S49I8' onmouseover=\"highlightSetter('26S49I8',false)\" onmouseout=\"highlightSetter('26S49I8',true)\">硬件加速器采用真实的硬件仿真环境,</em><em class='similar 26S49I9' onmouseover=\"highlightSetter('26S49I9',false)\" onmouseout=\"highlightSetter('26S49I9',true)\">可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,这","datatype":"webpage","clcs":[],"similarityPercentage":"89.2%","self":false,"text":"<em class='similar'>司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,最后硬件加速器将运算结果传回仿真软件,最终从整体上提升验证效率[3]。<em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em>相比于软件去实现芯片电路的模型构建,<em class='similar'>硬件加速器采用真实的硬件仿真环境,</em><em class='similar'>可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,这"}],"textWithDynamicClass":"相比于完全使用软件来实现仿真,<em class='similar T25I2' onmouseover=\"highlightSetter('T25I2',false)\" onmouseout=\"highlightSetter('T25I2',true)\">硬件加速器使用了真实的硬件仿真环境,</em><em class='similar T25I3' onmouseover=\"highlightSetter('T25I3',false)\" onmouseout=\"highlightSetter('T25I3',true)\">可以更加真实的反映集成电路设计系统的各种问题,</em>","similar_word_count":39,"text":"相比于完全使用软件来实现仿真,<em class='similar'>硬件加速器使用了真实的硬件仿真环境,</em><em class='similar'>可以更加真实的反映集成电路设计系统的各种问题,</em>","suggest":{"synonyms":[],"keyword":["硬件加速器","仿真环境","仿真","真实的","硬件","集成电路","设计系统","各种问题"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":760.78564,"teacher":"","textWithDynamicClass":"的各种问题,有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar 27S50I5' onmouseover=\"highlightSetter('27S50I5',false)\" onmouseout=\"highlightSetter('27S50I5',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar 27S50I6' onmouseover=\"highlightSetter('27S50I6',false)\" onmouseout=\"highlightSetter('27S50I6',true)\">典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em>但是硬件加速仿真验证也存在缺陷,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"的各种问题,有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em>但是硬件加速仿真验证也存在缺陷,"}],"textWithDynamicClass":"可以更加真实的反映集成电路设计系统的各种问题,从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,<em class='similar T26I1' onmouseover=\"highlightSetter('T26I1',false)\" onmouseout=\"highlightSetter('T26I1',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar T26I2' onmouseover=\"highlightSetter('T26I2',false)\" onmouseout=\"highlightSetter('T26I2',true)\">典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>","similar_word_count":41,"text":"可以更加真实的反映集成电路设计系统的各种问题,从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>","suggest":{"synonyms":[],"keyword":["工程师","调试","硬件仿真器","硬件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":760.78564,"teacher":"","textWithDynamicClass":"典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。<em class='similar 27S50I7' onmouseover=\"highlightSetter('27S50I7',false)\" onmouseout=\"highlightSetter('27S50I7',true)\">但是硬件加速仿真验证也存在缺陷,</em>因为这种方法需要专门的团队进行硬件加速器的设计,并且还需要设计软件模拟器与硬件加速器之间的通信接口,","datatype":"webpage","clcs":[],"similarityPercentage":"92.3%","self":false,"text":"典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。<em class='similar'>但是硬件加速仿真验证也存在缺陷,</em>因为这种方法需要专门的团队进行硬件加速器的设计,并且还需要设计软件模拟器与硬件加速器之间的通信接口,"}],"textWithDynamicClass":"[35]。<em class='similar T26I4' onmouseover=\"highlightSetter('T26I4',false)\" onmouseout=\"highlightSetter('T26I4',true)\">但是硬件仿真器也存在固有的缺陷,</em>","similar_word_count":15,"text":"[35]。<em class='similar'>但是硬件仿真器也存在固有的缺陷,</em>","suggest":{"synonyms":[],"keyword":["硬件仿真器","固有","硬件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":760.78564,"teacher":"","textWithDynamicClass":"但是硬件加速仿真验证也存在缺陷,因为这种方法需要专门的团队进行硬件加速器的设计,<em class='similar 27S50I9' onmouseover=\"highlightSetter('27S50I9',false)\" onmouseout=\"highlightSetter('27S50I9',true)\">并且还需要设计软件模拟器与硬件加速器之间的通信接口,</em>而一旦所验证的设计改变,","datatype":"webpage","clcs":[],"similarityPercentage":"88.0%","self":false,"text":"但是硬件加速仿真验证也存在缺陷,因为这种方法需要专门的团队进行硬件加速器的设计,<em class='similar'>并且还需要设计软件模拟器与硬件加速器之间的通信接口,</em>而一旦所验证的设计改变,"}],"textWithDynamicClass":"因为其需要针对特定的电路构造特点的硬件加速设备,<em class='similar T26I6' onmouseover=\"highlightSetter('T26I6',false)\" onmouseout=\"highlightSetter('T26I6',true)\">同时还需要EDA软件与硬件加速设备间的通信接口,</em>","similar_word_count":21,"text":"因为其需要针对特定的电路构造特点的硬件加速设备,<em class='similar'>同时还需要EDA软件与硬件加速设备间的通信接口,</em>","suggest":{"synonyms":[],"keyword":["硬件加速","设备间","通信接口","硬件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":760.78564,"teacher":"","textWithDynamicClass":"因为这种方法需要专门的团队进行硬件加速器的设计,并且还需要设计软件模拟器与硬件加速器之间的通信接口,<em class='similar 27S50I10' onmouseover=\"highlightSetter('27S50I10',false)\" onmouseout=\"highlightSetter('27S50I10',true)\">而一旦所验证的设计改变,</em><em class='similar 27S50I11' onmouseover=\"highlightSetter('27S50I11',false)\" onmouseout=\"highlightSetter('27S50I11',true)\">原来的硬件加速器便无法再次重复利用,</em>","datatype":"webpage","clcs":[],"similarityPercentage":"84.9%","self":false,"text":"因为这种方法需要专门的团队进行硬件加速器的设计,并且还需要设计软件模拟器与硬件加速器之间的通信接口,<em class='similar'>而一旦所验证的设计改变,</em><em class='similar'>原来的硬件加速器便无法再次重复利用,</em>"}],"textWithDynamicClass":"同时还需要EDA软件与硬件加速设备间的通信接口,<em class='similar T26I7' onmouseover=\"highlightSetter('T26I7',false)\" onmouseout=\"highlightSetter('T26I7',true)\">而一旦所验证的设计改变,</em><em class='similar T26I8' onmouseover=\"highlightSetter('T26I8',false)\" onmouseout=\"highlightSetter('T26I8',true)\">原有的硬件加速固件将可能无法复用,</em>","similar_word_count":27,"text":"同时还需要EDA软件与硬件加速设备间的通信接口,<em class='similar'>而一旦所验证的设计改变,</em><em class='similar'>原有的硬件加速固件将可能无法复用,</em>","suggest":{"synonyms":[],"keyword":["硬件加速","固件","复用","硬件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":529.9151,"teacher":"","textWithDynamicClass":"件加速器和通信接口。从理论上讲,<em class='similar 28S51I2' onmouseover=\"highlightSetter('28S51I2',false)\" onmouseout=\"highlightSetter('28S51I2',true)\">本文的原型验证也可以通过硬件仿真器实现,</em><em class='similar 28S51I3' onmouseover=\"highlightSetter('28S51I3',false)\" onmouseout=\"highlightSetter('28S51I3',true)\">但硬件仿真器的价格太昂贵,</em>而且由于 FPGA 的技术积累已经比较成熟,","datatype":"webpage","clcs":[],"similarityPercentage":"67.0%","self":false,"text":"件加速器和通信接口。从理论上讲,<em class='similar'>本文的原型验证也可以通过硬件仿真器实现,</em><em class='similar'>但硬件仿真器的价格太昂贵,</em>而且由于 FPGA 的技术积累已经比较成熟,"}],"textWithDynamicClass":"原有的硬件加速固件将可能无法复用,从而需要重新设计硬件固件及相关接口。从理论上讲,<em class='similar T27I0' onmouseover=\"highlightSetter('T27I0',false)\" onmouseout=\"highlightSetter('T27I0',true)\">本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,</em><em class='similar T27I1' onmouseover=\"highlightSetter('T27I1',false)\" onmouseout=\"highlightSetter('T27I1',true)\">但硬件仿真器的成本高昂,</em>","similar_word_count":38,"text":"原有的硬件加速固件将可能无法复用,从而需要重新设计硬件固件及相关接口。从理论上讲,<em class='similar'>本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,</em><em class='similar'>但硬件仿真器的成本高昂,</em>","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"},{"synonyms":["高亢"],"keyword":"高昂"}],"keyword":["提及","高密度","原型验证系统","亦可","硬件仿真器","高昂","原型验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":529.9151,"teacher":"","textWithDynamicClass":"但硬件仿真器的价格太昂贵,<em class='similar 28S51I4' onmouseover=\"highlightSetter('28S51I4',false)\" onmouseout=\"highlightSetter('28S51I4',true)\">而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。随着 FPGA 性能的不断提升,","datatype":"webpage","clcs":[],"similarityPercentage":"64.3%","self":false,"text":"但硬件仿真器的价格太昂贵,<em class='similar'>而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。随着 FPGA 性能的不断提升,"}],"textWithDynamicClass":"本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,但硬件仿真器的成本高昂,<em class='similar T27I2' onmouseover=\"highlightSetter('T27I2',false)\" onmouseout=\"highlightSetter('T27I2',true)\">而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>","similar_word_count":25,"text":"本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,但硬件仿真器的成本高昂,<em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>","suggest":{"synonyms":[{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["完好"],"keyword":"完备"}],"keyword":["当代","技术发展","配套软件","完备"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":529.9151,"teacher":"","textWithDynamicClass":"而且由于 FPGA 的技术积累已经比较成熟,所以本文采用 FPGA 实现原型验证。<em class='similar 28S51I6' onmouseover=\"highlightSetter('28S51I6',false)\" onmouseout=\"highlightSetter('28S51I6',true)\">随着 FPGA 性能的不断提升,</em><em class='similar 28S51I7' onmouseover=\"highlightSetter('28S51I7',false)\" onmouseout=\"highlightSetter('28S51I7',true)\">基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG","datatype":"webpage","clcs":[],"similarityPercentage":"77.8%","self":false,"text":"而且由于 FPGA 的技术积累已经比较成熟,所以本文采用 FPGA 实现原型验证。<em class='similar'>随着 FPGA 性能的不断提升,</em><em class='similar'>基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG"}],"textWithDynamicClass":"所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar T27I5' onmouseover=\"highlightSetter('T27I5',false)\" onmouseout=\"highlightSetter('T27I5',true)\">随着FPGA性能的不断提升,</em><em class='similar T27I6' onmouseover=\"highlightSetter('T27I6',false)\" onmouseout=\"highlightSetter('T27I6',true)\">基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","similar_word_count":34,"text":"所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","suggest":{"synonyms":[],"keyword":["原型验证","芯片验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":239.54285,"teacher":"","textWithDynamicClass":"够系统全面的反映设计功能等优势,被越来越多的验证团队所采用。近年来,随着便携式可穿戴设备和移动智能手机市场的需求逐渐旺盛,高性能ASIC 芯片的功能与复杂度也逐步攀升,<em class='similar 29S52I5' onmouseover=\"highlightSetter('29S52I5',false)\" onmouseout=\"highlightSetter('29S52I5',true)\">单个 FPGA 的资源已无法满足验证一个 ASIC芯片设计的需要,</em>因此基于多 FPGA 的验证技术成为最佳选择。","datatype":"webpage","clcs":[],"similarityPercentage":"68.3%","self":false,"text":"够系统全面的反映设计功能等优势,被越来越多的验证团队所采用。近年来,随着便携式可穿戴设备和移动智能手机市场的需求逐渐旺盛,高性能ASIC 芯片的功能与复杂度也逐步攀升,<em class='similar'>单个 FPGA 的资源已无法满足验证一个 ASIC芯片设计的需要,</em>因此基于多 FPGA 的验证技术成为最佳选择。"}],"textWithDynamicClass":"随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,<em class='similar T28I4' onmouseover=\"highlightSetter('T28I4',false)\" onmouseout=\"highlightSetter('T28I4',true)\">仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,</em>","similar_word_count":21,"text":"随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,<em class='similar'>仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,</em>","suggest":{"synonyms":[],"keyword":["单个","片上资源","芯片设计"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":239.54285,"teacher":"","textWithDynamicClass":"随着便携式可穿戴设备和移动智能手机市场的需求逐渐旺盛,高性能ASIC 芯片的功能与复杂度也逐步攀升,单个 FPGA 的资源已无法满足验证一个 ASIC芯片设计的需要,<em class='similar 29S52I6' onmouseover=\"highlightSetter('29S52I6',false)\" onmouseout=\"highlightSetter('29S52I6',true)\">因此基于多 FPGA 的验证技术成为最佳选择。</em>而使用多个 FPGA搭建验证平台也必然带来逻辑划分","datatype":"webpage","clcs":[],"similarityPercentage":"72.3%","self":false,"text":"随着便携式可穿戴设备和移动智能手机市场的需求逐渐旺盛,高性能ASIC 芯片的功能与复杂度也逐步攀升,单个 FPGA 的资源已无法满足验证一个 ASIC芯片设计的需要,<em class='similar'>因此基于多 FPGA 的验证技术成为最佳选择。</em>而使用多个 FPGA搭建验证平台也必然带来逻辑划分"}],"textWithDynamicClass":"仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,<em class='similar T28I5' onmouseover=\"highlightSetter('T28I5',false)\" onmouseout=\"highlightSetter('T28I5',true)\">因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</em>","similar_word_count":25,"text":"仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,<em class='similar'>因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</em>","suggest":{"synonyms":[],"keyword":["多颗","高密度","原型","验证技术","最优"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000798956911","author":"JXT","university":"","source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":"","reference":false,"similarScore":145.6,"teacher":"","textWithDynamicClass":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar 30S53I10' onmouseover=\"highlightSetter('30S53I10',false)\" onmouseout=\"highlightSetter('30S53I10',true)\">设计者将要通过硬件描述语言在寄存器传输级</em>(Register Transfer Level,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"76.0%","self":false,"text":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar'>设计者将要通过硬件描述语言在寄存器传输级</em>(Register Transfer Level,"}],"textWithDynamicClass":"<em class='similar T29I0' onmouseover=\"highlightSetter('T29I0',false)\" onmouseout=\"highlightSetter('T29I0',true)\">当设计者通过硬件描述语言完成对集成电路寄存器传输级</em>","similar_word_count":25,"text":"<em class='similar'>当设计者通过硬件描述语言完成对集成电路寄存器传输级</em>","suggest":{"synonyms":[],"keyword":["设计者","硬件描述语言","集成电路","寄存器传输级"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000798956911","author":"JXT","university":"","source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":"","reference":false,"similarScore":145.6,"teacher":"","textWithDynamicClass":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,设计者将要通过硬件描述语言在寄存器传输级<em class='similar 30S53I11' onmouseover=\"highlightSetter('30S53I11',false)\" onmouseout=\"highlightSetter('30S53I11',true)\">(Register Transfer Level,</em>RTL)进行逻辑设计[13],进而在逻辑级定义芯","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"78.8%","self":false,"text":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,设计者将要通过硬件描述语言在寄存器传输级<em class='similar'>(Register Transfer Level,</em>RTL)进行逻辑设计[13],进而在逻辑级定义芯"}],"textWithDynamicClass":"当设计者通过硬件描述语言完成对集成电路寄存器传输级<em class='similar T29I1' onmouseover=\"highlightSetter('T29I1',false)\" onmouseout=\"highlightSetter('T29I1',true)\">(Register Transfer Level,</em>","similar_word_count":6,"text":"当设计者通过硬件描述语言完成对集成电路寄存器传输级<em class='similar'>(Register Transfer Level,</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190331742911","author":"","university":"","source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html","reference":false,"similarScore":148.66666,"teacher":"","textWithDynamicClass":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar 31S56I5' onmouseover=\"highlightSetter('31S56I5',false)\" onmouseout=\"highlightSetter('31S56I5',true)\">逻辑综合、</em><em class='similar 31S56I6' onmouseover=\"highlightSetter('31S56I6',false)\" onmouseout=\"highlightSetter('31S56I6',true)\">逻辑优化、</em><em class='similar 31S56I7' onmouseover=\"highlightSetter('31S56I7',false)\" onmouseout=\"highlightSetter('31S56I7',true)\">技术映射、</em><em class='similar 31S56I8' onmouseover=\"highlightSetter('31S56I8',false)\" onmouseout=\"highlightSetter('31S56I8',true)\">打包、</em><em class='similar 31S56I9' onmouseover=\"highlightSetter('31S56I9',false)\" onmouseout=\"highlightSetter('31S56I9',true)\">布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节","datatype":"webpage","clcs":[],"similarityPercentage":"76.6%","self":false,"text":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar'>逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>打包、</em><em class='similar'>布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节"}],"textWithDynamicClass":"的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar T30I1' onmouseover=\"highlightSetter('T30I1',false)\" onmouseout=\"highlightSetter('T30I1',true)\">包括逻辑综合、</em><em class='similar T30I2' onmouseover=\"highlightSetter('T30I2',false)\" onmouseout=\"highlightSetter('T30I2',true)\">逻辑优化、</em><em class='similar T30I3' onmouseover=\"highlightSetter('T30I3',false)\" onmouseout=\"highlightSetter('T30I3',true)\">技术映射、</em><em class='similar T30I4' onmouseover=\"highlightSetter('T30I4',false)\" onmouseout=\"highlightSetter('T30I4',true)\">逻辑打包、</em><em class='similar T30I5' onmouseover=\"highlightSetter('T30I5',false)\" onmouseout=\"highlightSetter('T30I5',true)\">布局、</em><em class='similar T30I6' onmouseover=\"highlightSetter('T30I6',false)\" onmouseout=\"highlightSetter('T30I6',true)\">布线等。</em>","similar_word_count":23,"text":"的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件���RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>逻辑打包、</em><em class='similar'>布局、</em><em class='similar'>布线等。</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["构造"],"keyword":"布局"}],"keyword":["逻辑综合","逻辑优化","映射","逻辑","打包","布局","布线"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000137314923511","author":"","university":"","source":"网页","title":"基于NPN的快速函数分类算法 - 道客巴巴","url":"http://www.doc88.com/p%2D0748678725567.html","reference":false,"similarScore":213.33333,"teacher":"","textWithDynamicClass":"可以看出,ASIC的自顶向下的设计流程依次包括:系统级设计,<em class='similar 32S57I12' onmouseover=\"highlightSetter('32S57I12',false)\" onmouseout=\"highlightSetter('32S57I12',true)\">RTL级设计,</em><em class='similar 32S57I13' onmouseover=\"highlightSetter('32S57I13',false)\" onmouseout=\"highlightSetter('32S57I13',true)\">逻辑综合,</em><em class='similar 32S57I14' onmouseover=\"highlightSetter('32S57I14',false)\" onmouseout=\"highlightSetter('32S57I14',true)\">工艺映射,</em>布局布线,生成版图。FPGA的EDA流程如图2m)所示。从图中可以看出,FPGA的自顶向下的设计流程依次包括:系统级设计,<em class='similar 32S57I22' onmouseover=\"highlightSetter('32S57I22',false)\" onmouseout=\"highlightSetter('32S57I22',true)\">RTL级设计,</em><em class='similar 32S57I23' onmouseover=\"highlightSetter('32S57I23',false)\" onmouseout=\"highlightSetter('32S57I23',true)\">逻辑综合,</em><em class='similar 32S57I24' onmouseover=\"highlightSetter('32S57I24',false)\" onmouseout=\"highlightSetter('32S57I24',true)\">工艺映射,</em>打包,布局布线,生成位流。","datatype":"webpage","clcs":[],"similarityPercentage":"92.6%","self":false,"text":"可以看出,ASIC的自顶向下的设计流程依次包括:系统级设计,<em class='similar'>RTL级设计,</em><em class='similar'>逻辑综合,</em><em class='similar'>工艺映射,</em>布局布线,生成版图。FPGA的EDA流程如图2m)所示。从图中可以看出,FPGA的自顶向下的设计流程依次包括:系统级设计,<em class='similar'>RTL级设计,</em><em class='similar'>逻辑综合,</em><em class='similar'>工艺映射,</em>打包,布局布线,生成位流。"},{"profession":false,"keywords":[],"year":"","docid":"9000137314923511","author":"","university":"","source":"网页","title":"基于NPN的快速函数分类算法 - 道客巴巴","url":"http://www.doc88.com/p%2D0748678725567.html","reference":false,"similarScore":160,"teacher":"","textWithDynamicClass":"包含的设计流程主要是自顶向下的设计流程。万方数据系统级设计,<em class='similar 32S58I3' onmouseover=\"highlightSetter('32S58I3',false)\" onmouseout=\"highlightSetter('32S58I3',true)\">RTL级设计逻辑综合上工艺映射</em>(Ma卯jng)、 rl布局(PIa舱)、 r{布线(Route)、 r版图生成版图图2(a)AsIC设计流程系统级设计,<em class='similar 32S58I13' onmouseover=\"highlightSetter('32S58I13',false)\" onmouseout=\"highlightSetter('32S58I13',true)\">RTL级设计上逻辑综合一~~量�6�8�6�8一工艺映射</em>(Mapping)一~』~~打包(","datatype":"webpage","clcs":[],"similarityPercentage":"44.1%","self":false,"text":"包含的设计流程主要是自顶向下的设计流程。万方数据系统级设计,<em class='similar'>RTL级设计逻辑综合上工艺映射</em>(Ma卯jng)、 rl布局(PIa舱)、 r{布线(Route)、 r版图生成版图图2(a)AsIC设计流程系统级设计,<em class='similar'>RTL级设计上逻辑综合一~~量�6�8�6�8一工艺映射</em>(Mapping)一~』~~打包("}],"textWithDynamicClass":"由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、<em class='similar T31I2' onmouseover=\"highlightSetter('T31I2',false)\" onmouseout=\"highlightSetter('T31I2',true)\">RTL级设计分割、</em><em class='similar T31I3' onmouseover=\"highlightSetter('T31I3',false)\" onmouseout=\"highlightSetter('T31I3',true)\">逻辑综合、</em><em class='similar T31I4' onmouseover=\"highlightSetter('T31I4',false)\" onmouseout=\"highlightSetter('T31I4',true)\">工艺映射、</em>","similar_word_count":14,"text":"由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、<em class='similar'>RTL级设计分割、</em><em class='similar'>逻辑综合、</em><em class='similar'>工艺映射、</em>","suggest":{"synonyms":[{"synonyms":["割据"],"keyword":"分割"}],"keyword":["级设计","分割","逻辑综合","工艺映射"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000207135856711","author":"","university":"","source":"网页","title":"搭建一对一直播平台，选择直播系统源码，这几点不容忽视","url":"https://www.docin.com/p%2D2431152169.html","reference":false,"similarScore":129.59998,"teacher":"","textWithDynamicClass":"果自己拿到一套源码光是修改和搭建就需要耗费一到两个月的时间,<em class='similar 33S59I3' onmouseover=\"highlightSetter('33S59I3',false)\" onmouseout=\"highlightSetter('33S59I3',true)\">那后期所耗费的时间成本和人力成本也是不可预估的。</em>另外,选择专业服务商不仅可以提供优质源码,还可以提","datatype":"webpage","clcs":[],"similarityPercentage":"53.1%","self":false,"text":"果自己拿到一套源码光是修改和搭建就需要耗费一到两个月的时间,<em class='similar'>那后期所耗费的时间成本和人力成本也是不可预估的。</em>另外,选择专业服务商不仅可以提供优质源码,还可以提"}],"textWithDynamicClass":"若用户的设计超过百亿门时,<em class='similar T32I1' onmouseover=\"highlightSetter('T32I1',false)\" onmouseout=\"highlightSetter('T32I1',true)\">进行一次迭代所耗费的时间成本,</em><em class='similar T32I2' onmouseover=\"highlightSetter('T32I2',false)\" onmouseout=\"highlightSetter('T32I2',true)\">人力成本都是不可预估的,</em>","similar_word_count":25,"text":"若用户的设计超过百亿门时,<em class='similar'>进行一次迭代所耗费的时间成本,</em><em class='similar'>人力成本都是不可预估的,</em>","suggest":{"synonyms":[{"synonyms":["糜费"],"keyword":"耗费"}],"keyword":["迭代","耗费","时间成本","人力成本","预估"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000761364311","author":"","university":"","source":"大学生论文联合库","title":"土壤含水量计算方法及应用","url":"","reference":false,"similarScore":172.01923,"teacher":"","textWithDynamicClass":"存在门电路不足的缺陷,同时,作为定制电路,它们应用场合有限,<em class='similar 35S62I8' onmouseover=\"highlightSetter('35S62I8',false)\" onmouseout=\"highlightSetter('35S62I8',true)\">在这样的时代背景下,</em>FPGA(<em class='similar 35S62I10' onmouseover=\"highlightSetter('35S62I10',false)\" onmouseout=\"highlightSetter('35S62I10',true)\">现场可编程门阵列)</em><em class='similar 35S62I11' onmouseover=\"highlightSetter('35S62I11',false)\" onmouseout=\"highlightSetter('35S62I11',true)\">变应运而生。</em>UDB1008S信号发生器同时具有TTL 输出和","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"64.2%","self":false,"text":"存在门电路不足的缺陷,同时,作为定制电路,它们应用场合有限,<em class='similar'>在这样的时代背景下,</em>FPGA(<em class='similar'>现场可编程门阵列)</em><em class='similar'>变应运而生。</em>UDB1008S信号发生器同时具有TTL 输出和"}],"textWithDynamicClass":"FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。<em class='similar T34I7' onmouseover=\"highlightSetter('T34I7',false)\" onmouseout=\"highlightSetter('T34I7',true)\">在这种时代背景下,</em><em class='similar T34I8' onmouseover=\"highlightSetter('T34I8',false)\" onmouseout=\"highlightSetter('T34I8',true)\">现场可编程门阵列FPGA应运而生。</em>","similar_word_count":21,"text":"FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。<em class='similar'>在这种时代背景下,</em><em class='similar'>现场可编程门阵列FPGA应运而生。</em>","suggest":{"synonyms":[],"keyword":["现场可编程门阵列","应运而生"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190765717911","author":"","university":"","source":"网页","title":"2019年12月_oyzy_Sean的篝火_SeanOY_CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/month/2019/12","reference":false,"similarScore":139.66664,"teacher":"","textWithDynamicClass":"A学习笔记(四)FPGA概要一、FPGA组成要素FPGA主要<em class='similar 36S66I8' onmouseover=\"highlightSetter('36S66I8',false)\" onmouseout=\"highlightSetter('36S66I8',true)\">由三部分组成</em>:<em class='similar 36S66I9' onmouseover=\"highlightSetter('36S66I9',false)\" onmouseout=\"highlightSetter('36S66I9',true)\">实现逻辑电路的逻辑要素</em><em class='similar 36S66I10' onmouseover=\"highlightSetter('36S66I10',false)\" onmouseout=\"highlightSetter('36S66I10',true)\">(逻辑块,</em>Logical Block,LB)、与外部进行信号","datatype":"webpage","clcs":[],"similarityPercentage":"52.3%","self":false,"text":"A学习笔记(四)FPGA概要一、FPGA组成要素FPGA主要<em class='similar'>由三部分组成</em>:<em class='similar'>实现逻辑电路的逻辑要素</em><em class='similar'>(逻辑块,</em>Logical Block,LB)、与外部进行信号"},{"profession":false,"keywords":[],"year":"","docid":"9000139077271711","author":"","university":"","source":"网页","title":"基于FPGA的高速信号采集 - 道客巴巴","url":"http://www.doc88.com/p%2D3761385833794.html","reference":false,"similarScore":95.71428,"teacher":"","textWithDynamicClass":"二是直接输入内部[8]。图2-2I/O单元结构图(2)可配置<em class='similar 36S64I7' onmouseover=\"highlightSetter('36S64I7',false)\" onmouseout=\"highlightSetter('36S64I7',true)\">逻辑块</em>(CLB)CLB(<em class='similar 36S64I10' onmouseover=\"highlightSetter('36S64I10',false)\" onmouseout=\"highlightSetter('36S64I10',true)\">Configurable Logic Block)</em>是FPGA内的基本逻辑单元。","datatype":"webpage","clcs":[],"similarityPercentage":"43.5%","self":false,"text":"二是直接输入内部[8]。图2-2I/O单元结构图(2)可配置<em class='similar'>逻辑块</em>(CLB)CLB(<em class='similar'>Configurable Logic Block)</em>是FPGA内的基本逻辑单元。"},{"profession":false,"keywords":[],"year":"","docid":"9000099944372611","author":"","university":"","source":"网页","title":"CME-HRFa","url":"","reference":false,"similarScore":88.214294,"teacher":"","textWithDynamicClass":"钟管理模块。第2章 FPGA 可编程逻辑模块(PLB)可编程<em class='similar 36S65I9' onmouseover=\"highlightSetter('36S65I9',false)\" onmouseout=\"highlightSetter('36S65I9',true)\">逻辑模块</em><em class='similar 36S65I10' onmouseover=\"highlightSetter('36S65I10',false)\" onmouseout=\"highlightSetter('36S65I10',true)\">(Programmable Logic Block)</em>是基本的逻辑块,","datatype":"webpage","clcs":[],"similarityPercentage":"40.3%","self":false,"text":"钟管理模块。第2章 FPGA 可编程逻辑模块(PLB)可编程<em class='similar'>逻辑模块</em><em class='similar'>(Programmable Logic Block)</em>是基本的逻辑块,"}],"textWithDynamicClass":"FPGA大致<em class='similar T35I0' onmouseover=\"highlightSetter('T35I0',false)\" onmouseout=\"highlightSetter('T35I0',true)\">由三部分构成</em><em class='similar'>:</em><em class='similar T35I1' onmouseover=\"highlightSetter('T35I1',false)\" onmouseout=\"highlightSetter('T35I1',true)\">第一部分是实现逻辑电路的逻辑要素即逻辑块</em><em class='similar T35I2' onmouseover=\"highlightSetter('T35I2',false)\" onmouseout=\"highlightSetter('T35I2',true)\">(Logic Block,</em>","similar_word_count":30,"text":"FPGA大致<em class='similar'>由三部分构成</em><em class='similar'>:</em><em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em><em class='similar'>(Logic Block,</em>","suggest":{"synonyms":[],"keyword":["第一部分","逻辑电路","逻辑要素","逻辑块"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139077271711","author":"","university":"","source":"网页","title":"基于FPGA的高速信号采集 - 道客巴巴","url":"http://www.doc88.com/p%2D3761385833794.html","reference":false,"similarScore":95.71428,"teacher":"","textWithDynamicClass":"(CLB)CLB(Configurable Logic Block)<em class='similar 36S64I11' onmouseover=\"highlightSetter('36S64I11',false)\" onmouseout=\"highlightSetter('36S64I11',true)\">是FPGA内的基本逻辑单元。</em>不同特性器件的CLB的实际数量不同,一定程度上讲,","datatype":"webpage","clcs":[],"similarityPercentage":"54.2%","self":false,"text":"(CLB)CLB(Configurable Logic Block)<em class='similar'>是FPGA内的基本逻辑单元。</em>不同特性器件的CLB的实际数量不同,一定程度上讲,"},{"profession":false,"keywords":[],"year":"","docid":"9000099944372611","author":"","university":"","source":"网页","title":"CME-HRFa","url":"","reference":false,"similarScore":88.214294,"teacher":"","textWithDynamicClass":"(Programmable Logic Block)<em class='similar 36S65I11' onmouseover=\"highlightSetter('36S65I11',false)\" onmouseout=\"highlightSetter('36S65I11',true)\">是基本的逻辑块,</em><em class='similar 36S65I12' onmouseover=\"highlightSetter('36S65I12',false)\" onmouseout=\"highlightSetter('36S65I12',true)\">由逻辑单元</em>(LE)和 Xbar 组成。PLB 是 Fabri","datatype":"webpage","clcs":[],"similarityPercentage":"43.3%","self":false,"text":"(Programmable Logic Block)<em class='similar'>是基本的逻辑块,</em><em class='similar'>由逻辑单元</em>(LE)和 Xbar 组成。PLB 是 Fabri"}],"textWithDynamicClass":"LB)<em class='similar T35I4' onmouseover=\"highlightSetter('T35I4',false)\" onmouseout=\"highlightSetter('T35I4',true)\">也就是我们常说的基本逻辑单元,</em>","similar_word_count":14,"text":"LB)<em class='similar'>也就是我们常说的基本逻辑单元,</em>","suggest":{"synonyms":[],"keyword":["常说","逻辑单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190761327111","author":"","university":"","source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox","reference":false,"similarScore":287.29163,"teacher":"","textWithDynamicClass":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar 37S67I7' onmouseover=\"highlightSetter('37S67I7',false)\" onmouseout=\"highlightSetter('37S67I7',true)\">逻辑要素逻辑要素由可以实现任意逻辑电路的可编程部分触发器</em><em class='similar 37S67I8' onmouseover=\"highlightSetter('37S67I8',false)\" onmouseout=\"highlightSetter('37S67I8',true)\">(Flip-Flop,</em>FF)<em class='similar 37S67I10' onmouseover=\"highlightSetter('37S67I10',false)\" onmouseout=\"highlightSetter('37S67I10',true)\">等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/","datatype":"webpage","clcs":[],"similarityPercentage":"58.9%","self":false,"text":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar'>逻辑要素逻辑要素由可以实现任意逻辑电路的可���程部分触发器</em><em class='similar'>(Flip-Flop,</em>FF)<em class='similar'>等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/"}],"textWithDynamicClass":"可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等<em class='similar T36I0' onmouseover=\"highlightSetter('T36I0',false)\" onmouseout=\"highlightSetter('T36I0',true)\">,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,</em><em class='similar T36I1' onmouseover=\"highlightSetter('T36I1',false)\" onmouseout=\"highlightSetter('T36I1',true)\">FF等数据存储电路和数据选择器组成</em>","similar_word_count":49,"text":"可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等<em class='similar'>,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,</em><em class='similar'>FF等数据存储电路和数据选择器组成</em>","suggest":{"synonyms":[],"keyword":["逻辑电路","可编程","触发器","存储电路","数据选择器","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135795011511","author":"","university":"","source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310","reference":false,"similarScore":77.61903,"teacher":"","textWithDynamicClass":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB(Configurable Logic Block)来介绍,<em class='similar 38S68I3' onmouseover=\"highlightSetter('38S68I3',false)\" onmouseout=\"highlightSetter('38S68I3',true)\">把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把","datatype":"webpage","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB(Configurable Logic Block)来介绍,<em class='similar'>把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把"}],"textWithDynamicClass":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar T37I0' onmouseover=\"highlightSetter('T37I0',false)\" onmouseout=\"highlightSetter('T37I0',true)\">如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em>","similar_word_count":22,"text":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em>","suggest":{"synonyms":[],"keyword":["设计研发","逻辑单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135795011511","author":"","university":"","source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310","reference":false,"similarScore":77.61903,"teacher":"","textWithDynamicClass":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar 38S68I1' onmouseover=\"highlightSetter('38S68I1',false)\" onmouseout=\"highlightSetter('38S68I1',true)\">(Configurable Logic Block)</em>来介绍,把CLB作为FPGA里的最小逻辑单元。","datatype":"webpage","clcs":[],"similarityPercentage":"66.3%","self":false,"text":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar'>(Configurable Logic Block)</em>来介绍,把CLB作为FPGA里的最小逻辑单元。"}],"textWithDynamicClass":"如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB<em class='similar T37I1' onmouseover=\"highlightSetter('T37I1',false)\" onmouseout=\"highlightSetter('T37I1',true)\">(Configurable Logic Block)</em>","similar_word_count":6,"text":"如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB<em class='similar'>(Configurable Logic Block)</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000511009311","author":"-","university":"","source":"大学生论文联合库","title":"振动检测与控制系统","url":"","reference":false,"similarScore":220.63637,"teacher":"","textWithDynamicClass":"它的门电路不是受限制的,同时它不会有定制电路不足的问题出现。<em class='similar 39S69I4' onmouseover=\"highlightSetter('39S69I4',false)\" onmouseout=\"highlightSetter('39S69I4',true)\">FPGA芯片的主体由以下7个部分组成:</em>时钟管理、基本可编程逻辑单元、","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"54.8%","self":false,"text":"它的门电路不是受限制的,同时它不会有定制电路不足的问题出现。<em class='similar'>FPGA芯片的主体由以下7个部分组成:</em>时钟管理、基本可编程逻辑单元、"}],"textWithDynamicClass":"<em class='similar T38I0' onmouseover=\"highlightSetter('T38I0',false)\" onmouseout=\"highlightSetter('T38I0',true)\">上述FPGA三部分主要组成具体包括以下内容:</em>","similar_word_count":18,"text":"<em class='similar'>上述FPGA三部分主要组成具体包括以下内容:</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000697760411","author":"yu","university":"","source":"大学生论文联合库","title":"基于arm的信号发生器","url":"","reference":false,"similarScore":114.54545,"teacher":"","textWithDynamicClass":"组成部分。总的概括起来,FPGA的基本结构主要由6部分组成,<em class='similar 39S70I7' onmouseover=\"highlightSetter('39S70I7',false)\" onmouseout=\"highlightSetter('39S70I7',true)\">可编程输入/输出单元、</em><em class='similar 39S70I8' onmouseover=\"highlightSetter('39S70I8',false)\" onmouseout=\"highlightSetter('39S70I8',true)\">基本可编程逻辑单元、</em>内嵌的RAM、丰富的布线资源、底层的功能单元和专用","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"77.8%","self":false,"text":"组成部分。总的概括起来,FPGA的基本结构主要由6部分组成,<em class='similar'>可编程输入/输出单元、</em><em class='similar'>基本可编程逻辑单元、</em>内嵌的RAM、丰富的布线资源、底层的功能单元和专用"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000511009311","author":"-","university":"","source":"大学生论文联合库","title":"振动检测与控制系统","url":"","reference":false,"similarScore":220.63637,"teacher":"","textWithDynamicClass":"它的门电路不是受限制的,同时它不会有定制电路不足的问题出现。FPGA芯片的主体由以下7个部分组成:时钟管理、<em class='similar 39S69I6' onmouseover=\"highlightSetter('39S69I6',false)\" onmouseout=\"highlightSetter('39S69I6',true)\">基本可编程逻辑单元、</em>嵌入块式RAM、<em class='similar 39S69I8' onmouseover=\"highlightSetter('39S69I8',false)\" onmouseout=\"highlightSetter('39S69I8',true)\">布线资源、</em>内嵌的底层功能单元、<em class='similar 39S69I10' onmouseover=\"highlightSetter('39S69I10',false)\" onmouseout=\"highlightSetter('39S69I10',true)\">可编程输入输出单元和内嵌专用硬件模块。</em>FPGA的原理是逻辑单元阵列这一技术,它是由可配","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"66.8%","self":false,"text":"它的门电路不是受限制的,同时它不会有定制电路不足的问题出现。FPGA芯片的主体由以下7个部分组成:时钟管理、<em class='similar'>基本可编程逻辑单元、</em>嵌入块式RAM、<em class='similar'>布线资源、</em>内嵌的底层功能单元、<em class='similar'>可编程输入输出单元和内嵌专用硬件模块。</em>FPGA的原理是逻辑单元阵列这一技术,它是由可配"}],"textWithDynamicClass":"上述FPGA三部分主要组成具体包括以下内容:<em class='similar T38I1' onmouseover=\"highlightSetter('T38I1',false)\" onmouseout=\"highlightSetter('T38I1',true)\">可编程输入输出及内嵌RAM、</em><em class='similar T38I2' onmouseover=\"highlightSetter('T38I2',false)\" onmouseout=\"highlightSetter('T38I2',true)\">可编程逻辑单元、</em><em class='similar T38I3' onmouseover=\"highlightSetter('T38I3',false)\" onmouseout=\"highlightSetter('T38I3',true)\">布线资源等。</em>","similar_word_count":23,"text":"上述FPGA三部分主要组成具体包括以下内容:<em class='similar'>可编程输入输出及内嵌RAM、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>布线资源等。</em>","suggest":{"synonyms":[],"keyword":["可编程","输入输出","内嵌","逻辑单元","布线"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000136790174611","author":"","university":"","source":"网页","title":"基于FPGA的数字信号处理算法研究与高效实现 - 道客巴巴","url":"http://www.doc88.com/p%2D1896842532586.html","reference":false,"similarScore":208.16666,"teacher":"","textWithDynamicClass":"的灵活配置,可以适配不同的电气标准与I/O 物理特性。(2)<em class='similar 40S72I4' onmouseover=\"highlightSetter('40S72I4',false)\" onmouseout=\"highlightSetter('40S72I4',true)\">基本可编程逻辑单元:</em><em class='similar 40S72I5' onmouseover=\"highlightSetter('40S72I5',false)\" onmouseout=\"highlightSetter('40S72I5',true)\">可编程逻辑单元是F P G A 的主要组成部分,</em>是实现逻辑功能的基本单元。<em class='similar 40S72I7' onmouseover=\"highlightSetter('40S72I7',false)\" onmouseout=\"highlightSetter('40S72I7',true)\">可编程逻辑单元主要由查找表和触发器组成。</em><em class='similar 40S72I8' onmouseover=\"highlightSetter('40S72I8',false)\" onmouseout=\"highlightSetter('40S72I8',true)\">查找表</em>一般完成纯组合逻辑功能。 F P G A 内部的寄","datatype":"webpage","clcs":[],"similarityPercentage":"57.0%","self":false,"text":"的灵活配置,可以适配不同的电气标准与I/O 物理特性。(2)<em class='similar'>基本可编程逻辑单元:</em><em class='similar'>可编程逻辑单元是F P G A 的主要组成部分,</em>是实现逻辑功能的基本单元。<em class='similar'>可编程逻辑单元主要由查找表和触发器组成。</em><em class='similar'>查找表</em>一般完成纯组合逻辑功能。 F P G A 内部的寄"},{"profession":false,"keywords":[],"year":"","docid":"9000088539211811","author":"","university":"","source":"网页","title":"FPGA入门教程","url":"","reference":false,"similarScore":136.66667,"teacher":"","textWithDynamicClass":"<em class='similar 40S73I0' onmouseover=\"highlightSetter('40S73I0',false)\" onmouseout=\"highlightSetter('40S73I0',true)\">结构与组成的可编程逻辑单元构成阵列,</em>又由可编程 I/O 单元围绕阵排成阵列的逻辑单元由布线通道中的可编程内连线连接起来实现一定的逻辑功能。<em class='similar 40S73I2' onmouseover=\"highlightSetter('40S73I2',false)\" onmouseout=\"highlightSetter('40S73I2',true)\"> FPGA 的可编程逻辑单元一般由查找表和触发器构成。</em>下图所示即为 Cyclone 系列 FPGA 芯","datatype":"webpage","clcs":[],"similarityPercentage":"44.5%","self":false,"text":"<em class='similar'>结构与组成的可编程逻辑单元构成阵列,</em>又由可编程 I/O 单元围绕阵排成阵列的逻辑单元由布线通道中的可编程内连线连接起来实现一定的逻辑功能。<em class='similar'> FPGA 的可编程逻辑单元一般由查找表和触发器构成。</em>下图所示即为 Cyclone 系列 FPGA 芯"}],"textWithDynamicClass":"在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在以上FPGA的结构中,设计者及其支持软件中最关系、<em class='similar T39I3' onmouseover=\"highlightSetter('T39I3',false)\" onmouseout=\"highlightSetter('T39I3',true)\">最重要的是可编程逻辑单元,</em><em class='similar T39I4' onmouseover=\"highlightSetter('T39I4',false)\" onmouseout=\"highlightSetter('T39I4',true)\">它主要包括触发器和查找表两部分。</em><em class='similar T39I5' onmouseover=\"highlightSetter('T39I5',false)\" onmouseout=\"highlightSetter('T39I5',true)\">查找表</em>","similar_word_count":30,"text":"在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在以上FPGA的结构中,设计者及其支持软件中最关系、<em class='similar'>最重要的是可编程逻辑单元,</em><em class='similar'>它主要包括触发器和查找表两部分。</em><em class='similar'>查找表</em>","suggest":{"synonyms":[],"keyword":["可编程","逻辑单元","触发器","查找表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000177264690911","author":"","university":"","source":"网页","title":"FPGA基础知识","url":"https://wenku.baidu.com/view/4725085450ea551810a6f524ccbff121dd36c5c7","reference":false,"similarScore":163.85713,"teacher":"","textWithDynamicClass":"出就会根据规则改变状态,然后保持这种状态直到收到另一个触发。<em class='similar 41S74I6' onmouseover=\"highlightSetter('41S74I6',false)\" onmouseout=\"highlightSetter('41S74I6',true)\">触发器</em><em class='similar 41S74I7' onmouseover=\"highlightSetter('41S74I7',false)\" onmouseout=\"highlightSetter('41S74I7',true)\">(flip-flops)</em><em class='similar 41S74I8' onmouseover=\"highlightSetter('41S74I8',false)\" onmouseout=\"highlightSetter('41S74I8',true)\">电路相互关联,</em><em class='similar 41S74I9' onmouseover=\"highlightSetter('41S74I9',false)\" onmouseout=\"highlightSetter('41S74I9',true)\">从而为使用存芯片和微处理器的数字集成电路</em>(IC)形成逻辑门。它们可用来存储一比特的数据。该数据可表示音序器的状态、计数器的价值、在计算机存的ASCII字符或任何其他的信息。有几种不同类型的触发器<em class='similar 41S74I17' onmouseover=\"highlightSetter('41S74I17',false)\" onmouseout=\"highlightSetter('41S74I17',true)\">(flip-flops)</em>电路具有指","datatype":"webpage","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"出就会根据规则改变状态,然后保持这种状态直到收到另一个触发。<em class='similar'>触发器</em><em class='similar'>(flip-flops)</em><em class='similar'>电路相互关联,</em><em class='similar'>从而为使用存芯片和微处理器的数字集成电路</em>(IC)形成逻辑门。它们可用来存储一比特的数据。该数据可表示音序器的状态、计数器的价值、在计算机存的ASCII字符或任何其他的信息。有几种不同类型的触发器<em class='similar'>(flip-flops)</em>电路具有指"}],"textWithDynamicClass":"其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。<em class='similar T40I7' onmouseover=\"highlightSetter('T40I7',false)\" onmouseout=\"highlightSetter('T40I7',true)\">触发器</em><em class='similar T40I8' onmouseover=\"highlightSetter('T40I8',false)\" onmouseout=\"highlightSetter('T40I8',true)\">(flip-flops)</em><em class='similar T40I9' onmouseover=\"highlightSetter('T40I9',false)\" onmouseout=\"highlightSetter('T40I9',true)\">电路之间是相互关联的,</em><em class='similar T40I10' onmouseover=\"highlightSetter('T40I10',false)\" onmouseout=\"highlightSetter('T40I10',true)\">从而形成数字集成电路的逻辑门。</em>","similar_word_count":30,"text":"其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。<em class='similar'>触发器</em><em class='similar'>(flip-flops)</em><em class='similar'>电路之间是相互关联的,</em><em class='similar'>从而形成数字集成电路的逻辑门。</em>","suggest":{"synonyms":[],"keyword":["flip","flop","触发器","flops","相互关联","数字集成电路","逻辑门"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000177264690911","author":"","university":"","source":"网页","title":"FPGA基础知识","url":"https://wenku.baidu.com/view/4725085450ea551810a6f524ccbff121dd36c5c7","reference":false,"similarScore":163.85713,"teacher":"","textWithDynamicClass":"出就会根据规则改变状态,然后保持这种状态直到收到另一个触发。<em class='similar 41S74I6' onmouseover=\"highlightSetter('41S74I6',false)\" onmouseout=\"highlightSetter('41S74I6',true)\">触发器</em>(flip-flops)","datatype":"webpage","clcs":[],"similarityPercentage":"67.6%","self":false,"text":"出就会根据规则改变状态,然后保持这种状态直到收到另一个触发。<em class='similar'>触发器</em>(flip-flops)"}],"textWithDynamicClass":"在FPGA中存在有多种类型的FF,<em class='similar T40I12' onmouseover=\"highlightSetter('T40I12',false)\" onmouseout=\"highlightSetter('T40I12',true)\">如切换触发器、</em><em class='similar T40I13' onmouseover=\"highlightSetter('T40I13',false)\" onmouseout=\"highlightSetter('T40I13',true)\">重置触发器、</em>","similar_word_count":11,"text":"在FPGA中存在有多种类型的FF,<em class='similar'>如切换触发器、</em><em class='similar'>重置触发器、</em>","suggest":{"synonyms":[],"keyword":["触发器","切换","重置"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000109813760211","author":"","university":"","source":"网页","title":"QPSK调制信号的同步载波提取 - 道客巴巴","url":"http://www.doc88.com/p-4932194174692.html","reference":false,"similarScore":97.826065,"teacher":"","textWithDynamicClass":"inx 公司提供的 DDS 和 mult的 IP core,<em class='similar 42S76I2' onmouseover=\"highlightSetter('42S76I2',false)\" onmouseout=\"highlightSetter('42S76I2',true)\">用 Verilog HDL 硬件描述语言实现电路的行为级描述,</em>综合后的RTL级电路如图6所示。(上接第53页)[","datatype":"webpage","clcs":[],"similarityPercentage":"71.8%","self":false,"text":"inx 公司提供的 DDS 和 mult的 IP core,<em class='similar'>用 Verilog HDL 硬件描述语言实现电路的行为级描述,</em>综合后的RTL级电路如图6所示。(上接第53页)["},{"profession":false,"keywords":[],"year":"2017","docid":"2200000379746211","author":"王微","university":"","source":"大学生论文联合库","title":"基于plc的智能电梯控制系统设计方案","url":"","reference":false,"similarScore":171.30432,"teacher":"","textWithDynamicClass":"大的特点就是使用比较简单,可以用简洁的语句来描写复杂的设计,<em class='similar 42S75I3' onmouseover=\"highlightSetter('42S75I3',false)\" onmouseout=\"highlightSetter('42S75I3',true)\">因此Verilog语言是目前使用频率最高的一种硬件描述语言;</em><em class='similar 42S75I4' onmouseover=\"highlightSetter('42S75I4',false)\" onmouseout=\"highlightSetter('42S75I4',true)\">Verilog HDL既是一种行为级描述语言,</em><em class='similar 42S75I5' onmouseover=\"highlightSetter('42S75I5',false)\" onmouseout=\"highlightSetter('42S75I5',true)\">也可以认为是一种结构描述语言,</em>这意味着可以利用Verilog HDL语言对系统的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"50.2%","self":false,"text":"大的特点就是使用比较简单,可以用简洁的语句来描写复杂的设计,<em class='similar'>因此Verilog语言是目前使用频率最高的一种硬件描述语言;</em><em class='similar'>Verilog HDL既是一种行为级描述语言,</em><em class='similar'>也可以认为是一种结构描述语言,</em>这意味着可以利用Verilog HDL语言对系统的"}],"textWithDynamicClass":"<em class='similar T41I0' onmouseover=\"highlightSetter('T41I0',false)\" onmouseout=\"highlightSetter('T41I0',true)\">Verilog HDL是用以描述硬件行为级的一种高级硬件描述语言,</em>","similar_word_count":24,"text":"<em class='similar'>Verilog HDL是用以描述硬件行为级的一种高级硬件描述语言,</em>","suggest":{"synonyms":[],"keyword":["用以","硬件","行为级","硬件描述语言"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000102438231611","author":"","university":"","source":"网页","title":"串口接收模块的verilog设计 ","url":"","reference":false,"similarScore":616.2244,"teacher":"","textWithDynamicClass":"<em class='similar 43S78I0' onmouseover=\"highlightSetter('43S78I0',false)\" onmouseout=\"highlightSetter('43S78I0',true)\">用它可以表示逻辑电路图、</em>逻辑表达式,","datatype":"webpage","clcs":[],"similarityPercentage":"62.9%","self":false,"text":"<em class='similar'>用它可以表示逻辑电路图、</em>逻辑表达式,"},{"profession":false,"keywords":[],"year":"","docid":"9100005028085811","author":"","university":"","source":"百科","title":"Verilog HDL","url":"","reference":false,"similarScore":599.23584,"teacher":"","textWithDynamicClass":"e),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar 43S77I2' onmouseover=\"highlightSetter('43S77I2',false)\" onmouseout=\"highlightSetter('43S77I2',true)\">用它可以表示逻辑电路图、</em>逻辑表达式,","datatype":"wiki","clcs":[],"similarityPercentage":"62.9%","self":false,"text":"e),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar'>用它可以表示逻辑电路图、</em>逻辑表达式,"},{"profession":false,"keywords":[],"year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","university":"","source":"","title":"Verilog HDL数字系统设计及实践","url":"","reference":false,"similarScore":406.50854,"teacher":"","textWithDynamicClass":"描述语言是一种以文本形式来描述数字系统硬件结构和行为的语言,是目前世界上最流行的一种硬件描述语言,<em class='similar 43S81I3' onmouseover=\"highlightSetter('43S81I3',false)\" onmouseout=\"highlightSetter('43S81I3',true)\">用它可以表示逻辑电路图、</em>逻辑表达式,","datatype":"book","clcs":[],"similarityPercentage":"62.9%","self":false,"text":"描述语言是一种以文本形式来描述数字系统硬件结构和行为的语言,是目前世界上最流行的一种硬件描述语言,<em class='similar'>用它可以表示逻辑电路图、</em>逻辑表达式,"},{"profession":false,"keywords":[],"year":"2013","docid":"1000003812466811","author":"刘明达；刘晓洁","university":"武汉大学计算机学院","source":"计算机光盘软件与应用","title":"基于VerilogHDL的简单CPU设计","url":"","reference":false,"similarScore":311.96307,"teacher":"","textWithDynamicClass":"1引言VerilogHDL【1】是一种硬件描述语言(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar 43S82I4' onmouseover=\"highlightSetter('43S82I4',false)\" onmouseout=\"highlightSetter('43S82I4',true)\">用它可以表示逻辑电路图、</em>逻辑表达式,","datatype":"journal","clcs":["TP332；"],"similarityPercentage":"62.9%","self":false,"text":"1引言VerilogHDL【1】是一种硬件描述语言(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar'>用它可以表示逻辑电路图、</em>逻辑表达式,"},{"profession":false,"keywords":[],"year":"","docid":"9000137920215311","author":"","university":"","source":"网页","title":"基于FPGA的除法器的设计与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D8049746941589.html","reference":false,"similarScore":606.7185,"teacher":"","textWithDynamicClass":"文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar 43S79I1' onmouseover=\"highlightSetter('43S79I1',false)\" onmouseout=\"highlightSetter('43S79I1',true)\">Verilog HDL 硬件描述语言可以表示逻辑电路图、</em>逻辑表达式,","datatype":"webpage","clcs":[],"similarityPercentage":"55.6%","self":false,"text":"文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar'>Verilog HDL 硬件描述语言可以表示逻辑电路图、</em>逻辑表达式,"}],"textWithDynamicClass":"其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。<em class='similar T42I0' onmouseover=\"highlightSetter('T42I0',false)\" onmouseout=\"highlightSetter('T42I0',true)\">通过合理的使用该语言可以表示正确表示逻辑电路图、</em>","similar_word_count":23,"text":"其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。<em class='similar'>通过合理的使用该语言可以表示正确表示逻辑电路图、</em>","suggest":{"synonyms":[],"keyword":["逻辑电路图"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000100917757811","author":"","university":"","source":"网页","title":"sopc课程设计整体 ","url":"","reference":false,"similarScore":277.12115,"teacher":"","textWithDynamicClass":"简称Verilog)是一种应用广泛的硬件描述语言,是以文本形式来描述数字系统硬件的结构和行为的语言,可用于从算法级、门级到开关级的多种抽象层次的数字系统设计。它可以表示逻辑电路图、<em class='similar 43S80I6' onmouseover=\"highlightSetter('43S80I6',false)\" onmouseout=\"highlightSetter('43S80I6',true)\">逻辑表达式,</em><em class='similar 43S80I7' onmouseover=\"highlightSetter('43S80I7',false)\" onmouseout=\"highlightSetter('43S80I7',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL的产生和应用可追溯到20世","datatype":"webpage","clcs":[],"similarityPercentage":"98.0%","self":false,"text":"简称Verilog)是一种应用广泛的硬件描述语言,是以文本形式来描述数字系统硬件的结构和行为的语言,可用于从算法级、门级到开关级的多种抽象层次的数字系统设计。它可以表示逻辑电路图、<em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL的产生和应用可追溯到20世"},{"profession":false,"keywords":[],"year":"","docid":"9000102438231611","author":"","university":"","source":"网页","title":"串口接收模块的verilog设计 ","url":"","reference":false,"similarScore":616.2244,"teacher":"","textWithDynamicClass":"用它可以表示逻辑电路图、<em class='similar 43S78I1' onmouseover=\"highlightSetter('43S78I1',false)\" onmouseout=\"highlightSetter('43S78I1',true)\">逻辑表达式,</em><em class='similar 43S78I2' onmouseover=\"highlightSetter('43S78I2',false)\" onmouseout=\"highlightSetter('43S78I2',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL是目前世界上最流行的两种硬件描述语言之一,","datatype":"webpage","clcs":[],"similarityPercentage":"83.0%","self":false,"text":"用它可以表示逻辑电路图、<em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL是目前世界上最流行的两种硬件描述语言之一,"},{"profession":false,"keywords":[],"year":"","docid":"9100005028085811","author":"","university":"","source":"百科","title":"Verilog HDL","url":"","reference":false,"similarScore":599.23584,"teacher":"","textWithDynamicClass":"e),是一种以文本形式来描述数字系统硬件的结构和行为的语言,用它可以表示逻辑电路图、<em class='similar 43S77I3' onmouseover=\"highlightSetter('43S77I3',false)\" onmouseout=\"highlightSetter('43S77I3',true)\">逻辑表达式,</em><em class='similar 43S77I4' onmouseover=\"highlightSetter('43S77I4',false)\" onmouseout=\"highlightSetter('43S77I4',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL和VHDL是目前世界上最流行的两种硬件描述语言,","datatype":"wiki","clcs":[],"similarityPercentage":"83.0%","self":false,"text":"e),是一种以文本形式来描述数字系统硬件的结构和行为的语言,用它可以表示逻辑电路图、<em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL和VHDL是目前世界上最流行的两种硬件描述语言,"},{"profession":false,"keywords":[],"year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","university":"","source":"","title":"Verilog HDL数字系统设计及实践","url":"","reference":false,"similarScore":406.50854,"teacher":"","textWithDynamicClass":"用它可以表示逻辑电路图、<em class='similar 43S81I4' onmouseover=\"highlightSetter('43S81I4',false)\" onmouseout=\"highlightSetter('43S81I4',true)\">逻辑表达式,</em><em class='similar 43S81I5' onmouseover=\"highlightSetter('43S81I5',false)\" onmouseout=\"highlightSetter('43S81I5',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>本书共分11章,内容分别为:第1章 verilog","datatype":"book","clcs":[],"similarityPercentage":"83.0%","self":false,"text":"用它可以表示逻辑电路图、<em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>本书共分11章,内容分别为:第1章 verilog"},{"profession":false,"keywords":[],"year":"2013","docid":"1000003812466811","author":"刘明达；刘晓洁","university":"武汉大学计算机学院","source":"计算机光盘软件与应用","title":"基于VerilogHDL的简单CPU设计","url":"","reference":false,"similarScore":311.96307,"teacher":"","textWithDynamicClass":"(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,用它可以表示逻辑电路图、<em class='similar 43S82I5' onmouseover=\"highlightSetter('43S82I5',false)\" onmouseout=\"highlightSetter('43S82I5',true)\">逻辑表达式,</em><em class='similar 43S82I6' onmouseover=\"highlightSetter('43S82I6',false)\" onmouseout=\"highlightSetter('43S82I6',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>由于Verilog接近C语言的语言规则,适合进行F","datatype":"journal","clcs":["TP332；"],"similarityPercentage":"83.0%","self":false,"text":"(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,用它可以表示逻辑电路图、<em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>由于Verilog接近C语言的语言规则,适合进行F"},{"profession":false,"keywords":[],"year":"","docid":"9000137920215311","author":"","university":"","source":"网页","title":"基于FPGA的除法器的设计与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D8049746941589.html","reference":false,"similarScore":606.7185,"teacher":"","textWithDynamicClass":"文本形式来描述数字系统硬件的结构和行为的语言,Verilog HDL 硬件描述语言可以表示逻辑电路图、<em class='similar 43S79I2' onmouseover=\"highlightSetter('43S79I2',false)\" onmouseout=\"highlightSetter('43S79I2',true)\">逻辑表达式,</em><em class='similar 43S79I3' onmouseover=\"highlightSetter('43S79I3',false)\" onmouseout=\"highlightSetter('43S79I3',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL是世界上最流行的两种硬件描述语言之一,","datatype":"webpage","clcs":[],"similarityPercentage":"78.9%","self":false,"text":"文本形式来描述数字系统硬件的结构和行为的语言,Verilog HDL 硬件描述语言可以表示逻辑电路图、<em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>Verilog HDL是世界上最流行的两种硬件描述语言之一,"}],"textWithDynamicClass":"通过合理的使用该语言可以表示正确表示逻辑电路图、<em class='similar T42I1' onmouseover=\"highlightSetter('T42I1',false)\" onmouseout=\"highlightSetter('T42I1',true)\">逻辑表达式等,</em><em class='similar T42I2' onmouseover=\"highlightSetter('T42I2',false)\" onmouseout=\"highlightSetter('T42I2',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>","similar_word_count":25,"text":"通过合理的使用该语言可��表示正确表示逻辑电路图、<em class='similar'>逻辑表达式等,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>","suggest":{"synonyms":[],"keyword":["逻辑表达式","数字逻辑系统","逻辑功能"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000102438231611","author":"","university":"","source":"网页","title":"串口接收模块的verilog设计 ","url":"","reference":false,"similarScore":616.2244,"teacher":"","textWithDynamicClass":"还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar 43S78I3' onmouseover=\"highlightSetter('43S78I3',false)\" onmouseout=\"highlightSetter('43S78I3',true)\"> Verilog HDL是目前世界上最流行的两种硬件描述语言之一,</em><em class='similar 43S78I4' onmouseover=\"highlightSetter('43S78I4',false)\" onmouseout=\"highlightSetter('43S78I4',true)\">是在20世纪80年代中期开发出来的。</em>Verilog HDL这种硬件描述语言被用于从算法","datatype":"webpage","clcs":[],"similarityPercentage":"89.0%","self":false,"text":"还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar'> Verilog HDL是目前世界上最流行的两种硬件描述语言之一,</em><em class='similar'>是在20世纪80年代中期开发出来的。</em>Verilog HDL这种硬件描述语言被用于从算法"},{"profession":false,"keywords":[],"year":"","docid":"9100005028085811","author":"","university":"","source":"百科","title":"Verilog HDL","url":"","reference":false,"similarScore":599.23584,"teacher":"","textWithDynamicClass":"还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar 43S77I5' onmouseover=\"highlightSetter('43S77I5',false)\" onmouseout=\"highlightSetter('43S77I5',true)\"> Verilog HDL和VHDL是目前世界上最流行的两种硬件描述语言,</em><em class='similar 43S77I6' onmouseover=\"highlightSetter('43S77I6',false)\" onmouseout=\"highlightSetter('43S77I6',true)\">都是在20世纪80年代中期开发出来的。</em>前者由Gateway Design Automat","datatype":"wiki","clcs":[],"similarityPercentage":"87.1%","self":false,"text":"还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar'> Verilog HDL和VHDL是目前世界上最流行的两种硬件描述语言,</em><em class='similar'>都是在20世纪80年代中期开发出来的。</em>前者由Gateway Design Automat"},{"profession":false,"keywords":[],"year":"","docid":"9000137920215311","author":"","university":"","source":"网页","title":"基于FPGA的除法器的设计与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D8049746941589.html","reference":false,"similarScore":606.7185,"teacher":"","textWithDynamicClass":"还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar 43S79I4' onmouseover=\"highlightSetter('43S79I4',false)\" onmouseout=\"highlightSetter('43S79I4',true)\">Verilog HDL是世界上最流行的两种硬件描述语言之一,</em><em class='similar 43S79I5' onmouseover=\"highlightSetter('43S79I5',false)\" onmouseout=\"highlightSetter('43S79I5',true)\">是在20世纪80年代中期 Gateway Design Automation 公司开发出来的。</em>Verilog 的设计初衷是成为一种基本语法与","datatype":"webpage","clcs":[],"similarityPercentage":"83.9%","self":false,"text":"还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar'>Verilog HDL是世界上最流行的两种硬件描述语言之一,</em><em class='similar'>是在20世纪80年代中期 Gateway Design Automation 公司开发出来的。</em>Verilog 的设计初衷是成为一种基本语法与"},{"profession":false,"keywords":[],"year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","university":"","source":"","title":"Verilog HDL数字系统设计及实践","url":"","reference":false,"similarScore":406.50854,"teacher":"","textWithDynamicClass":"描述语言是一种以文本形式来描述数字系统硬件结构和行为的语言,<em class='similar 43S81I2' onmouseover=\"highlightSetter('43S81I2',false)\" onmouseout=\"highlightSetter('43S81I2',true)\">是目前世界上最流行的一种硬件描述语言,</em>用它可以表示逻辑电路图、","datatype":"book","clcs":[],"similarityPercentage":"83.7%","self":false,"text":"描述语言是一种以文本形式来描述数字系统硬件结构和行为的语言,<em class='similar'>是目前世界上最流行的一种硬件描述语言,</em>用它可以表示逻辑电路图、"},{"profession":false,"keywords":[],"year":"","docid":"9000100917757811","author":"","university":"","source":"网页","title":"sopc课程设计整体 ","url":"","reference":false,"similarScore":277.12115,"teacher":"","textWithDynamicClass":"简称Verilog)<em class='similar 43S80I1' onmouseover=\"highlightSetter('43S80I1',false)\" onmouseout=\"highlightSetter('43S80I1',true)\">是一种应用广泛的硬件描述语言,</em>是以文本形式来描述数字系统硬件的结构和行为的语言,可用于从算法级、门级到开关级的多种抽象层次的数字系统设计。它可以表示逻辑电路图、逻辑表达式,","datatype":"webpage","clcs":[],"similarityPercentage":"80.5%","self":false,"text":"简称Verilog)<em class='similar'>是一种应用广泛的硬件描述语言,</em>是以文本形式来描述数字系统硬件的结构和行为的语言,可用于从算法级、门级到开关级的多种抽象层次的数字系统设计。它可以表示逻辑电路图、逻辑表达式,"},{"profession":false,"keywords":[],"year":"2013","docid":"1000003812466811","author":"刘明达；刘晓洁","university":"武汉大学计算机学院","source":"计算机光盘软件与应用","title":"基于VerilogHDL的简单CPU设计","url":"","reference":false,"similarScore":311.96307,"teacher":"","textWithDynamicClass":"<em class='similar 43S82I0' onmouseover=\"highlightSetter('43S82I0',false)\" onmouseout=\"highlightSetter('43S82I0',true)\">1引言VerilogHDL【1】是一种硬件描述语言</em>(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,用它可以表示逻辑电路图、","datatype":"journal","clcs":["TP332；"],"similarityPercentage":"75.1%","self":false,"text":"<em class='similar'>1引言VerilogHDL【1】是一种硬件描述语言</em>(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,用它可以表示逻辑电路图、"}],"textWithDynamicClass":"逻辑表达式等,还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar T42I3' onmouseover=\"highlightSetter('T42I3',false)\" onmouseout=\"highlightSetter('T42I3',true)\">Verilog HDL是当前世界上最流行的两种硬件描述语言之一,</em><em class='similar T42I4' onmouseover=\"highlightSetter('T42I4',false)\" onmouseout=\"highlightSetter('T42I4',true)\">都是在20世纪80年代中期开发出来的。</em>","similar_word_count":39,"text":"逻辑表达式等,还可以表示数字逻辑系统所完成的逻辑功能。<em class='similar'>Verilog HDL是当前世界上最流行的两种硬件描述语言之一,</em><em class='similar'>都是在20世纪80年代中期开发出来的。</em>","suggest":{"synonyms":[{"synonyms":["通行"],"keyword":"流行"}],"keyword":["流行","硬件描述语言","20","80","中期"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000118992500811","author":"","university":"","source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html","reference":false,"similarScore":155.05556,"teacher":"","textWithDynamicClass":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar 44S84I3' onmouseover=\"highlightSetter('44S84I3',false)\" onmouseout=\"highlightSetter('44S84I3',true)\">所以它支持硬件设计的开发、</em>验证、综合和测试;","datatype":"webpage","clcs":[],"similarityPercentage":"68.0%","self":false,"text":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar'>所以它支持硬件设计的开发、</em>验证、综合和测试;"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000437751211","author":"","university":"","source":"大学生论文联合库","title":"数字频率发生器","url":"","reference":false,"similarScore":321.09988,"teacher":"","textWithDynamicClass":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar 44S83I7' onmouseover=\"highlightSetter('44S83I7',false)\" onmouseout=\"highlightSetter('44S83I7',true)\">由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar 44S83I8' onmouseover=\"highlightSetter('44S83I8',false)\" onmouseout=\"highlightSetter('44S83I8',true)\">因此它支持硬件设计的开发、</em>验证、综合和测试;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.2%","self":false,"text":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar'>由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar'>因此它支持硬件设计的开发、</em>验证、综合和测试;"}],"textWithDynamicClass":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar T43I1' onmouseover=\"highlightSetter('T43I1',false)\" onmouseout=\"highlightSetter('T43I1',true)\">由于Verilog HDL是机器可读的、</em><em class='similar T43I2' onmouseover=\"highlightSetter('T43I2',false)\" onmouseout=\"highlightSetter('T43I2',true)\">人类可读的,</em><em class='similar T43I3' onmouseover=\"highlightSetter('T43I3',false)\" onmouseout=\"highlightSetter('T43I3',true)\">所以该语言能够支持对硬件设计进行开发、</em>","similar_word_count":34,"text":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"}],"keyword":["机器","可读","硬件设计","硬件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000118992500811","author":"","university":"","source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html","reference":false,"similarScore":155.05556,"teacher":"","textWithDynamicClass":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,所以它支持硬件设计的开发、验证、<em class='similar 44S84I5' onmouseover=\"highlightSetter('44S84I5',false)\" onmouseout=\"highlightSetter('44S84I5',true)\">综合和测试;</em><em class='similar 44S84I6' onmouseover=\"highlightSetter('44S84I6',false)\" onmouseout=\"highlightSetter('44S84I6',true)\">支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的","datatype":"webpage","clcs":[],"similarityPercentage":"73.5%","self":false,"text":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,所以它支持硬件设计的开发、验证、<em class='similar'>综合和测试;</em><em class='similar'>支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000437751211","author":"","university":"","source":"大学生论文联合库","title":"数字频率发生器","url":"","reference":false,"similarScore":321.09988,"teacher":"","textWithDynamicClass":"因此它支持硬件设计的开发、验证、<em class='similar 44S83I10' onmouseover=\"highlightSetter('44S83I10',false)\" onmouseout=\"highlightSetter('44S83I10',true)\">综合和测试;</em><em class='similar 44S83I11' onmouseover=\"highlightSetter('44S83I11',false)\" onmouseout=\"highlightSetter('44S83I11',true)\">硬件数据之间的通信;</em><em class='similar 44S83I12' onmouseover=\"highlightSetter('44S83I12',false)\" onmouseout=\"highlightSetter('44S83I12',true)\">硬件的设计、</em><em class='similar 44S83I13' onmouseover=\"highlightSetter('44S83I13',false)\" onmouseout=\"highlightSetter('44S83I13',true)\">维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"57.4%","self":false,"text":"因此它支持硬件设计的开发、验证、<em class='similar'>综合和测试;</em><em class='similar'>硬件数据之间的通信;</em><em class='similar'>硬件的设计、</em><em class='similar'>维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的"}],"textWithDynamicClass":"正确性验证、<em class='similar T43I5' onmouseover=\"highlightSetter('T43I5',false)\" onmouseout=\"highlightSetter('T43I5',true)\">合成和测试、</em><em class='similar T43I6' onmouseover=\"highlightSetter('T43I6',false)\" onmouseout=\"highlightSetter('T43I6',true)\">硬件设计数据的通信和维护、</em>","similar_word_count":17,"text":"正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>","suggest":{"synonyms":[],"keyword":["硬件设计","硬件","设计数据"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":440.46054,"teacher":"","textWithDynamicClass":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar 45S86I5' onmouseover=\"highlightSetter('45S86I5',false)\" onmouseout=\"highlightSetter('45S86I5',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar 45S86I6' onmouseover=\"highlightSetter('45S86I6',false)\" onmouseout=\"highlightSetter('45S86I6',true)\">连续赋值语句,</em>在此表达式中寄存器和线网都可以连续驱动线网,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"90.0%","self":false,"text":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>连续赋值语句,</em>在此表达式中寄存器和线网都可以连续驱动线网,"}],"textWithDynamicClass":"<em class='similar T44I0' onmouseover=\"highlightSetter('T44I0',false)\" onmouseout=\"highlightSetter('T44I0',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar T44I1' onmouseover=\"highlightSetter('T44I1',false)\" onmouseout=\"highlightSetter('T44I1',true)\">一种是连续型赋值语句,</em>","similar_word_count":22,"text":"<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>","suggest":{"synonyms":[],"keyword":["语句","连续型","赋值语句","赋值"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":440.46054,"teacher":"","textWithDynamicClass":"连续赋值语句,<em class='similar 45S86I7' onmouseover=\"highlightSetter('45S86I7',false)\" onmouseout=\"highlightSetter('45S86I7',true)\">在此表达式中寄存器和线网都可以连续驱动线网,</em>实现基本的结构化建模:","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"74.1%","self":false,"text":"连续赋值语句,<em class='similar'>在此表达式中寄存器和线网都可以连续驱动线网,</em>实现基本的结构化建模:"}],"textWithDynamicClass":"通过使用连续性赋值表达式,<em class='similar T44I3' onmouseover=\"highlightSetter('T44I3',false)\" onmouseout=\"highlightSetter('T44I3',true)\">其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,</em>","similar_word_count":25,"text":"通过使用连续性赋值表达式,<em class='similar'>其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,</em>","suggest":{"synonyms":[],"keyword":["寄存器","线网","连续驱动","线网结构"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":440.46054,"teacher":"","textWithDynamicClass":"在此表达式中寄存器和线网都可以连续驱动线网,<em class='similar 45S86I8' onmouseover=\"highlightSetter('45S86I8',false)\" onmouseout=\"highlightSetter('45S86I8',true)\">实现基本的结构化建模:</em><em class='similar 45S86I9' onmouseover=\"highlightSetter('45S86I9',false)\" onmouseout=\"highlightSetter('45S86I9',true)\">过程赋值语句,</em><em class='similar 45S86I10' onmouseover=\"highlightSetter('45S86I10',false)\" onmouseout=\"highlightSetter('45S86I10',true)\">在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar 45S86I11' onmouseover=\"highlightSetter('45S86I11',false)\" onmouseout=\"highlightSetter('45S86I11',true)\">实现基本的行为建模。</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"在此表达式中寄存器和线网都可以连续驱动线网,<em class='similar'>实现基本的结构化建模:</em><em class='similar'>过程赋值语句,</em><em class='similar'>在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar'>实现基本的行为建模。</em>"}],"textWithDynamicClass":"其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,<em class='similar T44I4' onmouseover=\"highlightSetter('T44I4',false)\" onmouseout=\"highlightSetter('T44I4',true)\">从而实现基本建模;</em><em class='similar T44I5' onmouseover=\"highlightSetter('T44I5',false)\" onmouseout=\"highlightSetter('T44I5',true)\">另一种是过程型赋值语句,</em>","similar_word_count":19,"text":"其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,<em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>","suggest":{"synonyms":[],"keyword":["语句","赋值语句","赋值","建模","另一种"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":440.46054,"teacher":"","textWithDynamicClass":"过程赋值语句,<em class='similar 45S86I10' onmouseover=\"highlightSetter('45S86I10',false)\" onmouseout=\"highlightSetter('45S86I10',true)\">在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar 45S86I11' onmouseover=\"highlightSetter('45S86I11',false)\" onmouseout=\"highlightSetter('45S86I11',true)\">实现基本的行为建模。</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"72.3%","self":false,"text":"过程赋值语句,<em class='similar'>在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar'>实现基本的行为建模。</em>"}],"textWithDynamicClass":"在过程性赋值语句的行为级描述中,<em class='similar T44I7' onmouseover=\"highlightSetter('T44I7',false)\" onmouseout=\"highlightSetter('T44I7',true)\">将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar T44I8' onmouseover=\"highlightSetter('T44I8',false)\" onmouseout=\"highlightSetter('T44I8',true)\">从而实现行为级的描述建模。</em>","similar_word_count":33,"text":"在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>","suggest":{"synonyms":[],"keyword":["寄存器","线网","建模","行为级","网间","运算结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000668314211","author":"戚薏","university":"","source":"大学生论文联合库","title":"数字锁相环模块设计与实现","url":"","reference":false,"similarScore":169.09091,"teacher":"","textWithDynamicClass":"<em class='similar 46S87I0' onmouseover=\"highlightSetter('46S87I0',false)\" onmouseout=\"highlightSetter('46S87I0',true)\">,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化描述方式也可以采用行为化的描述方式,或者二者结合。这些模块都被加工到一定的抽象级别,然后通过线网连接。","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"59.7%","self":false,"text":"<em class='similar'>,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化描述方式也可以采用行为化的描述方式,或者二者结合。这些模块都被加工到一定的抽象级别,然后通过线网连接。"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":150.34091,"teacher":"","textWithDynamicClass":"<em class='similar 46S88I0' onmouseover=\"highlightSetter('46S88I0',false)\" onmouseout=\"highlightSetter('46S88I0',true)\">,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化的描述方式也可以采用行为化的描述方式,或者二者的结合。这些模块都被加工到一定的抽象级别,然后通过线网互连。","datatype":"book","clcs":[],"similarityPercentage":"59.7%","self":false,"text":"<em class='similar'>,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化的描述方式也可以采用行为化的描述方式,或者二者的结合。这些模块都被加工到一定的抽象级别,然后通过线网互连。"}],"textWithDynamicClass":"从而实现基本建模;另一种是过程型赋值语句,在过程性赋值语句的行为级描述中,将使用寄存器来存储寄存器与线网间的运算结果,从而实现行为级的描述建模。一个完整的RTL级行为描述设计通常会包含多个模块,<em class='similar T45I0' onmouseover=\"highlightSetter('T45I0',false)\" onmouseout=\"highlightSetter('T45I0',true)\">每个模块都将用于描述该模块对应的功能描述逻辑</em>","similar_word_count":22,"text":"从而实现基本建模;另一种是过程型赋值语句,在过程性赋值语句的行为级描述中,将使用寄存器来存储寄存器与线网间的运算结果,从而实现行为级的描述建模。一个完整的RTL级行为描述设计通常会包含多个模块,<em class='similar'>每个模块都将用于描述该模块对应的功能描述逻辑</em>","suggest":{"synonyms":[],"keyword":["描述逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000668314211","author":"戚薏","university":"","source":"大学生论文联合库","title":"数字锁相环模块设计与实现","url":"","reference":false,"similarScore":169.09091,"teacher":"","textWithDynamicClass":",每一模块都有一个输入/输出接口和该模块相应的功能描述。而该功能描述既可以采用结构化描述方式也可以采用行为化的描述方式,或者二者结合。这些模块都被加工到一定的抽象级别,<em class='similar 46S87I4' onmouseover=\"highlightSetter('46S87I4',false)\" onmouseout=\"highlightSetter('46S87I4',true)\">然后通过线网连接。</em>Verilog HDL开发流程主要如下:1.设计","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"69.9%","self":false,"text":",每一模块都有一个输入/输出接口和该模块相应的功能描述。而该功能描述既可以采用结构化描述方式也可以采用行为化的描述方式,或者二者结合。这些模块都被加工到一定的抽象级别,<em class='similar'>然后通过线网连接。</em>Verilog HDL开发流程主要如下:1.设计"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":150.34091,"teacher":"","textWithDynamicClass":",每一模块都有一个输入/输出接口和该模块相应的功能描述。而该功能描述既可以采用结构化的描述方式也可以采用行为化的描述方式,或者二者的结合。这些模块都被加工到一定的抽象级别,<em class='similar 46S88I4' onmouseover=\"highlightSetter('46S88I4',false)\" onmouseout=\"highlightSetter('46S88I4',true)\">然后通过线网互连。</em>verilog HDL语言可以通过编程语言接口程","datatype":"book","clcs":[],"similarityPercentage":"69.9%","self":false,"text":",每一模块都有一个输入/输出接口和该模块相应的功能描述。而该功能描述既可以采用结构化的描述方式也可以采用行为化的描述方式,或者二者的结合。这些模块都被加工到一定的抽象级别,<em class='similar'>然后通过线网互连。</em>verilog HDL语言可以通过编程语言接口程"}],"textWithDynamicClass":"[16]。这些模块将被开发者进行抽象,<em class='similar T45I3' onmouseover=\"highlightSetter('T45I3',false)\" onmouseout=\"highlightSetter('T45I3',true)\">然后通过线网连接。</em>","similar_word_count":8,"text":"[16]。这些模块将被开发者进行抽象,<em class='similar'>然后通过线网连接。</em>","suggest":{"synonyms":[],"keyword":["线网"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900000860122211","author":"樊运晓；罗云编著","university":"","source":"化学工业出版社","title":"系统安全工程","url":"","reference":false,"similarScore":43.478256,"teacher":"","textWithDynamicClass":"定模块的控制信号和输入输出数据接口。模块的实现细节明确以后,<em class='similar 47S89I5' onmouseover=\"highlightSetter('47S89I5',false)\" onmouseout=\"highlightSetter('47S89I5',true)\">用硬件描述语言 Verilog 编写 RTL</em>(Register Translate Level","datatype":"book","clcs":[],"similarityPercentage":"62.9%","self":false,"text":"定模块的控制信号和输入输出数据接口。模块的实现细节明确以后,<em class='similar'>用硬件描述语言 Verilog 编写 RTL</em>(Register Translate Level"},{"profession":false,"keywords":[],"year":"","docid":"9000179275463811","author":"","university":"","source":"网页","title":"基于Verilog的8051微控制器中断系统的设计---优秀毕业论文 参考文献 可复..","url":"https://www.docin.com/p%2D827308466.html","reference":false,"similarScore":43.478256,"teacher":"","textWithDynamicClass":"不同的设计数据库等。本课题完成电路原理分析及子模块设计之后,<em class='similar 47S90I7' onmouseover=\"highlightSetter('47S90I7',false)\" onmouseout=\"highlightSetter('47S90I7',true)\">用硬件描述语言Verilog 编写 RTL</em>(Register Translate Level","datatype":"webpage","clcs":[],"similarityPercentage":"62.9%","self":false,"text":"不同的设计数据库等。本课题完成电路原理分析及子模块设计之后,<em class='similar'>用硬件描述语言Verilog 编写 RTL</em>(Register Translate Level"},{"profession":false,"keywords":[],"year":"","docid":"9000203286107511","author":"","university":"","source":"网页","title":"超大规模集成电路设计","url":"http://wenku.baidu.com/view/3ff28c97f61fb7360b4c659d.html","reference":false,"similarScore":70.37549,"teacher":"","textWithDynamicClass":"CalibreTape-outRTL编码设计(1)RTL <em class='similar 47S91I4' onmouseover=\"highlightSetter('47S91I4',false)\" onmouseout=\"highlightSetter('47S91I4',true)\">(寄存器传输级)</em><em class='similar 47S91I5' onmouseover=\"highlightSetter('47S91I5',false)\" onmouseout=\"highlightSetter('47S91I5',true)\">设计用硬件描述语言HDL</em><em class='similar 47S91I6' onmouseover=\"highlightSetter('47S91I6',false)\" onmouseout=\"highlightSetter('47S91I6',true)\">(Verilog、</em>VHDL)来描述硬件描述语言(Hardware","datatype":"webpage","clcs":[],"similarityPercentage":"20.9%","self":false,"text":"CalibreTape-outRTL编码设计(1)RTL <em class='similar'>(寄存器传输级)</em><em class='similar'>设计用硬件描述语言HDL</em><em class='similar'>(Verilog、</em>VHDL)来描述硬件描述语言(Hardware"}],"textWithDynamicClass":"而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,<em class='similar T46I2' onmouseover=\"highlightSetter('T46I2',false)\" onmouseout=\"highlightSetter('T46I2',true)\">首选通过使用Verilog HDL等硬件描述语言编写寄存器传输级</em>","similar_word_count":24,"text":"而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,<em class='similar'>首选通过使用Verilog HDL等硬件描述语言编写寄存器传输级</em>","suggest":{"synonyms":[{"synonyms":["编辑"],"keyword":"编写"}],"keyword":["首选","硬件描述语言","编写","寄存器传输级"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000202005048511","author":"","university":"","source":"网页","title":"RTL 和 综合 等一些基本概念的摘记_gioc的专栏-CSDN博客","url":"https://blog.csdn.net/gioc/article/details/84648115#insertcode","reference":false,"similarScore":186.65845,"teacher":"","textWithDynamicClass":"法级描述更明确具体，因此它被用于很多的实际系统的设计中。2、<em class='similar 48S92I5' onmouseover=\"highlightSetter('48S92I5',false)\" onmouseout=\"highlightSetter('48S92I5',true)\">综合就是从采用 HDL语言描述的寄存器传输级</em>(RTL)","datatype":"webpage","clcs":[],"similarityPercentage":"67.9%","self":false,"text":"法级描述更明确具体，因此它被用于很多的实际系统的设计中。2、<em class='similar'>综合就是从采用 HDL语言描述的寄存器传输级</em>(RTL)"},{"profession":false,"keywords":[],"year":"","docid":"9000181240768511","author":"","university":"","source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html","reference":false,"similarScore":159.9017,"teacher":"","textWithDynamicClass":"erence Manual. Synopsys3什么是综合?<em class='similar 48S93I2' onmouseover=\"highlightSetter('48S93I2',false)\" onmouseout=\"highlightSetter('48S93I2',true)\">n n综合是从采用Verilog HDL描述的寄存器传输级</em>(RTL)","datatype":"webpage","clcs":[],"similarityPercentage":"56.6%","self":false,"text":"erence Manual. Synopsys3什么是综合?<em class='similar'>n n综合是从采用Verilog HDL描述的寄存器传输级</em>(RTL)"}],"textWithDynamicClass":"<em class='similar T47I0' onmouseover=\"highlightSetter('T47I0',false)\" onmouseout=\"highlightSetter('T47I0',true)\">对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级</em>","similar_word_count":37,"text":"<em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级</em>","suggest":{"synonyms":[],"keyword":["数字电路设计","硬件描述语言","寄存器传输级"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000202005048511","author":"","university":"","source":"网页","title":"RTL 和 综合 等一些基本概念的摘记_gioc的专栏-CSDN博客","url":"https://blog.csdn.net/gioc/article/details/84648115#insertcode","reference":false,"similarScore":186.65845,"teacher":"","textWithDynamicClass":"法级描述更明确具体，因此它被用于很多的实际系统的设计中。2、综合就是从采用 HDL语言描述的寄存器传输级<em class='similar 48S92I6' onmouseover=\"highlightSetter('48S92I6',false)\" onmouseout=\"highlightSetter('48S92I6',true)\">(RTL)</em><em class='similar 48S92I7' onmouseover=\"highlightSetter('48S92I7',false)\" onmouseout=\"highlightSetter('48S92I7',true)\">电路模型构造出门级网表的过程。</em>3、 EDA等固定名词英文全称（按英文顺序排列）","datatype":"webpage","clcs":[],"similarityPercentage":"73.1%","self":false,"text":"法级描述更明确具体，因此它被用于很多的实际系统的设计中。2、综合就是从采用 HDL语言描述的寄存器传输级<em class='similar'>(RTL)</em><em class='similar'>电路模型构造出门级网表的过程。</em>3、 EDA等固定名词英文全称（按英文顺序排列）"},{"profession":false,"keywords":[],"year":"","docid":"9000181240768511","author":"","university":"","source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html","reference":false,"similarScore":159.9017,"teacher":"","textWithDynamicClass":"erence Manual. Synopsys3什么是综合?n n综合是从采用Verilog HDL描述的寄存器传输级<em class='similar 48S93I3' onmouseover=\"highlightSetter('48S93I3',false)\" onmouseout=\"highlightSetter('48S93I3',true)\">(RTL)</em><em class='similar 48S93I4' onmouseover=\"highlightSetter('48S93I4',false)\" onmouseout=\"highlightSetter('48S93I4',true)\">电路模型构造出门级网表的过程。</em>n 综合可能有个中间步骤,生成的网表是由一些RTL","datatype":"webpage","clcs":[],"similarityPercentage":"66.4%","self":false,"text":"erence Manual. Synopsys3什么是综合?n n综合是从采用Verilog HDL描述的寄存器传输级<em class='similar'>(RTL)</em><em class='similar'>电路模型构造出门级网表的过程。</em>n 综合可能有个中间步骤,生成的网表是由一些RTL"}],"textWithDynamicClass":"对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级<em class='similar T47I1' onmouseover=\"highlightSetter('T47I1',false)\" onmouseout=\"highlightSetter('T47I1',true)\">(RTL)</em><em class='similar T47I2' onmouseover=\"highlightSetter('T47I2',false)\" onmouseout=\"highlightSetter('T47I2',true)\">电路抽象级模型构造出对应的门级电路网表的过程。</em>","similar_word_count":23,"text":"对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级<em class='similar'>(RTL)</em><em class='similar'>电路抽象级模型构造出对应的门级电路网表的过程。</em>","suggest":{"synonyms":[{"synonyms":["笼统"],"keyword":"抽象"}],"keyword":["抽象","模型构造","电路网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000191352255511","author":"","university":"","source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html","reference":false,"similarScore":515.34033,"teacher":"","textWithDynamicClass":"<em class='similar 49S94I0' onmouseover=\"highlightSetter('49S94I0',false)\" onmouseout=\"highlightSetter('49S94I0',true)\">高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar 49S94I1' onmouseover=\"highlightSetter('49S94I1',false)\" onmouseout=\"highlightSetter('49S94I1',true)\">从算法表示、</em><em class='similar 49S94I2' onmouseover=\"highlightSetter('49S94I2',false)\" onmouseout=\"highlightSetter('49S94I2',true)\">行为描述转换到寄存器传输级</em><em class='similar 49S94I3' onmouseover=\"highlightSetter('49S94I3',false)\" onmouseout=\"highlightSetter('49S94I3',true)\">(将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em>从算法表示、","datatype":"webpage","clcs":[],"similarityPercentage":"68.9%","self":false,"text":"<em class='similar'>高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em><em class='similar'>(将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em>从算法表示、"},{"profession":false,"keywords":[],"year":"","docid":"9000189917812511","author":"","university":"","source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html","reference":false,"similarScore":337.97867,"teacher":"","textWithDynamicClass":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar 49S95I2' onmouseover=\"highlightSetter('49S95I2',false)\" onmouseout=\"highlightSetter('49S95I2',true)\">将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em>从算法表示、","datatype":"webpage","clcs":[],"similarityPercentage":"68.9%","self":false,"text":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar'>将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em>从算法表示、"},{"profession":false,"keywords":[],"year":"","docid":"9000189446884611","author":"","university":"","source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html","reference":false,"similarScore":306.67603,"teacher":"","textWithDynamicClass":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar 49S96I8' onmouseover=\"highlightSetter('49S96I8',false)\" onmouseout=\"highlightSetter('49S96I8',true)\">将较高层次的设计描述自动转化为较低层次描述的过程行为综合:</em>从算法表示、","datatype":"webpage","clcs":[],"similarityPercentage":"68.9%","self":false,"text":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar'>将较高层次的设计描述自动转化为较低层次描述的过程行为综合:</em>从算法表示、"},{"profession":false,"keywords":[],"year":"","docid":"9000181521137511","author":"","university":"","source":"网页","title":"Verilog期末复习题","url":"https://www.docin.com/p%2D2585143971.html","reference":false,"similarScore":455.06827,"teacher":"","textWithDynamicClass":"<em class='similar 49S98I0' onmouseover=\"highlightSetter('49S98I0',false)\" onmouseout=\"highlightSetter('49S98I0',true)\">逻辑综合:</em><em class='similar 49S98I1' onmouseover=\"highlightSetter('49S98I1',false)\" onmouseout=\"highlightSetter('49S98I1',true)\">将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar 49S98I2' onmouseover=\"highlightSetter('49S98I2',false)\" onmouseout=\"highlightSetter('49S98I2',true)\">包括行为综合,</em><em class='similar 49S98I3' onmouseover=\"highlightSetter('49S98I3',false)\" onmouseout=\"highlightSetter('49S98I3',true)\">、逻辑综合:</em><em class='similar 49S98I4' onmouseover=\"highlightSetter('49S98I4',false)\" onmouseout=\"highlightSetter('49S98I4',true)\">将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar 49S98I5' onmouseover=\"highlightSetter('49S98I5',false)\" onmouseout=\"highlightSetter('49S98I5',true)\">包括行为综合,</em><em class='similar 49S98I6' onmouseover=\"highlightSetter('49S98I6',false)\" onmouseout=\"highlightSetter('49S98I6',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar 49S98I8' onmouseover=\"highlightSetter('49S98I8',false)\" onmouseout=\"highlightSetter('49S98I8',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar 49S98I10' onmouseover=\"highlightSetter('49S98I10',false)\" onmouseout=\"highlightSetter('49S98I10',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。","datatype":"webpage","clcs":[],"similarityPercentage":"19.5%","self":false,"text":"<em class='similar'>逻辑综合:</em><em class='similar'>将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar'>包括行为综合,</em><em class='similar'>、逻辑综合:</em><em class='similar'>将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar'>包括行为综合,</em><em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。"}],"textWithDynamicClass":"<em class='similar T48I0' onmouseover=\"highlightSetter('T48I0',false)\" onmouseout=\"highlightSetter('T48I0',true)\">综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,</em>","similar_word_count":47,"text":"<em class='similar'>综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,</em>","suggest":{"synonyms":[{"synonyms":["经过"],"keyword":"经由"}],"keyword":["综合的","高层","集成电路","逻辑的","经由","自动化工具","低层次","描述的"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000191352255511","author":"","university":"","source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html","reference":false,"similarScore":515.34033,"teacher":"","textWithDynamicClass":"高层次的设计描述自动转化为较低层次描述的过程◆行为综合:<em class='similar 49S94I1' onmouseover=\"highlightSetter('49S94I1',false)\" onmouseout=\"highlightSetter('49S94I1',true)\">从算法表示、</em><em class='similar 49S94I2' onmouseover=\"highlightSetter('49S94I2',false)\" onmouseout=\"highlightSetter('49S94I2',true)\">行为描述转换到寄存器传输级</em><em class='similar 49S94I3' onmouseover=\"highlightSetter('49S94I3',false)\" onmouseout=\"highlightSetter('49S94I3',true)\">(将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar 49S94I4' onmouseover=\"highlightSetter('49S94I4',false)\" onmouseout=\"highlightSetter('49S94I4',true)\">从算法表示、</em><em class='similar 49S94I5' onmouseover=\"highlightSetter('49S94I5',false)\" onmouseout=\"highlightSetter('49S94I5',true)\">行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合:<em class='similar 49S94I7' onmouseover=\"highlightSetter('49S94I7',false)\" onmouseout=\"highlightSetter('49S94I7',true)\">)◆逻辑综合:</em><em class='similar 49S94I8' onmouseover=\"highlightSetter('49S94I8',false)\" onmouseout=\"highlightSetter('49S94I8',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"74.2%","self":false,"text":"高层次的设计描述自动转化为较低层次描述的过程◆行为综合:<em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em><em class='similar'>(将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合:<em class='similar'>)◆逻辑综合:</em><em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转"},{"profession":false,"keywords":[],"year":"","docid":"9000189917812511","author":"","university":"","source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html","reference":false,"similarScore":337.97867,"teacher":"","textWithDynamicClass":"描述语言与软件编程语言有本质的区别综合(Synthesis)将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:<em class='similar 49S95I3' onmouseover=\"highlightSetter('49S95I3',false)\" onmouseout=\"highlightSetter('49S95I3',true)\">从算法表示、</em><em class='similar 49S95I4' onmouseover=\"highlightSetter('49S95I4',false)\" onmouseout=\"highlightSetter('49S95I4',true)\">行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合◆逻辑综合:<em class='similar 49S95I6' onmouseover=\"highlightSetter('49S95I6',false)\" onmouseout=\"highlightSetter('49S95I6',true)\"> RTL级描述转换到逻辑门级</em>(包括触发器)<em class='similar 49S95I8' onmouseover=\"highlightSetter('49S95I8',false)\" onmouseout=\"highlightSetter('49S95I8',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"74.2%","self":false,"text":"描述语言与软件编程语言有本质的区别综合(Synthesis)将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:<em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合◆逻辑综合:<em class='similar'> RTL级描述转换到逻辑门级</em>(包括触发器)<em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转"},{"profession":false,"keywords":[],"year":"","docid":"9000189446884611","author":"","university":"","source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html","reference":false,"similarScore":306.67603,"teacher":"","textWithDynamicClass":"描述语言与软件编程语言有本质的区别综合(Synthesis)将较高层次的设计描述自动转化为较低层次描述的过程行为综合:<em class='similar 49S96I9' onmouseover=\"highlightSetter('49S96I9',false)\" onmouseout=\"highlightSetter('49S96I9',true)\">从算法表示、</em><em class='similar 49S96I10' onmouseover=\"highlightSetter('49S96I10',false)\" onmouseout=\"highlightSetter('49S96I10',true)\">行为描述转换到寄存器传输级</em>(RTL);<em class='similar 49S96I12' onmouseover=\"highlightSetter('49S96I12',false)\" onmouseout=\"highlightSetter('49S96I12',true)\">逻辑综合:</em><em class='similar 49S96I13' onmouseover=\"highlightSetter('49S96I13',false)\" onmouseout=\"highlightSetter('49S96I13',true)\">RTL级描述转换到逻辑门级</em>(包括触发器);版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"74.2%","self":false,"text":"描述语言与软件编程语言有本质的区别综合(Synthesis)将较高层次的设计描述自动转化为较低层次描述的过程行为综合:<em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL);<em class='similar'>逻辑综合:</em><em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器);版图综合或结构综合:从逻辑门表示转"},{"profession":false,"keywords":[],"year":"","docid":"9000181521137511","author":"","university":"","source":"网页","title":"Verilog期末复习题","url":"https://www.docin.com/p%2D2585143971.html","reference":false,"similarScore":455.06827,"teacher":"","textWithDynamicClass":"将较高层的设计描述自动转化为较低层次描述的过程,<em class='similar 49S98I2' onmouseover=\"highlightSetter('49S98I2',false)\" onmouseout=\"highlightSetter('49S98I2',true)\">包括行为综合,</em><em class='similar 49S98I3' onmouseover=\"highlightSetter('49S98I3',false)\" onmouseout=\"highlightSetter('49S98I3',true)\">、逻辑综合:</em><em class='similar 49S98I4' onmouseover=\"highlightSetter('49S98I4',false)\" onmouseout=\"highlightSetter('49S98I4',true)\">将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar 49S98I5' onmouseover=\"highlightSetter('49S98I5',false)\" onmouseout=\"highlightSetter('49S98I5',true)\">包括行为综合,</em><em class='similar 49S98I6' onmouseover=\"highlightSetter('49S98I6',false)\" onmouseout=\"highlightSetter('49S98I6',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar 49S98I8' onmouseover=\"highlightSetter('49S98I8',false)\" onmouseout=\"highlightSetter('49S98I8',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar 49S98I10' onmouseover=\"highlightSetter('49S98I10',false)\" onmouseout=\"highlightSetter('49S98I10',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。","datatype":"webpage","clcs":[],"similarityPercentage":"31.7%","self":false,"text":"将较高层的设计描述自动转化为较低层次描述的过程,<em class='similar'>包括行为综合,</em><em class='similar'>、逻辑综合:</em><em class='similar'>将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar'>包括行为综合,</em><em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。"}],"textWithDynamicClass":"综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,<em class='similar T48I1' onmouseover=\"highlightSetter('T48I1',false)\" onmouseout=\"highlightSetter('T48I1',true)\">综合细分行为综合与逻辑综合,</em><em class='similar T48I2' onmouseover=\"highlightSetter('T48I2',false)\" onmouseout=\"highlightSetter('T48I2',true)\">行为综合是从算法表示、</em><em class='similar T48I3' onmouseover=\"highlightSetter('T48I3',false)\" onmouseout=\"highlightSetter('T48I3',true)\">行为描述转换到RTL级,</em>","similar_word_count":32,"text":"综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,<em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>","suggest":{"synonyms":[],"keyword":["细分","逻辑综合","行为描述"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000191352255511","author":"","university":"","source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html","reference":false,"similarScore":515.34033,"teacher":"","textWithDynamicClass":"行为描述转换到寄存器传输级(RTL)◆逻辑综合:<em class='similar 49S94I7' onmouseover=\"highlightSetter('49S94I7',false)\" onmouseout=\"highlightSetter('49S94I7',true)\">)◆逻辑综合:</em><em class='similar 49S94I8' onmouseover=\"highlightSetter('49S94I8',false)\" onmouseout=\"highlightSetter('49S94I8',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"70.6%","self":false,"text":"行为描述转换到寄存器传输级(RTL)◆逻辑综合:<em class='similar'>)◆逻辑综合:</em><em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转"},{"profession":false,"keywords":[],"year":"","docid":"9000189917812511","author":"","university":"","source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html","reference":false,"similarScore":337.97867,"teacher":"","textWithDynamicClass":"行为描述转换到寄存器传输级(RTL)◆逻辑综合◆逻辑综合:<em class='similar 49S95I6' onmouseover=\"highlightSetter('49S95I6',false)\" onmouseout=\"highlightSetter('49S95I6',true)\"> RTL级描述转换到逻辑门级</em>(包括触发器)<em class='similar 49S95I8' onmouseover=\"highlightSetter('49S95I8',false)\" onmouseout=\"highlightSetter('49S95I8',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"70.6%","self":false,"text":"行为描述转换到寄存器传输级(RTL)◆逻辑综合◆逻辑综合:<em class='similar'> RTL级描述转换到逻辑门级</em>(包括触发器)<em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转"},{"profession":false,"keywords":[],"year":"","docid":"9000189446884611","author":"","university":"","source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html","reference":false,"similarScore":306.67603,"teacher":"","textWithDynamicClass":"行为描述转换到寄存器传输级(RTL);<em class='similar 49S96I12' onmouseover=\"highlightSetter('49S96I12',false)\" onmouseout=\"highlightSetter('49S96I12',true)\">逻辑综合:</em><em class='similar 49S96I13' onmouseover=\"highlightSetter('49S96I13',false)\" onmouseout=\"highlightSetter('49S96I13',true)\">RTL级描述转换到逻辑门级</em>(包括触发器);版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"70.6%","self":false,"text":"行为描述转换到寄存器传输级(RTL);<em class='similar'>逻辑综合:</em><em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器);版图综合或结构综合:从逻辑门表示转"}],"textWithDynamicClass":"如HLS综合;<em class='similar T48I5' onmouseover=\"highlightSetter('T48I5',false)\" onmouseout=\"highlightSetter('T48I5',true)\">而逻辑综合是从RTL级描述转换到包含有多级触发的逻辑门级的过程,</em>","similar_word_count":29,"text":"如HLS综合;<em class='similar'>而逻辑综合是从RTL级描述转换到包含有多级触发的逻辑门级的过程,</em>","suggest":{"synonyms":[],"keyword":["逻辑综合","多级","触发","逻辑门"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110384254911","author":"","university":"","source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9","reference":false,"similarScore":485.1764,"teacher":"","textWithDynamicClass":"<em class='similar 50S100I0' onmouseover=\"highlightSetter('50S100I0',false)\" onmouseout=\"highlightSetter('50S100I0',true)\">它生成的网表是由导线相互连接的寄存器传输级功能块</em>(如触发器、算术逻辑单元和多路选择器)组成的。此时,就要使用RTL模块构造器的程序了,","datatype":"webpage","clcs":[],"similarityPercentage":"40.2%","self":false,"text":"<em class='similar'>它生成的网表是由导线相互连接的寄存器传输级功能块</em>(如触发器、算术逻辑单元和多路选择器)组成的。此时,就要使用RTL模块构造器的程序了,"}],"textWithDynamicClass":"综合整个ASIC设计流程的中间步骤,<em class='similar T49I1' onmouseover=\"highlightSetter('T49I1',false)\" onmouseout=\"highlightSetter('T49I1',true)\">综合后生成的网表文件,</em><em class='similar T49I2' onmouseover=\"highlightSetter('T49I2',false)\" onmouseout=\"highlightSetter('T49I2',true)\">其本质是基于导线来进行连接的RTL级功能块</em>","similar_word_count":29,"text":"综合整个ASIC设计流程的中间步骤,<em class='similar'>综合后生成的网表文件,</em><em class='similar'>其本质是基于导线来进行连接的RTL级功能块</em>","suggest":{"synonyms":[{"synonyms":["白叟"],"keyword":"后生"}],"keyword":["后生","网表文件","导线","功能块","网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110384254911","author":"","university":"","source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9","reference":false,"similarScore":485.1764,"teacher":"","textWithDynamicClass":"它生成的网表是由导线相互连接的寄存器传输级功能块(如触发器、算术逻辑单元和多路选择器)组成的。此时,<em class='similar 50S100I5' onmouseover=\"highlightSetter('50S100I5',false)\" onmouseout=\"highlightSetter('50S100I5',true)\">就要使用RTL模块构造器的程序了,</em><em class='similar 50S100I6' onmouseover=\"highlightSetter('50S100I6',false)\" onmouseout=\"highlightSetter('50S100I6',true)\">该构造器用来针对用户指定的目标工艺从预定元件库中构造或获取每一个必需的RTL功能模块。</em>产生门级网表以后,逻辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。","datatype":"webpage","clcs":[],"similarityPercentage":"57.1%","self":false,"text":"它生成的网表是由导线相互连接的寄存器传输级功能块(如触发器、算术逻辑单元和多路选择器)组成的。此时,<em class='similar'>就要使用RTL模块构造器的程序了,</em><em class='similar'>该构造器用来针对用户指定的目标工艺从预定元件库中构造或获取每一个必需的RTL功能模块。</em>产生门级网表以后,逻辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。"}],"textWithDynamicClass":"(如FF、LB和MUX等)所组成。<em class='similar T49I6' onmouseover=\"highlightSetter('T49I6',false)\" onmouseout=\"highlightSetter('T49I6',true)\">而这里一般就需要使用RTL模块构造器来通过用户所注明或进一步指定的目标工艺元件库中构造或从已有库中获取必须的RTL级功能模块。</em>","similar_word_count":58,"text":"(如FF、LB和MUX等)所组成。<em class='similar'>而这里一般就需要使用RTL模块构造器来通过用户所注明或进一步指定的目标工艺元件库中构造或从已有库中获取必须的RTL级功能模块。</em>","suggest":{"synonyms":[{"synonyms":["注脚"],"keyword":"注明"}],"keyword":["构造器","注明","目标工艺","元件库","功能模块"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110384254911","author":"","university":"","source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9","reference":false,"similarScore":485.1764,"teacher":"","textWithDynamicClass":"该构造器用来针对用户指定的目标工艺从预定元件库中构造或获取每一个必需的RTL功能模块。产生门级网表以后,<em class='similar 50S100I8' onmouseover=\"highlightSetter('50S100I8',false)\" onmouseout=\"highlightSetter('50S100I8',true)\">逻辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。</em>这些面积和时序约束也可以用来指导模块构造器恰当地选","datatype":"webpage","clcs":[],"similarityPercentage":"54.8%","self":false,"text":"该构造器用来针对用户指定的目标工艺从预定元件库中构造或获取每一个必需的RTL功能模块。产生门级网表以后,<em class='similar'>逻辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。</em>这些面积和时序约束也可以用来指导模块构造器恰当地选"}],"textWithDynamicClass":"综合产生网表文件后,<em class='similar T49I8' onmouseover=\"highlightSetter('T49I8',false)\" onmouseout=\"highlightSetter('T49I8',true)\">逻辑优化器会读入网表,</em><em class='similar T49I9' onmouseover=\"highlightSetter('T49I9',false)\" onmouseout=\"highlightSetter('T49I9',true)\">并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。</em>","similar_word_count":43,"text":"综合产生网表文件后,<em class='similar'>逻辑优化器会读入网表,</em><em class='similar'>并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。</em>","suggest":{"synonyms":[{"synonyms":["上钩"],"keyword":"入网"}],"keyword":["逻辑","优化器","会读","入网","用户配置","片上资源","时序约束","网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000878391411","author":"","university":"","source":"大学生论文联合库","title":"电路综合学习资料","url":"","reference":false,"similarScore":164.87802,"teacher":"","textWithDynamicClass":"辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。<em class='similar 51S101I3' onmouseover=\"highlightSetter('51S101I3',false)\" onmouseout=\"highlightSetter('51S101I3',true)\">这些面积和时序约束也可以用来指导RTL模块构造器适当的选取和生成RTL级功能块。</em>综合的过程如下图:读入设计及其子设计设置顶层的设计","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"68.6%","self":false,"text":"辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。<em class='similar'>这些面积和时序约束也可以用来指导RTL模块构造器适当的选取和生成RTL级功能块。</em>综合的过程如下图:读入设计及其子设计设置顶层的设计"}],"textWithDynamicClass":"并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。并且,<em class='similar T50I0' onmouseover=\"highlightSetter('T50I0',false)\" onmouseout=\"highlightSetter('T50I0',true)\">这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。</em>","similar_word_count":41,"text":"并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。并且,<em class='similar'>这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。</em>","suggest":{"synonyms":[],"keyword":["资源约束","面积约束","时序约束","构造器","功能块"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":129.70589,"teacher":"","textWithDynamicClass":"络表,如锁存器(latch)、触发器(flip一n叩)等。.<em class='similar 52S102I7' onmouseover=\"highlightSetter('52S102I7',false)\" onmouseout=\"highlightSetter('52S102I7',true)\"> RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。</em>.逻辑优化器读取未优化的门级网表,并按照用户设置的","datatype":"book","clcs":[],"similarityPercentage":"72.0%","self":false,"text":"络表,如锁存器(latch)、触发器(flip一n叩)等。.<em class='similar'> RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。</em>.逻辑优化器读取未优化的门级网表,并按照用户设置的"}],"textWithDynamicClass":"<em class='similar T51I0' onmouseover=\"highlightSetter('T51I0',false)\" onmouseout=\"highlightSetter('T51I0',true)\">②RTL模块构造器从用户指定或综合器所携带的工艺库中里提取并生成对应的模块;</em>","similar_word_count":34,"text":"<em class='similar'>②RTL模块构造器从用户指定或综合器所携带的工艺库中里提取并生成对应的模块;</em>","suggest":{"synonyms":[{"synonyms":["率领"],"keyword":"携带"}],"keyword":["构造器","综合器","携带","工艺���"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":230.35712,"teacher":"","textWithDynamicClass":"RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。<em class='similar 53S103I7' onmouseover=\"highlightSetter('53S103I7',false)\" onmouseout=\"highlightSetter('53S103I7',true)\">.逻辑优化器读取未优化的门级网表,</em><em class='similar 53S103I8' onmouseover=\"highlightSetter('53S103I8',false)\" onmouseout=\"highlightSetter('53S103I8',true)\">并按照用户设置的面积和时序约束,</em><em class='similar 53S103I9' onmouseover=\"highlightSetter('53S103I9',false)\" onmouseout=\"highlightSetter('53S103I9',true)\">进行优化。</em>图5一2给出了基本verilog HDL单元(el","datatype":"book","clcs":[],"similarityPercentage":"76.8%","self":false,"text":"RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。<em class='similar'>.逻辑优化器读取未优化的门级网表,</em><em class='similar'>并按照用户设置的面积和时序约束,</em><em class='similar'>进行优化。</em>图5一2给出了基本verilog HDL单元(el"}],"textWithDynamicClass":"<em class='similar T52I0' onmouseover=\"highlightSetter('T52I0',false)\" onmouseout=\"highlightSetter('T52I0',true)\">③逻辑优化器读取未优化的门级网表,</em><em class='similar T52I1' onmouseover=\"highlightSetter('T52I1',false)\" onmouseout=\"highlightSetter('T52I1',true)\">并按照用户所期望的布局后面积和系统运行各个信号的时序约束,</em><em class='similar T52I2' onmouseover=\"highlightSetter('T52I2',false)\" onmouseout=\"highlightSetter('T52I2',true)\">进行进一步的优化;</em>","similar_word_count":51,"text":"<em class='similar'>③逻辑优化器读取未优化的门级网表,</em><em class='similar'>并按照用户所期望的布局后面积和系统运行各个信号的时序约束,</em><em class='similar'>进行进一步的优化;</em>","suggest":{"synonyms":[{"synonyms":["构造"],"keyword":"布局"}],"keyword":["逻辑","优化器","读取","优化的","网表","布局","系统运行","时序约束"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":240.34962,"teacher":"","textWithDynamicClass":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar 54S104I8' onmouseover=\"highlightSetter('54S104I8',false)\" onmouseout=\"highlightSetter('54S104I8',true)\">是如何转换成硬件的;</em>.常量(oonstants)<em class='similar 54S104I11' onmouseover=\"highlightSetter('54S104I11',false)\" onmouseout=\"highlightSetter('54S104I11',true)\">是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar 54S104I14' onmouseover=\"highlightSetter('54S104I14',false)\" onmouseout=\"highlightSetter('54S104I14',true)\">是如何转换成硬件的。</em>常量数据类型(net、register、param","datatype":"book","clcs":[],"similarityPercentage":"64.0%","self":false,"text":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar'>是如何转换成硬件的;</em>.常量(oonstants)<em class='similar'>是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar'>是如何转换成硬件的。</em>常量数据类型(net、register、param"}],"textWithDynamicClass":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,<em class='similar T53I1' onmouseover=\"highlightSetter('T53I1',false)\" onmouseout=\"highlightSetter('T53I1',true)\">更加关注于Verilog HDL语句是如何转换成实际硬件器件的,</em>","similar_word_count":23,"text":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,<em class='similar'>更加关注于Verilog HDL语句是如何转换成实际硬件器件的,</em>","suggest":{"synonyms":[],"keyword":["语句","硬件","器件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000055794445311","author":"","university":"","source":"网页","title":"浅析Verilog硬件原语pdf下载_爱问共享资料","url":"http://ishare.iask.sina.com.cn/f/25351732.html","reference":false,"similarScore":169.72028,"teacher":"","textWithDynamicClass":"这里我们研究Verilog的硬件语义是为了分析以下几个问题:<em class='similar 54S105I2' onmouseover=\"highlightSetter('54S105I2',false)\" onmouseout=\"highlightSetter('54S105I2',true)\">)数据类型如何变成硬件?</em><em class='similar 54S105I3' onmouseover=\"highlightSetter('54S105I3',false)\" onmouseout=\"highlightSetter('54S105I3',true)\">)常量如何映射成逻辑值?</em><em class='similar 54S105I4' onmouseover=\"highlightSetter('54S105I4',false)\" onmouseout=\"highlightSetter('54S105I4',true)\">)语句如何转变成硬件?</em>逻辑值体系逻辑值体系n硬件建模中常用的值有:逻辑逻","datatype":"webpage","clcs":[],"similarityPercentage":"82.4%","self":false,"text":"这里我们研究Verilog的硬件语义是为了分析以下几个问题:<em class='similar'>)数据类型如何变成硬件?</em><em class='similar'>)常量如何映射成逻辑值?</em><em class='similar'>)语句如何转变成硬件?</em>逻辑值体系逻辑值体系n硬件建模中常用的值有:逻辑逻"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":240.34962,"teacher":"","textWithDynamicClass":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar 54S104I8' onmouseover=\"highlightSetter('54S104I8',false)\" onmouseout=\"highlightSetter('54S104I8',true)\">是如何转换成硬件的;</em>.常量(oonstants)<em class='similar 54S104I11' onmouseover=\"highlightSetter('54S104I11',false)\" onmouseout=\"highlightSetter('54S104I11',true)\">是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar 54S104I14' onmouseover=\"highlightSetter('54S104I14',false)\" onmouseout=\"highlightSetter('54S104I14',true)\">是如何转换成硬件的。</em>常量数据类型(net、register、param","datatype":"book","clcs":[],"similarityPercentage":"71.6%","self":false,"text":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar'>是如何转换成硬件的;</em>.常量(oonstants)<em class='similar'>是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar'>是如何转换成硬件的。</em>常量数据类型(net、register、param"}],"textWithDynamicClass":"更加关注于Verilog HDL语句是如何转换成实际硬件器件的,<em class='similar'>如:</em><em class='similar T53I3' onmouseover=\"highlightSetter('T53I3',false)\" onmouseout=\"highlightSetter('T53I3',true)\">数据类型是如何映射成硬件的,</em><em class='similar T53I4' onmouseover=\"highlightSetter('T53I4',false)\" onmouseout=\"highlightSetter('T53I4',true)\">常量是如何转换成逻辑数值的,</em><em class='similar T53I5' onmouseover=\"highlightSetter('T53I5',false)\" onmouseout=\"highlightSetter('T53I5',true)\">语句是如何转换成硬件的。</em>","similar_word_count":38,"text":"更加关注于Verilog HDL语句是如何转换成实际硬件器件的,<em class='similar'>如:</em><em class='similar'>数据类型是如何映射成硬件的,</em><em class='similar'>常量是如何转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["语句","硬件","数据类型","映射","常量","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":302.41382,"teacher":"","textWithDynamicClass":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar 55S106I3' onmouseover=\"highlightSetter('55S106I3',false)\" onmouseout=\"highlightSetter('55S106I3',true)\">(即连续赋值语句产生作用后,</em><em class='similar 55S106I4' onmouseover=\"highlightSetter('55S106I4',false)\" onmouseout=\"highlightSetter('55S106I4',true)\">赋值表达式中信号的任何变化都将立即反映到被赋值线网型数据的取值上,</em>这也是我们有时会使用&quot;连续驱动&quot;这个术语的原因),而在过程赋值语句情况下,只有在过程赋值语句被执行时才执行赋值操作,语句执行完后被赋值变量的取值不再受到赋值表达式的影响。<em class='similar 55S106I9' onmouseover=\"highlightSetter('55S106I9',false)\" onmouseout=\"highlightSetter('55S106I9',true)\">下面是连续赋值语句的完</em>","datatype":"book","clcs":[],"similarityPercentage":"73.9%","self":false,"text":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar'>(即连续赋值语句产生作用后,</em><em class='similar'>赋值表达式中信号的任何变化都将立即反映到被赋值线网型数据的取值上,</em>这也是我们有时会使用&quot;连续驱动&quot;这个术语的原因),而在过程赋值语句情况下,只有在过程赋值语句被执行时才执行赋值操作,语句执行完后被赋值变量的取值不再受到赋值表达式的影响。<em class='similar'>下面是连续赋值语句的完</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000138838221611","author":"","university":"","source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html","reference":false,"similarScore":242.41376,"teacher":"","textWithDynamicClass":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar 55S107I2' onmouseover=\"highlightSetter('55S107I2',false)\" onmouseout=\"highlightSetter('55S107I2',true)\">(即连续赋值语句产生作用后,</em>赋值表达式中信号的变化都将立即反映到被赋值线网型数据的取值上)","datatype":"webpage","clcs":[],"similarityPercentage":"70.7%","self":false,"text":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar'>(即连续赋值语句产生作用后,</em>赋值表达式中信号的变化都将立即反映到被赋值线网型数据的取值上)"}],"textWithDynamicClass":"<em class='similar T54I0' onmouseover=\"highlightSetter('T54I0',false)\" onmouseout=\"highlightSetter('T54I0',true)\">连续赋值语句</em>","similar_word_count":6,"text":"<em class='similar'>连续赋值语句</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句","赋值"]}},{"sources":[],"textWithDynamicClass":"(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中综合器会将连续赋值语句右侧的表达式逻辑进行提取,用于驱动该语句中左侧的net类型资源,<em class='similar T54I5' onmouseover=\"highlightSetter('T54I5',false)\" onmouseout=\"highlightSetter('T54I5',true)\">连续赋值语句的右侧表达式中逻辑功能实现后</em><em class='similar'>,</em>","similar_word_count":20,"text":"(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中综合器会将连续赋值语句右侧的表达式逻辑进行提取,用于驱动该语句中左侧的net类型资源,<em class='similar'>连续赋值语句的右侧表达式中逻辑功能实现后</em><em class='similar'>,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句","右侧","表达式","逻辑","功能实现","赋值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138838221611","author":"","university":"","source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html","reference":false,"similarScore":242.41376,"teacher":"","textWithDynamicClass":"语句对被赋值线网型数据的赋值是\"连续\"的(即连续赋值语句产生作用后,<em class='similar 55S107I3' onmouseover=\"highlightSetter('55S107I3',false)\" onmouseout=\"highlightSetter('55S107I3',true)\">赋值表达式中信号的变化都将立即反映到被赋值线网型数据的取值上)</em>,只有在过程赋值语句被执行时才执行赋值操作,语句执","datatype":"webpage","clcs":[],"similarityPercentage":"75.6%","self":false,"text":"语句对被赋值线网型数据的赋值是\"连续\"的(即连续赋值语句产生作用后,<em class='similar'>赋值表达式中信号的变化都将立即反映到被赋值线网型数据的取值上)</em>,只有在过程赋值语句被执行时才执行赋值操作,语句执"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":302.41382,"teacher":"","textWithDynamicClass":"语句对被赋值线网型数据的赋值是\"连续\"的(即连续赋值语句产生作用后,<em class='similar 55S106I4' onmouseover=\"highlightSetter('55S106I4',false)\" onmouseout=\"highlightSetter('55S106I4',true)\">赋值表达式中信号的任何变化都将立即反映到被赋值线网型数据的取值上,</em>这也是我们有时会使用\"连续驱动\"这个术语的原因),而在过程赋值语句情况下,只有在过程赋值语句被执行时才执行赋值操作,语句执行完后被赋值变量的取值不再受到赋值表达式的影响。下面是连续赋值语句的完","datatype":"book","clcs":[],"similarityPercentage":"74.8%","self":false,"text":"语句对被赋值线网型数据的赋值是\"连续\"的(即连续赋值语句产生作用后,<em class='similar'>赋值表达式中信号的任何变化都将立即反映到被赋值线网型数据的取值上,</em>这也是我们有时会使用\"连续驱动\"这个术语的原因),而在过程赋值语句情况下,只有在过程赋值语句被执行时才执行赋值操作,语句执行完后被赋值变量的取值不再受到赋值表达式的影响。下面是连续赋值语句的完"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":200.43105,"teacher":"","textWithDynamicClass":"连续赋值语句内&quot;赋值表达式&quot;的连续驱动,<em class='similar 55S108I3' onmouseover=\"highlightSetter('55S108I3',false)\" onmouseout=\"highlightSetter('55S108I3',true)\">&quot;赋值表达式&quot;内任何操作数的变化都会引起被赋值变量或线网型数据取值的更新,</em>直到对其执行了\"撤销过程连续赋值&quo","datatype":"book","clcs":[],"similarityPercentage":"63.7%","self":false,"text":"连续赋值语句内&quot;赋值表达式&quot;的连续驱动,<em class='similar'>&quot;赋值表达式&quot;内任何操作数的变化都会引起被赋值变量或线网型数据取值的更新,</em>直到对其执行了\"撤销过程连续赋值&quo"}],"textWithDynamicClass":"连续赋值语句的右侧表达式中逻辑功能实现后,<em class='similar T54I6' onmouseover=\"highlightSetter('T54I6',false)\" onmouseout=\"highlightSetter('T54I6',true)\">赋值表达式中信号的变化随机会被传输至赋值线网型数据的取值上</em>","similar_word_count":29,"text":"连续赋值语句的右侧表达式中逻辑功能实现后,<em class='similar'>赋值表达式中信号的变化随机会被传输至赋值线网型数据的取值上</em>","suggest":{"synonyms":[],"keyword":["表达式","赋值","网型","取值"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":325.21118,"teacher":"","textWithDynamicClass":"用于驱动赋值语句左边的变���(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar 56S109I13' onmouseover=\"highlightSetter('56S109I13',false)\" onmouseout=\"highlightSetter('56S109I13',true)\">有两种类型的过程赋值语句:</em>.","datatype":"book","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"用于驱动赋值语句左边的变量(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar'>有两种类型的过程赋值语句:</em>."}],"textWithDynamicClass":"<em class='similar T55I0' onmouseover=\"highlightSetter('T55I0',false)\" onmouseout=\"highlightSetter('T55I0',true)\">过程过程赋值语句</em>","similar_word_count":8,"text":"<em class='similar'>过程过程赋值语句</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000185145501211","author":"","university":"","source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff","reference":false,"similarScore":314.11768,"teacher":"","textWithDynamicClass":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar 56S114I3' onmouseover=\"highlightSetter('56S114I3',false)\" onmouseout=\"highlightSetter('56S114I3',true)\">从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net过程赋值语句的综合:<em class='similar 56S114I5' onmouseover=\"highlightSetter('56S114I5',false)\" onmouseout=\"highlightSetter('56S114I5',true)\">从赋值语句右边提取出的逻辑,</em><em class='similar 56S114I6' onmouseover=\"highlightSetter('56S114I6',false)\" onmouseout=\"highlightSetter('56S114I6',true)\">用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a","datatype":"webpage","clcs":[],"similarityPercentage":"89.7%","self":false,"text":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar'>从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net过程赋值语句的综合:<em class='similar'>从赋值语句右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":325.21118,"teacher":"","textWithDynamicClass":"<em class='similar 56S109I0' onmouseover=\"highlightSetter('56S109I0',false)\" onmouseout=\"highlightSetter('56S109I0',true)\">由赋值语句右边的逻辑A八B简单驱动而已。</em> A B 图5一4连续赋值语句的综合赫201\\油成叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值(Procedural Assignment)<em class='similar 56S109I3' onmouseover=\"highlightSetter('56S109I3',false)\" onmouseout=\"highlightSetter('56S109I3',true)\">语句的硬件实现是:</em>从赋值语句<em class='similar 56S109I5' onmouseover=\"highlightSetter('56S109I5',false)\" onmouseout=\"highlightSetter('56S109I5',true)\">(即&quot;=&quot;或&quot;&lt;=&quot;)</em><em class='similar 56S109I6' onmouseover=\"highlightSetter('56S109I6',false)\" onmouseout=\"highlightSetter('56S109I6',true)\">右边提取出的逻辑,</em><em class='similar 56S109I7' onmouseover=\"highlightSetter('56S109I7',false)\" onmouseout=\"highlightSetter('56S109I7',true)\">用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中(仅用于仿真),也可出现在\"always\"块语句中,但是只有\"always\"块语句中的过程赋值语句才能被综合。有两种类型的过程赋值语句:","datatype":"book","clcs":[],"similarityPercentage":"79.5%","self":false,"text":"<em class='similar'>由赋值语句右边的逻辑A八B简单驱动而已。</em> A B 图5一4连续赋值语句的综合赫201\\油成叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值(Procedural Assignment)<em class='similar'>语句的硬件实现是:</em>从赋值语句<em class='similar'>(即&quot;=&quot;或&quot;&lt;=&quot;)</em><em class='similar'>右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中(仅用于仿真),也可出现在\"always\"块语句中,但是只有\"always\"块语句中的过程赋值语句才能被综合。有两种类型的过程赋值语句:"},{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":184.05731,"teacher":"","textWithDynamicClass":"己想要的逻辑。我就阻塞与非阻塞赋值这个题目具体说明一下。1、<em class='similar 56S113I4' onmouseover=\"highlightSetter('56S113I4',false)\" onmouseout=\"highlightSetter('56S113I4',true)\">连续赋值连续赋值语句的硬件实现是:</em>从赋值语句(=)<em class='similar 56S113I7' onmouseover=\"highlightSetter('56S113I7',false)\" onmouseout=\"highlightSetter('56S113I7',true)\">右边提取出的逻辑,</em><em class='similar 56S113I8' onmouseover=\"highlightSetter('56S113I8',false)\" onmouseout=\"highlightSetter('56S113I8',true)\">用于驱动赋值语句左边的线网</em>(net)连续赋值语句 module cONtin","datatype":"webpage","clcs":[],"similarityPercentage":"73.6%","self":false,"text":"己想要的逻辑。我就阻塞与非阻塞赋值这个题目具体说明一下。1、<em class='similar'>连续赋值连续赋值语句的硬件实现是:</em>从赋值语句(=)<em class='similar'>右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的线网</em>(net)连续赋值语句 module cONtin"},{"profession":false,"keywords":[],"year":"","docid":"9000010354498311","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449","reference":false,"similarScore":183.33331,"teacher":"","textWithDynamicClass":"uta,b;outputc;assignc=a&amp;b;<em class='similar 56S110I9' onmouseover=\"highlightSetter('56S110I9',false)\" onmouseout=\"highlightSetter('56S110I9',true)\">endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或&lt;=)<em class='similar 56S110I12' onmouseover=\"highlightSetter('56S110I12',false)\" onmouseout=\"highlightSetter('56S110I12',true)\">右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句","datatype":"webpage","clcs":[],"similarityPercentage":"70.7%","self":false,"text":"uta,b;outputc;assignc=a&amp;b;<em class='similar'>endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或&lt;=)<em class='similar'>右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句"}],"textWithDynamicClass":"(Procejural Assignment)<em class='similar T55I2' onmouseover=\"highlightSetter('T55I2',false)\" onmouseout=\"highlightSetter('T55I2',true)\">语句对应的FPGA的硬件实现是:</em><em class='similar T55I3' onmouseover=\"highlightSetter('T55I3',false)\" onmouseout=\"highlightSetter('T55I3',true)\">从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,</em><em class='similar T55I4' onmouseover=\"highlightSetter('T55I4',false)\" onmouseout=\"highlightSetter('T55I4',true)\">用于驱动赋值语句左边的变量,</em>","similar_word_count":42,"text":"(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现是:</em><em class='similar'>从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句","硬件实现","右边","逻辑","左边"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000185145501211","author":"","university":"","source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff","reference":false,"similarScore":193.91782,"teacher":"","textWithDynamicClass":"左边的net过程赋值语句的综合:从赋值语句右边提取出的逻辑,<em class='similar 57S116I6' onmouseover=\"highlightSetter('57S116I6',false)\" onmouseout=\"highlightSetter('57S116I6',true)\">用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,","datatype":"webpage","clcs":[],"similarityPercentage":"88.9%","self":false,"text":"左边的net过程赋值语句的综合:从赋值语句右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":171.84586,"teacher":"","textWithDynamicClass":";否则out=bendmodule 563、过程赋值语句3、<em class='similar 57S119I5' onmouseover=\"highlightSetter('57S119I5',false)\" onmouseout=\"highlightSetter('57S119I5',true)\">过程赋值语句用于对reg型变量赋值,</em>过程赋值语句出现在initial和always块语句中,","datatype":"webpage","clcs":[],"similarityPercentage":"59.2%","self":false,"text":";否则out=bendmodule 563、过程赋值语句3、<em class='similar'>过程赋值语句用于对reg型变量赋值,</em>过程赋值语句出现在initial和always块语句中,"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":688.1052,"teacher":"","textWithDynamicClass":"t;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar 57S115I7' onmouseover=\"highlightSetter('57S115I7',false)\" onmouseout=\"highlightSetter('57S115I7',true)\">用于驱动赋值语句左边的变量</em><em class='similar 57S115I8' onmouseover=\"highlightSetter('57S115I8',false)\" onmouseout=\"highlightSetter('57S115I8',true)\">(必须是reg类型)</em>。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中","datatype":"book","clcs":[],"similarityPercentage":"37.5%","self":false,"text":"t;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的变量</em><em class='similar'>(必须是reg类型)</em>。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中"}],"textWithDynamicClass":"从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,用于驱动赋值语句左边的变量,但是有个语法前提,<em class='similar T56I0' onmouseover=\"highlightSetter('T56I0',false)\" onmouseout=\"highlightSetter('T56I0',true)\">就是用于驱动赋值语句左边的变量是reg类型,</em>","similar_word_count":19,"text":"从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,用于驱动赋值语句左边的变量,但是有个语法前提,<em class='similar'>就是用于驱动赋值语句左边的变量是reg类型,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","左边","reg","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000185145501211","author":"","university":"","source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff","reference":false,"similarScore":193.91782,"teacher":"","textWithDynamicClass":"注意:initia语句仅用于仿真,<em class='similar 57S116I9' onmouseover=\"highlightSetter('57S116I9',false)\" onmouseout=\"highlightSetter('57S116I9',true)\">不综合。</em><em class='similar 57S116I10' onmouseover=\"highlightSetter('57S116I10',false)\" onmouseout=\"highlightSetter('57S116I10',true)\">只有在always中才能被综合。</em>建议组合逻辑用阻塞语句,时序逻辑用非阻塞语句,任何","datatype":"webpage","clcs":[],"similarityPercentage":"70.1%","self":false,"text":"注意:initia语句仅用于仿真,<em class='similar'>不综合。</em><em class='similar'>只有在always中才能被综合。</em>建议组合逻辑用阻塞语句,时序逻辑用非阻塞语句,任何"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":688.1052,"teacher":"","textWithDynamicClass":"(必须是reg类型)<em class='similar 57S115I9' onmouseover=\"highlightSetter('57S115I9',false)\" onmouseout=\"highlightSetter('57S115I9',true)\">。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar 57S115I10' onmouseover=\"highlightSetter('57S115I10',false)\" onmouseout=\"highlightSetter('57S115I10',true)\">(仅用于仿真)</em><em class='similar 57S115I11' onmouseover=\"highlightSetter('57S115I11',false)\" onmouseout=\"highlightSetter('57S115I11',true)\">,也可出现在&quot;always&quot;块语句中,</em><em class='similar 57S115I12' onmouseover=\"highlightSetter('57S115I12',false)\" onmouseout=\"highlightSetter('57S115I12',true)\">但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em>有两种类型的过程赋值语句:","datatype":"book","clcs":[],"similarityPercentage":"67.5%","self":false,"text":"(必须是reg类型)<em class='similar'>。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar'>(仅用于仿真)</em><em class='similar'>,也可出现在&quot;always&quot;块语句中,</em><em class='similar'>但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em>有两种类型的过程赋值语句:"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":171.84586,"teacher":"","textWithDynamicClass":";否则out=bendmodule 563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar 57S119I6' onmouseover=\"highlightSetter('57S119I6',false)\" onmouseout=\"highlightSetter('57S119I6',true)\">过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)","datatype":"webpage","clcs":[],"similarityPercentage":"57.5%","self":false,"text":";否则out=bendmodule 563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar'>过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":268.81818,"teacher":"","textWithDynamicClass":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar 57S118I9' onmouseover=\"highlightSetter('57S118I9',false)\" onmouseout=\"highlightSetter('57S118I9',true)\">过程赋值语句过程赋值语句出现在initial和always块语句中,</em>包括阻塞赋值语句、","datatype":"webpage","clcs":[],"similarityPercentage":"47.9%","self":false,"text":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar'>过程赋值语句过程赋值语句出现在initial和always块语句中,</em>包括阻塞赋值语句、"}],"textWithDynamicClass":"就是用于驱动赋值语句左边的变量是reg类型,<em class='similar T56I1' onmouseover=\"highlightSetter('T56I1',false)\" onmouseout=\"highlightSetter('T56I1',true)\">且只有Always语句块中的过程赋值语句才可以被综合器综合,</em>","similar_word_count":25,"text":"就是用于驱动赋值语句左边的变量是reg类型,<em class='similar'>且只有Always语句块中的过程赋值语句才可以被综合器综合,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句","综合器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000185145501211","author":"","university":"","source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff","reference":false,"similarScore":193.91782,"teacher":"","textWithDynamicClass":"左边的net过程赋值语句的综合:从赋值语句右边提取出的逻辑,用于驱动赋值语句左边的reg型变量。注意:<em class='similar 57S116I8' onmouseover=\"highlightSetter('57S116I8',false)\" onmouseout=\"highlightSetter('57S116I8',true)\">initia语句仅用于仿真,</em>不综合。","datatype":"webpage","clcs":[],"similarityPercentage":"70.3%","self":false,"text":"左边的net过程赋值语句的综合:从赋值语句右边提取出的逻辑,用于驱动赋值语句左边的reg型变量。注意:<em class='similar'>initia语句仅用于仿真,</em>不综合。"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":688.1052,"teacher":"","textWithDynamicClass":"(必须是reg类型)<em class='similar 57S115I9' onmouseover=\"highlightSetter('57S115I9',false)\" onmouseout=\"highlightSetter('57S115I9',true)\">。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar 57S115I10' onmouseover=\"highlightSetter('57S115I10',false)\" onmouseout=\"highlightSetter('57S115I10',true)\">(仅用于仿真)</em><em class='similar 57S115I11' onmouseover=\"highlightSetter('57S115I11',false)\" onmouseout=\"highlightSetter('57S115I11',true)\">,也可出现在&quot;always&quot;块语句中,</em>但是只有\"always\"块语句中的过程赋值语句才能被综合。","datatype":"book","clcs":[],"similarityPercentage":"66.3%","self":false,"text":"(必须是reg类型)<em class='similar'>。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar'>(仅用于仿真)</em><em class='similar'>,也可出现在&quot;always&quot;块语句中,</em>但是只有\"always\"块语句中的过程赋值语句才能被综合。"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":171.84586,"teacher":"","textWithDynamicClass":";否则out=bendmodule 563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar 57S119I6' onmouseover=\"highlightSetter('57S119I6',false)\" onmouseout=\"highlightSetter('57S119I6',true)\">过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)","datatype":"webpage","clcs":[],"similarityPercentage":"55.1%","self":false,"text":";否则out=bendmodule 563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar'>过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":268.81818,"teacher":"","textWithDynamicClass":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar 57S118I9' onmouseover=\"highlightSetter('57S118I9',false)\" onmouseout=\"highlightSetter('57S118I9',true)\">过程赋值语句过程赋值语句出现在initial和always块语句中,</em>包括阻塞赋值语句、","datatype":"webpage","clcs":[],"similarityPercentage":"45.3%","self":false,"text":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar'>过程赋值语句过程赋值语句出现在initial和always块语句中,</em>包括阻塞赋值语句、"}],"textWithDynamicClass":"且只有Always语句块中的过程赋值语句才可以被综合器综合,<em class='similar T56I2' onmouseover=\"highlightSetter('T56I2',false)\" onmouseout=\"highlightSetter('T56I2',true)\">若出现在initial语句块中将被仅用于仿真。</em>","similar_word_count":17,"text":"且只有Always语句块中的过程赋值语句才可以被综合器综合,<em class='similar'>若出现在initial语句块中将被仅用于仿真。</em>","suggest":{"synonyms":[],"keyword":["语句","initial","中将","仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar 57S117I4' onmouseover=\"highlightSetter('57S117I4',false)\" onmouseout=\"highlightSetter('57S117I4',true)\">(=或有两种类型的过程赋值语句:</em><em class='similar 57S117I5' onmouseover=\"highlightSetter('57S117I5',false)\" onmouseout=\"highlightSetter('57S117I5',true)\">阻塞赋值语句</em><em class='similar 57S117I6' onmouseover=\"highlightSetter('57S117I6',false)\" onmouseout=\"highlightSetter('57S117I6',true)\">(Blocking Assignment STatement)</em><em class='similar 57S117I7' onmouseover=\"highlightSetter('57S117I7',false)\" onmouseout=\"highlightSetter('57S117I7',true)\">、非阻塞赋值语句</em>(non-Blocking Assignment statement)","datatype":"webpage","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar'>(=或有两种类型的过程赋值语句:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em>(non-Blocking Assignment statement)"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":688.1052,"teacher":"","textWithDynamicClass":"但是只有\"always\"块语句中的过程赋值语句才能被综合。<em class='similar 57S115I13' onmouseover=\"highlightSetter('57S115I13',false)\" onmouseout=\"highlightSetter('57S115I13',true)\">有两种类型的过程赋值语句:</em><em class='similar 57S115I14' onmouseover=\"highlightSetter('57S115I14',false)\" onmouseout=\"highlightSetter('57S115I14',true)\">.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar 57S115I17' onmouseover=\"highlightSetter('57S115I17',false)\" onmouseout=\"highlightSetter('57S115I17',true)\">非阻塞赋值语句</em>(Non一blocking Assignment statement)","datatype":"book","clcs":[],"similarityPercentage":"70.7%","self":false,"text":"但是只有\"always\"块语句中的过程赋值语句才能被综合。<em class='similar'>有两种类型的过程赋值语句:</em><em class='similar'>.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar'>非阻塞赋值语句</em>(Non一blocking Assignment statement)"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":171.84586,"teacher":"","textWithDynamicClass":";否则out=bendmodule 563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar 57S119I6' onmouseover=\"highlightSetter('57S119I6',false)\" onmouseout=\"highlightSetter('57S119I6',true)\">过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)","datatype":"webpage","clcs":[],"similarityPercentage":"51.6%","self":false,"text":";否则out=bendmodule 563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar'>过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":268.81818,"teacher":"","textWithDynamicClass":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar 57S118I9' onmouseover=\"highlightSetter('57S118I9',false)\" onmouseout=\"highlightSetter('57S118I9',true)\">过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar 57S118I10' onmouseover=\"highlightSetter('57S118I10',false)\" onmouseout=\"highlightSetter('57S118I10',true)\">包括阻塞赋值语句、</em><em class='similar 57S118I11' onmouseover=\"highlightSetter('57S118I11',false)\" onmouseout=\"highlightSetter('57S118I11',true)\">非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar 57S118I18' onmouseover=\"highlightSetter('57S118I18',false)\" onmouseout=\"highlightSetter('57S118I18',true)\">阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\"","datatype":"webpage","clcs":[],"similarityPercentage":"46.8%","self":false,"text":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar'>过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar'>包括阻塞赋值语句、</em><em class='similar'>非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar'>阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\""}],"textWithDynamicClass":"若出现在initial语句块中将被仅用于仿真。<em class='similar T56I3' onmouseover=\"highlightSetter('T56I3',false)\" onmouseout=\"highlightSetter('T56I3',true)\">过程赋值语句有以下两种分别为:</em><em class='similar T56I4' onmouseover=\"highlightSetter('T56I4',false)\" onmouseout=\"highlightSetter('T56I4',true)\">阻塞赋值语句</em>","similar_word_count":20,"text":"若出现在initial语句块中将被仅用于仿真。<em class='similar'>过程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["赋值语句","语句","阻塞"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的(=或有两种类型的过程赋值语句:<em class='similar 57S117I5' onmouseover=\"highlightSetter('57S117I5',false)\" onmouseout=\"highlightSetter('57S117I5',true)\">阻塞赋值语句</em><em class='similar 57S117I6' onmouseover=\"highlightSetter('57S117I6',false)\" onmouseout=\"highlightSetter('57S117I6',true)\">(Blocking Assignment STatement)</em><em class='similar 57S117I7' onmouseover=\"highlightSetter('57S117I7',false)\" onmouseout=\"highlightSetter('57S117I7',true)\">、非阻塞赋值语句</em><em class='similar 57S117I8' onmouseover=\"highlightSetter('57S117I8',false)\" onmouseout=\"highlightSetter('57S117I8',true)\">(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在","datatype":"webpage","clcs":[],"similarityPercentage":"82.0%","self":false,"text":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的(=或有两种类型的过程赋值语句:<em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":688.1052,"teacher":"","textWithDynamicClass":"有两种类型的过程赋值语句:<em class='similar 57S115I14' onmouseover=\"highlightSetter('57S115I14',false)\" onmouseout=\"highlightSetter('57S115I14',true)\">.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar 57S115I17' onmouseover=\"highlightSetter('57S115I17',false)\" onmouseout=\"highlightSetter('57S115I17',true)\">非阻塞赋值语句</em><em class='similar 57S115I18' onmouseover=\"highlightSetter('57S115I18',false)\" onmouseout=\"highlightSetter('57S115I18',true)\">(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在","datatype":"book","clcs":[],"similarityPercentage":"73.3%","self":false,"text":"有两种类型的过程赋值语句:<em class='similar'>.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar'>非阻塞赋值语句</em><em class='similar'>(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":171.84586,"teacher":"","textWithDynamicClass":"有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar 57S119I20' onmouseover=\"highlightSetter('57S119I20',false)\" onmouseout=\"highlightSetter('57S119I20',true)\">非阻塞赋值方式 </em>","datatype":"webpage","clcs":[],"similarityPercentage":"56.1%","self":false,"text":"有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar'>非阻塞赋值方式 </em>"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":268.81818,"teacher":"","textWithDynamicClass":"p;b&c&d);燕山大学电子实验中心(3)过程赋值语句过程赋值语句出现在initial和always块语句中,<em class='similar 57S118I10' onmouseover=\"highlightSetter('57S118I10',false)\" onmouseout=\"highlightSetter('57S118I10',true)\">包括阻塞赋值语句、</em><em class='similar 57S118I11' onmouseover=\"highlightSetter('57S118I11',false)\" onmouseout=\"highlightSetter('57S118I11',true)\">非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar 57S118I18' onmouseover=\"highlightSetter('57S118I18',false)\" onmouseout=\"highlightSetter('57S118I18',true)\">阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\"","datatype":"webpage","clcs":[],"similarityPercentage":"50.5%","self":false,"text":"p;b&c&d);燕山大学电子实验中心(3)过程赋值语句过程赋值语句出现在initial和always块语句中,<em class='similar'>包括阻塞赋值语句、</em><em class='similar'>非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar'>阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\""}],"textWithDynamicClass":"过程赋值语句有以下两种分别为:阻塞赋值语句<em class='similar T56I5' onmouseover=\"highlightSetter('T56I5',false)\" onmouseout=\"highlightSetter('T56I5',true)\">(Blocking Assignment Statement)</em><em class='similar T56I6' onmouseover=\"highlightSetter('T56I6',false)\" onmouseout=\"highlightSetter('T56I6',true)\">、非阻塞赋值语句</em>","similar_word_count":13,"text":"过程赋值语句有以下两种分别为:阻塞赋值语句<em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["赋值语句","语句","阻塞","非阻塞"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"阻塞赋值语句<em class='similar 57S117I6' onmouseover=\"highlightSetter('57S117I6',false)\" onmouseout=\"highlightSetter('57S117I6',true)\">(Blocking Assignment STatement)</em><em class='similar 57S117I7' onmouseover=\"highlightSetter('57S117I7',false)\" onmouseout=\"highlightSetter('57S117I7',true)\">、非阻塞赋值语句</em><em class='similar 57S117I8' onmouseover=\"highlightSetter('57S117I8',false)\" onmouseout=\"highlightSetter('57S117I8',true)\">(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在","datatype":"webpage","clcs":[],"similarityPercentage":"84.1%","self":false,"text":"阻塞赋值语句<em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":688.1052,"teacher":"","textWithDynamicClass":"(Blocking Assi即ment statement);.非阻塞赋值语句<em class='similar 57S115I18' onmouseover=\"highlightSetter('57S115I18',false)\" onmouseout=\"highlightSetter('57S115I18',true)\">(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在","datatype":"book","clcs":[],"similarityPercentage":"74.0%","self":false,"text":"(Blocking Assi即ment statement);.非阻塞赋值语句<em class='similar'>(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":171.84586,"teacher":"","textWithDynamicClass":"过程赋值语句出现在initial和always块语句中,有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar 57S119I14' onmouseover=\"highlightSetter('57S119I14',false)\" onmouseout=\"highlightSetter('57S119I14',true)\">(non-blocking)</em>赋值方式:赋值符号为<=,如b 赋值变量<=表达式;57非阻塞赋值与阻塞赋值的区别(1)非阻塞赋值方式","datatype":"webpage","clcs":[],"similarityPercentage":"56.6%","self":false,"text":"过程赋值语句出现在initial和always块语句中,有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar'>(non-blocking)</em>赋值方式:赋值符号为<=,如b 赋值变量<=表达式;57非阻塞赋值与阻塞赋值的区别(1)非阻塞赋值方式"}],"textWithDynamicClass":"(Blocking Assignment Statement)、非阻塞赋值语句<em class='similar T56I7' onmouseover=\"highlightSetter('T56I7',false)\" onmouseout=\"highlightSetter('T56I7',true)\">(Non-blocking Assignment Statement)</em>","similar_word_count":7,"text":"(Blocking Assignment Statement)、非阻塞赋值语句<em class='similar'>(Non-blocking Assignment Statement)</em>","suggest":{"synonyms":[],"keyword":["blocking"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":227.3913,"teacher":"","textWithDynamicClass":"ng Assignment statement)。5.3.1<em class='similar 58S120I8' onmouseover=\"highlightSetter('58S120I8',false)\" onmouseout=\"highlightSetter('58S120I8',true)\">阻塞赋值语句阻塞赋值语句可以简述为:</em><em class='similar 58S120I9' onmouseover=\"highlightSetter('58S120I9',false)\" onmouseout=\"highlightSetter('58S120I9',true)\">在一个always块中,</em><em class='similar 58S120I10' onmouseover=\"highlightSetter('58S120I10',false)\" onmouseout=\"highlightSetter('58S120I10',true)\">语句是按从上到下顺序执行。</em>例5一2描述了一个阻塞赋值语句的实例。[例5一21","datatype":"book","clcs":[],"similarityPercentage":"72.0%","self":false,"text":"ng Assignment statement)。5.3.1<em class='similar'>阻塞赋值语句阻塞赋值语句可以简述为:</em><em class='similar'>在一个always块中,</em><em class='similar'>语句是按从上到下顺序执行。</em>例5一2描述了一个阻塞赋值语句的实例。[例5一21"},{"profession":false,"keywords":[],"year":"","docid":"9000208370017111","author":"","university":"","source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html","reference":false,"similarScore":174.82141,"teacher":"","textWithDynamicClass":"gnment(CAB); input endmodule2,<em class='similar 58S121I3' onmouseover=\"highlightSetter('58S121I3',false)\" onmouseout=\"highlightSetter('58S121I3',true)\">阻塞赋值语句综合:</em><em class='similar 58S121I4' onmouseover=\"highlightSetter('58S121I4',false)\" onmouseout=\"highlightSetter('58S121I4',true)\">在一个alwanys 块中,</em><em class='similar 58S121I5' onmouseover=\"highlightSetter('58S121I5',false)\" onmouseout=\"highlightSetter('58S121I5',true)\">语句是按照从上到下的顺序执行的。</em>module BlockingAssignmen","datatype":"webpage","clcs":[],"similarityPercentage":"62.7%","self":false,"text":"gnment(CAB); input endmodule2,<em class='similar'>阻塞赋值语句综合:</em><em class='similar'>在一个alwanys 块中,</em><em class='similar'>语句是按照从上到下的顺序执行的。</em>module BlockingAssignmen"}],"textWithDynamicClass":"<em class='similar T57I0' onmouseover=\"highlightSetter('T57I0',false)\" onmouseout=\"highlightSetter('T57I0',true)\">阻塞赋值语句简而言之就是在一个always语句块中,</em><em class='similar T57I1' onmouseover=\"highlightSetter('T57I1',false)\" onmouseout=\"highlightSetter('T57I1',true)\">语句是从上到下顺序执行,</em>","similar_word_count":32,"text":"<em class='similar'>阻塞赋值语句简而言之就是在一个always语句块中,</em><em class='similar'>语句是从上到下顺序执行,</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["阻塞","赋值语句","语句","从上到下"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":251.00003,"teacher":"","textWithDynamicClass":"ql的值是同步的,即q2被赋予的是ql更新后的值。5.3.2<em class='similar 59S122I5' onmouseover=\"highlightSetter('59S122I5',false)\" onmouseout=\"highlightSetter('59S122I5',true)\">非阻塞赋值语句非阻塞赋值语句可以简述为:</em><em class='similar 59S122I6' onmouseover=\"highlightSetter('59S122I6',false)\" onmouseout=\"highlightSetter('59S122I6',true)\">在一个always块中,</em><em class='similar 59S122I7' onmouseover=\"highlightSetter('59S122I7',false)\" onmouseout=\"highlightSetter('59S122I7',true)\">语句是并行执行的。</em>例5一3描述了一个非阻塞赋值语句","datatype":"book","clcs":[],"similarityPercentage":"70.7%","self":false,"text":"ql的值是同步的,即q2被赋予的是ql更新后的值。5.3.2<em class='similar'>非阻塞赋值语句非阻塞赋值语句可以简述为:</em><em class='similar'>在一个always块中,</em><em class='similar'>语句是并行执行的。</em>例5一3描述了一个非阻塞赋值语句"},{"profession":false,"keywords":[],"year":"","docid":"9000208370017111","author":"","university":"","source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html","reference":false,"similarScore":121.92249,"teacher":"","textWithDynamicClass":"钟上升沿出发后,变量q2 q2被赋予的是q1的更新后的值3,<em class='similar 59S124I7' onmouseover=\"highlightSetter('59S124I7',false)\" onmouseout=\"highlightSetter('59S124I7',true)\">非阻塞赋值语句综合:</em><em class='similar 59S124I8' onmouseover=\"highlightSetter('59S124I8',false)\" onmouseout=\"highlightSetter('59S124I8',true)\">在一个Always 块中,</em><em class='similar 59S124I9' onmouseover=\"highlightSetter('59S124I9',false)\" onmouseout=\"highlightSetter('59S124I9',true)\">语句是并行执行的。</em>module nonblockingAssign","datatype":"webpage","clcs":[],"similarityPercentage":"70.7%","self":false,"text":"钟上升沿出发后,变量q2 q2被赋予的是q1的更新后的值3,<em class='similar'>非阻塞赋值语句综合:</em><em class='similar'>在一个Always 块中,</em><em class='similar'>语句是并行执行的。</em>module nonblockingAssign"},{"profession":false,"keywords":[],"year":"","docid":"9000187623883311","author":"","university":"","source":"网页","title":"第2章 逻辑代数和硬件描述语言基础_逻辑代数_2012_9_17","url":"http://www.doc88.com/p%2D97139944759918.html","reference":false,"similarScore":79.99999,"teacher":"","textWithDynamicClass":"、&quot; assign&quot;语句、实例元件调用、<em class='similar 59S123I8' onmouseover=\"highlightSetter('59S123I8',false)\" onmouseout=\"highlightSetter('59S123I8',true)\">&quot;always&quot;模块内的非阻塞赋值语句都是并行执行的!</em> Verilog HDL模型的5种抽象级别的描述","datatype":"webpage","clcs":[],"similarityPercentage":"55.2%","self":false,"text":"、&quot; assign&quot;语句、实例元件调用、<em class='similar'>&quot;always&quot;模块内的非阻塞赋值语句都是并行执行的!</em> Verilog HDL模型的5种抽象级别的描述"}],"textWithDynamicClass":"<em class='similar T58I0' onmouseover=\"highlightSetter('T58I0',false)\" onmouseout=\"highlightSetter('T58I0',true)\">非阻塞赋值语句简而言之是在一个always语法块中,</em><em class='similar T58I1' onmouseover=\"highlightSetter('T58I1',false)\" onmouseout=\"highlightSetter('T58I1',true)\">语句是并行执行的,</em>","similar_word_count":29,"text":"<em class='similar'>非阻塞赋值语句简而言之是在一个always语法块中,</em><em class='similar'>语句是并行执行的,</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["非阻塞","赋值语句","语法","语句","并行执行","阻塞","并行"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000208370017111","author":"","university":"","source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html","reference":false,"similarScore":121.92249,"teacher":"","textWithDynamicClass":"钟上升沿出发后,变量q2 q2被赋予的是q1的更新后的值3,<em class='similar 59S124I7' onmouseover=\"highlightSetter('59S124I7',false)\" onmouseout=\"highlightSetter('59S124I7',true)\">非阻塞赋值语句综合:</em><em class='similar 59S124I8' onmouseover=\"highlightSetter('59S124I8',false)\" onmouseout=\"highlightSetter('59S124I8',true)\">在一个Always 块中,</em>语句是并行执行的。","datatype":"webpage","clcs":[],"similarityPercentage":"53.1%","self":false,"text":"钟上升沿出发后,变量q2 q2被赋予的是q1的更新后的值3,<em class='similar'>非阻塞赋值语句综合:</em><em class='similar'>在一个Always 块中,</em>语句是并行执行的。"}],"textWithDynamicClass":"非阻塞赋值语句RTL级描述与电路映射图2.9所示,<em class='similar T58I3' onmouseover=\"highlightSetter('T58I3',false)\" onmouseout=\"highlightSetter('T58I3',true)\">对比上图可以得到对于一个Always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,</em>","similar_word_count":44,"text":"非阻塞赋值语句RTL级描述与电路映射图2.9所示,<em class='similar'>对比上图可以得到对于一个Always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["非阻塞","语句","上图","阻塞","并行"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":245.85153,"teacher":"","textWithDynamicClass":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar 60S125I6' onmouseover=\"highlightSetter('60S125I6',false)\" onmouseout=\"highlightSetter('60S125I6',true)\">(case expression)</em><em class='similar 60S125I7' onmouseover=\"highlightSetter('60S125I7',false)\" onmouseout=\"highlightSetter('60S125I7',true)\">和选择项表达式</em><em class='similar 60S125I8' onmouseover=\"highlightSetter('60S125I8',false)\" onmouseout=\"highlightSetter('60S125I8',true)\">(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar 60S125I12' onmouseover=\"highlightSetter('60S125I12',false)\" onmouseout=\"highlightSetter('60S125I12',true)\">case语句可以看做是嵌套的if语句,</em><em class='similar 60S125I13' onmouseover=\"highlightSetter('60S125I13',false)\" onmouseout=\"highlightSetter('60S125I13',true)\">从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可","datatype":"book","clcs":[],"similarityPercentage":"67.3%","self":false,"text":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar'>(case expression)</em><em class='similar'>和选择项表达式</em><em class='similar'>(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar'>case语句可以看做是嵌套的if语句,</em><em class='similar'>从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":97.64706,"teacher":"","textWithDynamicClass":"verilog HDL语言中,允许把常量(constant)<em class='similar 60S126I3' onmouseover=\"highlightSetter('60S126I3',false)\" onmouseout=\"highlightSetter('60S126I3',true)\">作为case语句的条件表达式,</em><em class='similar 60S126I4' onmouseover=\"highlightSetter('60S126I4',false)\" onmouseout=\"highlightSetter('60S126I4',true)\">而在选择项表达式中使用变量。</em><em class='similar 60S126I5' onmouseover=\"highlightSetter('60S126I5',false)\" onmouseout=\"highlightSetter('60S126I5',true)\">常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代","datatype":"book","clcs":[],"similarityPercentage":"46.0%","self":false,"text":"verilog HDL语言中,允许把常量(constant)<em class='similar'>作为case语句的条件表达式,</em><em class='similar'>而在选择项表达式中使用变量。</em><em class='similar'>常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代"}],"textWithDynamicClass":"在Verilog HDL语句种,<em class='similar T59I1' onmouseover=\"highlightSetter('T59I1',false)\" onmouseout=\"highlightSetter('T59I1',true)\">case包含两类条件表达式和选择项表达式,</em><em class='similar T59I2' onmouseover=\"highlightSetter('T59I2',false)\" onmouseout=\"highlightSetter('T59I2',true)\">case语句可以看作是嵌套的if语句,</em>","similar_word_count":31,"text":"在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>","suggest":{"synonyms":[],"keyword":["语句","case","两类","条件表达式","选择项","表达式","看作","嵌套"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":330.62494,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 61S127I3' onmouseover=\"highlightSetter('61S127I3',false)\" onmouseout=\"highlightSetter('61S127I3',true)\">5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。<em class='similar 61S127I5' onmouseover=\"highlightSetter('61S127I5',false)\" onmouseout=\"highlightSetter('61S127I5',true)\">函数在综合的时候,</em>被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,","datatype":"book","clcs":[],"similarityPercentage":"52.4%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。<em class='similar'>函数在综合的时候,</em>被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,"}],"textWithDynamicClass":"<em class='similar T60I0' onmouseover=\"highlightSetter('T60I0',false)\" onmouseout=\"highlightSetter('T60I0',true)\">在verilog HDL语句中。</em><em class='similar T60I1' onmouseover=\"highlightSetter('T60I1',false)\" onmouseout=\"highlightSetter('T60I1',true)\">function如C++的内联函数一样,</em><em class='similar T60I2' onmouseover=\"highlightSetter('T60I2',false)\" onmouseout=\"highlightSetter('T60I2',true)\">在逻辑综合时,</em>","similar_word_count":24,"text":"<em class='similar'>在verilog HDL语句中。</em><em class='similar'>function如C++的内联函数一样,</em><em class='similar'>在逻辑综合时,</em>","suggest":{"synonyms":[],"keyword":["verilog","语句","function","内联函数","逻辑综合","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":330.62494,"teacher":"","textWithDynamicClass":"函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar 61S127I9' onmouseover=\"highlightSetter('61S127I9',false)\" onmouseout=\"highlightSetter('61S127I9',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函","datatype":"book","clcs":[],"similarityPercentage":"75.7%","self":false,"text":"函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函"}],"textWithDynamicClass":"将会被直接展开成对应代码放在对应的模块中。<em class='similar T60I4' onmouseover=\"highlightSetter('T60I4',false)\" onmouseout=\"highlightSetter('T60I4',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>","similar_word_count":24,"text":"将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"}],"keyword":["局部变量","当做","临时"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":706.33905,"teacher":"","textWithDynamicClass":"的重要组成部分,也是FPGA 支持软件工具中最为关键的部分,<em class='similar 62S128I4' onmouseover=\"highlightSetter('62S128I4',false)\" onmouseout=\"highlightSetter('62S128I4',true)\">其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。","datatype":"webpage","clcs":[],"similarityPercentage":"72.3%","self":false,"text":"的重要组成部分,也是FPGA 支持软件工具中最为关键的部分,<em class='similar'>其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。"},{"profession":false,"keywords":[],"year":"","docid":"9000126492999811","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html","reference":false,"similarScore":706.339,"teacher":"","textWithDynamicClass":"支持软件工具中最为关键的部分,<em class='similar 62S129I1' onmouseover=\"highlightSetter('62S129I1',false)\" onmouseout=\"highlightSetter('62S129I1',true)\">其优化结果对综合后下一阶段的布局布线论文第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。","datatype":"webpage","clcs":[],"similarityPercentage":"70.3%","self":false,"text":"支持软件工具中最为关键的部分,<em class='similar'>其优化结果对综合后下一阶段的布局布线论文第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。"}],"textWithDynamicClass":"技术映射是将技术映射作为综合优化的重要组成部分,也是FPGA支持软件工具EDA中最为关键的部分,技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar T61I1' onmouseover=\"highlightSetter('T61I1',false)\" onmouseout=\"highlightSetter('T61I1',true)\">其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>","similar_word_count":37,"text":"技术映射是将技术映射作为综合优化的重要组成部分,也是FPGA支持软件工具EDA中最为关键的部分,技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["映射","优化结果","设计流程","布局布线","决定性"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":706.33905,"teacher":"","textWithDynamicClass":"的重要组成部分,也是FPGA 支持软件工具中最为关键的部分,其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,<em class='similar 62S128I5' onmouseover=\"highlightSetter('62S128I5',false)\" onmouseout=\"highlightSetter('62S128I5',true)\">进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar 62S128I8' onmouseover=\"highlightSetter('62S128I8',false)\" onmouseout=\"highlightSetter('62S128I8',true)\">已形成了以面积优化、</em><em class='similar 62S128I9' onmouseover=\"highlightSetter('62S128I9',false)\" onmouseout=\"highlightSetter('62S128I9',true)\">时间延迟优化、</em>功率优化以及面积和延迟同时优化为目标的一系列研究成果。","datatype":"webpage","clcs":[],"similarityPercentage":"82.7%","self":false,"text":"的重要组成部分,也是FPGA 支持软件工具中最为关键的部分,其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,<em class='similar'>进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar'>已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em>功率优化以及面积和延迟同时优化为目标的一系列研究成果。"},{"profession":false,"keywords":[],"year":"","docid":"9000126492999811","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html","reference":false,"similarScore":706.339,"teacher":"","textWithDynamicClass":"支持软件工具中最为关键的部分,其优化结果对综合后下一阶段的布局布线论文第一章绪论3等步骤有着决定性的作用,<em class='similar 62S129I2' onmouseover=\"highlightSetter('62S129I2',false)\" onmouseout=\"highlightSetter('62S129I2',true)\">进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar 62S129I5' onmouseover=\"highlightSetter('62S129I5',false)\" onmouseout=\"highlightSetter('62S129I5',true)\">已形成了以面积优化、</em><em class='similar 62S129I6' onmouseover=\"highlightSetter('62S129I6',false)\" onmouseout=\"highlightSetter('62S129I6',true)\">时间延迟优化、</em>功率优化以及面积和延迟同时优化为目标的一系列研究成果。","datatype":"webpage","clcs":[],"similarityPercentage":"81.5%","self":false,"text":"支持软件工具中最为关键的部分,其优化结果对综合后下一阶段的布局布线论文第一章绪论3等步骤有着决定性的作用,<em class='similar'>进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar'>已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em>功率优化以及面积和延迟同时优化为目标的一系列研究成果。"}],"textWithDynamicClass":"其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,<em class='similar T61I2' onmouseover=\"highlightSetter('T61I2',false)\" onmouseout=\"highlightSetter('T61I2',true)\">进而最终影响芯片的性能成本,</em><em class='similar T61I3' onmouseover=\"highlightSetter('T61I3',false)\" onmouseout=\"highlightSetter('T61I3',true)\">故而已形成了以面积优化、</em><em class='similar T61I4' onmouseover=\"highlightSetter('T61I4',false)\" onmouseout=\"highlightSetter('T61I4',true)\">时间延迟优化、</em>","similar_word_count":30,"text":"其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,<em class='similar'>进而最终影响芯片的性能成本,</em><em class='similar'>故而已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em>","suggest":{"synonyms":[{"synonyms":["提早"],"keyword":"延迟"}],"keyword":["面积优化","延迟优化","延迟"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":706.33905,"teacher":"","textWithDynamicClass":"时间延迟优化、<em class='similar 62S128I10' onmouseover=\"highlightSetter('62S128I10',false)\" onmouseout=\"highlightSetter('62S128I10',true)\">功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上","datatype":"webpage","clcs":[],"similarityPercentage":"87.6%","self":false,"text":"时间延迟优化、<em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上"},{"profession":false,"keywords":[],"year":"","docid":"9000126492999811","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html","reference":false,"similarScore":706.339,"teacher":"","textWithDynamicClass":"时间延迟优化、<em class='similar 62S129I7' onmouseover=\"highlightSetter('62S129I7',false)\" onmouseout=\"highlightSetter('62S129I7',true)\">功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上","datatype":"webpage","clcs":[],"similarityPercentage":"86.6%","self":false,"text":"时间延迟优化、<em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上"}],"textWithDynamicClass":"进而最终影响芯片的性能成本,故而已形成了以面积优化、时间延迟优化、<em class='similar T61I5' onmouseover=\"highlightSetter('T61I5',false)\" onmouseout=\"highlightSetter('T61I5',true)\">功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>","similar_word_count":26,"text":"进而最终影响芯片的性能成本,故而已形成了以面积优化、时间延迟优化、<em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>","suggest":{"synonyms":[{"synonyms":["提早"],"keyword":"延迟"}],"keyword":["功率优化","延迟","同时优化"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar 63S130I6' onmouseover=\"highlightSetter('63S130I6',false)\" onmouseout=\"highlightSetter('63S130I6',true)\">02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>这里所说的逻辑单元依赖于特定的FPGA架构,","datatype":"webpage","clcs":[],"similarityPercentage":"94.3%","self":false,"text":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar'>02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>这里所说的逻辑单元依赖于特定的FPGA架构,"},{"profession":false,"keywords":[],"year":"","docid":"9000195223375811","author":"","university":"","source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07","reference":false,"similarScore":400,"teacher":"","textWithDynamicClass":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar 63S131I6' onmouseover=\"highlightSetter('63S131I6',false)\" onmouseout=\"highlightSetter('63S131I6',true)\">10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是","datatype":"webpage","clcs":[],"similarityPercentage":"81.6%","self":false,"text":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar'>10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是"}],"textWithDynamicClass":"<em class='similar T62I0' onmouseover=\"highlightSetter('T62I0',false)\" onmouseout=\"highlightSetter('T62I0',true)\">工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>","similar_word_count":40,"text":"<em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["工艺映射","网表","逻辑单元","逻辑","映射"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。<em class='similar 63S130I7' onmouseover=\"highlightSetter('63S130I7',false)\" onmouseout=\"highlightSetter('63S130I7',true)\">这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar 63S130I8' onmouseover=\"highlightSetter('63S130I8',false)\" onmouseout=\"highlightSetter('63S130I8',true)\">是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,因此对最终电路实现的质量","datatype":"webpage","clcs":[],"similarityPercentage":"78.6%","self":false,"text":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。<em class='similar'>这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar'>是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,因此对最终电路实现的质量"}],"textWithDynamicClass":"[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar T62I4' onmouseover=\"highlightSetter('T62I4',false)\" onmouseout=\"highlightSetter('T62I4',true)\">FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>","similar_word_count":21,"text":"[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>","suggest":{"synonyms":[],"keyword":["逻辑单元","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar 63S130I10' onmouseover=\"highlightSetter('63S130I10',false)\" onmouseout=\"highlightSetter('63S130I10',true)\">因此对最终电路实现的质量</em><em class='similar 63S130I11' onmouseover=\"highlightSetter('63S130I11',false)\" onmouseout=\"highlightSetter('63S130I11',true)\">(面积、</em>速度、<em class='similar 63S130I13' onmouseover=\"highlightSetter('63S130I13',false)\" onmouseout=\"highlightSetter('63S130I13',true)\">功耗等)</em>至关重要。","datatype":"webpage","clcs":[],"similarityPercentage":"78.5%","self":false,"text":"是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar'>因此对最终电路实现的质量</em><em class='similar'>(面积、</em>速度、<em class='similar'>功耗等)</em>至关重要。"}],"textWithDynamicClass":"技术映射是从RTL级出发对所描述的硬件行为进行逻辑转换的重要步骤,<em class='similar T62I6' onmouseover=\"highlightSetter('T62I6',false)\" onmouseout=\"highlightSetter('T62I6',true)\">因此对FPGA片上最终实现的电路的面积、</em><em class='similar T62I7' onmouseover=\"highlightSetter('T62I7',false)\" onmouseout=\"highlightSetter('T62I7',true)\">功耗、</em>","similar_word_count":18,"text":"技术映射是从RTL级出发对所描述的硬件行为进行逻辑转换的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>","suggest":{"synonyms":[],"keyword":["功耗"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar 64S133I3' onmouseover=\"highlightSetter('64S133I3',false)\" onmouseout=\"highlightSetter('64S133I3',true)\">第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar 64S133I4' onmouseover=\"highlightSetter('64S133I4',false)\" onmouseout=\"highlightSetter('64S133I4',true)\">输出是实际工艺下可实现的门级网表,</em>其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar'>第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表,</em>其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar 64S132I5' onmouseover=\"highlightSetter('64S132I5',false)\" onmouseout=\"highlightSetter('64S132I5',true)\">工艺映射的输入是布尔网络,</em><em class='similar 64S132I6' onmouseover=\"highlightSetter('64S132I6',false)\" onmouseout=\"highlightSetter('64S132I6',true)\">输出是实际工艺下可实现的门级网表。</em>布尔网络表示的是一组逻辑表达式,","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar'>工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em>布尔网络表示的是一组逻辑表达式,"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003386423011","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所! 上海200030；上海交通大学大规模集成电路研究所! 上海200030","source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":"","reference":false,"similarScore":208.49808,"teacher":"","textWithDynamicClass":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar 64S134I4' onmouseover=\"highlightSetter('64S134I4',false)\" onmouseout=\"highlightSetter('64S134I4',true)\">工艺映射自动化过程的输入是布尔网络,</em><em class='similar 64S134I5' onmouseover=\"highlightSetter('64S134I5',false)\" onmouseout=\"highlightSetter('64S134I5',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。1工艺映射所谓的布尔网络是一组逻辑表达式,","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"59.6%","self":false,"text":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar'>工艺映射自动化过程的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。1工艺映射所谓的布尔网络是一组逻辑表达式,"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003389855311","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所!上海200030；上海交通大学大规模集成电路研究所!上海200030","source":"微电子学","title":"速度优化再分解设计方法","url":"","reference":false,"similarScore":138.55557,"teacher":"","textWithDynamicClass":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar 64S135I8' onmouseover=\"highlightSetter('64S135I8',false)\" onmouseout=\"highlightSetter('64S135I8',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,它的各个结点可以是任意的逻辑功能组合单元。","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"59.6%","self":false,"text":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,它的各个结点可以是任意的逻辑功能组合单元。"}],"textWithDynamicClass":"<em class='similar T63I0' onmouseover=\"highlightSetter('T63I0',false)\" onmouseout=\"highlightSetter('T63I0',true)\">由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em>","similar_word_count":46,"text":"<em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em>","suggest":{"synonyms":[],"keyword":["2.16","工艺映射","网表","可实现","这一个"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"输出是实际工艺下可实现的门级网表,其具体流程如图2—2所示。<em class='similar 64S133I6' onmouseover=\"highlightSetter('64S133I6',false)\" onmouseout=\"highlightSetter('64S133I6',true)\">图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。","datatype":"webpage","clcs":[],"similarityPercentage":"67.2%","self":false,"text":"输出是实际工艺下可实现的门级网表,其具体流程如图2—2所示。<em class='similar'>图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003386423011","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所! 上海200030；上海交通大学大规模集成电路研究所! 上海200030","source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":"","reference":false,"similarScore":208.49808,"teacher":"","textWithDynamicClass":"输出是实际工艺下可实现的门级网表。其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar 64S134I9' onmouseover=\"highlightSetter('64S134I9',false)\" onmouseout=\"highlightSetter('64S134I9',true)\">1工艺映射所谓的布尔网络是一组逻辑表达式,</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"63.9%","self":false,"text":"输出是实际工艺下可实现的门级网表。其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar'>1工艺映射所谓的布尔网络是一组逻辑表达式,</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"输出是实际工艺下可实现的门级网表。<em class='similar 64S132I7' onmouseover=\"highlightSetter('64S132I7',false)\" onmouseout=\"highlightSetter('64S132I7',true)\">布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。","datatype":"webpage","clcs":[],"similarityPercentage":"62.6%","self":false,"text":"输出是实际工艺下可实现的门级网表。<em class='similar'>布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。"}],"textWithDynamicClass":"由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,<em class='similar T63I1' onmouseover=\"highlightSetter('T63I1',false)\" onmouseout=\"highlightSetter('T63I1',true)\">门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em>","similar_word_count":29,"text":"由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,<em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em>","suggest":{"synonyms":[],"keyword":["网表","为是","一组组","逻辑表达式","布尔网络","布尔"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,<em class='similar 64S133I7' onmouseover=\"highlightSetter('64S133I7',false)\" onmouseout=\"highlightSetter('64S133I7',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路","datatype":"webpage","clcs":[],"similarityPercentage":"69.8%","self":false,"text":"其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"布尔网络表示的是一组逻辑表达式,<em class='similar 64S132I8' onmouseover=\"highlightSetter('64S132I8',false)\" onmouseout=\"highlightSetter('64S132I8',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步","datatype":"webpage","clcs":[],"similarityPercentage":"65.1%","self":false,"text":"布尔网络表示的是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003389855311","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所!上海200030；上海交通大学大规模集成电路研究所!上海200030","source":"微电子学","title":"速度优化再分解设计方法","url":"","reference":false,"similarScore":138.55557,"teacher":"","textWithDynamicClass":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,输出是实际工艺下可实现的门级网表。其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar 64S135I14' onmouseover=\"highlightSetter('64S135I14',false)\" onmouseout=\"highlightSetter('64S135I14',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"64.2%","self":false,"text":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,输出是实际工艺下可实现的门级网表。其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>"}],"textWithDynamicClass":"门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,<em class='similar T63I2' onmouseover=\"highlightSetter('T63I2',false)\" onmouseout=\"highlightSetter('T63I2',true)\">该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","similar_word_count":24,"text":"门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,<em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","suggest":{"synonyms":[],"keyword":["布尔网络","布尔","网络图","逻辑功能","组合单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":240.18208,"teacher":"","textWithDynamicClass":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar 65S138I3' onmouseover=\"highlightSetter('65S138I3',false)\" onmouseout=\"highlightSetter('65S138I3',true)\">原电路可由一组单输出布尔子网络表示。</em>根据工艺映射算法的不同需要,","datatype":"webpage","clcs":[],"similarityPercentage":"54.1%","self":false,"text":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar'>原电路可由一组单输出布尔子网络表示。</em>根据工艺映射算法的不同需要,"}],"textWithDynamicClass":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar T64I3' onmouseover=\"highlightSetter('T64I3',false)\" onmouseout=\"highlightSetter('T64I3',true)\">原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em>","similar_word_count":34,"text":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em>","suggest":{"synonyms":[],"keyword":["原始","布尔网络","逻辑电路","一个个","布尔","子网络"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":240.18208,"teacher":"","textWithDynamicClass":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,原电路可由一组单输出布尔子网络表示。<em class='similar 65S138I4' onmouseover=\"highlightSetter('65S138I4',false)\" onmouseout=\"highlightSetter('65S138I4',true)\">根据工艺映射算法的不同需要,</em><em class='similar 65S138I5' onmouseover=\"highlightSetter('65S138I5',false)\" onmouseout=\"highlightSetter('65S138I5',true)\">原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻","datatype":"webpage","clcs":[],"similarityPercentage":"68.2%","self":false,"text":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,原电路可由一组单输出布尔子网络表示。<em class='similar'>根据工艺映射算法的不同需要,</em><em class='similar'>原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻"}],"textWithDynamicClass":"原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。<em class='similar T64I4' onmouseover=\"highlightSetter('T64I4',false)\" onmouseout=\"highlightSetter('T64I4',true)\">根据工艺映射算法的不同,</em><em class='similar T64I5' onmouseover=\"highlightSetter('T64I5',false)\" onmouseout=\"highlightSetter('T64I5',true)\">原电路均可被构造成由一张DAG图或一组树来表示</em>","similar_word_count":32,"text":"原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。<em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["映射","映射算法","一张"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":433.45938,"teacher":"","textWithDynamicClass":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar 66S139I5' onmouseover=\"highlightSetter('66S139I5',false)\" onmouseout=\"highlightSetter('66S139I5',true)\">逻辑分解是将电路进行逻辑上的变化,</em><em class='similar 66S139I6' onmouseover=\"highlightSetter('66S139I6',false)\" onmouseout=\"highlightSetter('66S139I6',true)\">目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar 66S139I12' onmouseover=\"highlightSetter('66S139I12',false)\" onmouseout=\"highlightSetter('66S139I12',true)\">以便于以后的匹配和映射。</em>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。","datatype":"webpage","clcs":[],"similarityPercentage":"86.4%","self":false,"text":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar'>逻辑分解是将电路进行逻辑上的变化,</em><em class='similar'>目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar'>以便于以后的匹配和映射。</em>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。"}],"textWithDynamicClass":"<em class='similar T65I0' onmouseover=\"highlightSetter('T65I0',false)\" onmouseout=\"highlightSetter('T65I0',true)\">逻辑分解是将电路进行逻辑等价的转换,</em><em class='similar T65I1' onmouseover=\"highlightSetter('T65I1',false)\" onmouseout=\"highlightSetter('T65I1',true)\">目的是将复杂的逻辑单元用基本的逻辑形式表达,</em><em class='similar T65I2' onmouseover=\"highlightSetter('T65I2',false)\" onmouseout=\"highlightSetter('T65I2',true)\">以便于以后的匹配和映射</em>","similar_word_count":49,"text":"<em class='similar'>逻辑分解是将电路进行逻辑等价的转换,</em><em class='similar'>目的是将复杂的逻辑单元用基本的逻辑形式表达,</em><em class='similar'>以便于以后的匹配和映射</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["逻辑分解","逻辑等价","逻辑单元","逻辑","形式表达","匹配","映射"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":433.45938,"teacher":"","textWithDynamicClass":"(两输入的与门,与非门,或门,单输入的非门等)表达,以便于以后的匹配和映射。<em class='similar 66S139I13' onmouseover=\"highlightSetter('66S139I13',false)\" onmouseout=\"highlightSetter('66S139I13',true)\">经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分","datatype":"webpage","clcs":[],"similarityPercentage":"69.2%","self":false,"text":"(两输入的与门,与非门,或门,单输入的非门等)表达,以便于以后的匹配和映射。<em class='similar'>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分"}],"textWithDynamicClass":"[45]。<em class='similar T65I4' onmouseover=\"highlightSetter('T65I4',false)\" onmouseout=\"highlightSetter('T65I4',true)\">布尔网络在经过逻辑分解操作后,</em><em class='similar T65I5' onmouseover=\"highlightSetter('T65I5',false)\" onmouseout=\"highlightSetter('T65I5',true)\">其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","similar_word_count":44,"text":"[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","suggest":{"synonyms":[{"synonyms":["其实"],"keyword":"原本"}],"keyword":["逻辑分解","逻辑","布尔网络","原本","逻辑关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":250.31253,"teacher":"","textWithDynamicClass":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar 67S140I8' onmouseover=\"highlightSetter('67S140I8',false)\" onmouseout=\"highlightSetter('67S140I8',true)\">经过划分和逻辑分解之后,</em><em class='similar 67S140I9' onmouseover=\"highlightSetter('67S140I9',false)\" onmouseout=\"highlightSetter('67S140I9',true)\">下一步就是匹配。</em><em class='similar 67S140I10' onmouseover=\"highlightSetter('67S140I10',false)\" onmouseout=\"highlightSetter('67S140I10',true)\">之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是","datatype":"webpage","clcs":[],"similarityPercentage":"57.1%","self":false,"text":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar'>经过划分和逻辑分解之后,</em><em class='similar'>下一步就是匹配。</em><em class='similar'>之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是"},{"profession":false,"keywords":[],"year":"","docid":"9000207907782911","author":"","university":"","source":"网页","title":"逻辑综合中的工艺映射算法研究","url":"https://www.docin.com/p%2D851853545.html","reference":false,"similarScore":146.76111,"teacher":"","textWithDynamicClass":";工艺映射&quot;的步骤是&quot;匹配&quot;。<em class='similar 67S141I3' onmouseover=\"highlightSetter('67S141I3',false)\" onmouseout=\"highlightSetter('67S141I3',true)\">在此之前进行的&quot;逻辑分解&quot;和&quot;划分&quot;都是对布尔网络进行与工艺无关的处理。</em>而匹配则要把布尔网络和实际的库单元相联系了。匹配有","datatype":"webpage","clcs":[],"similarityPercentage":"47.1%","self":false,"text":";工艺映射&quot;的步骤是&quot;匹配&quot;。<em class='similar'>在此之前进行的&quot;逻辑分解&quot;和&quot;划分&quot;都是对布尔网络进行与工艺无关的处理。</em>而匹配则要把布尔网络和实际的库单元相联系了。匹配有"}],"textWithDynamicClass":"<em class='similar T66I0' onmouseover=\"highlightSetter('T66I0',false)\" onmouseout=\"highlightSetter('T66I0',true)\">经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar T66I1' onmouseover=\"highlightSetter('T66I1',false)\" onmouseout=\"highlightSetter('T66I1',true)\">而匹配则是在划分与逻辑分解后,</em><em class='similar T66I2' onmouseover=\"highlightSetter('T66I2',false)\" onmouseout=\"highlightSetter('T66I2',true)\">将与工艺无关的布尔网络与工艺库相结合。</em>","similar_word_count":50,"text":"<em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["逻辑分解","匹配","无关","布尔网络","工艺库"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":399.961,"teacher":"","textWithDynamicClass":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar 68S142I4' onmouseover=\"highlightSetter('68S142I4',false)\" onmouseout=\"highlightSetter('68S142I4',true)\">就是用实际工艺下可实现的单元库对布尔图进行匹配,</em>也就是把理想的布尔网络用库中的实际单元实现的过程。","datatype":"webpage","clcs":[],"similarityPercentage":"67.0%","self":false,"text":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar'>就是用实际工艺下可实现的单元库对布尔图进行匹配,</em>也就是把理想的布尔网络用库中的实际单元实现的过程。"}],"textWithDynamicClass":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar T67I0' onmouseover=\"highlightSetter('T67I0',false)\" onmouseout=\"highlightSetter('T67I0',true)\">提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em>","similar_word_count":35,"text":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["可实现","逻辑单元","器件","布尔图","等效","匹配"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":399.961,"teacher":"","textWithDynamicClass":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar 68S142I4' onmouseover=\"highlightSetter('68S142I4',false)\" onmouseout=\"highlightSetter('68S142I4',true)\">就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar 68S142I5' onmouseover=\"highlightSetter('68S142I5',false)\" onmouseout=\"highlightSetter('68S142I5',true)\">也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar 68S142I6' onmouseover=\"highlightSetter('68S142I6',false)\" onmouseout=\"highlightSetter('68S142I6',true)\">FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结","datatype":"webpage","clcs":[],"similarityPercentage":"67.1%","self":false,"text":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar'>就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar'>也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar'>FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结"}],"textWithDynamicClass":"提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,<em class='similar T67I1' onmouseover=\"highlightSetter('T67I1',false)\" onmouseout=\"highlightSetter('T67I1',true)\">是把理想的布尔网络用库中的实际单元实现的过程</em>","similar_word_count":22,"text":"提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,<em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>","suggest":{"synonyms":[],"keyword":["理想的","布尔网络"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":578.5817,"teacher":"","textWithDynamicClass":"但是由于考虑到时间和速率,<em class='similar 69S143I1' onmouseover=\"highlightSetter('69S143I1',false)\" onmouseout=\"highlightSetter('69S143I1',true)\">大多数的商用EDA工具使用较多的依然还是基于树或图的结构匹配算法。</em><em class='similar 69S143I2' onmouseover=\"highlightSetter('69S143I2',false)\" onmouseout=\"highlightSetter('69S143I2',true)\">工艺映射自动化过程的最后一步是覆盖,</em>它的作用是根据实际电路的要求,","datatype":"webpage","clcs":[],"similarityPercentage":"47.2%","self":false,"text":"但是由于考虑到时间和速率,<em class='similar'>大多数的商用EDA工具使用较多的依然还是基于树或图的结构匹配算法。</em><em class='similar'>工艺映射自动化过程的最后一步是覆盖,</em>它的作用是根据实际电路的要求,"},{"profession":false,"keywords":[],"year":"","docid":"9000190283878711","author":"","university":"","source":"网页","title":"多级逻辑面积优化设计方法","url":"http://www.doc88.com/p%2D4943406875941.html","reference":false,"similarScore":152.62021,"teacher":"","textWithDynamicClass":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar 69S145I7' onmouseover=\"highlightSetter('69S145I7',false)\" onmouseout=\"highlightSetter('69S145I7',true)\">工艺映射自动化过程的最后一步是疆盖。</em><em class='similar 69S145I8' onmouseover=\"highlightSetter('69S145I8',false)\" onmouseout=\"highlightSetter('69S145I8',true)\">它的作用就是在多种可行的匹配中,</em>根据实际电路的要求,","datatype":"webpage","clcs":[],"similarityPercentage":"36.5%","self":false,"text":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar'>工艺映射自动化过程的最后一步是疆盖。</em><em class='similar'>它的作用就是在多种可行的匹配中,</em>根据实际电路的要求,"}],"textWithDynamicClass":"<em class='similar T68I0' onmouseover=\"highlightSetter('T68I0',false)\" onmouseout=\"highlightSetter('T68I0',true)\">在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,</em>","similar_word_count":32,"text":"<em class='similar'>在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["映射","最后一步","匹配","图结构","器件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":578.5817,"teacher":"","textWithDynamicClass":"工艺映射自动化过程的最后一步是覆盖,<em class='similar 69S143I3' onmouseover=\"highlightSetter('69S143I3',false)\" onmouseout=\"highlightSetter('69S143I3',true)\">它的作用是根据实际电路的要求,</em><em class='similar 69S143I4' onmouseover=\"highlightSetter('69S143I4',false)\" onmouseout=\"highlightSetter('69S143I4',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹","datatype":"webpage","clcs":[],"similarityPercentage":"80.7%","self":false,"text":"工艺映射自动化过程的最后一步是覆盖,<em class='similar'>它的作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹"},{"profession":false,"keywords":[],"year":"","docid":"9000190283878711","author":"","university":"","source":"网页","title":"多级逻辑面积优化设计方法","url":"http://www.doc88.com/p%2D4943406875941.html","reference":false,"similarScore":152.62021,"teacher":"","textWithDynamicClass":"它的作用就是在多种可行的匹配中,<em class='similar 69S145I9' onmouseover=\"highlightSetter('69S145I9',false)\" onmouseout=\"highlightSetter('69S145I9',true)\">根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出","datatype":"webpage","clcs":[],"similarityPercentage":"57.8%","self":false,"text":"它的作用就是在多种可行的匹配中,<em class='similar'>根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出"}],"textWithDynamicClass":"在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,<em class='similar T68I1' onmouseover=\"highlightSetter('T68I1',false)\" onmouseout=\"highlightSetter('T68I1',true)\">其作用是根据实际电路的要求,</em><em class='similar T68I2' onmouseover=\"highlightSetter('T68I2',false)\" onmouseout=\"highlightSetter('T68I2',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>","similar_word_count":46,"text":"在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,<em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["匹配","可行"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":416.88254,"teacher":"","textWithDynamicClass":"点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。<em class='similar 70S146I3' onmouseover=\"highlightSetter('70S146I3',false)\" onmouseout=\"highlightSetter('70S146I3',true)\">也就是依据一定的规则分隔出部分网表进行匹配,</em><em class='similar 70S146I4' onmouseover=\"highlightSetter('70S146I4',false)\" onmouseout=\"highlightSetter('70S146I4',true)\">并从匹配集中选出库单元,</em><em class='similar 70S146I5' onmouseover=\"highlightSetter('70S146I5',false)\" onmouseout=\"highlightSetter('70S146I5',true)\">完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,要保证每个单元库的输入和其它匹配库单元的输出相连,","datatype":"webpage","clcs":[],"similarityPercentage":"82.6%","self":false,"text":"点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。<em class='similar'>也就是依据一定的规则分隔出部分网表进行匹配,</em><em class='similar'>并从匹配集中选出库单元,</em><em class='similar'>完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,要保证每个单元库的输入和其它匹配库单元的输出相连,"}],"textWithDynamicClass":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。<em class='similar T69I0' onmouseover=\"highlightSetter('T69I0',false)\" onmouseout=\"highlightSetter('T69I0',true)\">���依据一定的规则分离出部分子图进行匹配,</em><em class='similar T69I1' onmouseover=\"highlightSetter('T69I1',false)\" onmouseout=\"highlightSetter('T69I1',true)\">并从匹配集中选出库单元,</em><em class='similar T69I2' onmouseover=\"highlightSetter('T69I2',false)\" onmouseout=\"highlightSetter('T69I2',true)\">完成布尔网图到工艺网表的实际映射。</em>","similar_word_count":46,"text":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。<em class='similar'>既依据一定的规则分离出部分子图进行匹配,</em><em class='similar'>并从匹配集中选出库单元,</em><em class='similar'>完成布尔网图到工艺网表的实际映射。</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["子图","匹配","出库","布尔","网图","网表","映射"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":416.88254,"teacher":"","textWithDynamicClass":"完成布尔网表到工艺网表的实现。对每一个选出的匹配,<em class='similar 70S146I7' onmouseover=\"highlightSetter('70S146I7',false)\" onmouseout=\"highlightSetter('70S146I7',true)\">要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库","datatype":"webpage","clcs":[],"similarityPercentage":"72.7%","self":false,"text":"完成布尔网表到工艺网表的实现。对每一个选出的匹配,<em class='similar'>要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库"}],"textWithDynamicClass":"既依据一定的规则分离出部分子图进行匹配,并从匹配集中选出库单元,完成布尔网图到工艺网表的实际映射。<em class='similar T69I3' onmouseover=\"highlightSetter('T69I3',false)\" onmouseout=\"highlightSetter('T69I3',true)\">要保证每完成的一组匹配单元,</em><em class='similar T69I4' onmouseover=\"highlightSetter('T69I4',false)\" onmouseout=\"highlightSetter('T69I4',true)\">其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,</em>","similar_word_count":39,"text":"既依据一定的规则分离出部分子图进行匹配,并从匹配集中选出库单元,完成布尔网图到工艺网表的实际映射。<em class='similar'>要保证每完成的一组匹配单元,</em><em class='similar'>其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["匹配"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":314,"teacher":"","textWithDynamicClass":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,功耗等)最优的一组匹配。<em class='similar 71S147I8' onmouseover=\"highlightSetter('71S147I8',false)\" onmouseout=\"highlightSetter('71S147I8',true)\">覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar 71S147I9' onmouseover=\"highlightSetter('71S147I9',false)\" onmouseout=\"highlightSetter('71S147I9',true)\">如何选取匹配集。</em>最后以实际网表的形式输出。","datatype":"webpage","clcs":[],"similarityPercentage":"88.5%","self":false,"text":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,功耗等)最优的一组匹配。<em class='similar'>覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集。</em>最后以实际网表的形式输出。"}],"textWithDynamicClass":"其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,且每组单元间不存在重叠关系。<em class='similar T70I1' onmouseover=\"highlightSetter('T70I1',false)\" onmouseout=\"highlightSetter('T70I1',true)\">工艺映射的核心优化算法是如何分割布尔网表、</em><em class='similar T70I2' onmouseover=\"highlightSetter('T70I2',false)\" onmouseout=\"highlightSetter('T70I2',true)\">如何选取匹配集,</em>","similar_word_count":27,"text":"其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,且每组单元间不存在重叠关系。<em class='similar'>工艺映射的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集,</em>","suggest":{"synonyms":[{"synonyms":["割据"],"keyword":"分割"},{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["工艺映射","优化算法","分割","布尔","网表","匹配"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":314,"teacher":"","textWithDynamicClass":"如何选取匹配集。<em class='similar 71S147I10' onmouseover=\"highlightSetter('71S147I10',false)\" onmouseout=\"highlightSetter('71S147I10',true)\">最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程","datatype":"webpage","clcs":[],"similarityPercentage":"88.8%","self":false,"text":"如何选取匹配集。<em class='similar'>最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程"}],"textWithDynamicClass":"速度的需求。<em class='similar T70I6' onmouseover=\"highlightSetter('T70I6',false)\" onmouseout=\"highlightSetter('T70I6',true)\">最后以实际的门级网表的形式输出,</em>","similar_word_count":15,"text":"速度的需求。<em class='similar'>最后以实际的门级网表的形式输出,</em>","suggest":{"synonyms":[],"keyword":["网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":547.76556,"teacher":"","textWithDynamicClass":"的核心,也就是使计算机具有人工智能的根本途径。它(机器学习)<em class='similar 72S150I8' onmouseover=\"highlightSetter('72S150I8',false)\" onmouseout=\"highlightSetter('72S150I8',true)\">涵盖概率论,</em><em class='similar 72S150I9' onmouseover=\"highlightSetter('72S150I9',false)\" onmouseout=\"highlightSetter('72S150I9',true)\">统计学,</em><em class='similar 72S150I10' onmouseover=\"highlightSetter('72S150I10',false)\" onmouseout=\"highlightSetter('72S150I10',true)\">近似理论和复杂算法等多学科知识,</em>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,","datatype":"webpage","clcs":[],"similarityPercentage":"91.0%","self":false,"text":"的核心,也就是使计算机具有人工智能的根本途径。它(机器学习)<em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等多学科知识,</em>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,"},{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":663.8369,"teacher":"","textWithDynamicClass":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar 72S148I3' onmouseover=\"highlightSetter('72S148I3',false)\" onmouseout=\"highlightSetter('72S148I3',true)\">但机器学习是一门多学科的交叉专业,</em><em class='similar 72S148I4' onmouseover=\"highlightSetter('72S148I4',false)\" onmouseout=\"highlightSetter('72S148I4',true)\">涵盖概率论,</em><em class='similar 72S148I5' onmouseover=\"highlightSetter('72S148I5',false)\" onmouseout=\"highlightSetter('72S148I5',true)\">统计学,</em><em class='similar 72S148I6' onmouseover=\"highlightSetter('72S148I6',false)\" onmouseout=\"highlightSetter('72S148I6',true)\">近似理论和复杂算法等知识,</em>使用计算机为工具并致力于真实实时的模拟人类学习方式,","datatype":"webpage","clcs":[],"similarityPercentage":"90.1%","self":false,"text":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar'>但机器学习是一门多学科的交叉专业,</em><em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em>使用计算机为工具并致力于真实实时的模拟人类学习方式,"},{"profession":false,"keywords":[],"year":"","docid":"9000146417610611","author":"","university":"","source":"网页","title":"基于数据挖掘技术的组件核子密度预测研究_雷济充","url":"http://www.doc88.com/p%2D49199834379055.html","reference":false,"similarScore":275.35712,"teacher":"","textWithDynamicClass":"速建立辐射剂量场以保护人员安全,同时还有利于乏燃料的再利用。<em class='similar 72S152I5' onmouseover=\"highlightSetter('72S152I5',false)\" onmouseout=\"highlightSetter('72S152I5',true)\">机器学习是一门多学科交叉专业,</em><em class='similar 72S152I6' onmouseover=\"highlightSetter('72S152I6',false)\" onmouseout=\"highlightSetter('72S152I6',true)\">涵盖概率论、</em><em class='similar 72S152I7' onmouseover=\"highlightSetter('72S152I7',false)\" onmouseout=\"highlightSetter('72S152I7',true)\">统计学、</em><em class='similar 72S152I8' onmouseover=\"highlightSetter('72S152I8',false)\" onmouseout=\"highlightSetter('72S152I8',true)\">近似理论以及复杂算法等知识,</em>具有精确、自动化、迅速、可自定义以及规模化等特点,","datatype":"webpage","clcs":[],"similarityPercentage":"88.6%","self":false,"text":"速建立辐射剂量场以保护人员安全,同时还有利于乏燃料的再利用。<em class='similar'>机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率论、</em><em class='similar'>统计学、</em><em class='similar'>近似理论以及复杂算法等知识,</em>具有精确、自动化、迅速、可自定义以及规模化等特点,"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":556.6789,"teacher":"","textWithDynamicClass":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar 72S149I3' onmouseover=\"highlightSetter('72S149I3',false)\" onmouseout=\"highlightSetter('72S149I3',true)\">1机器学习机器学习是一门多学科交叉专业,</em><em class='similar 72S149I4' onmouseover=\"highlightSetter('72S149I4',false)\" onmouseout=\"highlightSetter('72S149I4',true)\">涵盖概率学与统计学知识,</em><em class='similar 72S149I5' onmouseover=\"highlightSetter('72S149I5',false)\" onmouseout=\"highlightSetter('72S149I5',true)\">近似理论和复杂算法知识,</em>用计算机作为工具,","datatype":"journal","clcs":[],"similarityPercentage":"70.3%","self":false,"text":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar'>1机器学习机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率学与统计学知识,</em><em class='similar'>近似理论和复杂算法知识,</em>用计算机作为工具,"},{"profession":false,"keywords":[],"year":"2015","docid":"2200000686724111","author":"梁洲","university":"","source":"大学生论文联合库","title":"模式分类与仿真","url":"","reference":false,"similarScore":140,"teacher":"","textWithDynamicClass":"术。面对着大数据时代信息知识的挑战,因此诞生了数据挖掘技术。<em class='similar 72S153I4' onmouseover=\"highlightSetter('72S153I4',false)\" onmouseout=\"highlightSetter('72S153I4',true)\">数据挖掘技术是一门多学科的交叉领域。</em><em class='similar 72S153I5' onmouseover=\"highlightSetter('72S153I5',false)\" onmouseout=\"highlightSetter('72S153I5',true)\">它涉及机器学习,</em>大数据处理、模式分类等多个领域的理论和技术。多年来","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"40.4%","self":false,"text":"术。面对着大数据时代信息知识的挑战,因此诞生了数据挖掘技术。<em class='similar'>数据挖掘技术是一门多学科的交叉领域。</em><em class='similar'>它涉及机器学习,</em>大数据处理、模式分类等多个领域的理论和技术。多年来"}],"textWithDynamicClass":"<em class='similar T71I0' onmouseover=\"highlightSetter('T71I0',false)\" onmouseout=\"highlightSetter('T71I0',true)\">机器学习是一门多学科交叉领域,</em><em class='similar T71I1' onmouseover=\"highlightSetter('T71I1',false)\" onmouseout=\"highlightSetter('T71I1',true)\">其涵盖概率论,</em><em class='similar T71I2' onmouseover=\"highlightSetter('T71I2',false)\" onmouseout=\"highlightSetter('T71I2',true)\">统计学,</em><em class='similar T71I3' onmouseover=\"highlightSetter('T71I3',false)\" onmouseout=\"highlightSetter('T71I3',true)\">近似理论和复杂算法等知识,</em>","similar_word_count":35,"text":"<em class='similar'>机器学习是一门多学科交叉领域,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em>","suggest":{"synonyms":[],"keyword":["机器学习","一门","多学科","交叉领域","涵盖","概率论","统计学","近似理论","复杂算法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":663.8369,"teacher":"","textWithDynamicClass":"近似理论和复杂算法等知识,<em class='similar 72S148I7' onmouseover=\"highlightSetter('72S148I7',false)\" onmouseout=\"highlightSetter('72S148I7',true)\">使用计算机为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行实时结构划分来有效提高学习效率。","datatype":"webpage","clcs":[],"similarityPercentage":"93.4%","self":false,"text":"近似理论和复杂算法等知识,<em class='similar'>使用计算机为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行实时结构划分来有效提高学习效率。"},{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":547.76556,"teacher":"","textWithDynamicClass":"近似理论和复杂算法等多学科知识,<em class='similar 72S150I11' onmouseover=\"highlightSetter('72S150I11',false)\" onmouseout=\"highlightSetter('72S150I11',true)\">使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em>将数据内容进行知识结构划分来有效提高学习效率。","datatype":"webpage","clcs":[],"similarityPercentage":"91.9%","self":false,"text":"近似理论和复杂算法等多学科知识,<em class='similar'>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em>将数据内容进行知识结构划分来有效提高学习效率。"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":556.6789,"teacher":"","textWithDynamicClass":"近似理论和复杂算法知识,<em class='similar 72S149I6' onmouseover=\"highlightSetter('72S149I6',false)\" onmouseout=\"highlightSetter('72S149I6',true)\">用计算机作为工具,</em><em class='similar 72S149I7' onmouseover=\"highlightSetter('72S149I7',false)\" onmouseout=\"highlightSetter('72S149I7',true)\">致力于实时模拟人类学习方式,</em>将现有内容进行知识结构划分,","datatype":"journal","clcs":[],"similarityPercentage":"71.5%","self":false,"text":"近似理论和复杂算法知识,<em class='similar'>用计算机作为工具,</em><em class='similar'>致力于实时模拟人类学习方式,</em>将现有内容进行知识结构划分,"},{"profession":false,"keywords":[],"year":"","docid":"9000198244714311","author":"","university":"","source":"网页","title":"科学家探索AI“选择性失忆”问题 - 今日头条 - 电子发烧友网","url":"http://www.elecfans.com/news/1694549.html","reference":false,"similarScore":200.90659,"teacher":"","textWithDynamicClass":"实现,那么这一概念将帮助人们很好地控制数据。据音圈模组获悉,<em class='similar 72S151I5' onmouseover=\"highlightSetter('72S151I5',false)\" onmouseout=\"highlightSetter('72S151I5',true)\">机器学习宗旨是使用计算机作为工具并致力于真实、</em><em class='similar 72S151I6' onmouseover=\"highlightSetter('72S151I6',false)\" onmouseout=\"highlightSetter('72S151I6',true)\">实时的模拟人类学习方式,</em>其可以将现有内容进行知识结构划分,","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"实现,那么这一概念将帮助人们很好地控制数据。据音圈模组获悉,<em class='similar'>机器学习宗旨是使用计算机作为工具并致力于真实、</em><em class='similar'>实时的模拟人类学习方式,</em>其可以将现有内容进行知识结构划分,"}],"textWithDynamicClass":"机器学习是一门多学科交叉领域,其涵盖概率论,统计学,近似理论和复杂算法等知识,<em class='similar T71I4' onmouseover=\"highlightSetter('T71I4',false)\" onmouseout=\"highlightSetter('T71I4',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>","similar_word_count":26,"text":"机器学习是一门多学科交叉领域,其涵盖概率论,统计学,近似理论和复杂算法等知识,<em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>","suggest":{"synonyms":[{"synonyms":["尽力"],"keyword":"致力"},{"synonyms":["及时"],"keyword":"实时"}],"keyword":["致力","实时","学习方式"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":663.8369,"teacher":"","textWithDynamicClass":"使用计算机为工具并致力于真实实时的模拟人类学习方式,<em class='similar 72S148I8' onmouseover=\"highlightSetter('72S148I8',false)\" onmouseout=\"highlightSetter('72S148I8',true)\">并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会","datatype":"webpage","clcs":[],"similarityPercentage":"89.1%","self":false,"text":"使用计算机为工具并致力于真实实时的模拟人类学习方式,<em class='similar'>并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会"},{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":547.76556,"teacher":"","textWithDynamicClass":"使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,<em class='similar 72S150I12' onmouseover=\"highlightSetter('72S150I12',false)\" onmouseout=\"highlightSetter('72S150I12',true)\">将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,","datatype":"webpage","clcs":[],"similarityPercentage":"85.1%","self":false,"text":"使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,<em class='similar'>将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":556.6789,"teacher":"","textWithDynamicClass":"致力于实时模拟人类学习方式,<em class='similar 72S149I8' onmouseover=\"highlightSetter('72S149I8',false)\" onmouseout=\"highlightSetter('72S149I8',true)\">将现有内容进行知识结构划分,</em><em class='similar 72S149I9' onmouseover=\"highlightSetter('72S149I9',false)\" onmouseout=\"highlightSetter('72S149I9',true)\">有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域","datatype":"journal","clcs":[],"similarityPercentage":"68.2%","self":false,"text":"致力于实时模拟人类学习方式,<em class='similar'>将现有内容进行知识结构划分,</em><em class='similar'>有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域"},{"profession":false,"keywords":[],"year":"","docid":"9000198244714311","author":"","university":"","source":"网页","title":"科学家探索AI“选择性失忆”问题 - 今日头条 - 电子发烧友网","url":"http://www.elecfans.com/news/1694549.html","reference":false,"similarScore":200.90659,"teacher":"","textWithDynamicClass":"实时的模拟人类学习方式,<em class='similar 72S151I7' onmouseover=\"highlightSetter('72S151I7',false)\" onmouseout=\"highlightSetter('72S151I7',true)\">其可以将现有内容进行知识结构划分,</em>再广泛应用于解决工程应用和科学领域的复杂问题。现在","datatype":"webpage","clcs":[],"similarityPercentage":"57.6%","self":false,"text":"实时的模拟人类学习方式,<em class='similar'>其可以将现有内容进行知识结构划分,</em>再广泛应用于解决工程应用和科学领域的复杂问题。现在"}],"textWithDynamicClass":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar T71I5' onmouseover=\"highlightSetter('T71I5',false)\" onmouseout=\"highlightSetter('T71I5',true)\">并将现有内容进行对应知识体系划分来有效提高学习效率的方法</em>","similar_word_count":28,"text":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar'>并将现有内容进行对应知识体系划分来有效提高学习效率的方法</em>","suggest":{"synonyms":[],"keyword":["体系划分","有效提高","学习效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000133817217811","author":"","university":"","source":"网页","title":"随机森林 - 道客巴巴","url":"https://www.doc88.com/p%2D6873249826968.html","reference":false,"similarScore":318.11093,"teacher":"","textWithDynamicClass":"每一棵树只投一票给它认为最合适的类。<em class='similar 74S156I1' onmouseover=\"highlightSetter('74S156I1',false)\" onmouseout=\"highlightSetter('74S156I1',true)\">在机器学习中,</em><em class='similar 74S156I2' onmouseover=\"highlightSetter('74S156I2',false)\" onmouseout=\"highlightSetter('74S156I2',true)\">随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定,<em class='similar 74S156I4' onmouseover=\"highlightSetter('74S156I4',false)\" onmouseout=\"highlightSetter('74S156I4',true)\">构成随机森林的基础分类器称为决策树。</em>Leo Breiman 和 Adele Cutler 发展出推论出随机森林的算法。","datatype":"webpage","clcs":[],"similarityPercentage":"63.4%","self":false,"text":"每一棵树只投一票给它认为最合适的类。<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定,<em class='similar'>构成随机森林的基础分类器称为决策树。</em>Leo Breiman 和 Adele Cutler 发展出推论出随机森林的算法。"},{"profession":false,"keywords":[],"year":"","docid":"9000014844308311","author":"","university":"","source":"网页","title":"集成学习(Ensemble Learning)综述 - JohnSon - CSDN博客","url":"https://blog.csdn.net/John_xyz/article/details/79602365","reference":false,"similarScore":208.45573,"teacher":"","textWithDynamicClass":"就是说,对于若干和弱学习器的输出进行平均得到最终的预测输出。<em class='similar 74S157I3' onmouseover=\"highlightSetter('74S157I3',false)\" onmouseout=\"highlightSetter('74S157I3',true)\">1.1随机森林随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。 Leo Breiman和Adele Cutler发展出推论出随机森林的算法算法思想:","datatype":"webpage","clcs":[],"similarityPercentage":"54.2%","self":false,"text":"就是说,对于若干和弱学习器的输出进行平均得到最终的预测输出。<em class='similar'>1.1随机森林随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。 Leo Breiman和Adele Cutler发展出推论出随机森林的算法算法思想:"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023720243711","author":"刘凡平编著","university":"","source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":"","reference":false,"similarScore":325.01495,"teacher":"","textWithDynamicClass":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar 74S158I3' onmouseover=\"highlightSetter('74S158I3',false)\" onmouseout=\"highlightSetter('74S158I3',true)\">8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。","datatype":"book","clcs":[],"similarityPercentage":"52.5%","self":false,"text":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar'>8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。"},{"profession":false,"keywords":[],"year":"2019","docid":"1000031673706911","author":"","university":"","source":"人文杂志","title":"领投人特征对股权众筹融资绩效影响的实证研究","url":"","reference":false,"similarScore":166.89655,"teacher":"","textWithDynamicClass":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar 74S160I1' onmouseover=\"highlightSetter('74S160I1',false)\" onmouseout=\"highlightSetter('74S160I1',true)\">随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar 74S160I2' onmouseover=\"highlightSetter('74S160I2',false)\" onmouseout=\"highlightSetter('74S160I2',true)\">通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文","datatype":"journal","clcs":[],"similarityPercentage":"30.9%","self":false,"text":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar'>随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar'>通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文"}],"textWithDynamicClass":"<em class='similar T73I0' onmouseover=\"highlightSetter('T73I0',false)\" onmouseout=\"highlightSetter('T73I0',true)\">在机器学习中,</em><em class='similar T73I1' onmouseover=\"highlightSetter('T73I1',false)\" onmouseout=\"highlightSetter('T73I1',true)\">随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em>","similar_word_count":35,"text":"<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em>","suggest":{"synonyms":[],"keyword":["机器学习","随机森林","决策树","学习器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000014844308311","author":"","university":"","source":"网页","title":"集成学习(Ensemble Learning)综述 - JohnSon - CSDN博客","url":"https://blog.csdn.net/John_xyz/article/details/79602365","reference":false,"similarScore":208.45573,"teacher":"","textWithDynamicClass":"就是说,对于若干和弱学习器的输出进行平均得到最终的预测输出。1.1随机森林随机森林是一个包含多个决策树的分类器,并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar 74S157I5' onmouseover=\"highlightSetter('74S157I5',false)\" onmouseout=\"highlightSetter('74S157I5',true)\"> Leo Breiman和Adele Cutler发展出推论出随机森林的算法算法思想:</em>用N N来表示训练用例(样本)的个数,M M表示特","datatype":"webpage","clcs":[],"similarityPercentage":"74.4%","self":false,"text":"就是说,对于若干和弱学习器的输出进行平均得到最终的预测输出。1.1随机森林随机森林是一个包含多个决策树的分类器,并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar'> Leo Breiman和Adele Cutler发展出推论出随机森林的算法算法思想:</em>用N N来表示训练用例(样本)的个数,M M表示特"},{"profession":false,"keywords":[],"year":"","docid":"9000133817217811","author":"","university":"","source":"网页","title":"随机森林 - 道客巴巴","url":"https://www.doc88.com/p%2D6873249826968.html","reference":false,"similarScore":318.11093,"teacher":"","textWithDynamicClass":"并且其输出的类别是由个别树输出的类别的众数而定,构成随机森林的基础分类器称为决策树。<em class='similar 74S156I5' onmouseover=\"highlightSetter('74S156I5',false)\" onmouseout=\"highlightSetter('74S156I5',true)\"> Leo Breiman 和 Adele Cutler 发展出推论出随机森林的算法。</em>这个术语是1995年由贝尔实验室的 Tin Kam","datatype":"webpage","clcs":[],"similarityPercentage":"73.8%","self":false,"text":"并且其输出的类别是由个别树输出的类别的众数而定,构成随机森林的基础分类器称为决策树。<em class='similar'> Leo Breiman 和 Adele Cutler 发展出推论出随机森林的算法。</em>这个术语是1995年由贝尔实验室的 Tin Kam"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023653559711","author":"何海群著","university":"","source":"","title":"零起点  Python足彩大数据与机器学习实盘分析","url":"","reference":false,"similarScore":73.47826,"teacher":"","textWithDynamicClass":"Random Decision Forests)发展而来的。<em class='similar 74S159I7' onmouseover=\"highlightSetter('74S159I7',false)\" onmouseout=\"highlightSetter('74S159I7',true)\">Leo Breiman和AdeleCutler推论出了随机森林的算法,</em>并注册了Random Forests商标。⋯胡阵.","datatype":"book","clcs":[],"similarityPercentage":"70.0%","self":false,"text":"Random Decision Forests)发展而来的。<em class='similar'>Leo Breiman和AdeleCutler推论出了随机森林的算法,</em>并注册了Random Forests商标。⋯胡阵."},{"profession":false,"keywords":[],"year":"2019","docid":"1000031673706911","author":"","university":"","source":"人文杂志","title":"领投人特征对股权众筹融资绩效影响的实证研究","url":"","reference":false,"similarScore":166.89655,"teacher":"","textWithDynamicClass":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar 74S160I1' onmouseover=\"highlightSetter('74S160I1',false)\" onmouseout=\"highlightSetter('74S160I1',true)\">随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em>通过对多个弱分类器加以组合,","datatype":"journal","clcs":[],"similarityPercentage":"62.6%","self":false,"text":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar'>随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em>通过对多个弱分类器加以组合,"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023720243711","author":"刘凡平编著","university":"","source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":"","reference":false,"similarScore":325.01495,"teacher":"","textWithDynamicClass":"imum Tree),在剪枝之后都能够保留最重要的属性划分。8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。<em class='similar 74S158I4' onmouseover=\"highlightSetter('74S158I4',false)\" onmouseout=\"highlightSetter('74S158I4',true)\">随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em><em class='similar 74S158I5' onmouseover=\"highlightSetter('74S158I5',false)\" onmouseout=\"highlightSetter('74S158I5',true)\">随机森林,</em>顾名思义就是用随机的方式建立一个森林,森林里面由很","datatype":"book","clcs":[],"similarityPercentage":"57.8%","self":false,"text":"imum Tree),在剪枝之后都能够保留最重要的属性划分。8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。<em class='similar'>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em><em class='similar'>随机森林,</em>顾名思义就是用随机的方式建立一个森林,森林里面由很"}],"textWithDynamicClass":"在机器学习中,随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。<em class='similar T73I2' onmouseover=\"highlightSetter('T73I2',false)\" onmouseout=\"highlightSetter('T73I2',true)\">随机森林是Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em><em class='similar T73I3' onmouseover=\"highlightSetter('T73I3',false)\" onmouseout=\"highlightSetter('T73I3',true)\">这个算法是多学习集成学习的典型模型。</em>","similar_word_count":43,"text":"在机器学习中,随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。<em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em><em class='similar'>这个算法是多学习集成学习的典型模型。</em>","suggest":{"synonyms":[{"synonyms":["推行"],"keyword":"推论"}],"keyword":["随机森林","推论","集成学习","典型模型"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000017012081811","author":"","university":"","source":"网页","title":"集成学习（Boosting,Bagging和随机森林） - u014665416的博客 - CSDN博客","url":"https://blog.csdn.net/u014665416/article/details/51557318","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"器数目达到事先指定的值T,最终将这T个基学习器进行加权结合。<em class='similar 75S161I5' onmouseover=\"highlightSetter('75S161I5',false)\" onmouseout=\"highlightSetter('75S161I5',true)\"> Bagging是并行式集成学习代表方法。</em>基于\"自助采样法\"","datatype":"webpage","clcs":[],"similarityPercentage":"73.6%","self":false,"text":"器数目达到事先指定的值T,最终将这T个基学习器进行加权结合。<em class='similar'> Bagging是并行式集成学习代表方法。</em>基于\"自助采样法\""},{"profession":false,"keywords":[],"year":"","docid":"9000059541096411","author":"","university":"","source":"网页","title":"基于hadoop的数据采样集合训练","url":"http://blog.csdn.net/code_caq/article/details/69936176","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"的方法统计所有分类器的分类结果,结果最高的类别即为最终标签。<em class='similar 75S163I3' onmouseover=\"highlightSetter('75S163I3',false)\" onmouseout=\"highlightSetter('75S163I3',true)\">bagging是并行式集成学习代表方法。</em>基于\"自助采样法\"","datatype":"webpage","clcs":[],"similarityPercentage":"73.6%","self":false,"text":"的方法统计所有分类器的分类结果,结果最高的类别即为最终标签。<em class='similar'>bagging是并行式集成学习代表方法。</em>基于\"自助采样法\""},{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":394.32455,"teacher":"","textWithDynamicClass":"<em class='similar 75S162I0' onmouseover=\"highlightSetter('75S162I0',false)\" onmouseout=\"highlightSetter('75S162I0',true)\">g是并��式集成学习方法最著名的代表。</em>从名字即可看出,它是直接基于自助采样法","datatype":"webpage","clcs":[],"similarityPercentage":"64.4%","self":false,"text":"<em class='similar'>g是并行式集成学习方法最著名的代表。</em>从名字即可看出,它是直接基于自助采样法"}],"textWithDynamicClass":"<em class='similar T74I0' onmouseover=\"highlightSetter('T74I0',false)\" onmouseout=\"highlightSetter('T74I0',true)\">Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>","similar_word_count":25,"text":"<em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>","suggest":{"synonyms":[],"keyword":["并行式","集成学习","代表性","机器学习方法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000167184938611","author":"","university":"","source":"网页","title":"机器学习-模型评估与选择 - 西伯利亚大尾巴狼的个人空间 - OSCHINA - 中文开源技术交流社区","url":"https://my.oschina.net/u/3128043/blog/1613611","reference":false,"similarScore":125.138916,"teacher":"","textWithDynamicClass":"ping)\\n每次从D中随机复制一个样本到D1中,重复m次,<em class='similar 75S165I9' onmouseover=\"highlightSetter('75S165I9',false)\" onmouseout=\"highlightSetter('75S165I9',true)\">会得到一个拥有m个数据样本的D1数据集</em><em class='similar 75S165I10' onmouseover=\"highlightSetter('75S165I10',false)\" onmouseout=\"highlightSetter('75S165I10',true)\">(自主采样法:</em>可重复采样或又放回采样)。显然,D中的一部分数据会","datatype":"webpage","clcs":[],"similarityPercentage":"73.6%","self":false,"text":"ping)\\n每次从D中随机复制一个样本到D1中,重复m次,<em class='similar'>会得到一个拥有m个数据样本的D1数据集</em><em class='similar'>(自主采样法:</em>可重复采样或又放回采样)。显然,D中的一部分数据会"},{"profession":false,"keywords":[],"year":"","docid":"9000017012081811","author":"","university":"","source":"网页","title":"集成学习（Boosting,Bagging和随机森林） - u014665416的博客 - CSDN博客","url":"https://blog.csdn.net/u014665416/article/details/51557318","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"器数目达到事先指定的值T,最终将这T个基学习器进行加权结合。 Bagging是并行式集成学习代表方法。<em class='similar 75S161I6' onmouseover=\"highlightSetter('75S161I6',false)\" onmouseout=\"highlightSetter('75S161I6',true)\">基于&quot;自助采样法&quot;</em>(bootstrap sampling)。自助采样法机制:<em class='similar 75S161I9' onmouseover=\"highlightSetter('75S161I9',false)\" onmouseout=\"highlightSetter('75S161I9',true)\">给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,","datatype":"webpage","clcs":[],"similarityPercentage":"72.5%","self":false,"text":"器数目达到事先指定的值T,最终将这T个基学习器进行加权结合。 Bagging是并行式集成学习代表方法。<em class='similar'>基于&quot;自助采样法&quot;</em>(bootstrap sampling)。自助采样法机制:<em class='similar'>给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,"},{"profession":false,"keywords":[],"year":"","docid":"9000059541096411","author":"","university":"","source":"网页","title":"基于hadoop的数据采样集合训练","url":"http://blog.csdn.net/code_caq/article/details/69936176","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"的方法统计所有分类器的分类结果,结果最高的类别即为最终标签。bagging是并行式集成学习代表方法。<em class='similar 75S163I4' onmouseover=\"highlightSetter('75S163I4',false)\" onmouseout=\"highlightSetter('75S163I4',true)\">基于&quot;自助采样法&quot;</em>(bootstrapsampling)。自助采样法机制:<em class='similar 75S163I7' onmouseover=\"highlightSetter('75S163I7',false)\" onmouseout=\"highlightSetter('75S163I7',true)\">给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,","datatype":"webpage","clcs":[],"similarityPercentage":"72.5%","self":false,"text":"的方法统计所有分类器的分类结果,结果最高的类别即为最终标签。bagging是并行式集成学习代表方法。<em class='similar'>基于&quot;自助采样法&quot;</em>(bootstrapsampling)。自助采样法机制:<em class='similar'>给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,"},{"profession":false,"keywords":[],"year":"","docid":"9000132962564111","author":"","university":"","source":"网页","title":"基于集成学习约束能量最小化的高光谱目标检测算法研究...","url":"http://www.doc88.com/p%2D6953893775176.html","reference":false,"similarScore":106.250015,"teacher":"","textWithDynamicClass":"g的主要思想,并加以改进,以适应高光谱目标检测这一特殊问题。<em class='similar 75S166I13' onmouseover=\"highlightSetter('75S166I13',false)\" onmouseout=\"highlightSetter('75S166I13',true)\">Bagging基于自主采样法,</em>它的基本流程是:<em class='similar 75S166I15' onmouseover=\"highlightSetter('75S166I15',false)\" onmouseout=\"highlightSetter('75S166I15',true)\">给定包含m个样本的数据集,</em>从中有放回抽取m个样本,重复以上操作T次,得到T轮","datatype":"webpage","clcs":[],"similarityPercentage":"70.2%","self":false,"text":"g的主要思想,并加以改进,以适应高光谱目标检测这一特殊问题。<em class='similar'>Bagging基于自主采样法,</em>它的基本流程是:<em class='similar'>给定包含m个样本的数据集,</em>从中有放回抽取m个样本,重复以上操作T次,得到T轮"},{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":394.32455,"teacher":"","textWithDynamicClass":"g是并行式集成学习方法最著名的代表。从名字即可看出,<em class='similar 75S162I2' onmouseover=\"highlightSetter('75S162I2',false)\" onmouseout=\"highlightSetter('75S162I2',true)\">它是直接基于自助采样法</em>((bootstrapsampling)的。<em class='similar 75S162I6' onmouseover=\"highlightSetter('75S162I6',false)\" onmouseout=\"highlightSetter('75S162I6',true)\">给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,","datatype":"webpage","clcs":[],"similarityPercentage":"64.8%","self":false,"text":"g是并行式集成学习方法最著名的代表。从名字即可看出,<em class='similar'>它是直接基于自助采样法</em>((bootstrapsampling)的。<em class='similar'>给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,"},{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":274.38013,"teacher":"","textWithDynamicClass":"ing采用自助采样法(bootstrap sampling)<em class='similar 75S164I2' onmouseover=\"highlightSetter('75S164I2',false)\" onmouseout=\"highlightSetter('75S164I2',true)\">采样数据。</em><em class='similar 75S164I3' onmouseover=\"highlightSetter('75S164I3',false)\" onmouseout=\"highlightSetter('75S164I3',true)\">给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,","datatype":"webpage","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"ing采用自助采样法(bootstrap sampling)<em class='similar'>采样数据。</em><em class='similar'>给定包含m个样本的数据集,</em>我们先随机取出一个样本放入采样集中,"}],"textWithDynamicClass":"Bagging是并行式集成学习中比较具有代表性的机器学习方法,<em class='similar T74I1' onmouseover=\"highlightSetter('T74I1',false)\" onmouseout=\"highlightSetter('T74I1',true)\">它基于自主采样法,</em><em class='similar T74I2' onmouseover=\"highlightSetter('T74I2',false)\" onmouseout=\"highlightSetter('T74I2',true)\">即给定一个数据集拥有固定m个数据样本,</em>","similar_word_count":26,"text":"Bagging是并行式集成学习中比较具有代表性的机器学习方法,<em class='similar'>它基于自主采样法,</em><em class='similar'>即给定一个数据集拥有固定m个数据样本,</em>","suggest":{"synonyms":[{"synonyms":["自助"],"keyword":"自主"}],"keyword":["自主","采样法","给定","数据集","数据样本","采样"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000017012081811","author":"","university":"","source":"网页","title":"集成学习（Boosting,Bagging和随机森林） - u014665416的博客 - CSDN博客","url":"https://blog.csdn.net/u014665416/article/details/51557318","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"(bootstrap sampling)。自助采样法机制:给定包含m个样本的数据集,<em class='similar 75S161I10' onmouseover=\"highlightSetter('75S161I10',false)\" onmouseout=\"highlightSetter('75S161I10',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S161I11' onmouseover=\"highlightSetter('75S161I11',false)\" onmouseout=\"highlightSetter('75S161I11',true)\">再把该样本放回初始数据集,</em>使得下一次采样时该样本还会被采到。","datatype":"webpage","clcs":[],"similarityPercentage":"72.6%","self":false,"text":"(bootstrap sampling)。自助采样法机制:给定包含m个样本的数据集,<em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em>使得下一次采样时该样本还会被采到。"},{"profession":false,"keywords":[],"year":"","docid":"9000059541096411","author":"","university":"","source":"网页","title":"基于hadoop的数据采样集合训练","url":"http://blog.csdn.net/code_caq/article/details/69936176","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"(bootstrapsampling)。自助采样法机制:给定包含m个样本的数据集,<em class='similar 75S163I8' onmouseover=\"highlightSetter('75S163I8',false)\" onmouseout=\"highlightSetter('75S163I8',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S163I9' onmouseover=\"highlightSetter('75S163I9',false)\" onmouseout=\"highlightSetter('75S163I9',true)\">再把该样本放回初始数据集,</em>使得下一次采样时该样本还会被采到。","datatype":"webpage","clcs":[],"similarityPercentage":"72.6%","self":false,"text":"(bootstrapsampling)。自助采样法机制:给定包含m个样本的数据集,<em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em>使得下一次采样时该样本还会被采到。"},{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":274.38013,"teacher":"","textWithDynamicClass":"给定包含m个样本的数据集,<em class='similar 75S164I4' onmouseover=\"highlightSetter('75S164I4',false)\" onmouseout=\"highlightSetter('75S164I4',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S164I5' onmouseover=\"highlightSetter('75S164I5',false)\" onmouseout=\"highlightSetter('75S164I5',true)\">再把该样本放回初始数据集,</em>使得下次采样时,","datatype":"webpage","clcs":[],"similarityPercentage":"71.5%","self":false,"text":"给定包含m个样本的数据集,<em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em>使得下次采样时,"},{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":394.32455,"teacher":"","textWithDynamicClass":"((bootstrapsampling)的。给定包含m个样本的数据集,<em class='similar 75S162I7' onmouseover=\"highlightSetter('75S162I7',false)\" onmouseout=\"highlightSetter('75S162I7',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S162I8' onmouseover=\"highlightSetter('75S162I8',false)\" onmouseout=\"highlightSetter('75S162I8',true)\">再把该样本放回初始数据集,</em>使得下次采样时该样本仍有可能被选中,","datatype":"webpage","clcs":[],"similarityPercentage":"69.6%","self":false,"text":"((bootstrapsampling)的。给定包含m个样本的数据集,<em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em>使得下次采样时该样本仍有可能被选中,"}],"textWithDynamicClass":"它基于自主采样法,即给定一个数据集拥有固定m个数据样本,<em class='similar T74I3' onmouseover=\"highlightSetter('T74I3',false)\" onmouseout=\"highlightSetter('T74I3',true)\">学习算法先随机拿出一个样本放入采样集中,</em><em class='similar T74I4' onmouseover=\"highlightSetter('T74I4',false)\" onmouseout=\"highlightSetter('T74I4',true)\">再通过将该出去的样本放回数据集,</em>","similar_word_count":34,"text":"它基于自主采样法,即给定一个数据集拥有固定m个数据样本,<em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em>","suggest":{"synonyms":[],"keyword":["数据集","学习算法","采样","放回"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000017012081811","author":"","university":"","source":"网页","title":"集成学习（Boosting,Bagging和随机森林） - u014665416的博客 - CSDN博客","url":"https://blog.csdn.net/u014665416/article/details/51557318","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"再把该样本放回初始数据集,<em class='similar 75S161I12' onmouseover=\"highlightSetter('75S161I12',false)\" onmouseout=\"highlightSetter('75S161I12',true)\">使得下一次采样时该样本还会被采到。</em>这样,经过m次样本采集,","datatype":"webpage","clcs":[],"similarityPercentage":"70.4%","self":false,"text":"再把该样本放回初始数据集,<em class='similar'>使得下一次采样时该样本还会被采到。</em>这样,经过m次样本采集,"},{"profession":false,"keywords":[],"year":"","docid":"9000059541096411","author":"","university":"","source":"网页","title":"基于hadoop的数据采样集合训练","url":"http://blog.csdn.net/code_caq/article/details/69936176","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"再把该样本放回初始数据集,<em class='similar 75S163I10' onmouseover=\"highlightSetter('75S163I10',false)\" onmouseout=\"highlightSetter('75S163I10',true)\">使得下一次采样时该样本还会被采到。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"70.4%","self":false,"text":"再把该样本放回初始数据集,<em class='similar'>使得下一次采样时该样本还会被采到。</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":394.32455,"teacher":"","textWithDynamicClass":"再把该样本放回初始数据集,<em class='similar 75S162I9' onmouseover=\"highlightSetter('75S162I9',false)\" onmouseout=\"highlightSetter('75S162I9',true)\">使得下次采样时该样本仍有可能被选中,</em>这样,经过m次随机采样操作,我们得到含。个样本的采","datatype":"webpage","clcs":[],"similarityPercentage":"69.8%","self":false,"text":"再把该样本放回初始数据集,<em class='similar'>使得下次采样时该样本仍有可能被选中,</em>这样,经过m次随机采样操作,我们得到含。个样本的采"},{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":274.38013,"teacher":"","textWithDynamicClass":"再把该样本放回初始数据集,<em class='similar 75S164I6' onmouseover=\"highlightSetter('75S164I6',false)\" onmouseout=\"highlightSetter('75S164I6',true)\">使得下次采样时,</em><em class='similar 75S164I7' onmouseover=\"highlightSetter('75S164I7',false)\" onmouseout=\"highlightSetter('75S164I7',true)\">样本仍可能被选中,</em>这样,经过m次随机采样操作,我们得到包含m个样本的","datatype":"webpage","clcs":[],"similarityPercentage":"64.0%","self":false,"text":"再把该样本放回初始数据集,<em class='similar'>使得下次采样时,</em><em class='similar'>样本仍可能被选中,</em>这样,经过m次随机采样操作,我们得到包含m个样本的"}],"textWithDynamicClass":"学习算法先随机拿出一个样本放入采样集中,再通过将该出去的样本放回数据集,<em class='similar T74I5' onmouseover=\"highlightSetter('T74I5',false)\" onmouseout=\"highlightSetter('T74I5',true)\">使得在每一次采样时均有可能取到之前的样本,</em>","similar_word_count":20,"text":"学习算法先随机拿出一个样本放入采样集中,再通过将该出去的样本放回数据集,<em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em>","suggest":{"synonyms":[],"keyword":["采样"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015681295811","author":"","university":"","source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990","reference":false,"similarScore":489.15878,"teacher":"","textWithDynamicClass":"把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中,<em class='similar 76S167I3' onmouseover=\"highlightSetter('76S167I3',false)\" onmouseout=\"highlightSetter('76S167I3',true)\">这样经过m次随机采样操作,</em><em class='similar 76S167I4' onmouseover=\"highlightSetter('76S167I4',false)\" onmouseout=\"highlightSetter('76S167I4',true)\">我们得到含m个样本的采样集,</em>初始训练集中有的样本在采样集中多次出现,","datatype":"webpage","clcs":[],"similarityPercentage":"68.6%","self":false,"text":"把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中,<em class='similar'>这样经过m次随机采样操作,</em><em class='similar'>我们得到含m个样本的采样集,</em>初始训练集中有的样本在采样集中多次出现,"},{"profession":false,"keywords":[],"year":"","docid":"9000016981477111","author":"","university":"","source":"网页","title":"Bagging与随机森林 - 浅梦的博客 - CSDN博客","url":"https://blog.csdn.net/u012151283/article/details/78104678","reference":false,"similarScore":357.73022,"teacher":"","textWithDynamicClass":"sampling)<em class='similar 76S168I1' onmouseover=\"highlightSetter('76S168I1',false)\" onmouseout=\"highlightSetter('76S168I1',true)\">。给定包含m个样本的数据集,</em>先随机取出一个样本放入采样集中,再把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中。<em class='similar 76S168I5' onmouseover=\"highlightSetter('76S168I5',false)\" onmouseout=\"highlightSetter('76S168I5',true)\">这样,</em><em class='similar 76S168I6' onmouseover=\"highlightSetter('76S168I6',false)\" onmouseout=\"highlightSetter('76S168I6',true)\">经过m次随机采样操作,</em><em class='similar 76S168I7' onmouseover=\"highlightSetter('76S168I7',false)\" onmouseout=\"highlightSetter('76S168I7',true)\">我们得到含m个样本的采样集,</em>初始训练集中有的样本再采样集里多次出现,","datatype":"webpage","clcs":[],"similarityPercentage":"64.4%","self":false,"text":"sampling)<em class='similar'>。给定包含m个样本的数据集,</em>先随机取出一个样本放入采样集中,再把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中。<em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到含m个样本的采样集,</em>初始训练集中有的样本再采样集里多次出现,"},{"profession":false,"keywords":[],"year":"","docid":"9000120026804811","author":"","university":"","source":"网页","title":"二战周志华《机器学习》--集成学习 - 简书","url":"https://www.jianshu.com/p/7a5cecef3cc8","reference":false,"similarScore":348.12497,"teacher":"","textWithDynamicClass":"把这个样本放回到初始数据集,使得下次采样时该样本仍可能被选,<em class='similar 76S169I3' onmouseover=\"highlightSetter('76S169I3',false)\" onmouseout=\"highlightSetter('76S169I3',true)\">这样,</em><em class='similar 76S169I4' onmouseover=\"highlightSetter('76S169I4',false)\" onmouseout=\"highlightSetter('76S169I4',true)\">经过m次随机采样操作,</em><em class='similar 76S169I5' onmouseover=\"highlightSetter('76S169I5',false)\" onmouseout=\"highlightSetter('76S169I5',true)\">我们得到含有m个样本的采样集,</em><em class='similar 76S169I6' onmouseover=\"highlightSetter('76S169I6',false)\" onmouseout=\"highlightSetter('76S169I6',true)\">初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,<em class='similar 76S169I11' onmouseover=\"highlightSetter('76S169I11',false)\" onmouseout=\"highlightSetter('76S169I11',true)\">我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,再将这些学习","datatype":"webpage","clcs":[],"similarityPercentage":"62.6%","self":false,"text":"把这个样本放回到初始数据集,使得下次采样时该样本仍可能被选,<em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到含有m个样本的采样集,</em><em class='similar'>初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,<em class='similar'>我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,再将这些学习"},{"profession":false,"keywords":[],"year":"","docid":"9000178176625511","author":"","university":"","source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516","reference":false,"similarScore":385.13153,"teacher":"","textWithDynamicClass":"有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。11lim10.368nenn(2-12)<em class='similar 76S170I5' onmouseover=\"highlightSetter('76S170I5',false)\" onmouseout=\"highlightSetter('76S170I5',true)\">如此我们可以得到T个含n个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,之后将这些基","datatype":"webpage","clcs":[],"similarityPercentage":"54.6%","self":false,"text":"有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。11lim10.368nenn(2-12)<em class='similar'>如此我们可以得到T个含n个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,之后将这些基"}],"textWithDynamicClass":"再通过将该出去的样本放回数据集,使得在每一次采样时均有可能取到之前的样本,<em class='similar T75I0' onmouseover=\"highlightSetter('T75I0',false)\" onmouseout=\"highlightSetter('T75I0',true)\">这样经过覆盖所有样本的次数的随机采样,</em><em class='similar T75I1' onmouseover=\"highlightSetter('T75I1',false)\" onmouseout=\"highlightSetter('T75I1',true)\">我们可以获得包含m个数据的采样机,</em>","similar_word_count":34,"text":"再通过将该出去的样本放回数据集,使得在每一次采样时均有可能取到之前的样本,<em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样机,</em>","suggest":{"synonyms":[],"keyword":["随机采样","采样机","采样"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000128075291811","author":"","university":"","source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505","reference":false,"similarScore":152.10526,"teacher":"","textWithDynamicClass":"行集成学习代表:Bagging。采用了前面提过的自助采样法。<em class='similar 76S171I6' onmouseover=\"highlightSetter('76S171I6',false)\" onmouseout=\"highlightSetter('76S171I6',true)\">(初始训练集中约有63.2%的样本有出现在采样集中)</em>。对预测输出结合是,分类任务简单投票;回归任务采用","datatype":"webpage","clcs":[],"similarityPercentage":"87.2%","self":false,"text":"行集成学习代表:Bagging。采用了前面提过的自助采样法。<em class='similar'>(初始训练集中约有63.2%的样本有出现在采样集中)</em>。对预测输出结合是,分类任务简单投票;回归任务采用"},{"profession":false,"keywords":[],"year":"","docid":"9000015681295811","author":"","university":"","source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990","reference":false,"similarScore":489.15878,"teacher":"","textWithDynamicClass":"我们得到含m个样本的采样集,<em class='similar 76S167I5' onmouseover=\"highlightSetter('76S167I5',false)\" onmouseout=\"highlightSetter('76S167I5',true)\">初始训练集中有的样本在采样集中多次出现,</em><em class='similar 76S167I6' onmouseover=\"highlightSetter('76S167I6',false)\" onmouseout=\"highlightSetter('76S167I6',true)\">有的从未出现。</em><em class='similar 76S167I7' onmouseover=\"highlightSetter('76S167I7',false)\" onmouseout=\"highlightSetter('76S167I7',true)\">初始训练集中约有63.2%的样本会出现在采样集中。</em>照这样可以构建T个含m个训练样本的采样集,然后基于","datatype":"webpage","clcs":[],"similarityPercentage":"77.7%","self":false,"text":"我们得到含m个样本的采样集,<em class='similar'>初始训练集中有的样本在采样集中多次出现,</em><em class='similar'>有的从未出现。</em><em class='similar'>初始训练集中约有63.2%的样本会出现在采样集中。</em>照这样可以构建T个含m个训练样本的采样集,然后基于"},{"profession":false,"keywords":[],"year":"","docid":"9000016981477111","author":"","university":"","source":"网页","title":"Bagging与随机森林 - 浅梦的博客 - CSDN博客","url":"https://blog.csdn.net/u012151283/article/details/78104678","reference":false,"similarScore":357.73022,"teacher":"","textWithDynamicClass":"我们得到含m个样本的采样集,<em class='similar 76S168I8' onmouseover=\"highlightSetter('76S168I8',false)\" onmouseout=\"highlightSetter('76S168I8',true)\">初始训练集中有的样本再采样集里多次出现,</em><em class='similar 76S168I9' onmouseover=\"highlightSetter('76S168I9',false)\" onmouseout=\"highlightSetter('76S168I9',true)\">有的则从未出现。</em>采样出T个含有m个训练样本的采样集,然后基于每个采","datatype":"webpage","clcs":[],"similarityPercentage":"77.5%","self":false,"text":"我们得到含m个样本的采样集,<em class='similar'>初始训练集中有的样本再采样集里多次出现,</em><em class='similar'>有的则从未出现。</em>采样出T个含有m个训练样本的采样集,然后基于每个采"},{"profession":false,"keywords":[],"year":"","docid":"9000120026804811","author":"","university":"","source":"网页","title":"二战周志华《机器学习》--集成学习 - 简书","url":"https://www.jianshu.com/p/7a5cecef3cc8","reference":false,"similarScore":348.12497,"teacher":"","textWithDynamicClass":"我们得到含有m个样本的采样集,<em class='similar 76S169I6' onmouseover=\"highlightSetter('76S169I6',false)\" onmouseout=\"highlightSetter('76S169I6',true)\">初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,我们可以采样出T个含m个训练样本的采样集,","datatype":"webpage","clcs":[],"similarityPercentage":"76.5%","self":false,"text":"我们得到含有m个样本的采样集,<em class='similar'>初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,我们可以采样出T个含m个训练样本的采样集,"},{"profession":false,"keywords":[],"year":"","docid":"9000178176625511","author":"","university":"","source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516","reference":false,"similarScore":385.13153,"teacher":"","textWithDynamicClass":"到一个含n个样本实例的采样集,<em class='similar 76S170I1' onmouseover=\"highlightSetter('76S170I1',false)\" onmouseout=\"highlightSetter('76S170I1',true)\">初始训练集中有的样本在采样集里多次出现,</em><em class='similar 76S170I2' onmouseover=\"highlightSetter('76S170I2',false)\" onmouseout=\"highlightSetter('76S170I2',true)\">有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。</em>11lim10.368nenn(2-12)如此我们可以得到T个含n个训练样本的采样集,","datatype":"webpage","clcs":[],"similarityPercentage":"60.4%","self":false,"text":"到一个含n个样本实例的采样集,<em class='similar'>初始训练集中有的样本在采样集里多次出现,</em><em class='similar'>有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。</em>11lim10.368nenn(2-12)如此我们可以得到T个含n个训练样本的采样集,"}],"textWithDynamicClass":"这样经过覆盖所有样本的次数的随机采样,我们可以获得包含m个数据的采样机,<em class='similar T75I2' onmouseover=\"highlightSetter('T75I2',false)\" onmouseout=\"highlightSetter('T75I2',true)\">初始训练集中有的样本在采样集中多次出现,</em><em class='similar T75I3' onmouseover=\"highlightSetter('T75I3',false)\" onmouseout=\"highlightSetter('T75I3',true)\">有的则从未出现。</em>","similar_word_count":26,"text":"这样经过覆盖所有样本的次数的随机采样,我们可以获得包含m个数据的采样机,<em class='similar'>初始训练集中有的样本在采样集中多次出现,</em><em class='similar'>有的则从未出现。</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["训练","采样"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015681295811","author":"","university":"","source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990","reference":false,"similarScore":489.15878,"teacher":"","textWithDynamicClass":"我们得到含m个样本的采样集,<em class='similar 76S167I5' onmouseover=\"highlightSetter('76S167I5',false)\" onmouseout=\"highlightSetter('76S167I5',true)\">初始训练集中有的样本在采样集中多次出现,</em><em class='similar 76S167I6' onmouseover=\"highlightSetter('76S167I6',false)\" onmouseout=\"highlightSetter('76S167I6',true)\">有的从未出现。</em><em class='similar 76S167I7' onmouseover=\"highlightSetter('76S167I7',false)\" onmouseout=\"highlightSetter('76S167I7',true)\">初始训练集中约有63.2%的样本会出现在采样集中。</em>照这样可以构建T个含m个训练样本的采样集,然后基于","datatype":"webpage","clcs":[],"similarityPercentage":"74.7%","self":false,"text":"我们得到含m个样本的采样集,<em class='similar'>初始训练集中有的样本在采样集中多次出现,</em><em class='similar'>有的从未出现。</em><em class='similar'>初始训练集中约有63.2%的样本会出现在采样集中。</em>照这样可以构建T个含m个训练样本的采样集,然后基于"},{"profession":false,"keywords":[],"year":"","docid":"9000128075291811","author":"","university":"","source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505","reference":false,"similarScore":152.10526,"teacher":"","textWithDynamicClass":"行集成学习代表:Bagging。采用了前面提过的自助采样法。<em class='similar 76S171I6' onmouseover=\"highlightSetter('76S171I6',false)\" onmouseout=\"highlightSetter('76S171I6',true)\">(初始训练集中约有63.2%的样本有出现在采样集中)</em>。对预测输出结合是,分类任务简单投票;回归任务采用","datatype":"webpage","clcs":[],"similarityPercentage":"71.6%","self":false,"text":"行集成学习代表:Bagging。采用了前面提过的自助采样法。<em class='similar'>(初始训练集中约有63.2%的样本有出现在采样集中)</em>。对预测输出结合是,分类任务简单投票;回归任务采用"},{"profession":false,"keywords":[],"year":"","docid":"9000120026804811","author":"","university":"","source":"网页","title":"二战周志华《机器学习》--集成学习 - 简书","url":"https://www.jianshu.com/p/7a5cecef3cc8","reference":false,"similarScore":348.12497,"teacher":"","textWithDynamicClass":"我们得到含有m个样本的采样集,<em class='similar 76S169I6' onmouseover=\"highlightSetter('76S169I6',false)\" onmouseout=\"highlightSetter('76S169I6',true)\">初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,我们可以采样出T个含m个训练样本的采样集,","datatype":"webpage","clcs":[],"similarityPercentage":"71.4%","self":false,"text":"我们得到含有m个样本的采样集,<em class='similar'>初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,我们可以采样出T个含m个训练样本的采样集,"},{"profession":false,"keywords":[],"year":"","docid":"9000178176625511","author":"","university":"","source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516","reference":false,"similarScore":385.13153,"teacher":"","textWithDynamicClass":"到一个含n个样本实例的采样集,初始训练集中有的样本在采样集里多次出现,<em class='similar 76S170I2' onmouseover=\"highlightSetter('76S170I2',false)\" onmouseout=\"highlightSetter('76S170I2',true)\">有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。</em>11lim10.368nenn(2-12)如此我们可以得到T个含n个训练样本的采样集,","datatype":"webpage","clcs":[],"similarityPercentage":"57.7%","self":false,"text":"到一个含n个样本实例的采样集,初始训练集中有的样本在采样集里多次出现,<em class='similar'>有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。</em>11lim10.368nenn(2-12)如此我们可以得到T个含n个训练样本的采样集,"}],"textWithDynamicClass":"由式(2-1)<em class='similar T75I6' onmouseover=\"highlightSetter('T75I6',false)\" onmouseout=\"highlightSetter('T75I6',true)\">可知采样集中将会出现训练集中约三分之二的数据。</em>","similar_word_count":22,"text":"由式(2-1)<em class='similar'>可知采样集中将会出现训练集中约三分之二的数据。</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["训练","采样","三分"]}},{"sources":[{"profession":false,"keywords":[],"year":"2019","docid":"1000029007087911","author":"杨景朝；蒋秀明；董九志；陈云军；梅宝龙","university":"天津工业大学机械工程学院;天津工业大学天津市现代机电装备技术重点实验室;天津工业大学电气工程与自动化学院;","source":"纺织学报","title":"基于机器学习的整体穿刺加压参数预测方法","url":"","reference":false,"similarScore":195.61398,"teacher":"","textWithDynamicClass":"(Bagging)算法适用于强模型,方差较大偏差较小的情况。<em class='similar 77S174I7' onmouseover=\"highlightSetter('77S174I7',false)\" onmouseout=\"highlightSetter('77S174I7',true)\">Bagging算法采样出T个含m个训练样本的采样集,</em>对每个采样集训练出1个基学习器,","datatype":"journal","clcs":["TS174"],"similarityPercentage":"74.9%","self":false,"text":"(Bagging)算法适用于强模型,方差较大偏差较小的情况。<em class='similar'>Bagging算法采样出T个含m个训练样本的采样集,</em>对每个采样集训练出1个基学习器,"},{"profession":false,"keywords":[],"year":"","docid":"9000181730880511","author":"","university":"","source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html","reference":false,"similarScore":272.43323,"teacher":"","textWithDynamicClass":"quot;(out-of-bag estimate)。这样,<em class='similar 77S172I4' onmouseover=\"highlightSetter('77S172I4',false)\" onmouseout=\"highlightSetter('77S172I4',true)\">就可以采样出 T 个含有 m 个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,","datatype":"webpage","clcs":[],"similarityPercentage":"73.0%","self":false,"text":"quot;(out-of-bag estimate)。这样,<em class='similar'>就可以采样出 T 个含有 m 个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,"},{"profession":false,"keywords":[],"year":"","docid":"9000017085073411","author":"","university":"","source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404","reference":false,"similarScore":272.43323,"teacher":"","textWithDynamicClass":"样本出现在采样集中,详细见《西瓜书》第二章式2.1)。这样,<em class='similar 77S175I6' onmouseover=\"highlightSetter('77S175I6',false)\" onmouseout=\"highlightSetter('77S175I6',true)\">我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个学习器,","datatype":"webpage","clcs":[],"similarityPercentage":"73.0%","self":false,"text":"样本出现在采样集中,详细见《西瓜书》第二章式2.1)。这样,<em class='similar'>我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个学习器,"},{"profession":false,"keywords":[],"year":"","docid":"9000178809845011","author":"","university":"","source":"网页","title":"集成学习在短文本分类中的应用研究","url":"http://www.doc88.com/p%2D48247304537541.html","reference":false,"similarScore":207.43324,"teacher":"","textWithDynamicClass":"采用有放回的随机抽取,<em class='similar 77S173I1' onmouseover=\"highlightSetter('77S173I1',false)\" onmouseout=\"highlightSetter('77S173I1',true)\">抽取出 T个含有 m 个样本的训练集,</em>初始训练集中样本在整个迭代过程中可能出现多次,也可能不出现,每轮迭代用于训练的样本之间互相独立。然后基于每个采样集训练出一个基学习器,","datatype":"webpage","clcs":[],"similarityPercentage":"52.7%","self":false,"text":"采用有放回的随机抽取,<em class='similar'>抽取出 T个含有 m 个样本的训练集,</em>初始训练集中样本在整个迭代过程中可能出现多次,也可能不出现,每轮迭代用于训练的样本之间互相独立。然后基于每个采样集训练出一个基学习器,"}],"textWithDynamicClass":"<em class='similar T76I0' onmouseover=\"highlightSetter('T76I0',false)\" onmouseout=\"highlightSetter('T76I0',true)\">通过上述算法可以采样出 个含 个训练样本的采样数据集,</em>","similar_word_count":24,"text":"<em class='similar'>通过上述算法可以采样出 个含 个训练样本的采样数据集,</em>","suggest":{"synonyms":[],"keyword":["采样","训练样本","数据集"]}},{"sources":[{"profession":false,"keywords":[],"year":"2019","docid":"1000029007087911","author":"杨景朝；蒋秀明；董九志；陈云军；梅宝龙","university":"天津工业大学机械工程学院;天津工业大学天津市现代机电装备技术重点实验室;天津工业大学电气工程与自动化学院;","source":"纺织学报","title":"基于机器学习的整体穿刺加压参数预测方法","url":"","reference":false,"similarScore":195.61398,"teacher":"","textWithDynamicClass":"(Bagging)算法适用于强模型,方差较大偏差较小的情况。Bagging算法采样出T个含m个训练样本的采样集,<em class='similar 77S174I8' onmouseover=\"highlightSetter('77S174I8',false)\" onmouseout=\"highlightSetter('77S174I8',true)\">对每个采样集训练出1个基学习器,</em>回归预测中采用平均T个基学习器预测结果的方法。使用","datatype":"journal","clcs":["TS174"],"similarityPercentage":"75.8%","self":false,"text":"(Bagging)算法适用于强模型,方差较大偏差较小的情况。Bagging算法采样出T个含m个训练样本的采样集,<em class='similar'>对每个采样集训练出1个基学习器,</em>回归预测中采用平均T个基学习器预测结果的方法。使用"},{"profession":false,"keywords":[],"year":"","docid":"9000017085073411","author":"","university":"","source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404","reference":false,"similarScore":272.43323,"teacher":"","textWithDynamicClass":"样本出现在采样集中,详细见《西瓜书》第二章式2.1)。这样,我们可以采样出T个含m个训练样本的采样集,<em class='similar 77S175I7' onmouseover=\"highlightSetter('77S175I7',false)\" onmouseout=\"highlightSetter('77S175I7',true)\">然后基于每个采样集训练出一个学习器,</em><em class='similar 77S175I8' onmouseover=\"highlightSetter('77S175I8',false)\" onmouseout=\"highlightSetter('77S175I8',true)\">再将这些基学习器进行结合。</em>这就是bagging的基本流程。分类介绍2.2——","datatype":"webpage","clcs":[],"similarityPercentage":"75.6%","self":false,"text":"样本出现在采样集中,详细见《西瓜书》第二章式2.1)。这样,我们可以采样出T个含m个训练样本的采样集,<em class='similar'>然后基于每个采样集训练出一个学习器,</em><em class='similar'>再将这些基学习器进行结合。</em>这就是bagging的基本流程。分类介绍2.2——"},{"profession":false,"keywords":[],"year":"","docid":"9000181730880511","author":"","university":"","source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html","reference":false,"similarScore":272.43323,"teacher":"","textWithDynamicClass":"quot;(out-of-bag estimate)。这样,就可以采样出 T 个含有 m 个训练样本的采样集,<em class='similar 77S172I5' onmouseover=\"highlightSetter('77S172I5',false)\" onmouseout=\"highlightSetter('77S172I5',true)\">然后基于每个采样集训练出一个基学习器,</em><em class='similar 77S172I6' onmouseover=\"highlightSetter('77S172I6',false)\" onmouseout=\"highlightSetter('77S172I6',true)\">再将这些基学习器进行结合,</em>这就是 Bagging的基本流程。在对预测输出进行","datatype":"webpage","clcs":[],"similarityPercentage":"74.9%","self":false,"text":"quot;(out-of-bag estimate)。这样,就可以采样出 T 个含有 m 个训练样本的采样集,<em class='similar'>然后基于每个采样集训练出一个基学习器,</em><em class='similar'>再将这些基学习器进行结合,</em>这就是 Bagging的基本流程。在对预测输出进行"},{"profession":false,"keywords":[],"year":"","docid":"9000178809845011","author":"","university":"","source":"网页","title":"集成学习在短文本分类中的应用研究","url":"http://www.doc88.com/p%2D48247304537541.html","reference":false,"similarScore":207.43324,"teacher":"","textWithDynamicClass":"采用有放回的随机抽取,抽取出 T个含有 m 个样本的训练集,初始训练集中样本在整个迭代过程中可能出现多次,也可能不出现,每轮迭代用于训练的样本之间互相独立。<em class='similar 77S173I5' onmouseover=\"highlightSetter('77S173I5',false)\" onmouseout=\"highlightSetter('77S173I5',true)\">然后基于每个采样集训练出一个基学习器,</em><em class='similar 77S173I6' onmouseover=\"highlightSetter('77S173I6',false)\" onmouseout=\"highlightSetter('77S173I6',true)\">再将这些基学习器进行结合。</em>一般而言,在基学习器性能相差较大时宜采用加权平均法","datatype":"webpage","clcs":[],"similarityPercentage":"67.9%","self":false,"text":"采用有放回的随机抽取,抽取出 T个含有 m 个样本的训练集,初始训练集中样本在整个迭代过程中可能出现多次,也可能不出现,每轮迭代用于训练的样本之间互相独立。<em class='similar'>然后基于每个采样集训练出一个基学习器,</em><em class='similar'>再将这些基学习器进行结合。</em>一般而言,在基学习器性能相差较大时宜采用加权平均法"}],"textWithDynamicClass":"通过上述算法可以采样出 个含 个训练样本的采样数据集,<em class='similar T76I1' onmouseover=\"highlightSetter('T76I1',false)\" onmouseout=\"highlightSetter('T76I1',true)\">随后基于每个采样集训练出对应的弱学习器,</em><em class='similar T76I2' onmouseover=\"highlightSetter('T76I2',false)\" onmouseout=\"highlightSetter('T76I2',true)\">再通过将这些基学习器的学习结果进行进一步的结合。</em>","similar_word_count":42,"text":"通过上述算法可以采样出 个含 个训练样本的采样数据集,<em class='similar'>随后基于每个采样集训练出对应的弱学习器,</em><em class='similar'>再通过将这些基学习器的学习结果进行进一步的结合。</em>","suggest":{"synonyms":[],"keyword":["采样","集训","练出","学习器","学习结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000128720481111","author":"","university":"","source":"网页","title":"西瓜书学习笔记——第八章：集成学习_Andrewings-CSDN博客","url":"https://blog.csdn.net/shichensuyu/article/details/93312974","reference":false,"similarScore":120,"teacher":"","textWithDynamicClass":"单平均法Bagging的优点由Bagging算法的过程可见,<em class='similar 78S176I4' onmouseover=\"highlightSetter('78S176I4',false)\" onmouseout=\"highlightSetter('78S176I4',true)\">若基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)","datatype":"webpage","clcs":[],"similarityPercentage":"96.1%","self":false,"text":"单平均法Bagging的优点由Bagging算法的过程可见,<em class='similar'>若基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)"}],"textWithDynamicClass":"随后基于每个采样集训练出对应的弱学习器,再通过将这些基学习器的学习结果进行进一步的结合。从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar T77I0' onmouseover=\"highlightSetter('T77I0',false)\" onmouseout=\"highlightSetter('T77I0',true)\">若基学习器的计算复杂度为 ,</em>","similar_word_count":12,"text":"随后基于每个采样集训练出对应的弱学习器,再通过将这些基学习器��学习结果进行进一步的结合。从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的计算复杂度为 ,</em>","suggest":{"synonyms":[],"keyword":["若基","学习器","计算复杂度","复杂度"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":326.63126,"teacher":"","textWithDynamicClass":"m)+O(,)),考虑到采样与投票/平均过程的复杂度O(,)<em class='similar 79S178I8' onmouseover=\"highlightSetter('79S178I8',false)\" onmouseout=\"highlightSetter('79S178I8',true)\">很小,</em><em class='similar 79S178I9' onmouseover=\"highlightSetter('79S178I9',false)\" onmouseout=\"highlightSetter('79S178I9',true)\">而T通常是一个不太大的常数,</em><em class='similar 79S178I10' onmouseover=\"highlightSetter('79S178I10',false)\" onmouseout=\"highlightSetter('79S178I10',true)\">因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,","datatype":"book","clcs":["TP181"],"similarityPercentage":"66.1%","self":false,"text":"m)+O(,)),考虑到采样与投票/平均过程的复杂度O(,)<em class='similar'>很小,</em><em class='similar'>而T通常是一个不太大的常数,</em><em class='similar'>因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,"},{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":306.63123,"teacher":"","textWithDynamicClass":"非常高效的集成学习算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar 79S177I11' onmouseover=\"highlightSetter('79S177I11',false)\" onmouseout=\"highlightSetter('79S177I11',true)\">的复杂度较小,</em><em class='similar 79S177I12' onmouseover=\"highlightSetter('79S177I12',false)\" onmouseout=\"highlightSetter('79S177I12',true)\">?也是一个不太大的常数,</em><em class='similar 79S177I13' onmouseover=\"highlightSetter('79S177I13',false)\" onmouseout=\"highlightSetter('79S177I13',true)\">因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。","datatype":"webpage","clcs":[],"similarityPercentage":"55.4%","self":false,"text":"非常高效的集成学习算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar'>的复杂度较小,</em><em class='similar'>?也是一个不太大的常数,</em><em class='similar'>因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。"}],"textWithDynamicClass":"则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,<em class='similar T78I0' onmouseover=\"highlightSetter('T78I0',false)\" onmouseout=\"highlightSetter('T78I0',true)\">而 通常是较大样本数据而言是一个较小的常数,</em><em class='similar T78I1' onmouseover=\"highlightSetter('T78I1',false)\" onmouseout=\"highlightSetter('T78I1',true)\">因此,</em>","similar_word_count":22,"text":"则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,<em class='similar'>而 通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em>","suggest":{"synonyms":[],"keyword":["大样本数据","常数"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000130331965511","author":"","university":"","source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610","reference":false,"similarScore":155.58823,"teacher":"","textWithDynamicClass":"过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar 79S180I12' onmouseover=\"highlightSetter('79S180I12',false)\" onmouseout=\"highlightSetter('79S180I12',true)\">训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任","datatype":"webpage","clcs":[],"similarityPercentage":"74.5%","self":false,"text":"过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar'>训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":326.63126,"teacher":"","textWithDynamicClass":"因此,<em class='similar 79S178I11' onmouseover=\"highlightSetter('79S178I11',false)\" onmouseout=\"highlightSetter('79S178I11',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>这说明Bagging是一个很高效的集成学习算法。","datatype":"book","clcs":["TP181"],"similarityPercentage":"73.7%","self":false,"text":"因此,<em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>这说明Bagging是一个很高效的集成学习算法。"},{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":306.63123,"teacher":"","textWithDynamicClass":"因此,<em class='similar 79S177I14' onmouseover=\"highlightSetter('79S177I14',false)\" onmouseout=\"highlightSetter('79S177I14',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等","datatype":"webpage","clcs":[],"similarityPercentage":"70.1%","self":false,"text":"因此,<em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等"},{"profession":false,"keywords":[],"year":"","docid":"9000016188337811","author":"","university":"","source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449","reference":false,"similarScore":214.41183,"teacher":"","textWithDynamicClass":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar 79S181I6' onmouseover=\"highlightSetter('79S181I6',false)\" onmouseout=\"highlightSetter('79S181I6',true)\"> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由","datatype":"webpage","clcs":[],"similarityPercentage":"64.2%","self":false,"text":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar'> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由"}],"textWithDynamicClass":"而 通常是较大样本数据而言是一个较小的常数,因此,<em class='similar T78I2' onmouseover=\"highlightSetter('T78I2',false)\" onmouseout=\"highlightSetter('T78I2',true)\">训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>","similar_word_count":35,"text":"而 通常是较大样本数据而言是一个较小的常数,因此,<em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["训练","学习器","学习算法","训练所","时间复杂度","同阶"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":306.63123,"teacher":"","textWithDynamicClass":"<em class='similar 79S177I0' onmouseover=\"highlightSetter('79S177I0',false)\" onmouseout=\"highlightSetter('79S177I0',true)\">非常高效的集成学习算法,</em>算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)的复杂度较小,","datatype":"webpage","clcs":[],"similarityPercentage":"72.8%","self":false,"text":"<em class='similar'>非常高效的集成学习算法,</em>算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)的复杂度较小,"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":326.63126,"teacher":"","textWithDynamicClass":"训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,<em class='similar 79S178I12' onmouseover=\"highlightSetter('79S178I12',false)\" onmouseout=\"highlightSetter('79S178I12',true)\">这说明Bagging是一个很高效的集成学习算法。</em>另外,与标准AdaBoost只适用于二分类任务不同","datatype":"book","clcs":["TP181"],"similarityPercentage":"71.9%","self":false,"text":"训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,<em class='similar'>这说明Bagging是一个很高效的集成学习算法。</em>另外,与标准AdaBoost只适用于二分类任务不同"}],"textWithDynamicClass":"从而证明Bagging是具有较低时间复杂度、<em class='similar T78I4' onmouseover=\"highlightSetter('T78I4',false)\" onmouseout=\"highlightSetter('T78I4',true)\">较高学习效率的集成学习算法。</em>","similar_word_count":13,"text":"从而证明Bagging是具有较低时间复杂度、<em class='similar'>较高学习效率的集成学习算法。</em>","suggest":{"synonyms":[],"keyword":["学习算法","学习效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000187535336511","author":"","university":"","source":"网页","title":"基于集成学习的高分辨率遥感影像地表水体信息提取","url":"http://www.doc88.com/p%2D94859467392978.html","reference":false,"similarScore":154.11255,"teacher":"","textWithDynamicClass":"有可能继续被采集到。Bagging 对于个体学习器没有限制,<em class='similar 80S183I4' onmouseover=\"highlightSetter('80S183I4',false)\" onmouseout=\"highlightSetter('80S183I4',true)\">从偏差和方差的角度看,</em><em class='similar 80S183I5' onmouseover=\"highlightSetter('80S183I5',false)\" onmouseout=\"highlightSetter('80S183I5',true)\">Bagging 主要的关注点在于降低方差。</em>图3.2为Bagging 原理示意图。万方数据第3","datatype":"webpage","clcs":[],"similarityPercentage":"81.1%","self":false,"text":"有可能继续被采集到。Bagging 对于个体学习器没有限制,<em class='similar'>从偏差和方差的角度看,</em><em class='similar'>Bagging 主要的关注点在于降低方差。</em>图3.2为Bagging 原理示意图。万方数据第3"},{"profession":false,"keywords":[],"year":"","docid":"9000178176625511","author":"","university":"","source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516","reference":false,"similarScore":265.2664,"teacher":"","textWithDynamicClass":"即刻画了数据扰动所造成的影响,模型过拟合时会出现较大的方差,<em class='similar 80S182I5' onmouseover=\"highlightSetter('80S182I5',false)\" onmouseout=\"highlightSetter('80S182I5',true)\">从偏差和方差的角度来看,</em><em class='similar 80S182I6' onmouseover=\"highlightSetter('80S182I6',false)\" onmouseout=\"highlightSetter('80S182I6',true)\">Bagging算法主要关注如何降低方差,</em>因此它在不剪枝决策树、","datatype":"webpage","clcs":[],"similarityPercentage":"79.4%","self":false,"text":"即刻画了数据扰动所造成的影响,模型过拟合时会出现较大的方差,<em class='similar'>从偏差和方差的角度来看,</em><em class='similar'>Bagging算法主要关注如何降低方差,</em>因此它在不剪枝决策树、"}],"textWithDynamicClass":"<em class='similar T79I0' onmouseover=\"highlightSetter('T79I0',false)\" onmouseout=\"highlightSetter('T79I0',true)\">从偏差-方差分解的角度看,</em><em class='similar T79I1' onmouseover=\"highlightSetter('T79I1',false)\" onmouseout=\"highlightSetter('T79I1',true)\">由于Bagging学习算法的主要关注点在于如何降低方差,</em>","similar_word_count":33,"text":"<em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>由于Bagging学习算法的主要关注点在于如何降低方差,</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["偏差","方差分解","学习算法","关注点","如何降低","方差"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000178176625511","author":"","university":"","source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516","reference":false,"similarScore":265.2664,"teacher":"","textWithDynamicClass":"Bagging算法主要关注如何降低方差,<em class='similar 80S182I7' onmouseover=\"highlightSetter('80S182I7',false)\" onmouseout=\"highlightSetter('80S182I7',true)\">因此它在不剪枝决策树、</em><em class='similar 80S182I8' onmouseover=\"highlightSetter('80S182I8',false)\" onmouseout=\"highlightSetter('80S182I8',true)\">神经网络等容易受到样本实例扰动的学习器上效果更为明显。</em>而Bagging是对多个弱学习器求平均,这样能减少","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"Bagging算法主要关注如何降低方差,<em class='similar'>因此它在不剪枝决策树、</em><em class='similar'>神经网络等容易受到样本实例扰动的学习器上效果更为明显。</em>而Bagging是对多个弱学习器求平均,这样能减少"}],"textWithDynamicClass":"从偏差-方差分解的角度看,由于Bagging学习算法的主要关注点在于如何降低方差,<em class='similar T79I2' onmouseover=\"highlightSetter('T79I2',false)\" onmouseout=\"highlightSetter('T79I2',true)\">因此它在受样本的干扰较大的学习器上的优秀表现更为明显。</em>","similar_word_count":26,"text":"从偏差-方差分解的角度看,由于Bagging学习算法的主要关注点在于如何降低方差,<em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显。</em>","suggest":{"synonyms":[],"keyword":["学习器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015763116111","author":"","university":"","source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848","reference":false,"similarScore":474.7611,"teacher":"","textWithDynamicClass":"样本全集,从根节点到每个叶节点的路径��应了一个判断测试序列。<em class='similar 81S184I3' onmouseover=\"highlightSetter('81S184I3',false)\" onmouseout=\"highlightSetter('81S184I3',true)\">决策树学习的目的是为了产生一棵泛化能力强,</em>即处理未见示例能力强的决策树,","datatype":"webpage","clcs":[],"similarityPercentage":"80.0%","self":false,"text":"样本全集,从根节点到每个叶节点的路径对应了一个判断测试序列。<em class='similar'>决策树学习的目的是为了产生一棵泛化能力强,</em>即处理未见示例能力强的决策树,"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000575029411","author":"连政","university":"","source":"大学生论文联合库","title":"体育新闻数据预处理方法研究","url":"","reference":false,"similarScore":424.92303,"teacher":"","textWithDynamicClass":"样本全集。从根结点到每个叶结点的路经对应了一个判断测试序列。<em class='similar 81S185I3' onmouseover=\"highlightSetter('81S185I3',false)\" onmouseout=\"highlightSetter('81S185I3',true)\">决策树学习的目的是为了产生一棵泛化能力强,</em>即处理未见示例能力强的决策时,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"80.0%","self":false,"text":"样本全集。从根结点到每个叶结点的路经对应了一个判断测试序列。<em class='similar'>决策树学习的目的是为了产生一棵泛化能力强,</em>即处理未见示例能力强的决策时,"},{"profession":false,"keywords":[],"year":"","docid":"9000142513180911","author":"","university":"","source":"网页","title":"吟游诗人——吟唱生命的不朽__吟游诗人_CSDN博客-奇葩问题集合,机器学习,python领域博主","url":"https://blog.csdn.net/qq_32623363","reference":false,"similarScore":191.07693,"teacher":"","textWithDynamicClass":"叶节点。叶节点对应于决策结果,其他节点则对应于一个属性测试。<em class='similar 81S189I6' onmouseover=\"highlightSetter('81S189I6',false)\" onmouseout=\"highlightSetter('81S189I6',true)\">决策树学习的目的是产生一颗泛化能力强,</em>即处理未见示例能力强的决策树。","datatype":"webpage","clcs":[],"similarityPercentage":"73.8%","self":false,"text":"叶节点。叶节点对应于决策结果,其他节点则对应于一个属性测试。<em class='similar'>决策树学习的目的是产生一颗泛化能力强,</em>即处理未见示例能力强的决策树。"},{"profession":false,"keywords":[],"year":"","docid":"9000082045499811","author":"","university":"","source":"网页","title":"机器学习——首阅笔记（持续更新）","url":"https://blog.csdn.net/wangyuxi__/article/details/81037836","reference":false,"similarScore":441.0769,"teacher":"","textWithDynamicClass":"三类做法:第一类欠采样,第二类过采样,第三类,阈值移动,即。<em class='similar 81S186I8' onmouseover=\"highlightSetter('81S186I8',false)\" onmouseout=\"highlightSetter('81S186I8',true)\">第四章决策树决策树学习的目的是为了产生一颗泛化能力强,</em>即处理未见示例能力强的决策树,","datatype":"webpage","clcs":[],"similarityPercentage":"70.2%","self":false,"text":"三类做法:第一类欠采样,第二类过采样,第三类,阈值移动,即。<em class='similar'>第四章决策树决策树学习的目的是为了产生一颗泛化能力强,</em>即处理未见示例能力强的决策树,"},{"profession":false,"keywords":[],"year":"","docid":"9000151805555011","author":"","university":"","source":"网页","title":"经典机器学习系列之【决策树详解】 &amp;#8211; Python量化投资","url":"https://www.lizenghai.com/archives/46935.html","reference":false,"similarScore":271.9699,"teacher":"","textWithDynamicClass":"策结界。  从根结点到每个叶子结点的路径对应了一条决策规则。<em class='similar 81S187I6' onmouseover=\"highlightSetter('81S187I6',false)\" onmouseout=\"highlightSetter('81S187I6',true)\">决策树学习的基本算法  决策树学习的目的是为了构造一颗泛化能力强,</em>即在测试样本上就有很好表现的决策树。基本算法遵循自顶向下、","datatype":"webpage","clcs":[],"similarityPercentage":"61.1%","self":false,"text":"策结界。  从根结点到每个叶子结点的路径对应了一条决策规则。<em class='similar'>决策树学习的基本算法  决策树学习的目的是为了构造一颗泛化能力强,</em>即在测试样本上就有很好表现的决策树。基本算法遵循自顶向下、"},{"profession":false,"keywords":[],"year":"","docid":"9000201574312911","author":"","university":"","source":"网页","title":"第6章：决策树学习-莲山文库","url":"https://www.5ykj.com/wenku/d-1080206-6.html","reference":false,"similarScore":266.0681,"teacher":"","textWithDynamicClass":"样本。从根结点到每个叶子结点的路径对应了一条决策规则。一、<em class='similar 81S188I4' onmouseover=\"highlightSetter('81S188I4',false)\" onmouseout=\"highlightSetter('81S188I4',true)\">决策树学习基础知识决策树学习的目的就是为了构造一棵泛化能力强,</em>即处理待测样本能力强的决策树,","datatype":"webpage","clcs":[],"similarityPercentage":"56.7%","self":false,"text":"样本。从根结点到每个叶子结点的路径对应了一条决策规则。一、<em class='similar'>决策树学习基础知识决策树学习的目的就是为了构造一棵泛化能力强,</em>即处理待测样本能力强的决策树,"}],"textWithDynamicClass":"<em class='similar T80I0' onmouseover=\"highlightSetter('T80I0',false)\" onmouseout=\"highlightSetter('T80I0',true)\">决策树是一种常见的机器学习算法,</em><em class='similar T80I1' onmouseover=\"highlightSetter('T80I1',false)\" onmouseout=\"highlightSetter('T80I1',true)\">决策树学习的目的是为了构造具有泛化能力强,</em>","similar_word_count":35,"text":"<em class='similar'>决策树是一种常见的机器学习算法,</em><em class='similar'>决策树学习的目的是为了构造具有泛化能力强,</em>","suggest":{"synonyms":[],"keyword":["决策树","机器学习算法","学习的目的","泛化能力","泛化","决策树学习"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015763116111","author":"","university":"","source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848","reference":false,"similarScore":474.7611,"teacher":"","textWithDynamicClass":"样本全集,从根节点到每个叶节点的路径对应了一个判断测试序列。决策树学习的目的是为了产生一棵泛化能力强,<em class='similar 81S184I4' onmouseover=\"highlightSetter('81S184I4',false)\" onmouseout=\"highlightSetter('81S184I4',true)\">即处理未见示例能力强的决策树,</em>其基本流程遵循简单且直观的分而治之策略。","datatype":"webpage","clcs":[],"similarityPercentage":"80.6%","self":false,"text":"样本全集,从根节点到每个叶节点的路径对应了一个判断测试序列。决策树学习的目的是为了产生一棵泛化能力强,<em class='similar'>即处理未见示例能力强的决策树,</em>其基本流程遵循简单且直观的分而治之策略。"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000575029411","author":"连政","university":"","source":"大学生论文联合库","title":"体育新闻数据预处理方法研究","url":"","reference":false,"similarScore":424.92303,"teacher":"","textWithDynamicClass":"样本全集。从根结点到每个叶结点的路经对应了一个判断测试序列。决策树学习的目的是为了产生一棵泛化能力强,<em class='similar 81S185I4' onmouseover=\"highlightSetter('81S185I4',false)\" onmouseout=\"highlightSetter('81S185I4',true)\">即处理未见示例能力强的决策时,</em>其基本流程遵循简单且直观的\"分而治之\"策略。","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"77.6%","self":false,"text":"样本全集。从根结点到每个叶结点的路经对应了一个判断测试序列。决策树学习的目的是为了产生一棵泛化能力强,<em class='similar'>即处理未见示例能力强的决策时,</em>其基本流程遵循简单且直观的\"分而治之\"策略。"},{"profession":false,"keywords":[],"year":"","docid":"9000142513180911","author":"","university":"","source":"网页","title":"吟游诗人——吟唱生命的不朽__吟游诗人_CSDN博客-奇葩问题集合,机器学习,python领域博主","url":"https://blog.csdn.net/qq_32623363","reference":false,"similarScore":191.07693,"teacher":"","textWithDynamicClass":"叶节点。叶节点对应于决策结果,其他节点则对应于一个属性测试。决策树学习的目的是产生一颗泛化能力强,<em class='similar 81S189I7' onmouseover=\"highlightSetter('81S189I7',false)\" onmouseout=\"highlightSetter('81S189I7',true)\">即处理未见示例能力强的决策树。</em>2020-12-2018:31:4341原创pyt","datatype":"webpage","clcs":[],"similarityPercentage":"76.9%","self":false,"text":"叶节点。叶节点对应于决策结果,其他节点则对应于一个属性测试。决策树学习的目的是产生一颗泛化能力强,<em class='similar'>即处理未见示例能力强的决策树。</em>2020-12-2018:31:4341原创pyt"},{"profession":false,"keywords":[],"year":"","docid":"9000082045499811","author":"","university":"","source":"网页","title":"机器学习——首阅笔记（持续更新）","url":"https://blog.csdn.net/wangyuxi__/article/details/81037836","reference":false,"similarScore":441.0769,"teacher":"","textWithDynamicClass":"三类做法:第一类欠采样,第二类过采样,第三类,阈值移动,即。第四章决策树决策树学习的目的是为了产生一颗泛化能力强,<em class='similar 81S186I9' onmouseover=\"highlightSetter('81S186I9',false)\" onmouseout=\"highlightSetter('81S186I9',true)\">即处理未见示例能力强的决策树,</em>其基本流程遵循简单且直观的\"分而治之\"策略。","datatype":"webpage","clcs":[],"similarityPercentage":"74.3%","self":false,"text":"三类做法:第一类欠采样,第二类过采样,第三类,阈值移动,即。第四章决策树决策树学习的目的是为了产生一颗泛化能力强,<em class='similar'>即处理未见示例能力强的决策树,</em>其基本流程遵循简单且直观的\"分而治之\"策略。"},{"profession":false,"keywords":[],"year":"","docid":"9000201574312911","author":"","university":"","source":"网页","title":"第6章：决策树学习-莲山文库","url":"https://www.5ykj.com/wenku/d-1080206-6.html","reference":false,"similarScore":266.0681,"teacher":"","textWithDynamicClass":"样本。从根结点到每个叶子结点的路径对应了一条决策规则。一、决策树学习基础知识决策树学习的目的就是为了构造一棵泛化能力强,<em class='similar 81S188I5' onmouseover=\"highlightSetter('81S188I5',false)\" onmouseout=\"highlightSetter('81S188I5',true)\">即处理待测样本能力强的决策树,</em>基本算法遵循自顶向下、","datatype":"webpage","clcs":[],"similarityPercentage":"56.0%","self":false,"text":"样本。从根结点到每个叶子结点的路径对应了一条决策规则。一、决策树学习基础知识决策树学习的目的就是为了构造一棵泛化能力强,<em class='similar'>即处理待测样本能力强的决策树,</em>基本算法遵循自顶向下、"}],"textWithDynamicClass":"决策树是一种常见的机器学习算法,决策树学习的目的是为了构造具有泛化能力强,<em class='similar T80I2' onmouseover=\"highlightSetter('T80I2',false)\" onmouseout=\"highlightSetter('T80I2',true)\">处理未见示例能力强的二叉树,</em><em class='similar T80I3' onmouseover=\"highlightSetter('T80I3',false)\" onmouseout=\"highlightSetter('T80I3',true)\">该树能够对泛化样本进行正确且合理的决策,</em>","similar_word_count":32,"text":"决策树是一种常见的机器学习算法,决策树学习的目的是为了构造具有泛化能力强,<em class='similar'>处理未见示例能力强的二叉树,</em><em class='similar'>该树能够对泛化样本进行正确且合理的决策,</em>","suggest":{"synonyms":[],"keyword":["未见","示例","二叉树","泛化"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015763116111","author":"","university":"","source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848","reference":false,"similarScore":474.7611,"teacher":"","textWithDynamicClass":"即处理未见示例能力强的决策树,<em class='similar 81S184I5' onmouseover=\"highlightSetter('81S184I5',false)\" onmouseout=\"highlightSetter('81S184I5',true)\">其基本流程遵循简单且直观的分而治之策略。</em>决策树基本算法如图所示:","datatype":"webpage","clcs":[],"similarityPercentage":"87.6%","self":false,"text":"即处理未见示例能力强的决策树,<em class='similar'>其基本流程遵循简单且直观的分而治之策略。</em>决策树基本算法如图所示:"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000575029411","author":"连政","university":"","source":"大学生论文联合库","title":"体育新闻数据预处理方法研究","url":"","reference":false,"similarScore":424.92303,"teacher":"","textWithDynamicClass":"即处理未见示例能力强的决策时,<em class='similar 81S185I5' onmouseover=\"highlightSetter('81S185I5',false)\" onmouseout=\"highlightSetter('81S185I5',true)\">其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em>决策树","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"85.7%","self":false,"text":"即处理未见示例能力强的决策时,<em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em>决策树"},{"profession":false,"keywords":[],"year":"","docid":"9000082045499811","author":"","university":"","source":"网页","title":"机器学习——首阅笔记（持续更新）","url":"https://blog.csdn.net/wangyuxi__/article/details/81037836","reference":false,"similarScore":441.0769,"teacher":"","textWithDynamicClass":"即处理未见示例能力强的决策树,<em class='similar 81S186I10' onmouseover=\"highlightSetter('81S186I10',false)\" onmouseout=\"highlightSetter('81S186I10',true)\">其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em>决策树","datatype":"webpage","clcs":[],"similarityPercentage":"83.0%","self":false,"text":"即处理未见示例能力强的决策树,<em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em>决策树"},{"profession":false,"keywords":[],"year":"","docid":"9000151805555011","author":"","university":"","source":"网页","title":"经典机器学习系列之【决策树详解】 &amp;#8211; Python量化投资","url":"https://www.lizenghai.com/archives/46935.html","reference":false,"similarScore":271.9699,"teacher":"","textWithDynamicClass":"策结界。  从根结点到每个叶子结点的路径对应了一条决策规则。决策树学习的基本算法  决策树学习的目的是为了构造一颗泛化能力强,即在测试样本上就有很好表现的决策树。<em class='similar 81S187I8' onmouseover=\"highlightSetter('81S187I8',false)\" onmouseout=\"highlightSetter('81S187I8',true)\">基本算法遵循自顶向下、</em><em class='similar 81S187I9' onmouseover=\"highlightSetter('81S187I9',false)\" onmouseout=\"highlightSetter('81S187I9',true)\">分而治之的策略,</em>具体步骤有以下几点:选择最好的属性作为测试属性并创","datatype":"webpage","clcs":[],"similarityPercentage":"61.5%","self":false,"text":"策结界。  从根结点到每个叶子结点的路径对应了一条决策规则。决策树学习的基本算法  决策树学习的目的是为了构造一颗泛化能力强,即在测试样本上就有很好表现的决策树。<em class='similar'>基本算法遵循自顶向下、</em><em class='similar'>分而治之的策略,</em>具��步骤有以下几点:选择最好的属性作为测试属性并创"},{"profession":false,"keywords":[],"year":"","docid":"9000201574312911","author":"","university":"","source":"网页","title":"第6章：决策树学习-莲山文库","url":"https://www.5ykj.com/wenku/d-1080206-6.html","reference":false,"similarScore":266.0681,"teacher":"","textWithDynamicClass":"即处理待测样本能力强的决策树,<em class='similar 81S188I6' onmouseover=\"highlightSetter('81S188I6',false)\" onmouseout=\"highlightSetter('81S188I6',true)\">基本算法遵循自顶向下、</em><em class='similar 81S188I7' onmouseover=\"highlightSetter('81S188I7',false)\" onmouseout=\"highlightSetter('81S188I7',true)\">分而治之的策略,</em>具体步骤如下:1.选择最好的属性作为测试属性并创建","datatype":"webpage","clcs":[],"similarityPercentage":"57.5%","self":false,"text":"即处理待测样本能力强的决策树,<em class='similar'>基本算法遵循自顶向下、</em><em class='similar'>分而治之的策略,</em>具体步骤如下:1.选择最好的属性作为测试属性并创建"}],"textWithDynamicClass":"处理未见示例能力强的二叉树,该树能够对泛化样本进行正确且合理的决策,<em class='similar T80I4' onmouseover=\"highlightSetter('T80I4',false)\" onmouseout=\"highlightSetter('T80I4',true)\">其基本流程遵循简单且直观的&quot;分而治之&quot;策略,</em>","similar_word_count":19,"text":"处理未见示例能力强的二叉树,该树能够对泛化样本进行正确且合理的决策,<em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略,</em>","suggest":{"synonyms":[{"synonyms":["直觉"],"keyword":"直观"}],"keyword":["基本流程","直观","分而治之"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015763116111","author":"","university":"","source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848","reference":false,"similarScore":474.7611,"teacher":"","textWithDynamicClass":"其基本流程遵循简单且直观的分而治之策略。<em class='similar 81S184I6' onmouseover=\"highlightSetter('81S184I6',false)\" onmouseout=\"highlightSetter('81S184I6',true)\">决策树基本算法如图所示:</em>决策树的生成是一个递归过程,在决策树基本算法中,有","datatype":"webpage","clcs":[],"similarityPercentage":"84.6%","self":false,"text":"其基本流程遵循简单且直观的分而治之策略。<em class='similar'>决策树基本算法如图所示:</em>决策树的生成是一个递归过程,在决策树基本算法中,有"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000575029411","author":"连政","university":"","source":"大学生论文联合库","title":"体育新闻数据预处理方法研究","url":"","reference":false,"similarScore":424.92303,"teacher":"","textWithDynamicClass":"其基本流程遵循简单且直观的\"分而治之\"策略。<em class='similar 81S185I6' onmouseover=\"highlightSetter('81S185I6',false)\" onmouseout=\"highlightSetter('81S185I6',true)\">决策树</em>的生成是一个递归过程。在决策树基本算法中,有三种情","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"76.1%","self":false,"text":"其基本流程遵循简单且直观的\"分而治之\"策略。<em class='similar'>决策树</em>的生成是一个递归过程。在决策树基本算法中,有三种情"},{"profession":false,"keywords":[],"year":"","docid":"9000082045499811","author":"","university":"","source":"网页","title":"机器学习——首阅笔记（持续更新）","url":"https://blog.csdn.net/wangyuxi__/article/details/81037836","reference":false,"similarScore":441.0769,"teacher":"","textWithDynamicClass":"其基本流程遵循简单且直观的\"分而治之\"策略。<em class='similar 81S186I11' onmouseover=\"highlightSetter('81S186I11',false)\" onmouseout=\"highlightSetter('81S186I11',true)\">决策树</em>是一个递归的过程。决策树最关键的是选择最优划分属性","datatype":"webpage","clcs":[],"similarityPercentage":"73.9%","self":false,"text":"其基本流程遵循简单且直观的\"分而治之\"策略。<em class='similar'>决策树</em>是一个递归的过程。决策树最关键的是选择最优划分属性"}],"textWithDynamicClass":"其基本流程遵循简单且直观的\"分而治之\"策略,<em class='similar T80I5' onmouseover=\"highlightSetter('T80I5',false)\" onmouseout=\"highlightSetter('T80I5',true)\">决策树学习基本算法伪代码实现如图2.23所示。</em>","similar_word_count":20,"text":"其基本流程遵循简单且直观的\"分而治之\"策略,<em class='similar'>决策树学习基本算法伪代码实现如图2.23所示。</em>","suggest":{"synonyms":[],"keyword":["决策树","决策树学习","基本算法","代码实现","2.23所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000178050844211","author":"","university":"","source":"网页","title":"2019年03月_X_dmword的博客_CSDN博客","url":"https://blog.csdn.net/x_dmword/article/month/2019/03","reference":false,"similarScore":160.27776,"teacher":"","textWithDynamicClass":"9-03-1815:32:49781原创决策树划分与剪枝1、<em class='similar 82S190I3' onmouseover=\"highlightSetter('82S190I3',false)\" onmouseout=\"highlightSetter('82S190I3',true)\">决策树划分选择决策树学习的关键——如何选择最优划分属性。</em>我们所期望的是,随着划分过程的不断进行,希望决策树的分支结点所包含的的样本尽可能属于同一类别,即结点的\"纯度\"要尽可能的高。","datatype":"webpage","clcs":[],"similarityPercentage":"45.9%","self":false,"text":"9-03-1815:32:49781原创决策树划分与剪枝1、<em class='similar'>决策树划分选择决策树学习的关键——如何选择最优划分属性。</em>我们所期望的是,随着划分过程的不断进行,希望决策树的分支结点所包含的的样本尽可能属于同一类别,即结点的\"纯度\"要尽可能的高。"}],"textWithDynamicClass":"显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。<em class='similar T81I1' onmouseover=\"highlightSetter('T81I1',false)\" onmouseout=\"highlightSetter('T81I1',true)\">在决策树的决策过程中我们更关心的肯定是如何划分,</em>","similar_word_count":23,"text":"显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。<em class='similar'>在决策树的决策过程中我们更关心的肯定是如何划分,</em>","suggest":{"synonyms":[],"keyword":["决策树","决策过程"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000195491314411","author":"","university":"","source":"网页","title":"基于特征工程概率估计方法的研究","url":"https://blog.51cto.com/u_15310950/3173426","reference":false,"similarScore":136.92308,"teacher":"","textWithDynamicClass":":最优划分属性,结点的&quot;纯度&quot;越来越高。<em class='similar 82S191I7' onmouseover=\"highlightSetter('82S191I7',false)\" onmouseout=\"highlightSetter('82S191I7',true)\">即如何选择最优划分属性,</em>一般而言,随着划分过程不断进行,我们希望决策树的分支节点所包含的样本尽可能属于同一类别,<em class='similar 82S191I11' onmouseover=\"highlightSetter('82S191I11',false)\" onmouseout=\"highlightSetter('82S191I11',true)\">即结点的&quot;纯度&quot;越来越高。</em>支持向量机(SVM)是支持(或支撑)平面上把两类类","datatype":"webpage","clcs":[],"similarityPercentage":"80.1%","self":false,"text":":最优划分属性,结点的&quot;纯度&quot;越来越高。<em class='similar'>即如何选择最优划分属性,</em>一般而言,随着划分过程不断进行,我们希望决策树的分支节点所包含的样本尽可能属于同一类别,<em class='similar'>即结点的&quot;纯度&quot;越来越高。</em>支持向量机(SVM)是支持(或支撑)平面上把两类类"},{"profession":false,"keywords":[],"year":"","docid":"9000178050844211","author":"","university":"","source":"网页","title":"2019年03月_X_dmword的博客_CSDN博客","url":"https://blog.csdn.net/x_dmword/article/month/2019/03","reference":false,"similarScore":160.27776,"teacher":"","textWithDynamicClass":"9-03-1815:32:49781原创决策树划分与剪枝1、<em class='similar 82S190I3' onmouseover=\"highlightSetter('82S190I3',false)\" onmouseout=\"highlightSetter('82S190I3',true)\">决策树划分选择决策树学习的关键——如何选择最优划分属性。</em>我们所期望的是,随着划分过程的不断进行,希望决策树的分支结点所包含的的样本尽可能属于同一类别,<em class='similar 82S190I7' onmouseover=\"highlightSetter('82S190I7',false)\" onmouseout=\"highlightSetter('82S190I7',true)\">即结点的&quot;纯度&quot;要尽可能的高。</em>1.1信息增益要说信息增益,","datatype":"webpage","clcs":[],"similarityPercentage":"54.9%","self":false,"text":"9-03-1815:32:49781原创决策树划分与剪枝1、<em class='similar'>决策树划分选择决策树学习的关键——如何选择最优划分属性。</em>我们所期望的是,随着划分过程的不断进行,希望决策树的分支结点所包含的的样本尽可能属于同一类别,<em class='similar'>即结点的&quot;纯度&quot;要尽可能的高。</em>1.1信息增益要说信息增益,"}],"textWithDynamicClass":"在决策树的决策过程中我们更关心的肯定是如何划分,<em class='similar T81I2' onmouseover=\"highlightSetter('T81I2',false)\" onmouseout=\"highlightSetter('T81I2',true)\">或者说如何选择最优划分属性,</em><em class='similar T81I3' onmouseover=\"highlightSetter('T81I3',false)\" onmouseout=\"highlightSetter('T81I3',true)\">即结点的&quot;纯度&quot;,</em>","similar_word_count":19,"text":"在决策树的决策过程中我们更关心的肯定是如何划分,<em class='similar'>或者说如何选择最优划分属性,</em><em class='similar'>即结点的&quot;纯度&quot;,</em>","suggest":{"synonyms":[],"keyword":["如何选择","最优划分","结点","纯度"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000503259011","author":"","university":"","source":"大学生论文联合库","title":"贝叶斯分类器的性能比较","url":"","reference":false,"similarScore":139.23076,"teacher":"","textWithDynamicClass":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar 83S199I6' onmouseover=\"highlightSetter('83S199I6',false)\" onmouseout=\"highlightSetter('83S199I6',true)\">这就是Bagging算法的基本思路。</em><em class='similar 83S199I7' onmouseover=\"highlightSetter('83S199I7',false)\" onmouseout=\"highlightSetter('83S199I7',true)\">随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"82.7%","self":false,"text":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar'>这就是Bagging算法的基本思路。</em><em class='similar'>随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森"}],"textWithDynamicClass":"<em class='similar T82I0' onmouseover=\"highlightSetter('T82I0',false)\" onmouseout=\"highlightSetter('T82I0',true)\">随机森林是Bagging的变体,</em><em class='similar T82I1' onmouseover=\"highlightSetter('T82I1',false)\" onmouseout=\"highlightSetter('T82I1',true)\">是基于Bagging的算法思路扩展而来,</em>","similar_word_count":24,"text":"<em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>","suggest":{"synonyms":[],"keyword":["随机森林","变体"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082132296211","author":"","university":"","source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463","reference":false,"similarScore":229.30557,"teacher":"","textWithDynamicClass":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar 83S194I8' onmouseover=\"highlightSetter('83S194I8',false)\" onmouseout=\"highlightSetter('83S194I8',true)\">其在以决策树作为基学习器构建Bagging集成的基础上,</em><em class='similar 83S194I9' onmouseover=\"highlightSetter('83S194I9',false)\" onmouseout=\"highlightSetter('83S194I9',true)\">进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的","datatype":"webpage","clcs":[],"similarityPercentage":"75.3%","self":false,"text":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar'>其在以决策树作为基学习器构建Bagging集成的基础上,</em><em class='similar'>进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的"},{"profession":false,"keywords":[],"year":"","docid":"9000157307953211","author":"","university":"","source":"网页","title":"模型集成－三个“臭皮匠”顶一个“诸葛亮” | MXQ","url":"http://activepony.com/shen-du-xue-xi/ji-chu-zhi-shi/mo-xing-ji-cheng/","reference":false,"similarScore":215.55554,"teacher":"","textWithDynamicClass":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar 83S196I6' onmouseover=\"highlightSetter('83S196I6',false)\" onmouseout=\"highlightSetter('83S196I6',true)\">随机森林在以决策树为基学习器构建Bagging的基础上,</em><em class='similar 83S196I7' onmouseover=\"highlightSetter('83S196I7',false)\" onmouseout=\"highlightSetter('83S196I7',true)\">进一步在决策树的训练过程中引入随机属性选择。</em>\\n具体来说,传统决策树在选择划分属性时是在当前节","datatype":"webpage","clcs":[],"similarityPercentage":"73.8%","self":false,"text":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar'>随机森林在以决策树为基学习器构建Bagging的基础上,</em><em class='similar'>进一步在决策树的训练过程中引入随机属性选择。</em>\\n具体来说,传统决策树在选择划分属性时是在当前节"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":200.55554,"teacher":"","textWithDynamicClass":"Breiman ,2001)是Bagging的一个扩展变体。<em class='similar 83S197I8' onmouseover=\"highlightSetter('83S197I8',false)\" onmouseout=\"highlightSetter('83S197I8',true)\">RF在以决策树为基学习器构建Bagging集成的基础上,</em><em class='similar 83S197I9' onmouseover=\"highlightSetter('83S197I9',false)\" onmouseout=\"highlightSetter('83S197I9',true)\">进一步在决策树的训练过程中引人了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前节点的","datatype":"book","clcs":["TP181"],"similarityPercentage":"73.8%","self":false,"text":"Breiman ,2001)是Bagging的一个扩展变体。<em class='similar'>RF在以决策树为基学习器构建Bagging集成的基础上,</em><em class='similar'>进一步在决策树的训练过程中引人了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前节点的"},{"profession":false,"keywords":[],"year":"2020","docid":"1000029360914111","author":"冯静达；焦学军；李启杰；郭娅美；杨涵钧；楚洪祚","university":"中国航天员科研训练中心；中国人民解放军航天工程大学；","source":"航天医学与医学工程","title":"基于心率和呼吸特征结合的睡眠分期研究","url":"","reference":false,"similarScore":168.88892,"teacher":"","textWithDynamicClass":"ndom forest,RF)是另外一种集成学习的典型算法。<em class='similar 83S198I7' onmouseover=\"highlightSetter('83S198I7',false)\" onmouseout=\"highlightSetter('83S198I7',true)\">RF以决策���为基学习器构建Bagging集成学习器,</em><em class='similar 83S198I8' onmouseover=\"highlightSetter('83S198I8',false)\" onmouseout=\"highlightSetter('83S198I8',true)\">并进一步在决策树的训练过程中引入随机属性选择。</em>传统决策树划分属性时在当前结点中择优,RF中,对决","datatype":"journal","clcs":["TN911.6;R740"],"similarityPercentage":"70.8%","self":false,"text":"ndom forest,RF)是另外一种集成学习的典型算法。<em class='similar'>RF以决策树为基学习器构建Bagging集成学习器,</em><em class='similar'>并进一步在决策树的训练过程中引入随机属性选择。</em>传统决策树划分属性时在当前结点中择优,RF中,对决"}],"textWithDynamicClass":"其本质也是一种由多个弱学习器(决策树)所集成的强学习器。<em class='similar T82I5' onmouseover=\"highlightSetter('T82I5',false)\" onmouseout=\"highlightSetter('T82I5',true)\">RF在通过在训练过程中引入随机属性选择,</em><em class='similar T82I6' onmouseover=\"highlightSetter('T82I6',false)\" onmouseout=\"highlightSetter('T82I6',true)\">并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>","similar_word_count":43,"text":"其本质也是一种由多个弱学习器(决策树)所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入随机属性选择,</em><em class='similar'>并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>","suggest":{"synonyms":[],"keyword":["学习器","决策树","训练过程","属性选择","得来"]}},{"sources":[{"profession":false,"keywords":[],"year":"2018","docid":"1000027943830211","author":"钟海燕；李玲；麦雄发；王雨","university":"广西师范学院数学与统计科学学院；广西师范学院北部湾环境演变与资源利用教育部重点实验室；","source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":"","reference":false,"similarScore":875.8894,"teacher":"","textWithDynamicClass":"树的训练过程中引入了随机属性选择。<em class='similar 84S201I1' onmouseover=\"highlightSetter('84S201I1',false)\" onmouseout=\"highlightSetter('84S201I1',true)\">具体来说,</em><em class='similar 84S201I2' onmouseover=\"highlightSetter('84S201I2',false)\" onmouseout=\"highlightSetter('84S201I2',true)\">传统决策树在选择划分属性时是在当前节点的属性集合</em>(假定有d个属性)中选择一个最优属性;","datatype":"journal","clcs":["P457.6"],"similarityPercentage":"91.2%","self":false,"text":"树的训练过程中引入了随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前节点的属性集合</em>(假定有d个属性)中选择一个最优属性;"},{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar 84S200I1' onmouseover=\"highlightSetter('84S200I1',false)\" onmouseout=\"highlightSetter('84S200I1',true)\">具体来说,</em><em class='similar 84S200I2' onmouseover=\"highlightSetter('84S200I2',false)\" onmouseout=\"highlightSetter('84S200I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性,","datatype":"webpage","clcs":[],"similarityPercentage":"87.7%","self":false,"text":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性,"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"过程中引入了随机属性选择。<em class='similar 84S202I1' onmouseover=\"highlightSetter('84S202I1',false)\" onmouseout=\"highlightSetter('84S202I1',true)\">具体来说,</em><em class='similar 84S202I2' onmouseover=\"highlightSetter('84S202I2',false)\" onmouseout=\"highlightSetter('84S202I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性;","datatype":"webpage","clcs":[],"similarityPercentage":"87.7%","self":false,"text":"过程中引入了随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性;"},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":806.7846,"teacher":"","textWithDynamicClass":"属性集合也引入了随机属性选择.<em class='similar 84S203I1' onmouseover=\"highlightSetter('84S203I1',false)\" onmouseout=\"highlightSetter('84S203I1',true)\">具体来说,</em><em class='similar 84S203I2' onmouseover=\"highlightSetter('84S203I2',false)\" onmouseout=\"highlightSetter('84S203I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在RF中,","datatype":"webpage","clcs":[],"similarityPercentage":"76.3%","self":false,"text":"属性集合也引入了随机属性选择.<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在RF中,"},{"profession":false,"keywords":[],"year":"2019","docid":"1000029331339811","author":"刘博；卢婷婷；陈国磊；赵璐","university":"中国民航大学空中交通管理学院；","source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":"","reference":false,"similarScore":644.9099,"teacher":"","textWithDynamicClass":"实现的决策树群体模型.随机森林在实现上不仅使用训练集的子集,<em class='similar 84S204I5' onmouseover=\"highlightSetter('84S204I5',false)\" onmouseout=\"highlightSetter('84S204I5',true)\">同时在决策树建立树节点时只在特征集的子集中挑选.</em><em class='similar 84S204I6' onmouseover=\"highlightSetter('84S204I6',false)\" onmouseout=\"highlightSetter('84S204I6',true)\">传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在随机森林中,对基决策树的每个结点,","datatype":"journal","clcs":["TP181"],"similarityPercentage":"73.1%","self":false,"text":"实现的决策树群体模型.随机森林在实现上不仅使用训练集的子集,<em class='similar'>同时在决策树建立树节点时只在特征集的子集中挑选.</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在随机森林中,对基决策树的每个结点,"},{"profession":false,"keywords":[],"year":"","docid":"9000178628566211","author":"","university":"","source":"网页","title":"T1.随机森林算法梳理_qq_42271047的博客-CSDN博客","url":"https://blog.csdn.net/qq_42271047/article/details/88343431#insertcode","reference":false,"similarScore":728.7846,"teacher":"","textWithDynamicClass":"<em class='similar 84S205I0' onmouseover=\"highlightSetter('84S205I0',false)\" onmouseout=\"highlightSetter('84S205I0',true)\">性时是在当前结点的属性集合</em>(假定有 d 个属性)中选择一个最优属性;","datatype":"webpage","clcs":[],"similarityPercentage":"61.0%","self":false,"text":"<em class='similar'>性时是在当前结点的属性集合</em>(假定有 d 个属性)中选择一个最优属性;"}],"textWithDynamicClass":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar T83I0' onmouseover=\"highlightSetter('T83I0',false)\" onmouseout=\"highlightSetter('T83I0',true)\">具体来说,</em><em class='similar T83I1' onmouseover=\"highlightSetter('T83I1',false)\" onmouseout=\"highlightSetter('T83I1',true)\">传统决策树在选择划分属性时是在当前树节点的特征集合</em>","similar_word_count":29,"text":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>","suggest":{"synonyms":[],"keyword":["决策树","树节点"]}},{"sources":[{"profession":false,"keywords":[],"year":"2018","docid":"1000027943830211","author":"钟海燕；李玲；麦雄发；王雨","university":"广西师范学院数学与统计科学学院；广西师范学院北部湾环境演变与资源利用教育部重点实验室；","source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":"","reference":false,"similarScore":875.8894,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前节点的属性集合(假定有d个属性)<em class='similar 84S201I4' onmouseover=\"highlightSetter('84S201I4',false)\" onmouseout=\"highlightSetter('84S201I4',true)\">中选择一个最优属性;</em><em class='similar 84S201I5' onmouseover=\"highlightSetter('84S201I5',false)\" onmouseout=\"highlightSetter('84S201I5',true)\">而在RF中,</em><em class='similar 84S201I6' onmouseover=\"highlightSetter('84S201I6',false)\" onmouseout=\"highlightSetter('84S201I6',true)\">对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,","datatype":"journal","clcs":["P457.6"],"similarityPercentage":"95.2%","self":false,"text":"传统决策树在选择划分属性时是在当前节点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,"},{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar 84S200I4' onmouseover=\"highlightSetter('84S200I4',false)\" onmouseout=\"highlightSetter('84S200I4',true)\">中选择一个最优属性,</em><em class='similar 84S200I5' onmouseover=\"highlightSetter('84S200I5',false)\" onmouseout=\"highlightSetter('84S200I5',true)\">,而在RF中,</em><em class='similar 84S200I6' onmouseover=\"highlightSetter('84S200I6',false)\" onmouseout=\"highlightSetter('84S200I6',true)\">对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,","datatype":"webpage","clcs":[],"similarityPercentage":"93.2%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性,</em><em class='similar'>,而在RF中,</em><em class='similar'>对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar 84S202I4' onmouseover=\"highlightSetter('84S202I4',false)\" onmouseout=\"highlightSetter('84S202I4',true)\">中选择一个最优属性;</em><em class='similar 84S202I5' onmouseover=\"highlightSetter('84S202I5',false)\" onmouseout=\"highlightSetter('84S202I5',true)\">而在RF中,</em><em class='similar 84S202I6' onmouseover=\"highlightSetter('84S202I6',false)\" onmouseout=\"highlightSetter('84S202I6',true)\">对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,","datatype":"webpage","clcs":[],"similarityPercentage":"93.2%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,"},{"profession":false,"keywords":[],"year":"","docid":"9000178628566211","author":"","university":"","source":"网页","title":"T1.随机森林算法梳理_qq_42271047的博客-CSDN博客","url":"https://blog.csdn.net/qq_42271047/article/details/88343431#insertcode","reference":false,"similarScore":728.7846,"teacher":"","textWithDynamicClass":"性时是在当前结点的属性集合(假定有 d 个属性)<em class='similar 84S205I2' onmouseover=\"highlightSetter('84S205I2',false)\" onmouseout=\"highlightSetter('84S205I2',true)\">中选择一个最优属性;</em><em class='similar 84S205I3' onmouseover=\"highlightSetter('84S205I3',false)\" onmouseout=\"highlightSetter('84S205I3',true)\">而在 RF 中,</em><em class='similar 84S205I4' onmouseover=\"highlightSetter('84S205I4',false)\" onmouseout=\"highlightSetter('84S205I4',true)\">对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含 k个属性的子集,","datatype":"webpage","clcs":[],"similarityPercentage":"81.8%","self":false,"text":"性时是在当前结点的属性集合(假定有 d 个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在 RF 中,</em><em class='similar'>对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含 k个属性的子集,"},{"profession":false,"keywords":[],"year":"2019","docid":"1000029331339811","author":"刘博；卢婷婷；陈国磊；赵璐","university":"中国民航大学空中交通管理学院；","source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":"","reference":false,"similarScore":644.9099,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;而在随机森林中,<em class='similar 84S204I8' onmouseover=\"highlightSetter('84S204I8',false)\" onmouseout=\"highlightSetter('84S204I8',true)\">对基决策树的每个结点,</em>先从该结点属性集合中随机选择一个包含K个属性的子集,","datatype":"journal","clcs":["TP181"],"similarityPercentage":"79.9%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;而在随机森林中,<em class='similar'>对基决策树的每个结点,</em>先从该结点属性集合中随机选择一个包含K个属性的子集,"},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":806.7846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;<em class='similar 84S203I3' onmouseover=\"highlightSetter('84S203I3',false)\" onmouseout=\"highlightSetter('84S203I3',true)\">而在RF中,</em><em class='similar 84S203I4' onmouseover=\"highlightSetter('84S203I4',false)\" onmouseout=\"highlightSetter('84S203I4',true)\">对基决策树的每个结点,</em><em class='similar 84S203I5' onmouseover=\"highlightSetter('84S203I5',false)\" onmouseout=\"highlightSetter('84S203I5',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S203I6' onmouseover=\"highlightSetter('84S203I6',false)\" onmouseout=\"highlightSetter('84S203I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能","datatype":"webpage","clcs":[],"similarityPercentage":"78.4%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;<em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能"}],"textWithDynamicClass":"(假定有 个特征)<em class='similar T83I3' onmouseover=\"highlightSetter('T83I3',false)\" onmouseout=\"highlightSetter('T83I3',true)\">中选择一个最优属性;</em><em class='similar T83I4' onmouseover=\"highlightSetter('T83I4',false)\" onmouseout=\"highlightSetter('T83I4',true)\">而在RF中,</em><em class='similar T83I5' onmouseover=\"highlightSetter('T83I5',false)\" onmouseout=\"highlightSetter('T83I5',true)\">对基决策树的每个结点,</em>","similar_word_count":23,"text":"(假定有 个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em>","suggest":{"synonyms":[],"keyword":["决策树","最优","结点"]}},{"sources":[{"profession":false,"keywords":[],"year":"2018","docid":"1000027943830211","author":"钟海燕；李玲；麦雄发；王雨","university":"广西师范学院数学与统计科学学院；广西师范学院北部湾环境演变与资源利用教育部重点实验室；","source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":"","reference":false,"similarScore":875.8894,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 84S201I7' onmouseover=\"highlightSetter('84S201I7',false)\" onmouseout=\"highlightSetter('84S201I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性划分。","datatype":"journal","clcs":["P457.6"],"similarityPercentage":"95.5%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性划分。"},{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 84S200I7' onmouseover=\"highlightSetter('84S200I7',false)\" onmouseout=\"highlightSetter('84S200I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,","datatype":"webpage","clcs":[],"similarityPercentage":"94.2%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 84S202I7' onmouseover=\"highlightSetter('84S202I7',false)\" onmouseout=\"highlightSetter('84S202I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,","datatype":"webpage","clcs":[],"similarityPercentage":"94.2%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,"},{"profession":false,"keywords":[],"year":"","docid":"9000178628566211","author":"","university":"","source":"网页","title":"T1.随机森林算法梳理_qq_42271047的博客-CSDN博客","url":"https://blog.csdn.net/qq_42271047/article/details/88343431#insertcode","reference":false,"similarScore":728.7846,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 84S205I5' onmouseover=\"highlightSetter('84S205I5',false)\" onmouseout=\"highlightSetter('84S205I5',true)\">先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分。","datatype":"webpage","clcs":[],"similarityPercentage":"87.1%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分。"},{"profession":false,"keywords":[],"year":"2019","docid":"1000029331339811","author":"刘博；卢婷婷；陈国磊；赵璐","university":"中国民航大学空中交通管理学院；","source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":"","reference":false,"similarScore":644.9099,"teacher":"","textWithDynamicClass":"而在随机森林中,对基决策树的每个结点,<em class='similar 84S204I9' onmouseover=\"highlightSetter('84S204I9',false)\" onmouseout=\"highlightSetter('84S204I9',true)\">先从该结点属性集合中随机选择一个包含K个属性的子集,</em>然后再从这个子集汇总选择一个","datatype":"journal","clcs":["TP181"],"similarityPercentage":"85.4%","self":false,"text":"而在随机森林中,对基决策树的每个结点,<em class='similar'>先从该结点属性集合中随机选择一个包含K个属性的子集,</em>然后再从这个子集汇总选择一个"},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":806.7846,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 84S203I5' onmouseover=\"highlightSetter('84S203I5',false)\" onmouseout=\"highlightSetter('84S203I5',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分.","datatype":"webpage","clcs":[],"similarityPercentage":"83.5%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分."}],"textWithDynamicClass":"中选择一个最优属性;而在RF中,对基决策树的每个结点,<em class='similar T83I6' onmouseover=\"highlightSetter('T83I6',false)\" onmouseout=\"highlightSetter('T83I6',true)\">先从该结点的属性的集合中随机选择一个包含 个属性的子集,</em>","similar_word_count":26,"text":"中选择一个最优属性;而在RF中,对基决策树的每个结点,<em class='similar'>先从该结点的属性的集合中随机选择一个包含 个属性的子集,</em>","suggest":{"synonyms":[],"keyword":["结点","随机选择","子集"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar 84S200I4' onmouseover=\"highlightSetter('84S200I4',false)\" onmouseout=\"highlightSetter('84S200I4',true)\">中选择一个最优属性,</em><em class='similar 84S200I5' onmouseover=\"highlightSetter('84S200I5',false)\" onmouseout=\"highlightSetter('84S200I5',true)\">,而在RF中,</em><em class='similar 84S200I6' onmouseover=\"highlightSetter('84S200I6',false)\" onmouseout=\"highlightSetter('84S200I6',true)\">对基决策树的每个结点,</em><em class='similar 84S200I7' onmouseover=\"highlightSetter('84S200I7',false)\" onmouseout=\"highlightSetter('84S200I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S200I8' onmouseover=\"highlightSetter('84S200I8',false)\" onmouseout=\"highlightSetter('84S200I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"95.4%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性,</em><em class='similar'>,而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar 84S202I4' onmouseover=\"highlightSetter('84S202I4',false)\" onmouseout=\"highlightSetter('84S202I4',true)\">中选择一个最优属性;</em><em class='similar 84S202I5' onmouseover=\"highlightSetter('84S202I5',false)\" onmouseout=\"highlightSetter('84S202I5',true)\">而在RF中,</em><em class='similar 84S202I6' onmouseover=\"highlightSetter('84S202I6',false)\" onmouseout=\"highlightSetter('84S202I6',true)\">对基决策树的每个结点,</em><em class='similar 84S202I7' onmouseover=\"highlightSetter('84S202I7',false)\" onmouseout=\"highlightSetter('84S202I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S202I8' onmouseover=\"highlightSetter('84S202I8',false)\" onmouseout=\"highlightSetter('84S202I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、","datatype":"webpage","clcs":[],"similarityPercentage":"95.4%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、"},{"profession":false,"keywords":[],"year":"2018","docid":"1000027943830211","author":"钟海燕；李玲；麦雄发；王雨","university":"广西师范学院数学与统计科学学院；广西师范学院北部湾环境演变与资源利用教育部重点实验室；","source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":"","reference":false,"similarScore":875.8894,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前节点的属性集合(假定有d个属性)<em class='similar 84S201I4' onmouseover=\"highlightSetter('84S201I4',false)\" onmouseout=\"highlightSetter('84S201I4',true)\">中选择一个最优属性;</em><em class='similar 84S201I5' onmouseover=\"highlightSetter('84S201I5',false)\" onmouseout=\"highlightSetter('84S201I5',true)\">而在RF中,</em><em class='similar 84S201I6' onmouseover=\"highlightSetter('84S201I6',false)\" onmouseout=\"highlightSetter('84S201I6',true)\">对基决策树的每个结点,</em><em class='similar 84S201I7' onmouseover=\"highlightSetter('84S201I7',false)\" onmouseout=\"highlightSetter('84S201I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S201I8' onmouseover=\"highlightSetter('84S201I8',false)\" onmouseout=\"highlightSetter('84S201I8',true)\">然后再从这个子集中选择一个最优属性划分。</em>根据文献[5]可知参数k的推荐值是k=log2d。","datatype":"journal","clcs":["P457.6"],"similarityPercentage":"95.4%","self":false,"text":"传统决策树在选择划分属性时是在当前节点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性划分。</em>根据文献[5]可知参数k的推荐值是k=log2d。"},{"profession":false,"keywords":[],"year":"","docid":"9000178628566211","author":"","university":"","source":"网页","title":"T1.随机森林算法梳理_qq_42271047的博客-CSDN博客","url":"https://blog.csdn.net/qq_42271047/article/details/88343431#insertcode","reference":false,"similarScore":728.7846,"teacher":"","textWithDynamicClass":"性时是在当前结点的属性集合(假定有 d 个属性)<em class='similar 84S205I2' onmouseover=\"highlightSetter('84S205I2',false)\" onmouseout=\"highlightSetter('84S205I2',true)\">中选择一个最优属性;</em><em class='similar 84S205I3' onmouseover=\"highlightSetter('84S205I3',false)\" onmouseout=\"highlightSetter('84S205I3',true)\">而在 RF 中,</em><em class='similar 84S205I4' onmouseover=\"highlightSetter('84S205I4',false)\" onmouseout=\"highlightSetter('84S205I4',true)\">对基决策树的每个结点,</em><em class='similar 84S205I5' onmouseover=\"highlightSetter('84S205I5',false)\" onmouseout=\"highlightSetter('84S205I5',true)\">先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar 84S205I6' onmouseover=\"highlightSetter('84S205I6',false)\" onmouseout=\"highlightSetter('84S205I6',true)\">然后再从这个子集中选择一个最优属性用于划分。</em>这里的参数 k 控制了随机性的引入程度。6.随机森","datatype":"webpage","clcs":[],"similarityPercentage":"90.1%","self":false,"text":"性时是在当前结点的属性集合(假定有 d 个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在 RF 中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分。</em>这里的参数 k 控制了随机性的引入程度。6.随机森"},{"profession":false,"keywords":[],"year":"2019","docid":"1000029331339811","author":"刘博；卢婷婷；陈国磊；赵璐","university":"中国民航大学空中交通管理学院；","source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":"","reference":false,"similarScore":644.9099,"teacher":"","textWithDynamicClass":"先从该结点属性集合中随机选择一个包含K个属性的子集,<em class='similar 84S204I10' onmouseover=\"highlightSetter('84S204I10',false)\" onmouseout=\"highlightSetter('84S204I10',true)\">然后再从这个子集汇总选择一个</em>","datatype":"journal","clcs":["TP181"],"similarityPercentage":"87.8%","self":false,"text":"先从该结点属性集合中随机选择一个包含K个属性的子集,<em class='similar'>然后再从这个子集汇总选择一个</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":806.7846,"teacher":"","textWithDynamicClass":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar 84S203I6' onmouseover=\"highlightSetter('84S203I6',false)\" onmouseout=\"highlightSetter('84S203I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能","datatype":"webpage","clcs":[],"similarityPercentage":"86.6%","self":false,"text":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能"}],"textWithDynamicClass":"先从该结点的属性的集合中随机选择一个包含 个属性的子集,<em class='similar T83I7' onmouseover=\"highlightSetter('T83I7',false)\" onmouseout=\"highlightSetter('T83I7',true)\">然后再从这个子集中选择一个最优属性用于划分</em>","similar_word_count":21,"text":"先从该结点的属性的集合中随机选择一个包含 个属性的子集,<em class='similar'>然后再从这个子集中选择一个最优属性用于划分</em>","suggest":{"synonyms":[],"keyword":["最优","子集"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000016047965011","author":"","university":"","source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685","reference":false,"similarScore":667.96704,"teacher":"","textWithDynamicClass":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。<em class='similar 85S206I4' onmouseover=\"highlightSetter('85S206I4',false)\" onmouseout=\"highlightSetter('85S206I4',true)\">随机森林对Bagging做了小改动:</em>Bagging中基学习器的\"多样性\"来自于样本扰动。","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。<em class='similar'>随机森林对Bagging做了小改动:</em>Bagging中基学习器的\"多样性\"来自于样本扰动。"},{"profession":false,"keywords":[],"year":"","docid":"9000141550370811","author":"","university":"","source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"<em class='similar 85S208I0' onmouseover=\"highlightSetter('85S208I0',false)\" onmouseout=\"highlightSetter('85S208I0',true)\">随机森林对Bagging做了小改动,</em>Bagging中基学习器的\"多样性\"仅通过样本扰动","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"<em class='similar'>随机森林对Bagging做了小改动,</em>Bagging中基学习器的\"多样性\"仅通过样本扰动"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"&quot;代表集成学习技术水平的方法&quot;可以看出,<em class='similar 85S207I1' onmouseover=\"highlightSetter('85S207I1',false)\" onmouseout=\"highlightSetter('85S207I1',true)\">随机森林对Bagging只做了小改动,</em>但是与Bagging中基学习器的’‘多样性\"仅通过样本扰动","datatype":"book","clcs":["TP181"],"similarityPercentage":"62.3%","self":false,"text":"&quot;代表集成学习技术水平的方法&quot;可以看出,<em class='similar'>随机森林对Bagging只做了小改动,</em>但是与Bagging中基学习器的’‘多样性\"仅通过样本扰动"}],"textWithDynamicClass":"随机森林在多种多样的决策与回归任务中展现了超乎预期的强大的性能,<em class='similar T84I1' onmouseover=\"highlightSetter('T84I1',false)\" onmouseout=\"highlightSetter('T84I1',true)\">随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,</em>","similar_word_count":27,"text":"随机森林在多种多样的决策与回归任务中展现了超乎预期的强大的性能,<em class='similar'>随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,</em>","suggest":{"synonyms":[{"synonyms":["弱小"],"keyword":"微小"},{"synonyms":["窜改"],"keyword":"改动"}],"keyword":["随机森林","微小","改动"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000141550370811","author":"","university":"","source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"随机森林对Bagging做了小改动,<em class='similar 85S208I1' onmouseover=\"highlightSetter('85S208I1',false)\" onmouseout=\"highlightSetter('85S208I1',true)\">Bagging中基学习器的&quot;多样性&quot;仅通过样本扰动</em>(对初始训练集采样)而来不同,随机森林中基学习器的多样性不仅来自样本扰动,","datatype":"webpage","clcs":[],"similarityPercentage":"62.0%","self":false,"text":"随机森林对Bagging做了小改动,<em class='similar'>Bagging中基学习器的&quot;多样性&quot;仅通过样本扰动</em>(对初始训练集采样)而来不同,随机森林中基学习器的多样性不仅来自样本扰动,"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"\"代表集成学习技术水平的方法\"可以看出,随机森林对Bagging只做了小改动,<em class='similar 85S207I2' onmouseover=\"highlightSetter('85S207I2',false)\" onmouseout=\"highlightSetter('85S207I2',true)\">但是与Bagging中基学习器的’‘多样性&quot;仅通过样本扰动</em>(通过对初始训练集采样)而来不同,随机森林中基学习器的多样性不仅来自样本扰动,","datatype":"book","clcs":["TP181"],"similarityPercentage":"60.7%","self":false,"text":"\"代表集成学习技术水平的方法\"可以看出,随机森林对Bagging只做了小改动,<em class='similar'>但是与Bagging中基学习器的’‘多样性&quot;仅通过样本扰动</em>(通过对初始训练集采样)而来不同,随机森林中基学习器的多样性不仅来自样本扰动,"},{"profession":false,"keywords":[],"year":"","docid":"9000016047965011","author":"","university":"","source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685","reference":false,"similarScore":667.96704,"teacher":"","textWithDynamicClass":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。随机森林对Bagging做了小改动:<em class='similar 85S206I5' onmouseover=\"highlightSetter('85S206I5',false)\" onmouseout=\"highlightSetter('85S206I5',true)\"> Bagging中基学习器的&quot;多样性&quot;来自于样本扰动。</em>样本扰动来自于对初始训练集的随机采样。","datatype":"webpage","clcs":[],"similarityPercentage":"56.1%","self":false,"text":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。随机森林对Bagging做了小改动:<em class='similar'> Bagging中基学习器的&quot;多样性&quot;来自于样本扰动。</em>样本扰动来自于对初始训练集的随机采样。"}],"textWithDynamicClass":"随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,<em class='similar T84I2' onmouseover=\"highlightSetter('T84I2',false)\" onmouseout=\"highlightSetter('T84I2',true)\">但继承了Bagging中所具有的学习多样性,</em>","similar_word_count":16,"text":"随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,<em class='similar'>但继承了Bagging中所具有的学习多样性,</em>","suggest":{"synonyms":[{"synonyms":["承担"],"keyword":"继承"}],"keyword":["继承","多样性"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138770563211","author":"","university":"","source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html","reference":false,"similarScore":436.9565,"teacher":"","textWithDynamicClass":",被誉为&quot;代表集成学习技术水平的方法&quot;。<em class='similar 85S209I3' onmouseover=\"highlightSetter('85S209I3',false)\" onmouseout=\"highlightSetter('85S209I3',true)\">随机森林中基学习器的多样性不仅仅来自于 Bagging 中的样本扰动,</em><em class='similar 85S209I4' onmouseover=\"highlightSetter('85S209I4',false)\" onmouseout=\"highlightSetter('85S209I4',true)\">还来自于属性扰动,</em>这样就使得最终集成的泛化性能通过基学习器的差异性增加而进一步提升。","datatype":"webpage","clcs":[],"similarityPercentage":"90.7%","self":false,"text":",被誉为&quot;代表集成学习技术水平的方法&quot;。<em class='similar'>随机森林中基学习器的多样性不仅仅来自于 Bagging 中的样本扰动,</em><em class='similar'>还来自于属性扰动,</em>这样就使得最终集成的泛化性能通过基学习器的差异性增加而进一步提升。"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000524795711","author":"-","university":"","source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":"","reference":false,"similarScore":363.80957,"teacher":"","textWithDynamicClass":"容易实现、计算开销少,同时由于其本身相较于Bagging法,<em class='similar 85S210I5' onmouseover=\"highlightSetter('85S210I5',false)\" onmouseout=\"highlightSetter('85S210I5',true)\">其子学习器的多样性不仅来自样本扰动,</em><em class='similar 85S210I6' onmouseover=\"highlightSetter('85S210I6',false)\" onmouseout=\"highlightSetter('85S210I6',true)\">还来自于属性扰动,</em>这就使的最终集成的泛化性能通过子学习器之间的差异度的增加而进一步提升。","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"83.2%","self":false,"text":"容易实现、计算开销少,同时由于其本身相较于Bagging法,<em class='similar'>其子学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自于属性扰动,</em>这就使的最终集成的泛化性能通过子学习器之间的差异度的增加而进一步提升。"},{"profession":false,"keywords":[],"year":"","docid":"9000141550370811","author":"","university":"","source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"随机森林对Bagging做了小改动,<em class='similar 85S208I1' onmouseover=\"highlightSetter('85S208I1',false)\" onmouseout=\"highlightSetter('85S208I1',true)\">Bagging中基学习器的&quot;多样性&quot;仅通过样本扰动</em>(对初始训练集采样)而来不同,<em class='similar 85S208I4' onmouseover=\"highlightSetter('85S208I4',false)\" onmouseout=\"highlightSetter('85S208I4',true)\">随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar 85S208I5' onmouseover=\"highlightSetter('85S208I5',false)\" onmouseout=\"highlightSetter('85S208I5',true)\">还来自属性扰动,</em>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。","datatype":"webpage","clcs":[],"similarityPercentage":"78.8%","self":false,"text":"随机森林对Bagging做了小改动,<em class='similar'>Bagging中基学习器的&quot;多样性&quot;仅通过样本扰动</em>(对初始训练集采样)而来不同,<em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"\"代表集成学习技术水平的方法\"可以看出,随机森林对Bagging只做了小改动,<em class='similar 85S207I2' onmouseover=\"highlightSetter('85S207I2',false)\" onmouseout=\"highlightSetter('85S207I2',true)\">但是与Bagging中基学习器的’‘多样性&quot;仅通过样本扰动</em>(通过对初始训练集采样)而来不同,<em class='similar 85S207I5' onmouseover=\"highlightSetter('85S207I5',false)\" onmouseout=\"highlightSetter('85S207I5',true)\">随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar 85S207I6' onmouseover=\"highlightSetter('85S207I6',false)\" onmouseout=\"highlightSetter('85S207I6',true)\">还来自属性扰动,</em>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。","datatype":"book","clcs":["TP181"],"similarityPercentage":"77.7%","self":false,"text":"\"代表集成学习技术水平的方法\"可以看出,随机森林对Bagging只做了小改动,<em class='similar'>但是与Bagging中基学习器的’‘多样性&quot;仅通过样本扰动</em>(通过对初始训练集采样)而来不同,<em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。"},{"profession":false,"keywords":[],"year":"","docid":"9000016047965011","author":"","university":"","source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685","reference":false,"similarScore":667.96704,"teacher":"","textWithDynamicClass":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。随机森林对Bagging做了小改动:<em class='similar 85S206I5' onmouseover=\"highlightSetter('85S206I5',false)\" onmouseout=\"highlightSetter('85S206I5',true)\"> Bagging中基学习器的&quot;多样性&quot;来自于样本扰动。</em><em class='similar 85S206I6' onmouseover=\"highlightSetter('85S206I6',false)\" onmouseout=\"highlightSetter('85S206I6',true)\">样本扰动来自于对初始训练集的随机采样。</em><em class='similar 85S206I7' onmouseover=\"highlightSetter('85S206I7',false)\" onmouseout=\"highlightSetter('85S206I7',true)\">随机森林中的基学习器的多样性不仅来自样本扰动,</em><em class='similar 85S206I8' onmouseover=\"highlightSetter('85S206I8',false)\" onmouseout=\"highlightSetter('85S206I8',true)\">还来自属性扰动。</em>这就是使得最终集成的泛化性能可以通过个体学习器之间差异度的增加而进一步提升","datatype":"webpage","clcs":[],"similarityPercentage":"76.5%","self":false,"text":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。随机森林对Bagging做了小改动:<em class='similar'> Bagging中基学习器的&quot;多样性&quot;来自于样本扰动。</em><em class='similar'>样本扰动来自于对初始训练集的随机采样。</em><em class='similar'>随机森林中的基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动。</em>这就是使得最终集成的泛化性能可以通过个体学习器之间差异度的增加而进一步提升"},{"profession":false,"keywords":[],"year":"","docid":"9000079748404511","author":"","university":"","source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486","reference":false,"similarScore":392.14285,"teacher":"","textWithDynamicClass":"在生成基学习器的过程中,使用包外样本提高基学习器的泛化能力。<em class='similar 85S211I3' onmouseover=\"highlightSetter('85S211I3',false)\" onmouseout=\"highlightSetter('85S211I3',true)\">随机森林的多样性  随机森林的多样性不仅来自于样本扰动,</em><em class='similar 85S211I4' onmouseover=\"highlightSetter('85S211I4',false)\" onmouseout=\"highlightSetter('85S211I4',true)\">还来自于属性扰动,</em>这就使得最终的集成学习器的泛化性能可通过基学习器之间独立性的增加而提升。","datatype":"webpage","clcs":[],"similarityPercentage":"75.7%","self":false,"text":"在生成基学习器的过程中,使用包外样本提高基学习器的泛化能力。<em class='similar'>随机森林的多样性  随机森林的多样性不仅来自于样本扰动,</em><em class='similar'>还来自于属性扰动,</em>这就使得最终的集成学习器的泛化性能可通过基学习器之间独立性的增加而提升。"}],"textWithDynamicClass":"但继承了Bagging中所具有的学习多样性,<em class='similar T84I3' onmouseover=\"highlightSetter('T84I3',false)\" onmouseout=\"highlightSetter('T84I3',true)\">随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar T84I4' onmouseover=\"highlightSetter('T84I4',false)\" onmouseout=\"highlightSetter('T84I4',true)\">还来自属性扰动,</em>","similar_word_count":28,"text":"但继承了Bagging中所具有的学习多样性,<em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em>","suggest":{"synonyms":[],"keyword":["随机森林","多样性","中基","学习器","扰动","属性扰动"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138770563211","author":"","university":"","source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html","reference":false,"similarScore":436.9565,"teacher":"","textWithDynamicClass":"还来自于属性扰动,<em class='similar 85S209I5' onmouseover=\"highlightSetter('85S209I5',false)\" onmouseout=\"highlightSetter('85S209I5',true)\">这样就使得最终集成的泛化性能通过基学习器的差异性增加而进一步提升。</em>2.2.4结合策略本节主要介绍一下集成学习中个体学","datatype":"webpage","clcs":[],"similarityPercentage":"82.7%","self":false,"text":"还来自于属性扰动,<em class='similar'>这样就使得最终集成的泛化性能通过基学习器的差异性增加而进一步提升。</em>2.2.4结合策略本节主要介绍一下集成学习中个体学"},{"profession":false,"keywords":[],"year":"","docid":"9000016047965011","author":"","university":"","source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685","reference":false,"similarScore":667.96704,"teacher":"","textWithDynamicClass":"还来自属性扰动。<em class='similar 85S206I9' onmouseover=\"highlightSetter('85S206I9',false)\" onmouseout=\"highlightSetter('85S206I9',true)\">这就是使得最终集成的泛化性能可以通过个体学习器之间差异度的增加而进一步提升</em>","datatype":"webpage","clcs":[],"similarityPercentage":"72.1%","self":false,"text":"还来自属性扰动。<em class='similar'>这就是使得最终集成的泛化性能可以通过个体学习器之间差异度的增加而进一步提升</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000141550370811","author":"","university":"","source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"还来自属性扰动,<em class='similar 85S208I6' onmouseover=\"highlightSetter('85S208I6',false)\" onmouseout=\"highlightSetter('85S208I6',true)\">这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"71.9%","self":false,"text":"还来自属性扰动,<em class='similar'>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"还来自属性扰动,<em class='similar 85S207I7' onmouseover=\"highlightSetter('85S207I7',false)\" onmouseout=\"highlightSetter('85S207I7',true)\">这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>随机森林的收敛性与Bagging相似。随机森林的起","datatype":"book","clcs":["TP181"],"similarityPercentage":"71.6%","self":false,"text":"还来自属性扰动,<em class='similar'>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>随机森林的收敛性与Bagging相似。随机森林的起"},{"profession":false,"keywords":[],"year":"","docid":"9000079748404511","author":"","university":"","source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486","reference":false,"similarScore":392.14285,"teacher":"","textWithDynamicClass":"还来自于属性扰动,<em class='similar 85S211I5' onmouseover=\"highlightSetter('85S211I5',false)\" onmouseout=\"highlightSetter('85S211I5',true)\">这就使得最终的集成学习器的泛化性能可通过基学习器之间独立性的增加而提升。</em>随机森林的特点  随机森林的起始性能往往比","datatype":"webpage","clcs":[],"similarityPercentage":"67.1%","self":false,"text":"还来自于属性扰动,<em class='similar'>这就使得最终的集成学习器的泛化性能可通过基学习器之间独立性的增加而提升。</em>随机森林的特点  随机森林的起始性能往往比"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000524795711","author":"-","university":"","source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":"","reference":false,"similarScore":363.80957,"teacher":"","textWithDynamicClass":"还来自于属性扰动,<em class='similar 85S210I7' onmouseover=\"highlightSetter('85S210I7',false)\" onmouseout=\"highlightSetter('85S210I7',true)\">这就使的最终集成的泛化性能通过子学习器之间的差异度的增加而进一步提升。</em>随机森林是一种基于Bagging集成学习方法的扩展","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"66.9%","self":false,"text":"还来自于属性扰动,<em class='similar'>这就使的最终集成的泛化性能通过子学习器之间的差异度的增加而进一步提升。</em>随机森林是一种基于Bagging集成学习方法的扩展"}],"textWithDynamicClass":"随机森林中基学习器的多样性不仅来自样本扰动,还来自属性扰动,<em class='similar T84I5' onmouseover=\"highlightSetter('T84I5',false)\" onmouseout=\"highlightSetter('T84I5',true)\">这就使得最终集成后的强学习器的泛化性能上的提升,</em><em class='similar T84I6' onmouseover=\"highlightSetter('T84I6',false)\" onmouseout=\"highlightSetter('T84I6',true)\">其可通过弱学习器之间差异度的互补来增强。</em>","similar_word_count":42,"text":"随机森林中基学习器的多样性不仅来自样本扰动,还来自属性扰动,<em class='similar'>这就使得最终集成后的强学习器的泛化性能上的提升,</em><em class='similar'>其可通过弱学习器之间差异度的互补来增强。</em>","suggest":{"synonyms":[],"keyword":["学习器","泛化性能","差异度","互补"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000131811984111","author":"","university":"","source":"网页","title":"            模型说明_文本分类_详细教程_NLP自学习平台_自然语言处理-阿里云    ","url":"https://help.aliyun.com/document_detail/162446.html","reference":false,"similarScore":57.600002,"teacher":"","textWithDynamicClass":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar 86S214I8' onmouseover=\"highlightSetter('86S214I8',false)\" onmouseout=\"highlightSetter('86S214I8',true)\">随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院","datatype":"webpage","clcs":[],"similarityPercentage":"66.6%","self":false,"text":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar'>随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000456857311","author":"张宇","university":"","source":"大学生论文联合库","title":"遥感影像在地球覆盖分类中的应用","url":"","reference":false,"similarScore":184.43591,"teacher":"老师","textWithDynamicClass":"(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar 86S212I12' onmouseover=\"highlightSetter('86S212I12',false)\" onmouseout=\"highlightSetter('86S212I12',true)\">研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar 86S212I13' onmouseover=\"highlightSetter('86S212I13',false)\" onmouseout=\"highlightSetter('86S212I13',true)\">并通过对该方法检测的云影区块进行形态学变换、</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"36.3%","self":false,"text":"(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar'>研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar'>并通过对该方法检测的云影区块进行形态学变换、</em>"}],"textWithDynamicClass":"<em class='similar T85I0' onmouseover=\"highlightSetter('T85I0',false)\" onmouseout=\"highlightSetter('T85I0',true)\">通过对随机森林算法进行研究,</em><em class='similar T85I1' onmouseover=\"highlightSetter('T85I1',false)\" onmouseout=\"highlightSetter('T85I1',true)\">发现随机森林相较于传统的机器学习模型具有训练速度快、</em>","similar_word_count":38,"text":"<em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["随机森林算法","随机森林","机器学习模型","训练","速度快"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000456857311","author":"张宇","university":"","source":"大学生论文联合库","title":"遥感影像在地球覆盖分类中的应用","url":"","reference":false,"similarScore":184.43591,"teacher":"老师","textWithDynamicClass":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar 86S212I6' onmouseover=\"highlightSetter('86S212I6',false)\" onmouseout=\"highlightSetter('86S212I6',true)\">泛化能力好,</em><em class='similar 86S212I7' onmouseover=\"highlightSetter('86S212I7',false)\" onmouseout=\"highlightSetter('86S212I7',true)\">鲁棒性强,</em><em class='similar 86S212I8' onmouseover=\"highlightSetter('86S212I8',false)\" onmouseout=\"highlightSetter('86S212I8',true)\">(Cutler等,</em>2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,研究了基于随机森林的遥感影像云影信息检测方法,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"41.6%","self":false,"text":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar'>泛化能力好,</em><em class='similar'>鲁棒性强,</em><em class='similar'>(Cutler等,</em>2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,研究了基于随机森林的遥感影像云影信息检测方法,"}],"textWithDynamicClass":"预测效果好、<em class='similar T85I3' onmouseover=\"highlightSetter('T85I3',false)\" onmouseout=\"highlightSetter('T85I3',true)\">泛化能力强、</em><em class='similar T85I4' onmouseover=\"highlightSetter('T85I4',false)\" onmouseout=\"highlightSetter('T85I4',true)\">鲁棒性强等优势,</em>","similar_word_count":12,"text":"预测效果好、<em class='similar'>泛化能力强、</em><em class='similar'>鲁棒性强等优势,</em>","suggest":{"synonyms":[],"keyword":["泛化能力","鲁棒性强"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203166781311","author":"","university":"","source":"网页","title":"一种主成分分析协同随机森林的热连轧带钢宽度预测方法与流程","url":"http://www.xjishu.com/zhuanli/55/202110285167.html","reference":false,"similarScore":142.85715,"teacher":"","textWithDynamicClass":"4.5、最后,在测试集上应用训练得到的随机森林宽度预测模型,<em class='similar 87S215I7' onmouseover=\"highlightSetter('87S215I7',false)\" onmouseout=\"highlightSetter('87S215I7',true)\">取所有决策树预测结果的均值作为随机森林宽度预测模型最终的预测结果,</em>即得到热连轧带钢宽度的预测结果;步骤5、对随机森林","datatype":"webpage","clcs":[],"similarityPercentage":"66.8%","self":false,"text":"4.5、最后,在测试集上应用训练得到的随机森林宽度预测模型,<em class='similar'>取所有决策树预测结果的均值作为随机森林宽度预测模型最终的预测结果,</em>即得到热连轧带钢宽度的预测结果;步骤5、对随机森林"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000560676611","author":"-","university":"","source":"大学生论文联合库","title":"《数据挖掘》杂志稿件","url":"","reference":false,"similarScore":142.85716,"teacher":"","textWithDynamicClass":"益最大的特征决策树完全生长输出:1.随机森林中决策树集合2.<em class='similar 87S216I5' onmouseover=\"highlightSetter('87S216I5',false)\" onmouseout=\"highlightSetter('87S216I5',true)\">决策树对测试样本的预测结果为随机森林回归,</em><em class='similar 87S216I6' onmouseover=\"highlightSetter('87S216I6',false)\" onmouseout=\"highlightSetter('87S216I6',true)\">结果取均值:</em>随机深林分类,结果均匀投票:神经网络NN 神经网络","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"42.3%","self":false,"text":"益最大的特征决策树完全生长输出:1.随机森林中决策树集合2.<em class='similar'>决策树对测试样本的预测结果为随机森林回归,</em><em class='similar'>结果取均值:</em>随机深林分类,结果均匀投票:神经网络NN 神经网络"}],"textWithDynamicClass":"<em class='similar T86I0' onmouseover=\"highlightSetter('T86I0',false)\" onmouseout=\"highlightSetter('T86I0',true)\">随机森林的回归预测结果是 棵决策树的预测结果 取均��而得到的,</em>","similar_word_count":28,"text":"<em class='similar'>随机森林的回归预测结果是 棵决策树的预测结果 取均值而得到的,</em>","suggest":{"synonyms":[],"keyword":["随机森林","回归","预测结果","决策树","均值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000106062608311","author":"","university":"","source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html","reference":false,"similarScore":118.05556,"teacher":"","textWithDynamicClass":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar 88S217I11' onmouseover=\"highlightSetter('88S217I11',false)\" onmouseout=\"highlightSetter('88S217I11',true)\">�5�3即随机森林的泛化误差.</em>每颗决策树的平均泛化误差定义为:","datatype":"webpage","clcs":[],"similarityPercentage":"48.1%","self":false,"text":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar'>�5�3即随机森林的泛化误差.</em>每颗决策树的平均泛化误差定义为:"}],"textWithDynamicClass":"<em class='similar T87I0' onmouseover=\"highlightSetter('T87I0',false)\" onmouseout=\"highlightSetter('T87I0',true)\">式(2-5)</em><em class='similar T87I1' onmouseover=\"highlightSetter('T87I1',false)\" onmouseout=\"highlightSetter('T87I1',true)\">右侧部分表示随机森林的泛化误差,</em>","similar_word_count":18,"text":"<em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>","suggest":{"synonyms":[],"keyword":["右侧","随机森林","泛化误差"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000106062608311","author":"","university":"","source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html","reference":false,"similarScore":118.05556,"teacher":"","textWithDynamicClass":"中�5�3式(5)中右边记为 PE �6�5(forest)�5�3即随机森林的泛化误差.<em class='similar 88S217I12' onmouseover=\"highlightSetter('88S217I12',false)\" onmouseout=\"highlightSetter('88S217I12',true)\">每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�","datatype":"webpage","clcs":[],"similarityPercentage":"57.7%","self":false,"text":"中�5�3式(5)中右边记为 PE �6�5(forest)�5�3即随机森林的泛化误差.<em class='similar'>每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�"}],"textWithDynamicClass":"将其记为 。<em class='similar T87I3' onmouseover=\"highlightSetter('T87I3',false)\" onmouseout=\"highlightSetter('T87I3',true)\"> 则表示一课决策树的平均泛化误差即</em>","similar_word_count":16,"text":"将其记为 。<em class='similar'> 则表示一课决策树的平均泛化误差即</em>","suggest":{"synonyms":[],"keyword":["泛化误差","决策树"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200005292737611","author":"张冰","university":"","source":"大学生论文联合库","title":"基于bp神经网络的短期负荷预测方法","url":"","reference":false,"similarScore":121.83334,"teacher":"","textWithDynamicClass":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar 89S219I13' onmouseover=\"highlightSetter('89S219I13',false)\" onmouseout=\"highlightSetter('89S219I13',true)\">;是残差与之间的加权相关系数,</em><em class='similar 89S219I14' onmouseover=\"highlightSetter('89S219I14',false)\" onmouseout=\"highlightSetter('89S219I14',true)\">与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"76.3%","self":false,"text":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar'>;是残差与之间的加权相关系数,</em><em class='similar'>与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低"}],"textWithDynamicClass":"式(2-7)<em class='similar T88I1' onmouseover=\"highlightSetter('T88I1',false)\" onmouseout=\"highlightSetter('T88I1',true)\">中 是在 与 相互独立的情况下,</em><em class='similar T88I2' onmouseover=\"highlightSetter('T88I2',false)\" onmouseout=\"highlightSetter('T88I2',true)\">残差 和 的加权相关系数。</em>","similar_word_count":22,"text":"式(2-7)<em class='similar'>中 是在 与 相互独立的情况下,</em><em class='similar'>残差 和 的加权相关系数。</em>","suggest":{"synonyms":[],"keyword":["相互独立","残差","加权","相关系数"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar 90S220I15' onmouseover=\"highlightSetter('90S220I15',false)\" onmouseout=\"highlightSetter('90S220I15',true)\">定理2给出了精确回归森林的条件:</em>残差间的低相关性和低的错误决策树。","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"53.8%","self":false,"text":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar'>定理2给出了精确回归森林的条件:</em>残差间的低相关性和低的错误决策树。"}],"textWithDynamicClass":"<em class='similar T89I0' onmouseover=\"highlightSetter('T89I0',false)\" onmouseout=\"highlightSetter('T89I0',true)\">上述定理1和定理2给定了使随机森林精确的前提是:</em>","similar_word_count":23,"text":"<em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em>","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"}],"keyword":["定理","和定理","给定","随机森林","精确"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"',(?的加权相关系数,且?与?'相互独立。定理2给出了精确回归森林的条件:<em class='similar 90S220I16' onmouseover=\"highlightSetter('90S220I16',false)\" onmouseout=\"highlightSetter('90S220I16',true)\">残差间的低相关性和低的错误决策树。</em><em class='similar 90S220I17' onmouseover=\"highlightSetter('90S220I17',false)\" onmouseout=\"highlightSetter('90S220I17',true)\">随机森林通过加权相关系数?</em><em class='similar 90S220I18' onmouseover=\"highlightSetter('90S220I18',false)\" onmouseout=\"highlightSetter('90S220I18',true)\">降低决策树的平均误差。</em>随机森林","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"70.1%","self":false,"text":"',(?的加权相关系数,且?与?'相互独立。定理2给出了精确回归森林的条件:<em class='similar'>残差间的低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数?</em><em class='similar'>降低决策树的平均误差。</em>随机森林"},{"profession":false,"keywords":[],"year":"","docid":"9000113620987811","author":"csdn","university":"","source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770","reference":false,"similarScore":112.499985,"teacher":"","textWithDynamicClass":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar 90S221I15' onmouseover=\"highlightSetter('90S221I15',false)\" onmouseout=\"highlightSetter('90S221I15',true)\">指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{","datatype":"webpage","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar'>指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{"},{"profession":false,"keywords":[],"year":"","docid":"9000179731028611","author":"","university":"","source":"网页","title":"随机森林回归模型及其在污水排放量预测中的应用","url":"https://www.docin.com/p%2D1408710266.html","reference":false,"similarScore":213.83331,"teacher":"","textWithDynamicClass":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar 90S222I4' onmouseover=\"highlightSetter('90S222I4',false)\" onmouseout=\"highlightSetter('90S222I4',true)\">定理低相关性和低的错误决策树。</em><em class='similar 90S222I5' onmouseover=\"highlightSetter('90S222I5',false)\" onmouseout=\"highlightSetter('90S222I5',true)\">随机森林通过加权相关系数降低决策树的平均误差。</em>随机森林","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar'>定理低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数降低决策树的平均误差。</em>随机森林"}],"textWithDynamicClass":"上述定理1和定理2给定了使随机森林精确的前提是:<em class='similar T89I1' onmouseover=\"highlightSetter('T89I1',false)\" onmouseout=\"highlightSetter('T89I1',true)\">残差间的相关系数低以及错误决策树数目较少。</em><em class='similar T89I2' onmouseover=\"highlightSetter('T89I2',false)\" onmouseout=\"highlightSetter('T89I2',true)\">为降低决策树的平均误差,</em>","similar_word_count":31,"text":"上述定理1和定理2给定了使随机森林精确的前提是:<em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em>","suggest":{"synonyms":[{"synonyms":["数量"],"keyword":"数目"}],"keyword":["残差","相关系数","决策树","数目","平均误差"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"残差间的低相关性和低的错误决策树。<em class='similar 90S220I17' onmouseover=\"highlightSetter('90S220I17',false)\" onmouseout=\"highlightSetter('90S220I17',true)\">随机森林通过加权相关系数?</em><em class='similar 90S220I18' onmouseover=\"highlightSetter('90S220I18',false)\" onmouseout=\"highlightSetter('90S220I18',true)\">降低决策树的平均误差。</em><em class='similar 90S220I19' onmouseover=\"highlightSetter('90S220I19',false)\" onmouseout=\"highlightSetter('90S220I19',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"74.0%","self":false,"text":"残差间的低相关性和低的错误决策树。<em class='similar'>随机森林通过加权相关系数?</em><em class='similar'>降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"},{"profession":false,"keywords":[],"year":"","docid":"9000179731028611","author":"","university":"","source":"网页","title":"随机森林回归模型及其在污水排放量预测中的应用","url":"https://www.docin.com/p%2D1408710266.html","reference":false,"similarScore":213.83331,"teacher":"","textWithDynamicClass":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。定理低相关性和低的错误决策树。<em class='similar 90S222I5' onmouseover=\"highlightSetter('90S222I5',false)\" onmouseout=\"highlightSetter('90S222I5',true)\">随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar 90S222I6' onmouseover=\"highlightSetter('90S222I6',false)\" onmouseout=\"highlightSetter('90S222I6',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"webpage","clcs":[],"similarityPercentage":"58.6%","self":false,"text":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。定理低相关性和低的错误决策树。<em class='similar'>随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"}],"textWithDynamicClass":"残差间的相关系数低以及错误决策树数目较少。为降低决策树的平均误差,<em class='similar T89I3' onmouseover=\"highlightSetter('T89I3',false)\" onmouseout=\"highlightSetter('T89I3',true)\">随机森林回归选择对相关系数 进行加权处理。</em><em class='similar T89I4' onmouseover=\"highlightSetter('T89I4',false)\" onmouseout=\"highlightSetter('T89I4',true)\">随机森林</em>","similar_word_count":23,"text":"残差间的相关系数低以及错误决策树数目较少。为降低决策树的平均误差,<em class='similar'>随机森林回归选择对相关系数 进行加权处理。</em><em class='similar'>随机森林</em>","suggest":{"synonyms":[],"keyword":["随机森林","相关系数","回归","加权处理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":607.6923,"teacher":"","textWithDynamicClass":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar 91S223I7' onmouseover=\"highlightSetter('91S223I7',false)\" onmouseout=\"highlightSetter('91S223I7',true)\">人工神经网络是深度学习的核心。</em>它们用途广泛,功能强大且可扩展,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar'>人工神经网络是深度学习的核心。</em>它们用途广泛,功能强大且可扩展,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":355.83038,"teacher":"","textWithDynamicClass":"s&quot;),以免我们把我们的创造力限制在生物学系统上。<em class='similar 91S224I5' onmouseover=\"highlightSetter('91S224I5',false)\" onmouseout=\"highlightSetter('91S224I5',true)\">人工神经网络是深度学习的核心。</em>它们具有通用性、强大性和可扩展性,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"s&quot;),以免我们把我们的创造力限制在生物学系统上。<em class='similar'>人工神经网络是深度学习的核心。</em>它们具有通用性、强大性和可扩展性,"}],"textWithDynamicClass":"<em class='similar T90I0' onmouseover=\"highlightSetter('T90I0',false)\" onmouseout=\"highlightSetter('T90I0',true)\">人工神经网络是深度学习的核心。</em>","similar_word_count":14,"text":"<em class='similar'>人工神经网络是深度学习的核心。</em>","suggest":{"synonyms":[],"keyword":["人工神经网络","深度学习"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":607.6923,"teacher":"","textWithDynamicClass":"ot;神经元\"),以免我们将创造力限制在生物学上。人工神经网络是深度学习的核心。它们用途广泛,<em class='similar 91S223I9' onmouseover=\"highlightSetter('91S223I9',false)\" onmouseout=\"highlightSetter('91S223I9',true)\">功能强大且可扩展,</em><em class='similar 91S223I10' onmouseover=\"highlightSetter('91S223I10',false)\" onmouseout=\"highlightSetter('91S223I10',true)\">使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar 91S223I11' onmouseover=\"highlightSetter('91S223I11',false)\" onmouseout=\"highlightSetter('91S223I11',true)\">例如对数十亿张图像进行分类</em>(例如GoogleImages),为语音识别服务","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"ot;神经元\"),以免我们将创造力限制在生物学上。人工神经网络是深度学习的核心。它们用途广泛,<em class='similar'>功能强大且可扩展,</em><em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar'>例如对数十亿张图像进行分类</em>(例如GoogleImages),为语音识别服务"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":355.83038,"teacher":"","textWithDynamicClass":"s\"),以免我们把我们的创造力限制在生物学系统上。人工神经网络是深度学习的核心。它们具有通用性、<em class='similar 91S224I7' onmouseover=\"highlightSetter('91S224I7',false)\" onmouseout=\"highlightSetter('91S224I7',true)\">强大性和可扩展性,</em><em class='similar 91S224I8' onmouseover=\"highlightSetter('91S224I8',false)\" onmouseout=\"highlightSetter('91S224I8',true)\">使得它们能够很好地解决大型和高度复杂的机器学习任务,</em><em class='similar 91S224I9' onmouseover=\"highlightSetter('91S224I9',false)\" onmouseout=\"highlightSetter('91S224I9',true)\">例如分类数十亿图像</em>(<em class='similar 91S224I10' onmouseover=\"highlightSetter('91S224I10',false)\" onmouseout=\"highlightSetter('91S224I10',true)\">例如</em>,谷歌图像),强大的语音识别服务(例如,苹果的Si","datatype":"webpage","clcs":[],"similarityPercentage":"78.6%","self":false,"text":"s\"),以免我们把我们的创造力限制在生物学系统上。人工神经网络是深度学习的核心。它们具有通用性、<em class='similar'>强大性和可扩展性,</em><em class='similar'>使得它们能够很好地解决大型和高度复杂的机器学习任务,</em><em class='similar'>例如分类数十亿图像</em>(<em class='similar'>例如</em>,谷歌图像),强大的语音识别服务(例如,苹果的Si"}],"textWithDynamicClass":"其在当代用途广泛、<em class='similar T90I2' onmouseover=\"highlightSetter('T90I2',false)\" onmouseout=\"highlightSetter('T90I2',true)\">功能强大且可扩展,</em><em class='similar T90I3' onmouseover=\"highlightSetter('T90I3',false)\" onmouseout=\"highlightSetter('T90I3',true)\">使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar T90I4' onmouseover=\"highlightSetter('T90I4',false)\" onmouseout=\"highlightSetter('T90I4',true)\">例如对数十亿张图像进行分类,</em><em class='similar T90I5' onmouseover=\"highlightSetter('T90I5',false)\" onmouseout=\"highlightSetter('T90I5',true)\">例如</em>","similar_word_count":45,"text":"其在当代用途广泛、<em class='similar'>功能强大且可扩展,</em><em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar'>例如对数十亿张图像进行分类,</em><em class='similar'>例如</em>","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"}],"keyword":["功能强大","可扩展","机器","学习任务","数十亿张"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":607.6923,"teacher":"","textWithDynamicClass":"例如对数十亿张图像进行分类(例如GoogleImages)<em class='similar 91S223I13' onmouseover=\"highlightSetter('91S223I13',false)\" onmouseout=\"highlightSetter('91S223I13',true)\">,为语音识别服务</em>(例如Apple的Siri)提供支持,每天向成千上","datatype":"webpage","clcs":[],"similarityPercentage":"95.6%","self":false,"text":"例如对数十亿张图像进行分类(例如GoogleImages)<em class='similar'>,为语音识别服务</em>(例如Apple的Siri)提供支持,每天向成千上"}],"textWithDynamicClass":"Googal的Images,<em class='similar T90I6' onmouseover=\"highlightSetter('T90I6',false)\" onmouseout=\"highlightSetter('T90I6',true)\">或者为语音识别服务提供支持</em>","similar_word_count":13,"text":"Googal的Images,<em class='similar'>或者为语音识别服务提供支持</em>","suggest":{"synonyms":[],"keyword":["语音识别","服务提供"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":132.57143,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。<em class='similar 92S226I1' onmouseover=\"highlightSetter('92S226I1',false)\" onmouseout=\"highlightSetter('92S226I1',true)\">03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4),称为阈值逻辑单元","datatype":"webpage","clcs":[],"similarityPercentage":"63.5%","self":false,"text":"起来以计算复杂的逻辑表达式。<em class='similar'>03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4),称为阈值逻辑单元"}],"textWithDynamicClass":"<em class='similar T91I0' onmouseover=\"highlightSetter('T91I0',false)\" onmouseout=\"highlightSetter('T91I0',true)\">感知器架构是最为简单的神经网络基础架构之一。</em>","similar_word_count":21,"text":"<em class='similar'>感知器架构是最为简单的神经网络基础架构之一。</em>","suggest":{"synonyms":[],"keyword":["感知器","架构","神经网络","基础架构"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":132.57143,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar 92S226I5' onmouseover=\"highlightSetter('92S226I5',false)\" onmouseout=\"highlightSetter('92S226I5',true)\">,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入","datatype":"webpage","clcs":[],"similarityPercentage":"64.9%","self":false,"text":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar'>,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入"}],"textWithDynamicClass":"结构如图2.25所示,<em class='similar T91I2' onmouseover=\"highlightSetter('T91I2',false)\" onmouseout=\"highlightSetter('T91I2',true)\">图中所示神经元结构称为阈值逻辑单元</em>","similar_word_count":17,"text":"结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>","suggest":{"synonyms":[],"keyword":["神经元结构","阈值","逻辑单元","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":132.57143,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar 92S226I5' onmouseover=\"highlightSetter('92S226I5',false)\" onmouseout=\"highlightSetter('92S226I5',true)\">,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入","datatype":"webpage","clcs":[],"similarityPercentage":"70.4%","self":false,"text":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar'>,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入"}],"textWithDynamicClass":"(TLU),<em class='similar T91I4' onmouseover=\"highlightSetter('T91I4',false)\" onmouseout=\"highlightSetter('T91I4',true)\">也称为阈值逻辑值单元</em>","similar_word_count":10,"text":"(TLU),<em class='similar'>也称为阈值逻辑值单元</em>","suggest":{"synonyms":[],"keyword":["阈值","逻辑值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":355.6842,"teacher":"","textWithDynamicClass":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar 93S227I8' onmouseover=\"highlightSetter('93S227I8',false)\" onmouseout=\"highlightSetter('93S227I8',true)\">(而不是二进制开/关值)</em><em class='similar 93S227I9' onmouseover=\"highlightSetter('93S227I9',false)\" onmouseout=\"highlightSetter('93S227I9',true)\">,并且每个输入连接都与权重相关联。</em>TLU计算其输入的加权总和","datatype":"webpage","clcs":[],"similarityPercentage":"78.3%","self":false,"text":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar'>(而不是二进制开/关值)</em><em class='similar'>,并且每个输入连接都与权重相关联。</em>TLU计算其输入的加权总和"}],"textWithDynamicClass":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar T92I0' onmouseover=\"highlightSetter('T92I0',false)\" onmouseout=\"highlightSetter('T92I0',true)\">而不是二进制的0/1值,</em><em class='similar T92I1' onmouseover=\"highlightSetter('T92I1',false)\" onmouseout=\"highlightSetter('T92I1',true)\">并且每个输入连接都有对应的相关联的权重值</em>","similar_word_count":30,"text":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>","suggest":{"synonyms":[],"keyword":["二进制","相关联","权重值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":355.6842,"teacher":"","textWithDynamicClass":",并且每个输入连接都与权重相关联。<em class='similar 93S227I10' onmouseover=\"highlightSetter('93S227I10',false)\" onmouseout=\"highlightSetter('93S227I10',true)\">TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar 93S227I12' onmouseover=\"highlightSetter('93S227I12',false)\" onmouseout=\"highlightSetter('93S227I12',true)\">,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar 93S227I20' onmouseover=\"highlightSetter('93S227I20',false)\" onmouseout=\"highlightSetter('93S227I20',true)\">计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav","datatype":"webpage","clcs":[],"similarityPercentage":"77.3%","self":false,"text":",并且每个输入连接都与权重相关联。<em class='similar'>TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar'>,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar'>计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav"}],"textWithDynamicClass":"[44]。<em class='similar T92I3' onmouseover=\"highlightSetter('T92I3',false)\" onmouseout=\"highlightSetter('T92I3',true)\">TLU来计算输入的加权和,</em><em class='similar T92I4' onmouseover=\"highlightSetter('T92I4',false)\" onmouseout=\"highlightSetter('T92I4',true)\">其中阶跃函数将使用加权和来输出学习结果,</em>","similar_word_count":29,"text":"[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>","suggest":{"synonyms":[],"keyword":["加权和","阶跃函数","学习结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":414.4,"teacher":"","textWithDynamicClass":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar 95S229I8' onmouseover=\"highlightSetter('95S229I8',false)\" onmouseout=\"highlightSetter('95S229I8',true)\">当��层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,该层称为全连接层或密集层。","datatype":"webpage","clcs":[],"similarityPercentage":"98.0%","self":false,"text":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,该层称为全连接层或密集层。"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":310.93332,"teacher":"","textWithDynamicClass":"。感知器简单地由一层TLUs组成,每个TLU连接到所有输入。<em class='similar 95S230I5' onmouseover=\"highlightSetter('95S230I5',false)\" onmouseout=\"highlightSetter('95S230I5',true)\">当一层中的所有神经元都连接到前一层的每个神经元,</em>该层就称为全连接层,","datatype":"webpage","clcs":[],"similarityPercentage":"91.7%","self":false,"text":"。感知器简单地由一层TLUs组成,每个TLU连接到所有输入。<em class='similar'>当一层中的所有神经元都连接到前一层的每个神经元,</em>该层就称为全连接层,"},{"profession":false,"keywords":[],"year":"","docid":"9000139098839511","author":"","university":"","source":"网页","title":"基于卷积神经网络的目标检测研究综述 - 道客巴巴","url":"http://www.doc88.com/p%2D7734946759179.html","reference":false,"similarScore":129.59998,"teacher":"","textWithDynamicClass":"图个数一致,即 Nl+1=N l。全连接层位于特征提取之后,<em class='similar 95S233I8' onmouseover=\"highlightSetter('95S233I8',false)\" onmouseout=\"highlightSetter('95S233I8',true)\">将前一层的所有神经元与当前层的每个神经元相连接。</em>全连接层会根据输出层的具体任务,有针对性地对高层特","datatype":"webpage","clcs":[],"similarityPercentage":"75.1%","self":false,"text":"图个数一致,即 Nl+1=N l。全连接层位于特征提取之后,<em class='similar'>将前一层的所有神经元与当前层的每个神经元相连接。</em>全连接层会根据输出层的具体任务,有针对性地对高层特"},{"profession":false,"keywords":[],"year":"","docid":"9000121121254211","author":"","university":"","source":"网页","title":"基于神经网络实现光网络OSNR估计及链路软故障定位 - 道客巴巴","url":"http://www.doc88.com/p-19729069278233.html","reference":false,"similarScore":102.40001,"teacher":"","textWithDynamicClass":"一结构进行了抽象,也称&quot;阈值逻辑单元&quot;,<em class='similar 95S231I3' onmouseover=\"highlightSetter('95S231I3',false)\" onmouseout=\"highlightSetter('95S231I3',true)\">每个神经元与上一层和下一层神经元均有连接,</em>每个连接都有一个权重值,也称为连接权,上一层的神经","datatype":"webpage","clcs":[],"similarityPercentage":"71.6%","self":false,"text":"一结构进行了抽象,也称&quot;阈值逻辑单元&quot;,<em class='similar'>每个神经元与上一层和下一层神经元均有连接,</em>每个连接都有一个权重值,也称为连接权,上一层的神经"},{"profession":false,"keywords":[],"year":"","docid":"9000108185583711","author":"csdn","university":"","source":"网页","title":"零基础入门深度学习(4) - 卷积神经网络_weixin_34357928的博客-CSDN博客","url":"https://blog.csdn.net/weixin_34357928/article/details/90586497","reference":false,"similarScore":166.79999,"teacher":"","textWithDynamicClass":"小的FeatureMap。图1所示网络的最后两层是全连接层。<em class='similar 95S232I6' onmouseover=\"highlightSetter('95S232I6',false)\" onmouseout=\"highlightSetter('95S232I6',true)\">第一个全连接层的每个神经元,</em><em class='similar 95S232I7' onmouseover=\"highlightSetter('95S232I7',false)\" onmouseout=\"highlightSetter('95S232I7',true)\">和上一层5个FeatureMap中的每个神经元相连,</em>第二个全连接层(也就是输出层)<em class='similar 95S232I10' onmouseover=\"highlightSetter('95S232I10',false)\" onmouseout=\"highlightSetter('95S232I10',true)\">的每个神经元,</em><em class='similar 95S232I11' onmouseover=\"highlightSetter('95S232I11',false)\" onmouseout=\"highlightSetter('95S232I11',true)\">则和第一个全连接层的每个神经元相连,</em>这样得到了整个网络的输出。至此,我们对卷积神经网络","datatype":"webpage","clcs":[],"similarityPercentage":"48.5%","self":false,"text":"小的FeatureMap。图1所示网络的最后两层是全连接层。<em class='similar'>第一个全连接层的每个神经元,</em><em class='similar'>和上一层5个FeatureMap中的每个神经元相连,</em>第二个全连接层(也就是输出层)<em class='similar'>的每个神经元,</em><em class='similar'>则和第一个全连接层的每个神经元相连,</em>这样得到了整个网络的输出。至此,我们对卷积神经网络"}],"textWithDynamicClass":"感知器是一层阈值逻辑单元单元所构成的,每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar T94I2' onmouseover=\"highlightSetter('T94I2',false)\" onmouseout=\"highlightSetter('T94I2',true)\">当一层中的所有神经元都连接到上一层中的每个神经元时,</em>","similar_word_count":25,"text":"感知器是一层阈值逻辑单元单元所构成的,每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元时,</em>","suggest":{"synonyms":[],"keyword":["一层","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":414.4,"teacher":"","textWithDynamicClass":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。当一层中的所有神经元都连接到上一层中的每个神经元(即其输入神经元)时,<em class='similar 95S229I11' onmouseover=\"highlightSetter('95S229I11',false)\" onmouseout=\"highlightSetter('95S229I11',true)\">该层称为全连接层或密集层。</em>感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar 95S229I14' onmouseover=\"highlightSetter('95S229I14',false)\" onmouseout=\"highlightSetter('95S229I14',true)\">所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通","datatype":"webpage","clcs":[],"similarityPercentage":"92.6%","self":false,"text":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。当一层中的所有神经元都连接到上一层中的每个神经元(即其输入神经元)时,<em class='similar'>该层称为全连接层或密集层。</em>感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar'>所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":310.93332,"teacher":"","textWithDynamicClass":"。感知器简单地由一层TLUs组成,每个TLU连接到所有输入。当一层中的所有神经元都连接到前一层的每个神经元,<em class='similar 95S230I6' onmouseover=\"highlightSetter('95S230I6',false)\" onmouseout=\"highlightSetter('95S230I6',true)\">该层就称为全连接层,</em><em class='similar 95S230I7' onmouseover=\"highlightSetter('95S230I7',false)\" onmouseout=\"highlightSetter('95S230I7',true)\">或稠密层。</em><em class='similar 95S230I8' onmouseover=\"highlightSetter('95S230I8',false)\" onmouseout=\"highlightSetter('95S230I8',true)\">感知器的输入被送到输入神经元:</em>它们的输出等于输入。此外,通常添加额外的偏置特征(","datatype":"webpage","clcs":[],"similarityPercentage":"79.6%","self":false,"text":"。感知器简单地由一层TLUs组成,每个TLU连接到所有输入。当一层中的所有神经元都连接到前一层的每个神经元,<em class='similar'>该层就称为全连接层,</em><em class='similar'>或稠密层。</em><em class='similar'>感知器的输入被送到输入神经元:</em>它们的输出等于输入。此外,通常添加额外的偏置特征("}],"textWithDynamicClass":"当一层中的所有神经元都连接到上一层中的每个神经元时,<em class='similar T94I3' onmouseover=\"highlightSetter('T94I3',false)\" onmouseout=\"highlightSetter('T94I3',true)\">该层通常称为全连接层。</em><em class='similar T94I4' onmouseover=\"highlightSetter('T94I4',false)\" onmouseout=\"highlightSetter('T94I4',true)\">所有输入神经元形成输入层,</em>","similar_word_count":22,"text":"当一层中的所有神经元都连接到上一层中的每个神经元时,<em class='similar'>该层通常称为全连接层。</em><em class='similar'>所有输入神经元形成输入层,</em>","suggest":{"synonyms":[],"keyword":["神经元","连接层","输入层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":427.7545,"teacher":"","textWithDynamicClass":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,<em class='similar 96S234I8' onmouseover=\"highlightSetter('96S234I8',false)\" onmouseout=\"highlightSetter('96S234I8',true)\">通常会添加一个额外的偏置特征</em>(x0=1):通常使用一种称为\"偏置神经元\"的特殊类型的神经元来表示该特征,","datatype":"webpage","clcs":[],"similarityPercentage":"65.7%","self":false,"text":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,<em class='similar'>通常会添加一个额外的偏置特征</em>(x0=1):通常使用一种称为\"偏置神经元\"的特殊类型的神经元来表示该特征,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":337.92114,"teacher":"","textWithDynamicClass":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)<em class='similar 96S235I7' onmouseover=\"highlightSetter('96S235I7',false)\" onmouseout=\"highlightSetter('96S235I7',true)\">。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,</em>它总是输出1。下图表示具有两个输入和三个输出的感知器。","datatype":"webpage","clcs":[],"similarityPercentage":"36.7%","self":false,"text":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)<em class='similar'>。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,</em>它总是输出1。下图表示具有两个输入和三个输出的感知器。"}],"textWithDynamicClass":"该层通常称为全连接层。所有输入神经元形成输入层,用以与感知器的输入数据互联。同时,<em class='similar T95I2' onmouseover=\"highlightSetter('T95I2',false)\" onmouseout=\"highlightSetter('T95I2',true)\">每一个神经元会特别增加一个额外的偏置特征 ,</em>","similar_word_count":20,"text":"该层通常称为全连接层。所有输入神经元形成输入层,用以与感知器的输入数据互联。同时,<em class='similar'>每一个神经元会特别增加一个额外的偏置特征 ,</em>","suggest":{"synonyms":[{"synonyms":["分外"],"keyword":"额外"}],"keyword":["神经元","额外","偏置"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":427.7545,"teacher":"","textWithDynamicClass":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,通常会添加一个额外的偏置特征(x0=1)<em class='similar 96S234I10' onmouseover=\"highlightSetter('96S234I10',false)\" onmouseout=\"highlightSetter('96S234I10',true)\">:通常使用一种称为&quot;偏置神经元&quot;的特殊类型的神经元来表示该特征,</em>该神经元始终输出1。具有两个输入和三个输出的感知器如图5所示。","datatype":"webpage","clcs":[],"similarityPercentage":"62.0%","self":false,"text":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,通常会添加一个额外的偏置特征(x0=1)<em class='similar'>:通常使用一种称为&quot;偏置神经元&quot;的特殊类型的神经元来表示该特征,</em>该神经元始终输出1。具有两个输入和三个输出的感知器如图5所示。"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":337.92114,"teacher":"","textWithDynamicClass":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)<em class='similar 96S235I7' onmouseover=\"highlightSetter('96S235I7',false)\" onmouseout=\"highlightSetter('96S235I7',true)\">。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,</em>它总是输出1。下图表示具有两个输入和三个输出的感知器。","datatype":"webpage","clcs":[],"similarityPercentage":"44.5%","self":false,"text":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)<em class='similar'>。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,</em>它总是输出1。下图表示具有两个输入和三个输出的感知器。"}],"textWithDynamicClass":"每一个神经元会特别增加一个额外的偏置特征 ,<em class='similar T95I3' onmouseover=\"highlightSetter('T95I3',false)\" onmouseout=\"highlightSetter('T95I3',true)\">并通过偏置神经元</em><em class='similar T95I4' onmouseover=\"highlightSetter('T95I4',false)\" onmouseout=\"highlightSetter('T95I4',true)\">(一种特殊类型的神经元)</em>","similar_word_count":18,"text":"每一个神经元会特别增加一个额外的偏��特征 ,<em class='similar'>并通过偏置神经元</em><em class='similar'>(一种特殊类型的神经元)</em>","suggest":{"synonyms":[],"keyword":["神经元","偏置","特殊类型"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":427.7545,"teacher":"","textWithDynamicClass":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,通常会添加一个额外的偏置特征(x0=1)<em class='similar 96S234I10' onmouseover=\"highlightSetter('96S234I10',false)\" onmouseout=\"highlightSetter('96S234I10',true)\">:通常使用一种称为&quot;偏置神经元&quot;的特殊类型的神经元来表示该特征,</em>该神经元始终输出1。<em class='similar 96S234I12' onmouseover=\"highlightSetter('96S234I12',false)\" onmouseout=\"highlightSetter('96S234I12',true)\">具有两个输入和三个输出的感知器如图5所示。</em>该感知器可以将实例同时分为三个不同的二进制类,","datatype":"webpage","clcs":[],"similarityPercentage":"53.6%","self":false,"text":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,通常会添加一个额外的偏置特征(x0=1)<em class='similar'>:通常使用一种称为&quot;偏置神经元&quot;的特殊类型的神经元来表示该特征,</em>该神经元始终输出1。<em class='similar'>具有两个输入和三个输出的感知器如图5所示。</em>该感知器可以将实例同时分为三个不同的二进制类,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":337.92114,"teacher":"","textWithDynamicClass":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,它总是输出1。<em class='similar 96S235I9' onmouseover=\"highlightSetter('96S235I9',false)\" onmouseout=\"highlightSetter('96S235I9',true)\">下图表示具有两个输入和三个输出的感知器。</em>该感知器可以将实例同时分类为三个不同的二进制类,","datatype":"webpage","clcs":[],"similarityPercentage":"47.4%","self":false,"text":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,它总是输出1。<em class='similar'>下图表示具有两个输入和三个输出的感知器。</em>该感知器可以将实例同时分类为三个不同的二进制类,"}],"textWithDynamicClass":"并通过偏置神经元(一种特殊类型的神经元)<em class='similar T95I5' onmouseover=\"highlightSetter('T95I5',false)\" onmouseout=\"highlightSetter('T95I5',true)\">来保证其输出始终为1。</em><em class='similar T95I6' onmouseover=\"highlightSetter('T95I6',false)\" onmouseout=\"highlightSetter('T95I6',true)\">具有 ,</em><em class='similar T95I7' onmouseover=\"highlightSetter('T95I7',false)\" onmouseout=\"highlightSetter('T95I7',true)\"> 作为输入的感知器如图2.26所示。</em>","similar_word_count":26,"text":"并通过偏置神经元(一种特殊类型的神经元)<em class='similar'>来保证其输出始终为1。</em><em class='similar'>具有 ,</em><em class='similar'> 作为输入的感知器如图2.26所示。</em>","suggest":{"synonyms":[],"keyword":["感知器","2.26所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":427.7545,"teacher":"","textWithDynamicClass":"该神经元始终输出1。具有两个输入和三个输出的感知器如图5所示。<em class='similar 96S234I13' onmouseover=\"highlightSetter('96S234I13',false)\" onmouseout=\"highlightSetter('96S234I13',true)\">该感知器可以将实例同时分为三个不同的二进制类,</em>这使其成为多输出分类器。图5.具有两个输入神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"该神经元始终输出1。具有两个输入和三个输出的感知器如图5所示。<em class='similar'>该感知器可以将实例同时分为三个不同的二进制类,</em>这使其成为多输出分类器。图5.具有两个输入神经元,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":337.92114,"teacher":"","textWithDynamicClass":"它总是输出1。下图表示具有两个输入和三个输出的感知器。<em class='similar 96S235I10' onmouseover=\"highlightSetter('96S235I10',false)\" onmouseout=\"highlightSetter('96S235I10',true)\">该感知器可以将实例同时分类为三个不同的二进制类,</em>这使得它是一个多输出分类器。由于线性代数的魔力,下","datatype":"webpage","clcs":[],"similarityPercentage":"56.8%","self":false,"text":"它总是输出1。下图表示具有两个输入和三个输出的感知器。<em class='similar'>该感知器可以将实例同时分类为三个不同的二进制类,</em>这使得它是一个多输出分类器。由于线性代数的魔力,下"}],"textWithDynamicClass":"来保证其输出始终为1。具有 , 作为输入的感知器如图2.26所示。<em class='similar T95I8' onmouseover=\"highlightSetter('T95I8',false)\" onmouseout=\"highlightSetter('T95I8',true)\">该感知器可以将输入的数据同时借由输入层来分为三个不同的二进制类,</em>","similar_word_count":31,"text":"来保证其输出始终为1。具有 , 作为输入的感知器如图2.26所示。<em class='similar'>该感知器可以将输入的数据同时借由输入层来分为三个不同的二进制类,</em>","suggest":{"synonyms":[],"keyword":["感知器","输入层","二进制"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015758038411","author":"","university":"","source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f","reference":false,"similarScore":290.44885,"teacher":"","textWithDynamicClass":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar 97S238I4' onmouseover=\"highlightSetter('97S238I4',false)\" onmouseout=\"highlightSetter('97S238I4',true)\">Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,这两个神经元之间的联系就会变得更强。","datatype":"webpage","clcs":[],"similarityPercentage":"57.8%","self":false,"text":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar'>Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,这两个神经元之间的联系就会变得更强。"}],"textWithDynamicClass":"<em class='similar T96I0' onmouseover=\"highlightSetter('T96I0',false)\" onmouseout=\"highlightSetter('T96I0',true)\">关于感知器的训练算法,</em><em class='similar T96I1' onmouseover=\"highlightSetter('T96I1',false)\" onmouseout=\"highlightSetter('T96I1',true)\">其很大程度上受到 规则的启发,</em>","similar_word_count":23,"text":"<em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到 规则的启发,</em>","suggest":{"synonyms":[{"synonyms":["引导"],"keyword":"启发"}],"keyword":["感知器","训练算法","启发"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015758038411","author":"","university":"","source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f","reference":false,"similarScore":290.44885,"teacher":"","textWithDynamicClass":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar 97S238I8' onmouseover=\"highlightSetter('97S238I8',false)\" onmouseout=\"highlightSetter('97S238I8',true)\">这两个神经元之间的联系就会变得更强。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar'>这两个神经元之间的联系就会变得更强。</em>"}],"textWithDynamicClass":"当两个神经元在某种情况下经常进行交互时,<em class='similar T96I3' onmouseover=\"highlightSetter('T96I3',false)\" onmouseout=\"highlightSetter('T96I3',true)\">这两个神经元之间的互联关系便会得到加强,</em>","similar_word_count":19,"text":"当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>","suggest":{"synonyms":[],"keyword":["神经元","互联关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":145.20587,"teacher":"","textWithDynamicClass":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar 98S239I6' onmouseover=\"highlightSetter('98S239I6',false)\" onmouseout=\"highlightSetter('98S239I6',true)\">感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"77.8%","self":false,"text":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar'>感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,"}],"textWithDynamicClass":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,<em class='similar T97I0' onmouseover=\"highlightSetter('T97I0',false)\" onmouseout=\"highlightSetter('T97I0',true)\">感知器每一次训练被送入一个训练样本,</em>","similar_word_count":17,"text":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["感知器","训练","送入","训练样本"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":145.20587,"teacher":"","textWithDynamicClass":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,感知器一次被送入一个训练实例,并且针对每个实例进行预测。<em class='similar 98S239I8' onmouseover=\"highlightSetter('98S239I8',false)\" onmouseout=\"highlightSetter('98S239I8',true)\">对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的","datatype":"webpage","clcs":[],"similarityPercentage":"72.0%","self":false,"text":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,感知器一次被送入一个训练实例,并且针对每个实例进行预测。<em class='similar'>对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的"}],"textWithDynamicClass":"同时每个训练样本进行预测。<em class='similar T97I2' onmouseover=\"highlightSetter('T97I2',false)\" onmouseout=\"highlightSetter('T97I2',true)\">从而对产生错误预测的神经元的权重进行调整,</em>","similar_word_count":20,"text":"同时每个训练样本进行预测。<em class='similar'>从而对产生错误预测的神经元的权重进行调整,</em>","suggest":{"synonyms":[],"keyword":["错误预测","神经元","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":198.70192,"teacher":"","textWithDynamicClass":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar 99S240I6' onmouseover=\"highlightSetter('99S240I6',false)\" onmouseout=\"highlightSetter('99S240I6',true)\">它会增强来自输入的连接权重,</em><em class='similar 99S240I7' onmouseover=\"highlightSetter('99S240I7',false)\" onmouseout=\"highlightSetter('99S240I7',true)\">这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更","datatype":"webpage","clcs":[],"similarityPercentage":"87.4%","self":false,"text":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar'>它会增强来自输入的连接权重,</em><em class='similar'>这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更"}],"textWithDynamicClass":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,如增大,<em class='similar T98I0' onmouseover=\"highlightSetter('T98I0',false)\" onmouseout=\"highlightSetter('T98I0',true)\">从而增强来自输入的连接权重,</em><em class='similar T98I1' onmouseover=\"highlightSetter('T98I1',false)\" onmouseout=\"highlightSetter('T98I1',true)\">这些神经元权重将有助于正确的预测,</em>","similar_word_count":29,"text":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,如增大,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>","suggest":{"synonyms":[],"keyword":["权重","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":630.46234,"teacher":"","textWithDynamicClass":"并且全连接到下一层。信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。<em class='similar 100S243I13' onmouseover=\"highlightSetter('100S243I13',false)\" onmouseout=\"highlightSetter('100S243I13',true)\">当人工神经网络有两个或多个隐含层时,</em><em class='similar 100S243I14' onmouseover=\"highlightSetter('100S243I14',false)\" onmouseout=\"highlightSetter('100S243I14',true)\">称为深度神经网络</em>(DNN)。","datatype":"webpage","clcs":[],"similarityPercentage":"63.9%","self":false,"text":"并且全连接到下一层。信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。<em class='similar'>当人工神经网络有两个或多个隐含层时,</em><em class='similar'>称为深度神经网络</em>(DNN)。"}],"textWithDynamicClass":"<em class='similar T99I0' onmouseover=\"highlightSetter('T99I0',false)\" onmouseout=\"highlightSetter('T99I0',true)\">多层感知器也称深度人工神经网络,</em>","similar_word_count":15,"text":"<em class='similar'>多层感知器也称深度人工神经网络,</em>","suggest":{"synonyms":[],"keyword":["多层感知器","人工神经网络","感知器","多层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":630.46234,"teacher":"","textWithDynamicClass":"<em class='similar 100S243I0' onmouseover=\"highlightSetter('100S243I0',false)\" onmouseout=\"highlightSetter('100S243I0',true)\">一个或多个称为隐藏层的TLU和一个称为输出层的TLU组成。</em>靠近输入层的隐含层通常称为下层,","datatype":"webpage","clcs":[],"similarityPercentage":"67.1%","self":false,"text":"<em class='similar'>一个或多个称为隐藏层的TLU和一个称为输出层的TLU组成。</em>靠近输入层的隐含层通常称为下层,"},{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":437.08557,"teacher":"","textWithDynamicClass":"-&gt;多层感知器多层感知器(MLP)<em class='similar 100S242I2' onmouseover=\"highlightSetter('100S242I2',false)\" onmouseout=\"highlightSetter('100S242I2',true)\">是由一个输入层、</em><em class='similar 100S242I3' onmouseover=\"highlightSetter('100S242I3',false)\" onmouseout=\"highlightSetter('100S242I3',true)\">一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。通常,","datatype":"webpage","clcs":[],"similarityPercentage":"65.9%","self":false,"text":"-&gt;多层感知器多层感知器(MLP)<em class='similar'>是由一个输入层、</em><em class='similar'>一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。通常,"},{"profession":false,"keywords":[],"year":"","docid":"9000111097854411","author":"csdn","university":"","source":"网页","title":"图层预测","url":"https://blog.csdn.net/x454045816/article/details/92139575","reference":false,"similarScore":221.58383,"teacher":"","textWithDynamicClass":"一个MLP由一个(直通)<em class='similar 100S244I2' onmouseover=\"highlightSetter('100S244I2',false)\" onmouseout=\"highlightSetter('100S244I2',true)\">输入层,</em><em class='similar 100S244I3' onmouseover=\"highlightSetter('100S244I3',false)\" onmouseout=\"highlightSetter('100S244I3',true)\">一个或多个LTU层组成,</em><em class='similar 100S244I4' onmouseover=\"highlightSetter('100S244I4',false)\" onmouseout=\"highlightSetter('100S244I4',true)\">称为隐藏层,</em><em class='similar 100S244I5' onmouseover=\"highlightSetter('100S244I5',false)\" onmouseout=\"highlightSetter('100S244I5',true)\">最后一层LTU称为输出层</em>(如下图所示)。除输出层以外的每一层都包含一个偏置神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"49.8%","self":false,"text":"一个MLP由一个(直通)<em class='similar'>输入层,</em><em class='similar'>一个或多个LTU层组成,</em><em class='similar'>称为隐藏层,</em><em class='similar'>最后一层LTU称为输出层</em>(如下图所示)。除输出层以外的每一层都包含一个偏置神经元,"},{"profession":false,"keywords":[],"year":"","docid":"9000198071294011","author":"","university":"","source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784","reference":false,"similarScore":117.233345,"teacher":"","textWithDynamicClass":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar 100S245I8' onmouseover=\"highlightSetter('100S245I8',false)\" onmouseout=\"highlightSetter('100S245I8',true)\">MLP 由一个输入层,</em><em class='similar 100S245I9' onmouseover=\"highlightSetter('100S245I9',false)\" onmouseout=\"highlightSetter('100S245I9',true)\">一个或多个 TLU 层</em><em class='similar 100S245I10' onmouseover=\"highlightSetter('100S245I10',false)\" onmouseout=\"highlightSetter('100S245I10',true)\">(称为隐藏层)</em><em class='similar 100S245I11' onmouseover=\"highlightSetter('100S245I11',false)\" onmouseout=\"highlightSetter('100S245I11',true)\">和一个最后一层</em><em class='similar 100S245I12' onmouseover=\"highlightSetter('100S245I12',false)\" onmouseout=\"highlightSetter('100S245I12',true)\">(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神","datatype":"webpage","clcs":[],"similarityPercentage":"46.7%","self":false,"text":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar'>MLP 由一个输入层,</em><em class='similar'>一个或多个 TLU 层</em><em class='similar'>(称为隐藏层)</em><em class='similar'>和一个最后一层</em><em class='similar'>(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神"},{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":454.8743,"teacher":"","textWithDynamicClass":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar 100S241I11' onmouseover=\"highlightSetter('100S241I11',false)\" onmouseout=\"highlightSetter('100S241I11',true)\">输入层,</em>一层或多层TLU<em class='similar 100S241I13' onmouseover=\"highlightSetter('100S241I13',false)\" onmouseout=\"highlightSetter('100S241I13',true)\">(称为隐藏层)</em><em class='similar 100S241I14' onmouseover=\"highlightSetter('100S241I14',false)\" onmouseout=\"highlightSetter('100S241I14',true)\">和一个TLU的最后一层</em><em class='similar 100S241I15' onmouseover=\"highlightSetter('100S241I15',false)\" onmouseout=\"highlightSetter('100S241I15',true)\">(称为输出层)</em>组成(请参见图7)。靠近输入层的层通常称为较低层,","datatype":"webpage","clcs":[],"similarityPercentage":"38.1%","self":false,"text":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar'>输入层,</em>一层或多层TLU<em class='similar'>(称为隐藏层)</em><em class='similar'>和一个TLU的最后一层</em><em class='similar'>(称为输出层)</em>组成(请参见图7)。靠近输入层的层通常称为较低层,"}],"textWithDynamicClass":"则是在上述感知器的基础上,<em class='similar T99I2' onmouseover=\"highlightSetter('T99I2',false)\" onmouseout=\"highlightSetter('T99I2',true)\">由一层输入层、</em><em class='similar T99I3' onmouseover=\"highlightSetter('T99I3',false)\" onmouseout=\"highlightSetter('T99I3',true)\">一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。</em>","similar_word_count":31,"text":"则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。</em>","suggest":{"synonyms":[],"keyword":["一层","输入层","多层","隐藏层","输出层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":437.08557,"teacher":"","textWithDynamicClass":"一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络(ANN)。<em class='similar 100S242I5' onmouseover=\"highlightSetter('100S242I5',false)\" onmouseout=\"highlightSetter('100S242I5',true)\">通常,</em><em class='similar 100S242I6' onmouseover=\"highlightSetter('100S242I6',false)\" onmouseout=\"highlightSetter('100S242I6',true)\">靠近输入层的层称为较低层,</em><em class='similar 100S242I7' onmouseover=\"highlightSetter('100S242I7',false)\" onmouseout=\"highlightSetter('100S242I7',true)\">靠近输出层的层称为外层,</em>除输出层外的每一层都包含一个偏置神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"69.1%","self":false,"text":"一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络(ANN)。<em class='similar'>通常,</em><em class='similar'>靠近输入层的层称为较低层,</em><em class='similar'>靠近输出层的层称为外层,</em>除输出层外的每一层都包含一个偏置神经元,"},{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":454.8743,"teacher":"","textWithDynamicClass":"(称为输出层)组成(请参见图7)<em class='similar 100S241I18' onmouseover=\"highlightSetter('100S241I18',false)\" onmouseout=\"highlightSetter('100S241I18',true)\">。靠近输入层的层通常称为较低层,</em><em class='similar 100S241I19' onmouseover=\"highlightSetter('100S241I19',false)\" onmouseout=\"highlightSetter('100S241I19',true)\">靠近输出层的层通常称为较高层。</em>除输出层外的每一层都包含一个偏置神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"67.4%","self":false,"text":"(称为输出层)组成(请参见图7)<em class='similar'>。靠近输入层的层通常称为较低层,</em><em class='similar'>靠近输出层的层通常称为较高层。</em>除输出层外的每一层都包含一个偏置神经元,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":630.46234,"teacher":"","textWithDynamicClass":"一个或多个称为隐藏层的TLU和一个称为输出层的TLU组成。<em class='similar 100S243I1' onmouseover=\"highlightSetter('100S243I1',false)\" onmouseout=\"highlightSetter('100S243I1',true)\">靠近输入层的隐含层通常称为下层,</em><em class='similar 100S243I2' onmouseover=\"highlightSetter('100S243I2',false)\" onmouseout=\"highlightSetter('100S243I2',true)\">靠近输出层的隐含层通常称为上层。</em><em class='similar 100S243I3' onmouseover=\"highlightSetter('100S243I3',false)\" onmouseout=\"highlightSetter('100S243I3',true)\">除输出层外,</em><em class='similar 100S243I4' onmouseover=\"highlightSetter('100S243I4',false)\" onmouseout=\"highlightSetter('100S243I4',true)\">每一层都包括偏置神经元,</em><em class='similar 100S243I5' onmouseover=\"highlightSetter('100S243I5',false)\" onmouseout=\"highlightSetter('100S243I5',true)\">并与下一层完全相连。</em><em class='similar 100S243I6' onmouseover=\"highlightSetter('100S243I6',false)\" onmouseout=\"highlightSetter('100S243I6',true)\">除了输出层之外的每一层都包括一个偏置神经元,</em><em class='similar 100S243I7' onmouseover=\"highlightSetter('100S243I7',false)\" onmouseout=\"highlightSetter('100S243I7',true)\">并且全连接到下一层。</em>信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。<em class='similar 100S243I13' onmouseover=\"highlightSetter('100S243I13',false)\" onmouseout=\"highlightSetter('100S243I13',true)\">当人工神经网络有两个或多个隐含层时,</em><em class='similar 100S243I14' onmouseover=\"highlightSetter('100S243I14',false)\" onmouseout=\"highlightSetter('100S243I14',true)\">称为深度神经网络</em>(DNN)。","datatype":"webpage","clcs":[],"similarityPercentage":"50.5%","self":false,"text":"一个或多个称为隐藏层的TLU和一个称为输出层的TLU组成。<em class='similar'>靠近输入层的隐含层通常称为下层,</em><em class='similar'>靠近输出层的隐含层通常称为上层。</em><em class='similar'>除输出层外,</em><em class='similar'>每一层都包括偏置神经元,</em><em class='similar'>并与下一层完全相连。</em><em class='similar'>除了输出层之外的每一层都包括一个偏置神经元,</em><em class='similar'>并且全连接到下一层。</em>信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。<em class='similar'>当人工神经网络有两个或多个隐含层时,</em><em class='similar'>称为深度神经网络</em>(DNN)。"},{"profession":false,"keywords":[],"year":"","docid":"9000111097854411","author":"csdn","university":"","source":"网页","title":"图层预测","url":"https://blog.csdn.net/x454045816/article/details/92139575","reference":false,"similarScore":221.58383,"teacher":"","textWithDynamicClass":"最后一层LTU称为输出层(如下图所示)<em class='similar 100S244I7' onmouseover=\"highlightSetter('100S244I7',false)\" onmouseout=\"highlightSetter('100S244I7',true)\">。除输出层以外的每一层都包含一个偏置神经元,</em>并完全连接到下一层。","datatype":"webpage","clcs":[],"similarityPercentage":"50.4%","self":false,"text":"最后一层LTU称为输出层(如下图所示)<em class='similar'>。除输出层以外的每一层都包含一个偏置神经元,</em>并完全连接到下一层。"}],"textWithDynamicClass":"由一层输入层、一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。<em class='similar T99I4' onmouseover=\"highlightSetter('T99I4',false)\" onmouseout=\"highlightSetter('T99I4',true)\">靠近输入层级常称为较低层,</em><em class='similar T99I5' onmouseover=\"highlightSetter('T99I5',false)\" onmouseout=\"highlightSetter('T99I5',true)\">靠近输出的层通常为较高层。</em>","similar_word_count":24,"text":"由一层输入层、一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。<em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em>","suggest":{"synonyms":[{"synonyms":["靠拢"],"keyword":"靠近"}],"keyword":["输入层","靠近","层级","低层","高层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":437.08557,"teacher":"","textWithDynamicClass":"靠近输出层的层称为外层,<em class='similar 100S242I8' onmouseover=\"highlightSetter('100S242I8',false)\" onmouseout=\"highlightSetter('100S242I8',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 100S242I9' onmouseover=\"highlightSetter('100S242I9',false)\" onmouseout=\"highlightSetter('100S242I9',true)\">并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神","datatype":"webpage","clcs":[],"similarityPercentage":"74.6%","self":false,"text":"靠近输出层的层称为外层,<em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神"},{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":454.8743,"teacher":"","textWithDynamicClass":"靠近输出层的层通常称为较高层。<em class='similar 100S241I20' onmouseover=\"highlightSetter('100S241I20',false)\" onmouseout=\"highlightSetter('100S241I20',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 100S241I21' onmouseover=\"highlightSetter('100S241I21',false)\" onmouseout=\"highlightSetter('100S241I21',true)\">并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层","datatype":"webpage","clcs":[],"similarityPercentage":"72.7%","self":false,"text":"靠近输出层的层通常称为较高层。<em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层"},{"profession":false,"keywords":[],"year":"","docid":"9000111097854411","author":"csdn","university":"","source":"网页","title":"图层预测","url":"https://blog.csdn.net/x454045816/article/details/92139575","reference":false,"similarScore":221.58383,"teacher":"","textWithDynamicClass":"最后一层LTU称为输出层(如下图所示)<em class='similar 100S244I7' onmouseover=\"highlightSetter('100S244I7',false)\" onmouseout=\"highlightSetter('100S244I7',true)\">。除输出层以外的每一层都包含一个偏置神经元,</em><em class='similar 100S244I8' onmouseover=\"highlightSetter('100S244I8',false)\" onmouseout=\"highlightSetter('100S244I8',true)\">并完全连接到下一层。</em>当ANN具有两个或更多个隐藏层时,它被称为深度神经","datatype":"webpage","clcs":[],"similarityPercentage":"69.3%","self":false,"text":"最后一层LTU称为输出层(如下图所示)<em class='similar'>。除输出层以外的每一层都包含一个偏置神经元,</em><em class='similar'>并完全连接到下一层。</em>当ANN具有两个或更多个隐藏层时,它被称为深度神经"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":630.46234,"teacher":"","textWithDynamicClass":"靠近输出层的隐含层通常称为上层。<em class='similar 100S243I3' onmouseover=\"highlightSetter('100S243I3',false)\" onmouseout=\"highlightSetter('100S243I3',true)\">除输出层外,</em><em class='similar 100S243I4' onmouseover=\"highlightSetter('100S243I4',false)\" onmouseout=\"highlightSetter('100S243I4',true)\">每一层都包括偏置神经元,</em><em class='similar 100S243I5' onmouseover=\"highlightSetter('100S243I5',false)\" onmouseout=\"highlightSetter('100S243I5',true)\">并与下一层完全相连。</em><em class='similar 100S243I6' onmouseover=\"highlightSetter('100S243I6',false)\" onmouseout=\"highlightSetter('100S243I6',true)\">除了输出层之外的每一层都包括一个偏置神经元,</em><em class='similar 100S243I7' onmouseover=\"highlightSetter('100S243I7',false)\" onmouseout=\"highlightSetter('100S243I7',true)\">并且全连接到下一层。</em>信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。当人工神经网络有两个或多个隐含层时,","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"靠近输出层的隐含层通常称为上层。<em class='similar'>除输出层外,</em><em class='similar'>每一层都包括偏置神经元,</em><em class='similar'>并与下一层完全相连。</em><em class='similar'>除了输出层之外的每一层都包括一个偏置神经元,</em><em class='similar'>并且全连接到下一层。</em>信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。当人工神经网络有两个或多个隐含层时,"}],"textWithDynamicClass":"靠近输入层级常称为较低层,靠近输出的层通常为较高层。<em class='similar T99I6' onmouseover=\"highlightSetter('T99I6',false)\" onmouseout=\"highlightSetter('T99I6',true)\">每一层都拥有一个偏置神经元并全连接下一层神经元,</em><em class='similar T99I7' onmouseover=\"highlightSetter('T99I7',false)\" onmouseout=\"highlightSetter('T99I7',true)\">除输出层外。</em>","similar_word_count":28,"text":"靠近输入层级常称为较低层,靠近输出的层通常为较高层。<em class='similar'>每一层都拥有一个偏置神经元并全连接下一层神经元,</em><em class='similar'>除输出层外。</em>","suggest":{"synonyms":[],"keyword":["一层","输出层","偏置","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000104784138911","author":"","university":"","source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html","reference":false,"similarScore":293.0064,"teacher":"","textWithDynamicClass":"输出中观察到隐藏层的信息,隐层只有一层,所以称为单隐层网络。<em class='similar 101S249I3' onmouseover=\"highlightSetter('101S249I3',false)\" onmouseout=\"highlightSetter('101S249I3',true)\">常见的神经网络形如图3-3所示,</em>层级结构表示每层的神经元都与下一层的神经元相互连接,","datatype":"webpage","clcs":[],"similarityPercentage":"61.3%","self":false,"text":"输出中观察到隐藏层的信息,隐层只有一层,所以称为单隐层网络。<em class='similar'>常见的神经网络形如图3-3所示,</em>层级结构表示每层的神经元都与下一层的神经元相互连接,"},{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":320.39774,"teacher":"","textWithDynamicClass":"也不存在跨层链接,<em class='similar 101S247I9' onmouseover=\"highlightSetter('101S247I9',false)\" onmouseout=\"highlightSetter('101S247I9',true)\">这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而","datatype":"webpage","clcs":[],"similarityPercentage":"50.6%","self":false,"text":"也不存在跨层链接,<em class='similar'>这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而"},{"profession":false,"keywords":[],"year":"","docid":"9000059137910911","author":"","university":"","source":"网页","title":"从零开始-Machine Learning学习笔记(5)-神经网络 - CSDN博客","url":"http://blog.csdn.net/kabuto_hui/article/details/79885017","reference":false,"similarScore":430.516,"teacher":"","textWithDynamicClass":"要解决非线性可分的问题时,就需要考虑使用多层功能神经元。3.<em class='similar 101S248I5' onmouseover=\"highlightSetter('101S248I5',false)\" onmouseout=\"highlightSetter('101S248I5',true)\">多层前馈神经网络​常见的多层神经网络结构如下图所示:</em><em class='similar 101S248I6' onmouseover=\"highlightSetter('101S248I6',false)\" onmouseout=\"highlightSetter('101S248I6',true)\">​这种层级结构中,</em>每层的神经元与下一层神经元完全互联,","datatype":"webpage","clcs":[],"similarityPercentage":"31.5%","self":false,"text":"要解决非线性可分的问题时,就需要考虑使用多层功能神经元。3.<em class='similar'>多层前馈神经网络​常见的多层神经网络结构如下图所示:</em><em class='similar'>​这种层级结构中,</em>每层的神经元与下一层神经元完全互联,"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":681.94183,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。<em class='similar 101S246I1' onmouseover=\"highlightSetter('101S246I1',false)\" onmouseout=\"highlightSetter('101S246I1',true)\">常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar 101S246I2' onmouseover=\"highlightSetter('101S246I2',false)\" onmouseout=\"highlightSetter('101S246I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar 101S246I3' onmouseover=\"highlightSetter('101S246I3',false)\" onmouseout=\"highlightSetter('101S246I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 101S246I4' onmouseover=\"highlightSetter('101S246I4',false)\" onmouseout=\"highlightSetter('101S246I4',true)\">也不存在跨层相互连接。</em><em class='similar 101S246I5' onmouseover=\"highlightSetter('101S246I5',false)\" onmouseout=\"highlightSetter('101S246I5',true)\">这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar 101S246I6' onmouseover=\"highlightSetter('101S246I6',false)\" onmouseout=\"highlightSetter('101S246I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 101S246I7' onmouseover=\"highlightSetter('101S246I7',false)\" onmouseout=\"highlightSetter('101S246I7',true)\">隐层与输出层神经元对信号进行加工,</em><em class='similar 101S246I8' onmouseover=\"highlightSetter('101S246I8',false)\" onmouseout=\"highlightSetter('101S246I8',true)\">最终结果由输出层神经元输出,</em>也就是,<em class='similar 101S246I10' onmouseover=\"highlightSetter('101S246I10',false)\" onmouseout=\"highlightSetter('101S246I10',true)\">输入层神经元只负责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"17.3%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。<em class='similar'>常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em><em class='similar'>这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em><em class='similar'>最终结果由输出层神经元输出,</em>也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"}],"textWithDynamicClass":"<em class='similar T100I0' onmouseover=\"highlightSetter('T100I0',false)\" onmouseout=\"highlightSetter('T100I0',true)\">常见的人工神经网络结构是如图2.27所示的多层级结构,</em>","similar_word_count":24,"text":"<em class='similar'>常见的人工神经网络结构是如图2.27所示的多层级结构,</em>","suggest":{"synonyms":[{"synonyms":["酬劳"],"keyword":"人工"}],"keyword":["人工","神经网络结构","2.27所","层级结构","网络结构"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":320.39774,"teacher":"","textWithDynamicClass":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar 101S247I6' onmouseover=\"highlightSetter('101S247I6',false)\" onmouseout=\"highlightSetter('101S247I6',true)\">常见的一种是每层神经元与下一层神经元全互连,</em>神经元之间不存在同层连接,","datatype":"webpage","clcs":[],"similarityPercentage":"65.3%","self":false,"text":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar'>常见的一种是每层神经元与下一层神经元全互连,</em>神经元之间不存在同层连接,"},{"profession":false,"keywords":[],"year":"","docid":"9000104784138911","author":"","university":"","source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html","reference":false,"similarScore":293.0064,"teacher":"","textWithDynamicClass":"输出中观察到隐藏层的信息,隐层只有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,<em class='similar 101S249I4' onmouseover=\"highlightSetter('101S249I4',false)\" onmouseout=\"highlightSetter('101S249I4',true)\">层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar 101S249I5' onmouseover=\"highlightSetter('101S249I5',false)\" onmouseout=\"highlightSetter('101S249I5',true)\">同层的神经元之间不存在连接,</em>不同层的神经元不存在跨层的连接。","datatype":"webpage","clcs":[],"similarityPercentage":"57.4%","self":false,"text":"输出中观察到隐藏层的信息,隐层只有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,<em class='similar'>层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar'>同层的神经元之间不存在连接,</em>不同层的神经元不存在跨层的连接。"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":681.94183,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。常见的多层前馈神经网络结构如图2.3所示。<em class='similar 101S246I2' onmouseover=\"highlightSetter('101S246I2',false)\" onmouseout=\"highlightSetter('101S246I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em>神经元之间不存在同层相互连接,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"56.8%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。常见的多层前馈神经网络结构如图2.3所示。<em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em>神经元之间不存在同层相互连接,"},{"profession":false,"keywords":[],"year":"","docid":"9000059137910911","author":"","university":"","source":"网页","title":"从零开始-Machine Learning学习笔记(5)-神经网络 - CSDN博客","url":"http://blog.csdn.net/kabuto_hui/article/details/79885017","reference":false,"similarScore":430.516,"teacher":"","textWithDynamicClass":"这种层级结构中,<em class='similar 101S248I7' onmouseover=\"highlightSetter('101S248I7',false)\" onmouseout=\"highlightSetter('101S248I7',true)\">每层的神经元与下一层神经元完全互联,</em>但是同层不存在连接,也不存在跨层连接。","datatype":"webpage","clcs":[],"similarityPercentage":"54.8%","self":false,"text":"这种层级结构中,<em class='similar'>每层的神经元与下一层神经元完全互联,</em>但是同层不存在连接,也不存在跨层连接。"}],"textWithDynamicClass":"常见的人工神经网络结构是如图2.27所示的多层级结构,<em class='similar T100I1' onmouseover=\"highlightSetter('T100I1',false)\" onmouseout=\"highlightSetter('T100I1',true)\">每层的单个神经元与下一层神经元之间实现全连接,</em>","similar_word_count":22,"text":"常见的人工神经网络结构是如图2.27所示的多层级结构,<em class='similar'>每层的单个神经元与下一层神经元之间实现全连接,</em>","suggest":{"synonyms":[],"keyword":["单个","神经元","一层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":320.39774,"teacher":"","textWithDynamicClass":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,常见的一种是每层神经元与下一层神经元全互连,<em class='similar 101S247I7' onmouseover=\"highlightSetter('101S247I7',false)\" onmouseout=\"highlightSetter('101S247I7',true)\">神经元之间不存在同层连接,</em><em class='similar 101S247I8' onmouseover=\"highlightSetter('101S247I8',false)\" onmouseout=\"highlightSetter('101S247I8',true)\">也不存在跨层链接,</em>这样的结构通常称为\"多层前馈神经网络\",","datatype":"webpage","clcs":[],"similarityPercentage":"66.1%","self":false,"text":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,常见的一种是每层神经元与下一层神经元全互连,<em class='similar'>神经元之间不存在同层连接,</em><em class='similar'>也不存在跨层链接,</em>这样的结构通常称为\"多层前馈神经网络\","},{"profession":false,"keywords":[],"year":"","docid":"9000104784138911","author":"","university":"","source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html","reference":false,"similarScore":293.0064,"teacher":"","textWithDynamicClass":"层级结构表示每层的神经元都与下一层的神经元相互连接,<em class='similar 101S249I5' onmouseover=\"highlightSetter('101S249I5',false)\" onmouseout=\"highlightSetter('101S249I5',true)\">同层的神经元之间不存在连接,</em><em class='similar 101S249I6' onmouseover=\"highlightSetter('101S249I6',false)\" onmouseout=\"highlightSetter('101S249I6',true)\">不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏","datatype":"webpage","clcs":[],"similarityPercentage":"65.2%","self":false,"text":"层级结构表示每层的神经元都与下一层的神经元相互连接,<em class='similar'>同层的神经元之间不存在连接,</em><em class='similar'>不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":681.94183,"teacher":"","textWithDynamicClass":"图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,<em class='similar 101S246I3' onmouseover=\"highlightSetter('101S246I3',false)\" onmouseout=\"highlightSetter('101S246I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 101S246I4' onmouseover=\"highlightSetter('101S246I4',false)\" onmouseout=\"highlightSetter('101S246I4',true)\">也不存在跨层相互连接。</em>这样的神经网络通常被称为\"多层前馈神经网络\"。","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"64.2%","self":false,"text":"图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,<em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em>这样的神经网络通常被称为\"多层前馈神经网络\"。"},{"profession":false,"keywords":[],"year":"","docid":"9000059137910911","author":"","university":"","source":"网页","title":"从零开始-Machine Learning学习笔记(5)-神经网络 - CSDN博客","url":"http://blog.csdn.net/kabuto_hui/article/details/79885017","reference":false,"similarScore":430.516,"teacher":"","textWithDynamicClass":"每层的神经元与下一层神经元完全互联,但是同层不存在连接,<em class='similar 101S248I9' onmouseover=\"highlightSetter('101S248I9',false)\" onmouseout=\"highlightSetter('101S248I9',true)\">也不存在跨层连接。</em>这样的神经网络结构通常称为\"多层前馈神经网络\"。","datatype":"webpage","clcs":[],"similarityPercentage":"58.8%","self":false,"text":"每层的神经元与下一层神经元完全互联,但是同层不存在连接,<em class='similar'>也不存在跨层连接。</em>这样的神经网络结构通常称为\"多层前馈神经网络\"。"}],"textWithDynamicClass":"每层的单个神经元与下一层神经元之间实现全连接,<em class='similar T100I2' onmouseover=\"highlightSetter('T100I2',false)\" onmouseout=\"highlightSetter('T100I2',true)\">同层的神经元间也不会出现相互之间的连接,</em><em class='similar T100I3' onmouseover=\"highlightSetter('T100I3',false)\" onmouseout=\"highlightSetter('T100I3',true)\">跨层的神将元之间也不存在连接关系。</em>","similar_word_count":35,"text":"每层的单个神经元与下一层神经元之间实现全连接,<em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em>","suggest":{"synonyms":[],"keyword":["神经元","同层","相互之间","跨层","连接关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000059137910911","author":"","university":"","source":"网页","title":"从零开始-Machine Learning学习笔记(5)-神经网络 - CSDN博客","url":"http://blog.csdn.net/kabuto_hui/article/details/79885017","reference":false,"similarScore":430.516,"teacher":"","textWithDynamicClass":"要解决非线性可分的问题时,就需要考虑使用多层功能神经元。3.<em class='similar 101S248I5' onmouseover=\"highlightSetter('101S248I5',false)\" onmouseout=\"highlightSetter('101S248I5',true)\">多层前馈神经网络​常见的多层神经网络结构如下图所示:</em><em class='similar 101S248I6' onmouseover=\"highlightSetter('101S248I6',false)\" onmouseout=\"highlightSetter('101S248I6',true)\">​这种层级结构中,</em><em class='similar 101S248I7' onmouseover=\"highlightSetter('101S248I7',false)\" onmouseout=\"highlightSetter('101S248I7',true)\">每层的神经元与下一层神经元完全互联,</em>但是同层不存在连接,<em class='similar 101S248I9' onmouseover=\"highlightSetter('101S248I9',false)\" onmouseout=\"highlightSetter('101S248I9',true)\">也不存在跨层连接。</em><em class='similar 101S248I10' onmouseover=\"highlightSetter('101S248I10',false)\" onmouseout=\"highlightSetter('101S248I10',true)\">这样的神经网络结构通常称为&quot;多层前馈神经网络&quot;。</em>所谓前馈是指网络拓扑结构中不存在回路或环路,而不是","datatype":"webpage","clcs":[],"similarityPercentage":"72.6%","self":false,"text":"要解决非线性可分的问题时,就需要考虑使用多层功能神经元。3.<em class='similar'>多层前馈神经网络​常见的多层神经网络结构如下图所示:</em><em class='similar'>​这种层级结构中,</em><em class='similar'>每层的神经元与下一层神经元完全互联,</em>但是同层不存在连接,<em class='similar'>也不存在跨层连接。</em><em class='similar'>这样的神经网络结构通常称为&quot;多层前馈神经网络&quot;。</em>所谓前馈是指网络拓扑结构中不存在回路或环路,而不是"},{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":320.39774,"teacher":"","textWithDynamicClass":"也不存在跨层链接,<em class='similar 101S247I9' onmouseover=\"highlightSetter('101S247I9',false)\" onmouseout=\"highlightSetter('101S247I9',true)\">这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而","datatype":"webpage","clcs":[],"similarityPercentage":"72.3%","self":false,"text":"也不存在跨层链接,<em class='similar'>这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而"},{"profession":false,"keywords":[],"year":"","docid":"9000207992963011","author":"","university":"","source":"网页","title":"基于BP神经网络的煤矿配电网故障测距研究","url":"http://wenku.baidu.com/view/0057c0e0667d27284b73f242336c1eb91b3733f6.html","reference":false,"similarScore":45.000004,"teacher":"","textWithDynamicClass":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar 101S251I8' onmouseover=\"highlightSetter('101S251I8',false)\" onmouseout=\"highlightSetter('101S251I8',true)\">是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。","datatype":"webpage","clcs":[],"similarityPercentage":"64.0%","self":false,"text":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar'>是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":681.94183,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。<em class='similar 101S246I1' onmouseover=\"highlightSetter('101S246I1',false)\" onmouseout=\"highlightSetter('101S246I1',true)\">常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar 101S246I2' onmouseover=\"highlightSetter('101S246I2',false)\" onmouseout=\"highlightSetter('101S246I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar 101S246I3' onmouseover=\"highlightSetter('101S246I3',false)\" onmouseout=\"highlightSetter('101S246I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 101S246I4' onmouseover=\"highlightSetter('101S246I4',false)\" onmouseout=\"highlightSetter('101S246I4',true)\">也不存在跨层相互连接。</em><em class='similar 101S246I5' onmouseover=\"highlightSetter('101S246I5',false)\" onmouseout=\"highlightSetter('101S246I5',true)\">这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar 101S246I6' onmouseover=\"highlightSetter('101S246I6',false)\" onmouseout=\"highlightSetter('101S246I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 101S246I7' onmouseover=\"highlightSetter('101S246I7',false)\" onmouseout=\"highlightSetter('101S246I7',true)\">隐层与输出层神经元对信号进行加工,</em><em class='similar 101S246I8' onmouseover=\"highlightSetter('101S246I8',false)\" onmouseout=\"highlightSetter('101S246I8',true)\">最终结果由输出层神经元输出,</em>也就是,<em class='similar 101S246I10' onmouseover=\"highlightSetter('101S246I10',false)\" onmouseout=\"highlightSetter('101S246I10',true)\">输入层神经元只负责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.7%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。<em class='similar'>常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em><em class='similar'>这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em><em class='similar'>最终结果由输出层神经元输出,</em>也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"}],"textWithDynamicClass":"同层的神经元间也不会出现相互之间的连接,跨层的神将元之间也不存在连接关系。<em class='similar T100I4' onmouseover=\"highlightSetter('T100I4',false)\" onmouseout=\"highlightSetter('T100I4',true)\">这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>","similar_word_count":18,"text":"同层的神经元间也不会出现相互之间的连接,跨层的神将元之间也不存在连接关系。<em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>","suggest":{"synonyms":[],"keyword":["网络结构","多层前馈神经网络"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":681.94183,"teacher":"","textWithDynamicClass":"这样的神经网络通常被称为\"多层前馈神经网络\"。<em class='similar 101S246I6' onmouseover=\"highlightSetter('101S246I6',false)\" onmouseout=\"highlightSetter('101S246I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 101S246I7' onmouseover=\"highlightSetter('101S246I7',false)\" onmouseout=\"highlightSetter('101S246I7',true)\">隐层与输出层神经元对信号进行加工,</em><em class='similar 101S246I8' onmouseover=\"highlightSetter('101S246I8',false)\" onmouseout=\"highlightSetter('101S246I8',true)\">最终结果由输出层神经元输出,</em>也就是,<em class='similar 101S246I10' onmouseover=\"highlightSetter('101S246I10',false)\" onmouseout=\"highlightSetter('101S246I10',true)\">输入层神经元只��责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"62.1%","self":false,"text":"这样的神经网络通常被称为\"多层前馈神经网络\"。<em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em><em class='similar'>最终结果由输出层神经元输出,</em>也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"}],"textWithDynamicClass":"即多层感知器,<em class='similar T100I6' onmouseover=\"highlightSetter('T100I6',false)\" onmouseout=\"highlightSetter('T100I6',true)\">其中输入层神经元用以输入外部输入,</em><em class='similar T100I7' onmouseover=\"highlightSetter('T100I7',false)\" onmouseout=\"highlightSetter('T100I7',true)\">隐藏层和输出层用以处理神经信号,</em><em class='similar T100I8' onmouseover=\"highlightSetter('T100I8',false)\" onmouseout=\"highlightSetter('T100I8',true)\">最终结果由输出层输出预测结果;</em>","similar_word_count":45,"text":"即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em><em class='similar'>最终结果由输出层输出预测结果;</em>","suggest":{"synonyms":[],"keyword":["神经元","输入层","用以","外部输入","隐藏层","输出层","神经信号","预测结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203096006811","author":"","university":"","source":"网页","title":"BP神经网络原理及实践_IMWTJ123的博客-CSDN博客","url":"https://blog.csdn.net/imwtj123/article/details/88634384","reference":false,"similarScore":478.4915,"teacher":"","textWithDynamicClass":";这样的神经元称为&quot;多层前馈神经网络&quot;。<em class='similar 102S252I2' onmouseover=\"highlightSetter('102S252I2',false)\" onmouseout=\"highlightSetter('102S252I2',true)\">输入层只接受输入不处理函数，</em><em class='similar 102S252I3' onmouseover=\"highlightSetter('102S252I3',false)\" onmouseout=\"highlightSetter('102S252I3',true)\">隐含层和输出层包含功能函数。</em>神经网络的学习过程就是训练数据来调整神经元之间的\"连接权\"以及每个功能神经元的阈值，","datatype":"webpage","clcs":[],"similarityPercentage":"69.6%","self":false,"text":";这样的神经元称为&quot;多层前馈神经网络&quot;。<em class='similar'>输入层只接受输入不处理函数，</em><em class='similar'>隐含层和输出层包含功能函数。</em>神经网络的学习过程就是训练数据来调整神经元之间的\"连接权\"以及每个功能神经元的阈值，"},{"profession":false,"keywords":[],"year":"","docid":"9000134130400211","author":"","university":"","source":"网页","title":"深度学习入门整理学习（二）_joker-smart的博客-CSDN博客","url":"https://blog.csdn.net/qq_42746595/article/details/104074152","reference":false,"similarScore":240.96346,"teacher":"","textWithDynamicClass":"接,但无跨层连接。输入层只负责接收信号输入,无数据处理功能,<em class='similar 102S253I8' onmouseover=\"highlightSetter('102S253I8',false)\" onmouseout=\"highlightSetter('102S253I8',true)\">隐藏层和输出层是由具有信号处理功能的神经元组成。</em>神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,","datatype":"webpage","clcs":[],"similarityPercentage":"55.7%","self":false,"text":"接,但无跨层连接。输入层只负责接收信号输入,无数据处理功能,<em class='similar'>隐藏层和输出层是由具有信号处理功能的神经元组成。</em>神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,"},{"profession":false,"keywords":[],"year":"","docid":"9000103955678411","author":"","university":"","source":"网页","title":"第!&quot;卷!第#!","url":"","reference":false,"similarScore":227.3685,"teacher":"","textWithDynamicClass":"好的性质#如图#所示!神经网络是由若干神经元组成的多层结构!<em class='similar 102S254I3' onmouseover=\"highlightSetter('102S254I3',false)\" onmouseout=\"highlightSetter('102S254I3',true)\">包含输入层&quot;隐藏层和输出层#神经网络的学习过程就是通过不断调整各神经元之间的权重以使得输出结果的误差满足预设的区间#其优势在于自适应性和非线性映射能力!</em>它不需要对非线性系统有较多的信息就可以通过改变内部","datatype":"webpage","clcs":[],"similarityPercentage":"37.8%","self":false,"text":"好的性质#如图#所示!神经网络是由若干神经元组成的多层结构!<em class='similar'>包含输入层&quot;隐藏层和输出层#神经网络的学习过程就是通过不断调整各神经元之间的权重以使得输出结果的误差满足预设的区间#其优势在于自适应性和非线性映射能力!</em>它不需要对非线性系统有较多的信息就可以通过改变内部"}],"textWithDynamicClass":"其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,<em class='similar T101I1' onmouseover=\"highlightSetter('T101I1',false)\" onmouseout=\"highlightSetter('T101I1',true)\">输入层只接受输入而不对输入样本进行任何处理,</em><em class='similar T101I2' onmouseover=\"highlightSetter('T101I2',false)\" onmouseout=\"highlightSetter('T101I2',true)\">隐藏层和输出层包含函数神经元。</em>","similar_word_count":35,"text":"其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,<em class='similar'>输入层只接受输入而不对输入样本进行任何处理,</em><em class='similar'>隐藏层和输出层包含函数神经元。</em>","suggest":{"synonyms":[],"keyword":["输入层","输入样本","隐藏层","输出层","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203096006811","author":"","university":"","source":"网页","title":"BP神经网络原理及实践_IMWTJ123的博客-CSDN博客","url":"https://blog.csdn.net/imwtj123/article/details/88634384","reference":false,"similarScore":478.4915,"teacher":"","textWithDynamicClass":"隐含层和输出层包含功能函数。<em class='similar 102S252I4' onmouseover=\"highlightSetter('102S252I4',false)\" onmouseout=\"highlightSetter('102S252I4',true)\">神经网络的学习过程就是训练数据来调整神经元之间的&quot;连接权&quot;以及每个功能神经元的阈值，</em>即神经网络的学习蕴含在连接权和阈值中。","datatype":"webpage","clcs":[],"similarityPercentage":"74.4%","self":false,"text":"隐含层和输出层包含功能函数。<em class='similar'>神经网络的学习过程就是训练数据来调整神经元之间的&quot;连接权&quot;以及每个功能神经元的阈值，</em>即神经网络的学习蕴含在连接权和阈值中。"},{"profession":false,"keywords":[],"year":"","docid":"9000134130400211","author":"","university":"","source":"网页","title":"深度学习入门整理学习（二）_joker-smart的博客-CSDN博客","url":"https://blog.csdn.net/qq_42746595/article/details/104074152","reference":false,"similarScore":240.96346,"teacher":"","textWithDynamicClass":"接,但无跨层连接。输入层只负责接收信号输入,无数据处理功能,隐藏层和输出层是由具有信号处理功能的神经元组成。<em class='similar 102S253I9' onmouseover=\"highlightSetter('102S253I9',false)\" onmouseout=\"highlightSetter('102S253I9',true)\">神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们","datatype":"webpage","clcs":[],"similarityPercentage":"67.3%","self":false,"text":"接,但无跨层连接。输入层只负责接收信号输入,无数据处理功能,隐藏层和输出层是由具有信号处理功能的神经元组成。<em class='similar'>神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们"},{"profession":false,"keywords":[],"year":"","docid":"9000103955678411","author":"","university":"","source":"网页","title":"第!&quot;卷!第#!","url":"","reference":false,"similarScore":227.3685,"teacher":"","textWithDynamicClass":"好的性质#如图#所示!神经网络是由若干神经元组成的多层结构!<em class='similar 102S254I3' onmouseover=\"highlightSetter('102S254I3',false)\" onmouseout=\"highlightSetter('102S254I3',true)\">包含输入层&quot;隐藏层和输出层#神经网络的学习过程就是通过不断调整各神经元之间的权重以使得输出结果的误差满足预设的区间#其优势在于自适应性和非线性映射能力!</em>它不需要对非线性系统有较多的信息就可以通过改变内部","datatype":"webpage","clcs":[],"similarityPercentage":"45.3%","self":false,"text":"好的性质#如图#所示!神经网络是由若干神经元组成的多层结构!<em class='similar'>包含输入层&quot;隐藏层和输出层#神经网络的学习过程就是通过不断调整各神经元之间的权重以使得输出结果的误差满足预设的区间#其优势在于自适应性和非线性映射能力!</em>它不需要对非线性系统有较多的信息就可以通过改变内部"}],"textWithDynamicClass":"输入层只接受输入而不对输入样本进行任何处理,隐藏层和输出层包含函数神经元。<em class='similar T101I3' onmouseover=\"highlightSetter('T101I3',false)\" onmouseout=\"highlightSetter('T101I3',true)\">神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>","similar_word_count":43,"text":"输入层只接受输入而不对输入样本进行任何处理,隐藏层和输出层包含函数神经元。<em class='similar'>神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>","suggest":{"synonyms":[],"keyword":["神经元","神经网络","学习过程","训练样本","权重值","阈值","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203096006811","author":"","university":"","source":"网页","title":"BP神经网络原理及实践_IMWTJ123的博客-CSDN博客","url":"https://blog.csdn.net/imwtj123/article/details/88634384","reference":false,"similarScore":478.4915,"teacher":"","textWithDynamicClass":"神经网络的学习过程就是训练数据来调整神经元之间的\"连接权\"以及每个功能神经元的阈值，<em class='similar 102S252I5' onmouseover=\"highlightSetter('102S252I5',false)\" onmouseout=\"highlightSetter('102S252I5',true)\">即神经网络的学习蕴含在连接权和阈值中。</em>三、BP算法迄今最成功的神经网络学习算法是误差逆传","datatype":"webpage","clcs":[],"similarityPercentage":"75.4%","self":false,"text":"神经网络的学习过程就是训练数据来调整神经元之间的\"连接权\"以及每个功能神经元的阈值，<em class='similar'>即神经网络的学习蕴含在连接权和阈值中。</em>三、BP算法迄今最成功的神经网络学习算法是误差逆传"}],"textWithDynamicClass":"神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,<em class='similar T101I4' onmouseover=\"highlightSetter('T101I4',false)\" onmouseout=\"highlightSetter('T101I4',true)\">神经网络所学习的主要内容包含在连接权重和阈值中。</em>","similar_word_count":23,"text":"神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,<em class='similar'>神经网络所学习的主要内容包含在连接权重和阈值中。</em>","suggest":{"synonyms":[],"keyword":["神经网络","阈值","主要内容","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":531.69135,"teacher":"","textWithDynamicClass":"法,该算法至今仍在使用。简而言之,<em class='similar 103S257I3' onmouseover=\"highlightSetter('103S257I3',false)\" onmouseout=\"highlightSetter('103S257I3',true)\">它是使用有效的技术自动计算梯度下降:</em>在仅两次通过网络的过程中(一次前向,一次反向),反向传播算法能够针对每个模型参数计算网络误差的梯度。","datatype":"webpage","clcs":[],"similarityPercentage":"71.3%","self":false,"text":"法,该算法至今仍在使用。简而言之,<em class='similar'>它是使用有效的技术自动计算梯度下降:</em>在仅两次通过网络的过程中(一次前向,一次反向),反向传播算法能够针对每个模型参数计算网络误差的梯度。"}],"textWithDynamicClass":"当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,分为前向传播和后向传播。反向传播是目前使用的学习算法。<em class='similar T102I6' onmouseover=\"highlightSetter('T102I6',false)\" onmouseout=\"highlightSetter('T102I6',true)\">使用有效的技术自动计算此级别。</em>","similar_word_count":14,"text":"当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,分为前向传播和后向传播。反向传播是目前使用的学习算法。<em class='similar'>使用有效的技术自动计算此级别。</em>","suggest":{"synonyms":[],"keyword":["自动计算","级别"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":531.69135,"teacher":"","textWithDynamicClass":"法,该算法至今仍在使用。简而言之,它是使用有效的技术自动计算梯度下降:在仅两次通过网络的过程中(一次前向,一次反向)<em class='similar 103S257I7' onmouseover=\"highlightSetter('103S257I7',false)\" onmouseout=\"highlightSetter('103S257I7',true)\">,反向传播算法能够针对每个模型参数计算网络误差的梯度。</em>换句话说,","datatype":"webpage","clcs":[],"similarityPercentage":"73.2%","self":false,"text":"法,该算法至今仍在使用。简而言之,它是使用有效的技术自动计算梯度下降:在仅两次通过网络的过程中(一次前向,一次反向)<em class='similar'>,反向传播算法能够针对每个模型参数计算网络误差的梯度。</em>换句话说,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":398.4796,"teacher":"","textWithDynamicClass":"梯度的梯度下降算法:反向传播算法只需通过网络两次(一次前向,<em class='similar 103S256I5' onmouseover=\"highlightSetter('103S256I5',false)\" onmouseout=\"highlightSetter('103S256I5',true)\">一次后向)</em><em class='similar 103S256I6' onmouseover=\"highlightSetter('103S256I6',false)\" onmouseout=\"highlightSetter('103S256I6',true)\">,就能计算出网络误��关于每个模型参数的梯度。</em>换句话说,","datatype":"webpage","clcs":[],"similarityPercentage":"65.8%","self":false,"text":"梯度的梯度下降算法:反向传播算法只需通过网络两次(一次前向,<em class='similar'>一次后向)</em><em class='similar'>,就能计算出网络误差关于每个模型参数的梯度。</em>换句话说,"}],"textWithDynamicClass":" 只穿越电平两次,<em class='similar T102I8' onmouseover=\"highlightSetter('T102I8',false)\" onmouseout=\"highlightSetter('T102I8',true)\">即一前一后传播算法可以计算每个模型参数的网络误差梯度。</em>","similar_word_count":26,"text":" 只穿越电平两次,<em class='similar'>即一前一后传播算法可以计算每个模型参数的网络误差梯度。</em>","suggest":{"synonyms":[],"keyword":["传播算法","模型参数","误差梯度","梯度"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":531.69135,"teacher":"","textWithDynamicClass":"在仅两次通过网络的过程中(一次前向,一次反向),反向传播算法能够针对每个模型参数计算网络误差的梯度。<em class='similar 103S257I8' onmouseover=\"highlightSetter('103S257I8',false)\" onmouseout=\"highlightSetter('103S257I8',true)\">换句话说,</em><em class='similar 103S257I9' onmouseover=\"highlightSetter('103S257I9',false)\" onmouseout=\"highlightSetter('103S257I9',true)\">它可以找出应如何调整每个连接权重和每个偏置项以减少误差。</em>一旦获得了这些梯度,它便会执行常规的梯度下降步骤,","datatype":"webpage","clcs":[],"similarityPercentage":"72.4%","self":false,"text":"在仅两次通过网络的过程中(一次前向,一次反向),反向传播算法能够针对每个模型参数计算网络误差的梯度。<em class='similar'>换句话说,</em><em class='similar'>它可以找出应如何调整每个连接权重和每个偏置项以减少误差。</em>一旦获得了这些梯度,它便会执行常规的梯度下降步骤,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":398.4796,"teacher":"","textWithDynamicClass":",就能计算出网络误差关于每个模型参数的梯度。<em class='similar 103S256I7' onmouseover=\"highlightSetter('103S256I7',false)\" onmouseout=\"highlightSetter('103S256I7',true)\">换句话说,</em><em class='similar 103S256I8' onmouseover=\"highlightSetter('103S256I8',false)\" onmouseout=\"highlightSetter('103S256I8',true)\">它可以找出每个连接权重和每个偏置项应该如何调整,</em><em class='similar 103S256I9' onmouseover=\"highlightSetter('103S256I9',false)\" onmouseout=\"highlightSetter('103S256I9',true)\">以减少误差。</em>一旦有了这些梯度,它只执行一个常规的梯度下降步骤,","datatype":"webpage","clcs":[],"similarityPercentage":"53.1%","self":false,"text":",就能计算出网络误差关于每个模型参数的梯度。<em class='similar'>换句话说,</em><em class='similar'>它可以找出每个连接权重和每个偏置项应该如何调整,</em><em class='similar'>以减少误差。</em>一旦有了这些梯度,它只执行一个常规的梯度下降步骤,"}],"textWithDynamicClass":"即一前一后传播算法可以计算每个模型参数的网络误差梯度。<em class='similar T102I9' onmouseover=\"highlightSetter('T102I9',false)\" onmouseout=\"highlightSetter('T102I9',true)\">换句话说,</em><em class='similar T102I10' onmouseover=\"highlightSetter('T102I10',false)\" onmouseout=\"highlightSetter('T102I10',true)\">可以用以学习如何修复每个连接权重和每个偏移项错误。</em>","similar_word_count":28,"text":"即一前一后传播算法可以计算每个模型参数的网络误差梯度。<em class='similar'>换句话说,</em><em class='similar'>可以用以学习如何修复每个连接权重和每个偏移项错误。</em>","suggest":{"synonyms":[],"keyword":["修复","权重","偏移"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":531.69135,"teacher":"","textWithDynamicClass":"它可以找出应如何调整每个连接权重和每个偏置项以减少误差。一旦获得了这些梯度,<em class='similar 103S257I11' onmouseover=\"highlightSetter('103S257I11',false)\" onmouseout=\"highlightSetter('103S257I11',true)\">它便会执行常规的梯度下降步骤,</em>然后重复整个过程,","datatype":"webpage","clcs":[],"similarityPercentage":"74.8%","self":false,"text":"它可以找出应如何调整每个连接权重和每个偏置项以减少误差。一旦获得了这些梯度,<em class='similar'>它便会执行常规的梯度下降步骤,</em>然后重复整个过程,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":398.4796,"teacher":"","textWithDynamicClass":"以减少误差。一旦有了这些梯度,<em class='similar 103S256I11' onmouseover=\"highlightSetter('103S256I11',false)\" onmouseout=\"highlightSetter('103S256I11',true)\">它只执行一个常规的梯度下降步骤,</em>然后重复整个过程,","datatype":"webpage","clcs":[],"similarityPercentage":"61.7%","self":false,"text":"以减少误差。一旦有了这些梯度,<em class='similar'>它只执行一个常规的梯度下降步骤,</em>然后重复整个过程,"}],"textWithDynamicClass":"当找到这些梯度时,<em class='similar T102I12' onmouseover=\"highlightSetter('T102I12',false)\" onmouseout=\"highlightSetter('T102I12',true)\">常规梯度会执行下降步骤,</em>","similar_word_count":11,"text":"当找到这些梯度时,<em class='similar'>常规梯度会执行下降步骤,</em>","suggest":{"synonyms":[],"keyword":["梯度"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":531.69135,"teacher":"","textWithDynamicClass":"一旦获得了这些梯度,它便会执行常规的梯度下降步骤,<em class='similar 103S257I12' onmouseover=\"highlightSetter('103S257I12',false)\" onmouseout=\"highlightSetter('103S257I12',true)\">然后重复整个过程,</em>直到网络收敛到有解。自动计算梯度称为自动微分,或者","datatype":"webpage","clcs":[],"similarityPercentage":"76.1%","self":false,"text":"一旦获得了这些梯度,它便会执行常规的梯度下降步骤,<em class='similar'>然后重复整个过程,</em>直到网络收敛到有解。自动计算梯度称为自动微分,或者"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":398.4796,"teacher":"","textWithDynamicClass":"一旦有了这些梯度,它只执行一个常规的梯度下降步骤,<em class='similar 103S256I12' onmouseover=\"highlightSetter('103S256I12',false)\" onmouseout=\"highlightSetter('103S256I12',true)\">然后重复整个过程,</em>直到网络收敛。自动计算梯度被称为自动微分。","datatype":"webpage","clcs":[],"similarityPercentage":"67.3%","self":false,"text":"一旦有了这些梯度,它只执行一个常规的梯度下降步骤,<em class='similar'>然后重复整个过程,</em>直到网络收敛。自动计算梯度被称为自动微分。"}],"textWithDynamicClass":"直到梯度难以拟合,<em class='similar T102I14' onmouseover=\"highlightSetter('T102I14',false)\" onmouseout=\"highlightSetter('T102I14',true)\">然后它会更新整个过程。</em>","similar_word_count":10,"text":"直到梯度难以拟合,<em class='similar'>然后它会更新整个过程。</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000696980311","author":"张甜甜","university":"","source":"大学生论文联合库","title":"无偏估计量的定义","url":"","reference":false,"similarScore":201.66663,"teacher":"","textWithDynamicClass":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar 104S259I8' onmouseover=\"highlightSetter('104S259I8',false)\" onmouseout=\"highlightSetter('104S259I8',true)\">均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此时用均方误差评价点估计与用","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"95.7%","self":false,"text":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar'>均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此时用均方误差评价点估计与用"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023576188911","author":"赵喜林，李德宜，龚谊承主编","university":"","source":"","title":"应用数理统计","url":"","reference":false,"similarScore":183.74998,"teacher":"","textWithDynamicClass":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar 104S260I17' onmouseover=\"highlightSetter('104S260I17',false)\" onmouseout=\"highlightSetter('104S260I17',true)\">均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误","datatype":"book","clcs":[],"similarityPercentage":"93.5%","self":false,"text":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar'>均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误"}],"textWithDynamicClass":"式(2-11)说明,<em class='similar T103I2' onmouseover=\"highlightSetter('T103I2',false)\" onmouseout=\"highlightSetter('T103I2',true)\">均方误差 由点估计的方差 与偏差 的和的平方两部分组成。</em>","similar_word_count":24,"text":"式(2-11)说明,<em class='similar'>均方误差 由点估计的方差 与偏差 的和的平方两部分组成。</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["均方误差","点估计","方差","偏差","平方"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":493.19043,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar 105S261I1' onmouseover=\"highlightSetter('105S261I1',false)\" onmouseout=\"highlightSetter('105S261I1',true)\">标准误差</em><em class='similar 105S261I2' onmouseover=\"highlightSetter('105S261I2',false)\" onmouseout=\"highlightSetter('105S261I2',true)\">(又称均方根误差)</em><em class='similar 105S261I3' onmouseover=\"highlightSetter('105S261I3',false)\" onmouseout=\"highlightSetter('105S261I3',true)\">它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em>在实际测量中,","datatype":"webpage","clcs":[],"similarityPercentage":"74.6%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar'>标准误差</em><em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em>在实际测量中,"},{"profession":false,"keywords":[],"year":"","docid":"9000186521686911","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html","reference":false,"similarScore":480.85712,"teacher":"","textWithDynamicClass":"<em class='similar 105S263I0' onmouseover=\"highlightSetter('105S263I0',false)\" onmouseout=\"highlightSetter('105S263I0',true)\">?标准误差</em><em class='similar 105S263I1' onmouseover=\"highlightSetter('105S263I1',false)\" onmouseout=\"highlightSetter('105S263I1',true)\">(又称均方根误差)</em><em class='similar 105S263I2' onmouseover=\"highlightSetter('105S263I2',false)\" onmouseout=\"highlightSetter('105S263I2',true)\">它是观测值与真值偏差的平方和观测次数n 值的平方根,</em>在实际测量中,","datatype":"webpage","clcs":[],"similarityPercentage":"73.0%","self":false,"text":"<em class='similar'>?标准误差</em><em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数n 值的平方根,</em>在实际测量中,"},{"profession":false,"keywords":[],"year":"2016","docid":"2200000784098911","author":"隋文洋","university":"","source":"大学生论文联合库","title":"时间序列预测研究","url":"","reference":false,"similarScore":560,"teacher":"","textWithDynamicClass":"预测值,是测试样本数。(2)<em class='similar 105S262I3' onmouseover=\"highlightSetter('105S262I3',false)\" onmouseout=\"highlightSetter('105S262I3',true)\">均方根误差亦称标准误差,</em><em class='similar 105S262I4' onmouseover=\"highlightSetter('105S262I4',false)\" onmouseout=\"highlightSetter('105S262I4',true)\">它是观测值与真值偏差的平方和观测次数比值的平方根,</em><em class='similar 105S262I5' onmouseover=\"highlightSetter('105S262I5',false)\" onmouseout=\"highlightSetter('105S262I5',true)\">在实际测量中,</em><em class='similar 105S262I6' onmouseover=\"highlightSetter('105S262I6',false)\" onmouseout=\"highlightSetter('105S262I6',true)\">观测次数总是有限的,</em><em class='similar 105S262I7' onmouseover=\"highlightSetter('105S262I7',false)\" onmouseout=\"highlightSetter('105S262I7',true)\">真值只能用最可信赖</em><em class='similar 105S262I8' onmouseover=\"highlightSetter('105S262I8',false)\" onmouseout=\"highlightSetter('105S262I8',true)\">(最佳)</em><em class='similar 105S262I9' onmouseover=\"highlightSetter('105S262I9',false)\" onmouseout=\"highlightSetter('105S262I9',true)\">值来代替。</em><em class='similar 105S262I10' onmouseover=\"highlightSetter('105S262I10',false)\" onmouseout=\"highlightSetter('105S262I10',true)\">均方根误差是用来衡量观测值同真值之间的偏差,</em>定义式为:(3-4)其中、分别为实际值、预测值,是","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.8%","self":false,"text":"预测值,是测试样本数。(2)<em class='similar'>均方根误差亦称标准误差,</em><em class='similar'>它是观测值与真值偏差的平方和观测次数比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>均方根误差是用来衡量观测值同真值之间的偏差,</em>定义式为:(3-4)其中、分别为实际值、预测值,是"}],"textWithDynamicClass":"<em class='similar T104I0' onmouseover=\"highlightSetter('T104I0',false)\" onmouseout=\"highlightSetter('T104I0',true)\">均方根误差,</em><em class='similar T104I1' onmouseover=\"highlightSetter('T104I1',false)\" onmouseout=\"highlightSetter('T104I1',true)\">也称做标准误差,</em><em class='similar T104I2' onmouseover=\"highlightSetter('T104I2',false)\" onmouseout=\"highlightSetter('T104I2',true)\">均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,</em>","similar_word_count":42,"text":"<em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["均方根误差","标准误差","预测值","真实值","偏差","平方","采样次数","比值","平方根"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":493.19043,"teacher":"","textWithDynamicClass":"它是观测值与真值偏差的平方和观测次数 n 比值的平方根,<em class='similar 105S261I4' onmouseover=\"highlightSetter('105S261I4',false)\" onmouseout=\"highlightSetter('105S261I4',true)\">在实际测量中,</em><em class='similar 105S261I5' onmouseover=\"highlightSetter('105S261I5',false)\" onmouseout=\"highlightSetter('105S261I5',true)\">观测次数 n 总是有限的,</em><em class='similar 105S261I6' onmouseover=\"highlightSetter('105S261I6',false)\" onmouseout=\"highlightSetter('105S261I6',true)\">真值只能用最可信赖</em><em class='similar 105S261I7' onmouseover=\"highlightSetter('105S261I7',false)\" onmouseout=\"highlightSetter('105S261I7',true)\">(最佳)</em><em class='similar 105S261I8' onmouseover=\"highlightSetter('105S261I8',false)\" onmouseout=\"highlightSetter('105S261I8',true)\">值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,","datatype":"webpage","clcs":[],"similarityPercentage":"84.9%","self":false,"text":"它是观测值与真值偏差的平方和观测次数 n 比值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数 n 总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,"},{"profession":false,"keywords":[],"year":"","docid":"9000186521686911","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html","reference":false,"similarScore":480.85712,"teacher":"","textWithDynamicClass":"它是观测值与真值偏差的平方和观测次数n 值的平方根,<em class='similar 105S263I3' onmouseover=\"highlightSetter('105S263I3',false)\" onmouseout=\"highlightSetter('105S263I3',true)\">在实际测量中,</em><em class='similar 105S263I4' onmouseover=\"highlightSetter('105S263I4',false)\" onmouseout=\"highlightSetter('105S263I4',true)\">观测次数n总是有限的,</em><em class='similar 105S263I5' onmouseover=\"highlightSetter('105S263I5',false)\" onmouseout=\"highlightSetter('105S263I5',true)\">真值只能用最可信赖</em><em class='similar 105S263I6' onmouseover=\"highlightSetter('105S263I6',false)\" onmouseout=\"highlightSetter('105S263I6',true)\">(最佳)</em><em class='similar 105S263I7' onmouseover=\"highlightSetter('105S263I7',false)\" onmouseout=\"highlightSetter('105S263I7',true)\">值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,","datatype":"webpage","clcs":[],"similarityPercentage":"84.1%","self":false,"text":"它是观测值与真值偏差的平方和观测次数n 值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数n总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,"},{"profession":false,"keywords":[],"year":"2016","docid":"2200000784098911","author":"隋文洋","university":"","source":"大学生论文联合库","title":"时间序列预测研究","url":"","reference":false,"similarScore":560,"teacher":"","textWithDynamicClass":"它是观测值与真值偏差的平方和观测次数比值的平方根,<em class='similar 105S262I5' onmouseover=\"highlightSetter('105S262I5',false)\" onmouseout=\"highlightSetter('105S262I5',true)\">在实际测量中,</em><em class='similar 105S262I6' onmouseover=\"highlightSetter('105S262I6',false)\" onmouseout=\"highlightSetter('105S262I6',true)\">观测次数总是有限的,</em><em class='similar 105S262I7' onmouseover=\"highlightSetter('105S262I7',false)\" onmouseout=\"highlightSetter('105S262I7',true)\">真值只能用最可信赖</em><em class='similar 105S262I8' onmouseover=\"highlightSetter('105S262I8',false)\" onmouseout=\"highlightSetter('105S262I8',true)\">(最佳)</em><em class='similar 105S262I9' onmouseover=\"highlightSetter('105S262I9',false)\" onmouseout=\"highlightSetter('105S262I9',true)\">值来代替。</em>均方根误差是用来衡量观测值同真值之间的偏差,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"75.9%","self":false,"text":"它是观测值与真值偏差的平方和观测次数比值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em>均方根误差是用来衡量观测值同真值之间的偏差,"}],"textWithDynamicClass":"均方根误差,也称做标准误差,均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,<em class='similar T104I3' onmouseover=\"highlightSetter('T104I3',false)\" onmouseout=\"highlightSetter('T104I3',true)\">在实际测量中,</em><em class='similar T104I4' onmouseover=\"highlightSetter('T104I4',false)\" onmouseout=\"highlightSetter('T104I4',true)\">观测次数 总是有限的,</em><em class='similar T104I5' onmouseover=\"highlightSetter('T104I5',false)\" onmouseout=\"highlightSetter('T104I5',true)\">真值只能用最可信赖</em><em class='similar T104I6' onmouseover=\"highlightSetter('T104I6',false)\" onmouseout=\"highlightSetter('T104I6',true)\">(最佳)</em><em class='similar T104I7' onmouseover=\"highlightSetter('T104I7',false)\" onmouseout=\"highlightSetter('T104I7',true)\">值来代替。</em>","similar_word_count":30,"text":"均方根误差,也称做标准误差,均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数 总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em>","suggest":{"synonyms":[{"synonyms":["视察"],"keyword":"观测"},{"synonyms":["信任"],"keyword":"信赖"}],"keyword":["实际测量","观测","有限的","真值","信赖"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000184235326811","author":"","university":"","source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html","reference":false,"similarScore":481.74997,"teacher":"","textWithDynamicClass":"测量中,观测次数n 总是有限的,真值只能用最可信赖(最代替.<em class='similar 106S266I5' onmouseover=\"highlightSetter('106S266I5',false)\" onmouseout=\"highlightSetter('106S266I5',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感,</em>所以,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"测量中,观测次数n 总是有限的,真值只能用最可信赖(最代替.<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em>所以,"},{"profession":false,"keywords":[],"year":"2016","docid":"2200000941227311","author":"","university":"","source":"大学生论文联合库","title":"光学计算机程序设计","url":"","reference":false,"similarScore":482.81482,"teacher":"","textWithDynamicClass":"次数n是很有限的,所以真实值只能用最可信赖(最佳)值来代替,<em class='similar 106S264I6' onmouseover=\"highlightSetter('106S264I6',false)\" onmouseout=\"highlightSetter('106S264I6',true)\">标准误差对一组测量中的特大或者特小误差反映非常敏感,</em>所以,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"98.0%","self":false,"text":"次数n是很有限的,所以真实值只能用最可信赖(最佳)值来代替,<em class='similar'>标准误差对一组测量中的特大或者特小误差反映非常敏感,</em>所以,"},{"profession":false,"keywords":[],"year":"","docid":"9000120314096811","author":"","university":"","source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html","reference":false,"similarScore":465.45374,"teacher":"","textWithDynamicClass":"数 n 总是有限的,真值为由原始数据集中读入的实际用户评分。<em class='similar 106S265I4' onmouseover=\"highlightSetter('106S265I4',false)\" onmouseout=\"highlightSetter('106S265I4',true)\">均方根误差对一组预测中的特大或特小误差反映非常敏感,</em>所以,","datatype":"webpage","clcs":[],"similarityPercentage":"85.7%","self":false,"text":"数 n 总是有限的,真值为由原始数据集中读入的实际用户评分。<em class='similar'>均方根误差对一组预测中的特大或特小误差反映非常敏感,</em>所以,"},{"profession":false,"keywords":[],"year":"2015","docid":"2200008014602311","author":"","university":"","source":"大学生论文联合库","title":"消费者行为分析与预测","url":"","reference":false,"similarScore":367.99997,"teacher":"","textWithDynamicClass":",观测次数n总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar 106S267I6' onmouseover=\"highlightSetter('106S267I6',false)\" onmouseout=\"highlightSetter('106S267I6',true)\">均方根误差对一组测量中的特大或特小的误差反映特别敏感,</em>所以,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"80.1%","self":false,"text":",观测次数n总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar'>均方根误差对一组测量中的特大或特小的误差反映特别敏感,</em>所以,"}],"textWithDynamicClass":"在实际测量中,观测次数总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar T105I0' onmouseover=\"highlightSetter('T105I0',false)\" onmouseout=\"highlightSetter('T105I0',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感,</em>","similar_word_count":24,"text":"在实际测量中,观测次数总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em>","suggest":{"synonyms":[],"keyword":["标准误差","特大"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000184235326811","author":"","university":"","source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html","reference":false,"similarScore":481.74997,"teacher":"","textWithDynamicClass":"测量中,观测次数n 总是有限的,真值只能用最可信赖(最代替.标准误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar 106S266I6' onmouseover=\"highlightSetter('106S266I6',false)\" onmouseout=\"highlightSetter('106S266I6',true)\">所以,</em><em class='similar 106S266I7' onmouseover=\"highlightSetter('106S266I7',false)\" onmouseout=\"highlightSetter('106S266I7',true)\">标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因在相同测量条","datatype":"webpage","clcs":[],"similarityPercentage":"93.4%","self":false,"text":"测量中,观测次数n 总是有限的,真值只能用最可信赖(最代替.标准误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因在相同测量条"},{"profession":false,"keywords":[],"year":"2016","docid":"2200000941227311","author":"","university":"","source":"大学生论文联合库","title":"光学计算机程序设计","url":"","reference":false,"similarScore":482.81482,"teacher":"","textWithDynamicClass":"次数n是很有限的,所以真实值只能用最可信赖(最佳)值来代替,标准误差对一组测量中的特大或者特小误差反映非常敏感,<em class='similar 106S264I7' onmouseover=\"highlightSetter('106S264I7',false)\" onmouseout=\"highlightSetter('106S264I7',true)\">所以,</em><em class='similar 106S264I8' onmouseover=\"highlightSetter('106S264I8',false)\" onmouseout=\"highlightSetter('106S264I8',true)\">标准误差就能够很好地反映出测量的精密度。</em>这也正是标准误差在工程测量中可以得到广泛使用的原因","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"91.3%","self":false,"text":"次数n是很有限的,所以真实值只能用最可信赖(最佳)值来代替,标准误差对一组测量中的特大或者特小误差反映非常敏感,<em class='similar'>所以,</em><em class='similar'>标准误差就能够很好地反映出测量的精密度。</em>这也正是标准误差在工程测量中可以得到广泛使用的原因"},{"profession":false,"keywords":[],"year":"","docid":"9000120314096811","author":"","university":"","source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html","reference":false,"similarScore":465.45374,"teacher":"","textWithDynamicClass":"数 n 总是有限的,真值为由原始数据集中读入的实际用户评分。均方根误差对一组预测中的特大或特小误差反映非常敏感,<em class='similar 106S265I5' onmouseover=\"highlightSetter('106S265I5',false)\" onmouseout=\"highlightSetter('106S265I5',true)\">所以,</em><em class='similar 106S265I6' onmouseover=\"highlightSetter('106S265I6',false)\" onmouseout=\"highlightSetter('106S265I6',true)\">标准误差能够很好地反映出测量的精密度</em>[8]。这正是均方根误差在工程测量和预测评估中广泛被采用的原因。","datatype":"webpage","clcs":[],"similarityPercentage":"87.9%","self":false,"text":"数 n 总是有限的,真值为由原始数据集中读入的实际用户评分。均方根误差对一组预测中的特大或特小误差反映非常敏感,<em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出测量的精密度</em>[8]。这正是均方根误差在工程测量和预测评估中广泛被采用的原因。"},{"profession":false,"keywords":[],"year":"2015","docid":"2200008014602311","author":"","university":"","source":"大学生论文联合库","title":"消费者行为分析与预测","url":"","reference":false,"similarScore":367.99997,"teacher":"","textWithDynamicClass":",观测次数n总是有限的,真值只能用最可信赖(最佳)值来代替。均方根误差对一组测量中的特大或特小的误差反映特别敏感,<em class='similar 106S267I7' onmouseover=\"highlightSetter('106S267I7',false)\" onmouseout=\"highlightSetter('106S267I7',true)\">所以,</em><em class='similar 106S267I8' onmouseover=\"highlightSetter('106S267I8',false)\" onmouseout=\"highlightSetter('106S267I8',true)\">均方根误差能够很好地反映出测量的精密度,</em>这正是标准误差在工程测量中广泛被采用的原因。","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"77.4%","self":false,"text":",观测次数n总是有限的,真值只能用最可信赖(最佳)值来代替。均方根误差对一组测量中的特大或特小的误差反映特别敏感,<em class='similar'>所以,</em><em class='similar'>均方根误差能够很好地反映出测量的精密度,</em>这正是标准误差在工程测量中广泛被采用的原因。"}],"textWithDynamicClass":"标准误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar T105I1' onmouseover=\"highlightSetter('T105I1',false)\" onmouseout=\"highlightSetter('T105I1',true)\">所以,</em><em class='similar T105I2' onmouseover=\"highlightSetter('T105I2',false)\" onmouseout=\"highlightSetter('T105I2',true)\">标准误差能够很好地反映出机器学习的精密度。</em>","similar_word_count":22,"text":"标准误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习的精密度。</em>","suggest":{"synonyms":[],"keyword":["标准误差","机器学习","精密度"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120314096811","author":"","university":"","source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html","reference":false,"similarScore":465.45374,"teacher":"","textWithDynamicClass":"标准误差能够很好地反映出测量的精密度[8]。<em class='similar 106S265I8' onmouseover=\"highlightSetter('106S265I8',false)\" onmouseout=\"highlightSetter('106S265I8',true)\">这正是均方根误差在工程测量和预测评估中广泛被采用的原因。</em>计算出均方根误差(Root mean square","datatype":"webpage","clcs":[],"similarityPercentage":"81.4%","self":false,"text":"标准误差能够很好地反映出测量的精密度[8]。<em class='similar'>这正是均方根误差在工程测量和预测评估中广泛被采用的原因。</em>计算出均方根误差(Root mean square"},{"profession":false,"keywords":[],"year":"2016","docid":"2200000941227311","author":"","university":"","source":"大学生论文联合库","title":"光学计算机程序设计","url":"","reference":false,"similarScore":482.81482,"teacher":"","textWithDynamicClass":"标准误差就能够很好地反映出测量的精密度。<em class='similar 106S264I9' onmouseover=\"highlightSetter('106S264I9',false)\" onmouseout=\"highlightSetter('106S264I9',true)\">这也正是标准误差在工程测量中可以得到广泛使用的原因</em>[19]。本文计算均方根误差用下式来完成:其中n是","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"80.6%","self":false,"text":"标准误差就能够很好地反映出测量的精密度。<em class='similar'>这也正是标准误差在工程测量中可以得到广泛使用的原因</em>[19]。本文计算均方根误差用下式来完成:其中n是"},{"profession":false,"keywords":[],"year":"","docid":"9000184235326811","author":"","university":"","source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html","reference":false,"similarScore":481.74997,"teacher":"","textWithDynamicClass":"标准误差能够很好地反映出测量的精密度。<em class='similar 106S266I8' onmouseover=\"highlightSetter('106S266I8',false)\" onmouseout=\"highlightSetter('106S266I8',true)\">这正是标准误差在工程测量中广泛被采用的原因在相同测量条</em>件下进行的测量称为等精度测量,例如在同样的条同一个","datatype":"webpage","clcs":[],"similarityPercentage":"79.2%","self":false,"text":"标准误差能够很好地反映出测量的精密度。<em class='similar'>这正是标准误差在工程测量中广泛被采用的原因在相同测量条</em>件下进行的测量称为等精度测量,例如在同样的条同一个"},{"profession":false,"keywords":[],"year":"2015","docid":"2200008014602311","author":"","university":"","source":"大学生论文联合库","title":"消费者行为分析与预测","url":"","reference":false,"similarScore":367.99997,"teacher":"","textWithDynamicClass":"均方根误差能够很好地反映出测量的精密度,<em class='similar 106S267I9' onmouseover=\"highlightSetter('106S267I9',false)\" onmouseout=\"highlightSetter('106S267I9',true)\">这正是标准误差在工程测量中广泛被采用的原因。</em>Hyndman和Koehler 2006年提出的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"78.1%","self":false,"text":"均方根误差能够很好地反映出测量的精密度,<em class='similar'>这正是标准误差在工程测量中广泛被采用的原因。</em>Hyndman和Koehler 2006年提出的"}],"textWithDynamicClass":"所以,标准误差能够很好地反映出机器学习的精密度。<em class='similar T105I3' onmouseover=\"highlightSetter('T105I3',false)\" onmouseout=\"highlightSetter('T105I3',true)\">这也是均方根误差在工程领域被广泛使用作为评估指标的原因。</em>","similar_word_count":27,"text":"所以,标准误差能够很好地反映出机器学习的精密度。<em class='similar'>这也是均方根误差在工程领域被广泛使用作为评估指标的原因。</em>","suggest":{"synonyms":[],"keyword":["均方根误差","工程领域","广泛使用","评估指标"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000143210933511","author":"","university":"","source":"网页","title":"基于ASIC的功耗评估与优化设计","url":"https://wenku.baidu.com/view/0a644043332b3169a45177232f60ddccda38e69e","reference":false,"similarScore":108.80344,"teacher":"","textWithDynamicClass":"还能以较低的电压来驱动系统。(3)逻辑优化与资源共享:RTL级代码设计时可进行逻辑优化,<em class='similar 109S270I4' onmouseover=\"highlightSetter('109S270I4',false)\" onmouseout=\"highlightSetter('109S270I4',true)\">减少硬件资源消耗。</em>使用良好的编码风2.2功耗评估流程在实际大规模的集","datatype":"webpage","clcs":[],"similarityPercentage":"94.3%","self":false,"text":"还能以较低的电压来驱动系统。(3)逻辑优化与资源共享:RTL级代码设计时可进行逻辑优化,<em class='similar'>减少硬件资源消耗。</em>使用良好的编码风2.2功耗评估流程在实际大规模的集"}],"textWithDynamicClass":"通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、<em class='similar T108I3' onmouseover=\"highlightSetter('T108I3',false)\" onmouseout=\"highlightSetter('T108I3',true)\">减少硬件资源消耗等,</em>","similar_word_count":9,"text":"通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、<em class='similar'>减少硬件资源消耗等,</em>","suggest":{"synonyms":[],"keyword":["硬件","资源消耗"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000143210933511","author":"","university":"","source":"网页","title":"基于ASIC的功耗评估与优化设计","url":"https://wenku.baidu.com/view/0a644043332b3169a45177232f60ddccda38e69e","reference":false,"similarScore":108.80344,"teacher":"","textWithDynamicClass":"还能以较低的电压来驱动系统。(3)逻辑优化与资源共享:<em class='similar 109S270I3' onmouseover=\"highlightSetter('109S270I3',false)\" onmouseout=\"highlightSetter('109S270I3',true)\">RTL级代码设计时可进行逻辑优化,</em>减少硬件资源消耗。","datatype":"webpage","clcs":[],"similarityPercentage":"68.2%","self":false,"text":"还能以较低的电压来驱动系统。(3)逻辑优化与资源共享:<em class='similar'>RTL级代码设计时可进行逻辑优化,</em>减少硬件资源消耗。"}],"textWithDynamicClass":"所以在快速资源估算模型中也需加入相关优化项,<em class='similar T108I5' onmouseover=\"highlightSetter('T108I5',false)\" onmouseout=\"highlightSetter('T108I5',true)\">来对RTL设计进行进一步的优化,</em>","similar_word_count":13,"text":"所以在快速资源估算模型中也需加入相关优化项,<em class='similar'>来对RTL设计进行进一步的优化,</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":329,"teacher":"","textWithDynamicClass":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar 111S273I4' onmouseover=\"highlightSetter('111S273I4',false)\" onmouseout=\"highlightSetter('111S273I4',true)\">相同运算符,</em><em class='similar 111S273I5' onmouseover=\"highlightSetter('111S273I5',false)\" onmouseout=\"highlightSetter('111S273I5',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。.不同的运算符,相同的操作数,<em class='similar 111S273I12' onmouseover=\"highlightSetter('111S273I12',false)\" onmouseout=\"highlightSetter('111S273I12',true)\">可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar 111S273I16' onmouseover=\"highlightSetter('111S273I16',false)\" onmouseout=\"highlightSetter('111S273I16',true)\">.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar 111S273I19' onmouseover=\"highlightSetter('111S273I19',false)\" onmouseout=\"highlightSetter('111S273I19',true)\">可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar 111S273I23' onmouseover=\"highlightSetter('111S273I23',false)\" onmouseout=\"highlightSetter('111S273I23',true)\">不同运算符,</em><em class='similar 111S273I24' onmouseover=\"highlightSetter('111S273I24',false)\" onmouseout=\"highlightSetter('111S273I24',true)\">不同的操作数,</em>通过引入两个多路开关,","datatype":"book","clcs":[],"similarityPercentage":"82.3%","self":false,"text":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。.不同的运算符,相同的操作数,<em class='similar'>可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar'>可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em>通过引入两个多路开关,"}],"textWithDynamicClass":"<em class='similar T110I0' onmouseover=\"highlightSetter('T110I0',false)\" onmouseout=\"highlightSetter('T110I0',true)\">相同运算符,</em><em class='similar T110I1' onmouseover=\"highlightSetter('T110I1',false)\" onmouseout=\"highlightSetter('T110I1',true)\">完全不同的操作数,</em><em class='similar T110I2' onmouseover=\"highlightSetter('T110I2',false)\" onmouseout=\"highlightSetter('T110I2',true)\">可以共享逻辑单元</em>","similar_word_count":21,"text":"<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em><em class='similar'>可以共享逻辑单元</em>","suggest":{"synonyms":[],"keyword":["运算符","操作数","共享","逻辑单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":334.99994,"teacher":"","textWithDynamicClass":"路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar 112S274I10' onmouseover=\"highlightSetter('112S274I10',false)\" onmouseout=\"highlightSetter('112S274I10',true)\">.不同的运算符,</em><em class='similar 112S274I11' onmouseover=\"highlightSetter('112S274I11',false)\" onmouseout=\"highlightSetter('112S274I11',true)\">相同的操作数,</em><em class='similar 112S274I12' onmouseover=\"highlightSetter('112S274I12',false)\" onmouseout=\"highlightSetter('112S274I12',true)\">可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar 112S274I16' onmouseover=\"highlightSetter('112S274I16',false)\" onmouseout=\"highlightSetter('112S274I16',true)\">.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar 112S274I19' onmouseover=\"highlightSetter('112S274I19',false)\" onmouseout=\"highlightSetter('112S274I19',true)\">可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar 112S274I23' onmouseover=\"highlightSetter('112S274I23',false)\" onmouseout=\"highlightSetter('112S274I23',true)\">不同运算符,</em><em class='similar 112S274I24' onmouseover=\"highlightSetter('112S274I24',false)\" onmouseout=\"highlightSetter('112S274I24',true)\">不同的操作数,</em>通过引入两个多路开关,","datatype":"book","clcs":[],"similarityPercentage":"84.3%","self":false,"text":"路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar'>.不同的运算符,</em><em class='similar'>相同的操作数,</em><em class='similar'>可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar'>可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em>通过引入两个多路开关,"}],"textWithDynamicClass":"<em class='similar T111I0' onmouseover=\"highlightSetter('T111I0',false)\" onmouseout=\"highlightSetter('T111I0',true)\">不同的运算符,</em><em class='similar T111I1' onmouseover=\"highlightSetter('T111I1',false)\" onmouseout=\"highlightSetter('T111I1',true)\">相同的操作数,</em><em class='similar T111I2' onmouseover=\"highlightSetter('T111I2',false)\" onmouseout=\"highlightSetter('T111I2',true)\">可以共享逻辑单元。</em>","similar_word_count":20,"text":"<em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em><em class='similar'>可以共享逻辑单元。</em>","suggest":{"synonyms":[],"keyword":["运算符","操作数","共享","逻辑单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":495.2121,"teacher":"","textWithDynamicClass":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar 113S275I7' onmouseover=\"highlightSetter('113S275I7',false)\" onmouseout=\"highlightSetter('113S275I7',true)\">相同运算符,</em><em class='similar 113S275I8' onmouseover=\"highlightSetter('113S275I8',false)\" onmouseout=\"highlightSetter('113S275I8',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar 113S275I13' onmouseover=\"highlightSetter('113S275I13',false)\" onmouseout=\"highlightSetter('113S275I13',true)\">.不同的运算符,</em><em class='similar 113S275I14' onmouseover=\"highlightSetter('113S275I14',false)\" onmouseout=\"highlightSetter('113S275I14',true)\">相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar 113S275I19' onmouseover=\"highlightSetter('113S275I19',false)\" onmouseout=\"highlightSetter('113S275I19',true)\">.不同运算符,</em>仅有一个公共操作数,<em class='similar 113S275I21' onmouseover=\"highlightSetter('113S275I21',false)\" onmouseout=\"highlightSetter('113S275I21',true)\">通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar 113S275I26' onmouseover=\"highlightSetter('113S275I26',false)\" onmouseout=\"highlightSetter('113S275I26',true)\">不同运算符,</em><em class='similar 113S275I27' onmouseover=\"highlightSetter('113S275I27',false)\" onmouseout=\"highlightSetter('113S275I27',true)\">不同的操作数,</em><em class='similar 113S275I28' onmouseover=\"highlightSetter('113S275I28',false)\" onmouseout=\"highlightSetter('113S275I28',true)\">通过引入两个多路开关,</em><em class='similar 113S275I29' onmouseover=\"highlightSetter('113S275I29',false)\" onmouseout=\"highlightSetter('113S275I29',true)\">可以实现ALU单元的共享。</em>例如:a+b , c一do 7.2公共子表达式使用","datatype":"book","clcs":[],"similarityPercentage":"90.7%","self":false,"text":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar'>.不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em><em class='similar'>可以实现ALU单元的共享。</em>例如:a+b , c一do 7.2公共子表达式使用"},{"profession":false,"keywords":[],"year":"","docid":"9000136703132111","author":"","university":"","source":"网页","title":"Verilog HDL代码优化技巧_Guchen666的博客-CSDN博客","url":"https://blog.csdn.net/Guchen666/article/details/106386201","reference":false,"similarScore":495.2121,"teacher":"","textWithDynamicClass":"a + c。<em class='similar 113S276I1' onmouseover=\"highlightSetter('113S276I1',false)\" onmouseout=\"highlightSetter('113S276I1',true)\">相同运算符,</em><em class='similar 113S276I2' onmouseover=\"highlightSetter('113S276I2',false)\" onmouseout=\"highlightSetter('113S276I2',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar 113S276I7' onmouseover=\"highlightSetter('113S276I7',false)\" onmouseout=\"highlightSetter('113S276I7',true)\">不同的运算符,</em><em class='similar 113S276I8' onmouseover=\"highlightSetter('113S276I8',false)\" onmouseout=\"highlightSetter('113S276I8',true)\">相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar 113S276I13' onmouseover=\"highlightSetter('113S276I13',false)\" onmouseout=\"highlightSetter('113S276I13',true)\">不同运算符,</em>仅有一个公共操作数,<em class='similar 113S276I15' onmouseover=\"highlightSetter('113S276I15',false)\" onmouseout=\"highlightSetter('113S276I15',true)\">通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar 113S276I20' onmouseover=\"highlightSetter('113S276I20',false)\" onmouseout=\"highlightSetter('113S276I20',true)\">不同运算符,</em><em class='similar 113S276I21' onmouseover=\"highlightSetter('113S276I21',false)\" onmouseout=\"highlightSetter('113S276I21',true)\">不同的操作数,</em><em class='similar 113S276I22' onmouseover=\"highlightSetter('113S276I22',false)\" onmouseout=\"highlightSetter('113S276I22',true)\">通过引入两个多路开关,</em><em class='similar 113S276I23' onmouseover=\"highlightSetter('113S276I23',false)\" onmouseout=\"highlightSetter('113S276I23',true)\">可以实现ALU单元的共享。</em>例如: a+ b,c-d。2、公共子表达式使用公共","datatype":"webpage","clcs":[],"similarityPercentage":"70.6%","self":false,"text":"a + c。<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar'>不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em><em class='similar'>可以实现ALU单元的共享。</em>例如: a+ b,c-d。2、公共子表达式使用公共"}],"textWithDynamicClass":"<em class='similar T112I0' onmouseover=\"highlightSetter('T112I0',false)\" onmouseout=\"highlightSetter('T112I0',true)\">不同运算符、</em><em class='similar T112I1' onmouseover=\"highlightSetter('T112I1',false)\" onmouseout=\"highlightSetter('T112I1',true)\">不同操作数,</em><em class='similar T112I2' onmouseover=\"highlightSetter('T112I2',false)\" onmouseout=\"highlightSetter('T112I2',true)\">可以通过引入两个多路开关,</em><em class='similar T112I3' onmouseover=\"highlightSetter('T112I3',false)\" onmouseout=\"highlightSetter('T112I3',true)\">从而实现逻辑单元的共享。</em>","similar_word_count":33,"text":"<em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em><em class='similar'>从而实现逻辑单元的共享。</em>","suggest":{"synonyms":[],"keyword":["运算符","操作数","多路开关","逻辑单元","共享"]}},{"sources":[{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":218,"teacher":"","textWithDynamicClass":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar 115S278I11' onmouseover=\"highlightSetter('115S278I11',false)\" onmouseout=\"highlightSetter('115S278I11',true)\">运算符:</em><em class='similar 115S278I12' onmouseover=\"highlightSetter('115S278I12',false)\" onmouseout=\"highlightSetter('115S278I12',true)\">包括算术运算符、</em><em class='similar 115S278I13' onmouseover=\"highlightSetter('115S278I13',false)\" onmouseout=\"highlightSetter('115S278I13',true)\">逻辑运算符、</em><em class='similar 115S278I14' onmouseover=\"highlightSetter('115S278I14',false)\" onmouseout=\"highlightSetter('115S278I14',true)\">关系运算符、</em><em class='similar 115S278I15' onmouseover=\"highlightSetter('115S278I15',false)\" onmouseout=\"highlightSetter('115S278I15',true)\">相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、","datatype":"book","clcs":[],"similarityPercentage":"88.9%","self":false,"text":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar'>运算符:</em><em class='similar'>包括算术运算符、</em><em class='similar'>逻辑运算符、</em><em class='similar'>关系运算符、</em><em class='similar'>相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、"}],"textWithDynamicClass":"<em class='similar T114I0' onmouseover=\"highlightSetter('T114I0',false)\" onmouseout=\"highlightSetter('T114I0',true)\">逻辑运算符、</em><em class='similar T114I1' onmouseover=\"highlightSetter('T114I1',false)\" onmouseout=\"highlightSetter('T114I1',true)\">算术运算符、</em><em class='similar T114I2' onmouseover=\"highlightSetter('T114I2',false)\" onmouseout=\"highlightSetter('T114I2',true)\">关系运算符\t+ - * / ^ | &amp;</em>","similar_word_count":15,"text":"<em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符\t+ - * / ^ | &amp;</em>","suggest":{"synonyms":[],"keyword":["逻辑运算符","算术运算符","运算符"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000108417201011","author":"","university":"","source":"网页","title":"3.verilog hdl语言基础 - 道客巴巴","url":"http://www.doc88.com/p-1048585004872.html","reference":false,"similarScore":57.857147,"teacher":"","textWithDynamicClass":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar 116S282I3' onmouseover=\"highlightSetter('116S282I3',false)\" onmouseout=\"highlightSetter('116S282I3',true)\">通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog","datatype":"webpage","clcs":[],"similarityPercentage":"53.0%","self":false,"text":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar'>通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog"}],"textWithDynamicClass":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar T115I2' onmouseover=\"highlightSetter('T115I2',false)\" onmouseout=\"highlightSetter('T115I2',true)\">通过运算符或操作符进行联结运算的表达式,</em>","similar_word_count":19,"text":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行联结运算的表达式,</em>","suggest":{"synonyms":[{"synonyms":["结合"],"keyword":"联结"}],"keyword":["表达式","运算符","操作符","联结","运算"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":204.63199,"teacher":"","textWithDynamicClass":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar 116S281I7' onmouseover=\"highlightSetter('116S281I7',false)\" onmouseout=\"highlightSetter('116S281I7',true)\">通过运算得到一个结果;</em><em class='similar 116S281I8' onmouseover=\"highlightSetter('116S281I8',false)\" onmouseout=\"highlightSetter('116S281I8',true)\">从语义上说,</em><em class='similar 116S281I9' onmouseover=\"highlightSetter('116S281I9',false)\" onmouseout=\"highlightSetter('116S281I9',true)\">这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,","datatype":"book","clcs":[],"similarityPercentage":"69.8%","self":false,"text":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar'>通过运算得到一个结果;</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,"},{"profession":false,"keywords":[],"year":"","docid":"9000108417201011","author":"","university":"","source":"网页","title":"3.verilog hdl语言基础 - 道客巴巴","url":"http://www.doc88.com/p-1048585004872.html","reference":false,"similarScore":57.857147,"teacher":"","textWithDynamicClass":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar 116S282I3' onmouseover=\"highlightSetter('116S282I3',false)\" onmouseout=\"highlightSetter('116S282I3',true)\">通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog","datatype":"webpage","clcs":[],"similarityPercentage":"57.1%","self":false,"text":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar'>通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog"}],"textWithDynamicClass":"所以在Verilog HDL语言结构中可理解为一致,<em class='similar T115I4' onmouseover=\"highlightSetter('T115I4',false)\" onmouseout=\"highlightSetter('T115I4',true)\">即通过运算符运算得到一个结果,</em><em class='similar T115I5' onmouseover=\"highlightSetter('T115I5',false)\" onmouseout=\"highlightSetter('T115I5',true)\">从语义上说,</em><em class='similar T115I6' onmouseover=\"highlightSetter('T115I6',false)\" onmouseout=\"highlightSetter('T115I6',true)\">这个结果即为运算后得到的的函数值;</em>","similar_word_count":35,"text":"所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>","suggest":{"synonyms":[],"keyword":["运算符","运算","语义","函数值"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":124.09375,"teacher":"","textWithDynamicClass":"两个always过程块将并行执行,并贯穿整个仿真运行的始末。<em class='similar 118S285I5' onmouseover=\"highlightSetter('118S285I5',false)\" onmouseout=\"highlightSetter('118S285I5',true)\">3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句(包括过程赋值语句和","datatype":"book","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"两个always过程块将并行执行,并贯穿整个仿真运行的始末。<em class='similar'>3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句(包括过程赋值语句和"}],"textWithDynamicClass":"<em class='similar T117I0' onmouseover=\"highlightSetter('T117I0',false)\" onmouseout=\"highlightSetter('T117I0',true)\">Verilog HDL语法中的过程机构体,</em>","similar_word_count":12,"text":"<em class='similar'>Verilog HDL语法中的过程机构体,</em>","suggest":{"synonyms":[],"keyword":["语法"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":124.09375,"teacher":"","textWithDynamicClass":"两个always过程块将并行执行,并贯穿整个仿真运行的始末。<em class='similar 118S285I5' onmouseover=\"highlightSetter('118S285I5',false)\" onmouseout=\"highlightSetter('118S285I5',true)\">3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句(包括过程赋值语句和","datatype":"book","clcs":[],"similarityPercentage":"45.6%","self":false,"text":"两个always过程块将并行执行,并贯穿整个仿真运行的始末。<em class='similar'>3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句(包括过程赋值语句和"}],"textWithDynamicClass":"Verilog HDL语法中的过程机构体,<em class='similar T117I1' onmouseover=\"highlightSetter('T117I1',false)\" onmouseout=\"highlightSetter('T117I1',true)\">都是由关键字initial或always和其块内内容语句所组成的,</em>","similar_word_count":23,"text":"Verilog HDL语法中的过程机构体,<em class='similar'>都是由关键字initial或always和其块内内容语句所组成的,</em>","suggest":{"synonyms":[],"keyword":["关键字","initial","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139313011911","author":"","university":"","source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html","reference":false,"similarScore":365.65213,"teacher":"","textWithDynamicClass":"initial或always)&quot;和块语句所组成的,<em class='similar 119S288I4' onmouseover=\"highlightSetter('119S288I4',false)\" onmouseout=\"highlightSetter('119S288I4',true)\">而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")","datatype":"webpage","clcs":[],"similarityPercentage":"77.4%","self":false,"text":"initial或always)&quot;和块语句所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")"},{"profession":false,"keywords":[],"year":"2018","docid":"1900023759582811","author":"丁磊主编；张海笑，冯永晋，江志文编著","university":"","source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":"","reference":false,"similarScore":313.971,"teacher":"","textWithDynamicClass":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar 119S290I7' onmouseover=\"highlightSetter('119S290I7',false)\" onmouseout=\"highlightSetter('119S290I7',true)\">分支语句过程块主要是由过程性赋值语句及高级程序语句</em>(包括分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar'>分支语句过程块主要是由过程性赋值语句及高级程序语句</em>(包括分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"","docid":"1900023885801611","author":"杨全胜主编","university":"","source":"","title":"计算机系统综合课程设计","url":"","reference":false,"similarScore":165.27534,"teacher":"","textWithDynamicClass":"过程模块都从属于always和initial这两种过程语句,<em class='similar 119S291I3' onmouseover=\"highlightSetter('119S291I3',false)\" onmouseout=\"highlightSetter('119S291I3',true)\">而语句块主要是由过程赋值语句、</em>条件分支语句和循环控制语句构成。","datatype":"book","clcs":[],"similarityPercentage":"61.3%","self":false,"text":"过程模块都从属于always和initial这两种过程语句,<em class='similar'>而语句块主要是由过程赋值语句、</em>条件分支语句和循环控制语句构成。"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":351.30432,"teacher":"","textWithDynamicClass":"块每个过程块是由过程语句(initial 或 always)<em class='similar 119S286I5' onmouseover=\"highlightSetter('119S286I5',false)\" onmouseout=\"highlightSetter('119S286I5',true)\">和语句块所组成的,</em><em class='similar 119S286I6' onmouseover=\"highlightSetter('119S286I6',false)\" onmouseout=\"highlightSetter('119S286I6',true)\">而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句(包括条件分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"59.2%","self":false,"text":"块每个过程块是由过程语句(initial 或 always)<em class='similar'>和语句块所组成的,</em><em class='similar'>而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句(包括条件分支语句和循环控制语句)"}],"textWithDynamicClass":"由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar T118I1' onmouseover=\"highlightSetter('T118I1',false)\" onmouseout=\"highlightSetter('T118I1',true)\">always语句块中的内容块主要由赋值语句和高级程序语句</em>","similar_word_count":24,"text":"由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em>","suggest":{"synonyms":[],"keyword":["语句","内容块","赋值语句","程序语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":351.30432,"teacher":"","textWithDynamicClass":"而语句块主要是由过程性赋值语句(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar 119S286I9' onmouseover=\"highlightSetter('119S286I9',false)\" onmouseout=\"highlightSetter('119S286I9',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar 119S286I10' onmouseover=\"highlightSetter('119S286I10',false)\" onmouseout=\"highlightSetter('119S286I10',true)\">这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个","datatype":"book","clcs":[],"similarityPercentage":"83.0%","self":false,"text":"而语句块主要是由过程性赋值语句(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个"},{"profession":false,"keywords":[],"year":"","docid":"9000139313011911","author":"","university":"","source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html","reference":false,"similarScore":365.65213,"teacher":"","textWithDynamicClass":"initial或always)\"和块语句所组成的,而块语句主要是由过程赋值语句和高级程序语句<em class='similar 119S288I5' onmouseover=\"highlightSetter('119S288I5',false)\" onmouseout=\"highlightSetter('119S288I5',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar 119S288I6' onmouseover=\"highlightSetter('119S288I6',false)\" onmouseout=\"highlightSetter('119S288I6',true)\">这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变","datatype":"webpage","clcs":[],"similarityPercentage":"82.4%","self":false,"text":"initial或always)\"和块语句所组成的,而块语句主要是由过程赋值语句和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar'>这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变"},{"profession":false,"keywords":[],"year":"2018","docid":"1900023759582811","author":"丁磊主编；张海笑，冯永晋，江志文编著","university":"","source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":"","reference":false,"similarScore":313.971,"teacher":"","textWithDynamicClass":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7分支语句过程块主要是由过程性赋值语句及高级程序语句<em class='similar 119S290I8' onmouseover=\"highlightSetter('119S290I8',false)\" onmouseout=\"highlightSetter('119S290I8',true)\">(包括分支语句和循环控制语句)</em><em class='similar 119S290I9' onmouseover=\"highlightSetter('119S290I9',false)\" onmouseout=\"highlightSetter('119S290I9',true)\">这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入","datatype":"book","clcs":[],"similarityPercentage":"80.9%","self":false,"text":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7分支语句过程块主要是由过程性赋值语句及高级程序语句<em class='similar'>(包括分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入"},{"profession":false,"keywords":[],"year":"","docid":"1900023885801611","author":"杨全胜主编","university":"","source":"","title":"计算机系统综合课程设计","url":"","reference":false,"similarScore":165.27534,"teacher":"","textWithDynamicClass":"过程模块都从属于always和initial这两种过程语句,而语句块主要是由过程赋值语句、<em class='similar 119S291I4' onmouseover=\"highlightSetter('119S291I4',false)\" onmouseout=\"highlightSetter('119S291I4',true)\">条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway","datatype":"book","clcs":[],"similarityPercentage":"72.3%","self":false,"text":"过程模块都从属于always和initial这两种过程语句,而语句块主要是由过程赋值语句、<em class='similar'>条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway"}],"textWithDynamicClass":"always语句块中的内容块主要由赋值语句和高级程序语句<em class='similar T118I2' onmouseover=\"highlightSetter('T118I2',false)\" onmouseout=\"highlightSetter('T118I2',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar T118I3' onmouseover=\"highlightSetter('T118I3',false)\" onmouseout=\"highlightSetter('T118I3',true)\">这两种行为语句构成</em>","similar_word_count":24,"text":"always语句块中的内容块主要由赋值语句和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>","suggest":{"synonyms":[],"keyword":["语句","分支语句","控制语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000179218349411","author":"","university":"","source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html","reference":false,"similarScore":329.03796,"teacher":"","textWithDynamicClass":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 121S296I5' onmouseover=\"highlightSetter('121S296I5',false)\" onmouseout=\"highlightSetter('121S296I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 121S296I6' onmouseover=\"highlightSetter('121S296I6',false)\" onmouseout=\"highlightSetter('121S296I6',true)\">其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em>他们分别代表了阻塞型赋值和非阻塞性赋值类型。","datatype":"webpage","clcs":[],"similarityPercentage":"68.2%","self":false,"text":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em>他们分别代表了阻塞型赋值和非阻塞性赋值类型。"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":152.54807,"teacher":"","textWithDynamicClass":"0@(posedgeenable)flag2=~flag2;<em class='similar 121S297I6' onmouseover=\"highlightSetter('121S297I6',false)\" onmouseout=\"highlightSetter('121S297I6',true)\">endendmodule赋值语句过程赋值语句过程赋值语句的语法格式为:</em>&lt;被赋值变量&gt;&lt;赋值操作符&gt;&lt;赋值表达式&gt;;<em class='similar 121S297I8' onmouseover=\"highlightSetter('121S297I8',false)\" onmouseout=\"highlightSetter('121S297I8',true)\">其中,</em><em class='similar 121S297I9' onmouseover=\"highlightSetter('121S297I9',false)\" onmouseout=\"highlightSetter('121S297I9',true)\">&lt;赋值操作符&gt;可以是&quot;=&quot;</em>(阻塞型)或\"<=\"(非","datatype":"webpage","clcs":[],"similarityPercentage":"63.4%","self":false,"text":"0@(posedgeenable)flag2=~flag2;<em class='similar'>endendmodule赋值语句过程赋值语句过程赋值语句的语法格式为:</em>&lt;被赋值变量&gt;&lt;赋值操作符&gt;&lt;赋值表达式&gt;;<em class='similar'>其中,</em><em class='similar'>&lt;赋值操作符&gt;可以是&quot;=&quot;</em>(阻塞型)或\"<=\"(非"},{"profession":false,"keywords":[],"year":"","docid":"9000183507262511","author":"","university":"","source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10","reference":false,"similarScore":124.80769,"teacher":"","textWithDynamicClass":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar 121S298I4' onmouseover=\"highlightSetter('121S298I4',false)\" onmouseout=\"highlightSetter('121S298I4',true)\">过程赋值语句语法格式:</em><em class='similar 121S298I5' onmouseover=\"highlightSetter('121S298I5',false)\" onmouseout=\"highlightSetter('121S298I5',true)\">赋值操作符:</em><em class='similar 121S298I6' onmouseover=\"highlightSetter('121S298I6',false)\" onmouseout=\"highlightSetter('121S298I6',true)\">可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)","datatype":"webpage","clcs":[],"similarityPercentage":"63.1%","self":false,"text":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar'>过程赋值语句语法格式:</em><em class='similar'>赋值操作符:</em><em class='similar'>可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)"},{"profession":false,"keywords":[],"year":"","docid":"9000135249839711","author":"","university":"","source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html","reference":false,"similarScore":419.82077,"teacher":"","textWithDynamicClass":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 121S295I5' onmouseover=\"highlightSetter('121S295I5',false)\" onmouseout=\"highlightSetter('121S295I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 121S295I6' onmouseover=\"highlightSetter('121S295I6',false)\" onmouseout=\"highlightSetter('121S295I6',true)\">值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>它们分别代表了阻塞型赋值和非阻塞型赋值类型。","datatype":"webpage","clcs":[],"similarityPercentage":"61.4%","self":false,"text":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>它们分别代表了阻塞型赋值和非阻塞型赋值类型。"}],"textWithDynamicClass":"<em class='similar T120I0' onmouseover=\"highlightSetter('T120I0',false)\" onmouseout=\"highlightSetter('T120I0',true)\">过程赋值语句的语法格式如图4.7所示,</em><em class='similar T120I1' onmouseover=\"highlightSetter('T120I1',false)\" onmouseout=\"highlightSetter('T120I1',true)\">其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>","similar_word_count":30,"text":"<em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语法格式","4.7所","赋值","操作符","赋值操作"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135249839711","author":"","university":"","source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html","reference":false,"similarScore":419.82077,"teacher":"","textWithDynamicClass":"值变量>值操作符>值表达式>其中值操作符>是\"=\"或\"<=\"之一,<em class='similar 121S295I7' onmouseover=\"highlightSetter('121S295I7',false)\" onmouseout=\"highlightSetter('121S295I7',true)\">它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar 121S295I10' onmouseover=\"highlightSetter('121S295I10',false)\" onmouseout=\"highlightSetter('121S295I10',true)\">时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整��� integer、实型real","datatype":"webpage","clcs":[],"similarityPercentage":"74.3%","self":false,"text":"值变量>值操作符>值表达式>其中值操作符>是\"=\"或\"<=\"之一,<em class='similar'>它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar'>时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整型 integer、实型real"},{"profession":false,"keywords":[],"year":"","docid":"9000179218349411","author":"","university":"","source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html","reference":false,"similarScore":329.03796,"teacher":"","textWithDynamicClass":"其中赋值操作符是\"=\"戒者\"《=\"乊一,<em class='similar 121S296I7' onmouseover=\"highlightSetter('121S296I7',false)\" onmouseout=\"highlightSetter('121S296I7',true)\">他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar 121S296I9' onmouseover=\"highlightSetter('121S296I9',false)\" onmouseout=\"highlightSetter('121S296I9',true)\">过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、","datatype":"webpage","clcs":[],"similarityPercentage":"71.9%","self":false,"text":"其中赋值操作符是\"=\"戒者\"《=\"乊一,<em class='similar'>他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar'>过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、"}],"textWithDynamicClass":"过程赋值语句的语法格式如图4.7所示,其中赋值操作符可以是\"=\"或\"<=\"之一,<em class='similar T120I2' onmouseover=\"highlightSetter('T120I2',false)\" onmouseout=\"highlightSetter('T120I2',true)\">它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar T120I3' onmouseover=\"highlightSetter('T120I3',false)\" onmouseout=\"highlightSetter('T120I3',true)\">过程赋值语句只能用于对变量型数据进行赋值操作,</em>","similar_word_count":41,"text":"过程赋值语句的语法格式如图4.7所示,其中赋值操作符可以是\"=\"或\"<=\"之一,<em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","赋值","阻塞型","赋值操作"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":203.46156,"teacher":"","textWithDynamicClass":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar 122S300I4' onmouseover=\"highlightSetter('122S300I4',false)\" onmouseout=\"highlightSetter('122S300I4',true)\">二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中","datatype":"book","clcs":[],"similarityPercentage":"67.2%","self":false,"text":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar'>二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中"},{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar 122S299I5' onmouseover=\"highlightSetter('122S299I5',false)\" onmouseout=\"highlightSetter('122S299I5',true)\">刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&(由);所给","datatype":"book","clcs":[],"similarityPercentage":"64.3%","self":false,"text":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar'>刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&(由);所给"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar 122S301I3' onmouseover=\"highlightSetter('122S301I3',false)\" onmouseout=\"highlightSetter('122S301I3',true)\"> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&(~b","datatype":"book","clcs":[],"similarityPercentage":"62.9%","self":false,"text":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar'> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&(~b"}],"textWithDynamicClass":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar T121I1' onmouseover=\"highlightSetter('T121I1',false)\" onmouseout=\"highlightSetter('T121I1',true)\">由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>","similar_word_count":26,"text":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","赋值","表达式","合法的"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)&quot;语句块所组成的,<em class='similar 123S304I5' onmouseover=\"highlightSetter('123S304I5',false)\" onmouseout=\"highlightSetter('123S304I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")","datatype":"webpage","clcs":[],"similarityPercentage":"54.9%","self":false,"text":"(initial或always)&quot;语句块所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar 123S302I4' onmouseover=\"highlightSetter('123S302I4',false)\" onmouseout=\"highlightSetter('123S302I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 123S302I5' onmouseover=\"highlightSetter('123S302I5',false)\" onmouseout=\"highlightSetter('123S302I5',true)\">及高级程序语句</em>(包括分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"47.5%","self":false,"text":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>及高级程序语句</em>(包括分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar 123S303I4' onmouseover=\"highlightSetter('123S303I4',false)\" onmouseout=\"highlightSetter('123S303I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 123S303I5' onmouseover=\"highlightSetter('123S303I5',false)\" onmouseout=\"highlightSetter('123S303I5',true)\">和高级程序语句</em>(包括条件分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"40.7%","self":false,"text":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em>(包括条件分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar 123S305I2' onmouseover=\"highlightSetter('123S305I2',false)\" onmouseout=\"highlightSetter('123S305I2',true)\">(包括过程赋值语句和过程连续赋值语句)</em><em class='similar 123S305I3' onmouseover=\"highlightSetter('123S305I3',false)\" onmouseout=\"highlightSetter('123S305I3',true)\">和高级程序语句</em>(包括条件分支语句和循环控制语句)","datatype":"webpage","clcs":[],"similarityPercentage":"40.7%","self":false,"text":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar'>(包括过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em>(包括条件分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar 123S306I8' onmouseover=\"highlightSetter('123S306I8',false)\" onmouseout=\"highlightSetter('123S306I8',true)\">(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar 123S306I9' onmouseover=\"highlightSetter('123S306I9',false)\" onmouseout=\"highlightSetter('123S306I9',true)\">和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")","datatype":"webpage","clcs":[],"similarityPercentage":"40.7%","self":false,"text":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar'>(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar'>和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")"}],"textWithDynamicClass":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar T122I2' onmouseover=\"highlightSetter('T122I2',false)\" onmouseout=\"highlightSetter('T122I2',true)\">图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em>","similar_word_count":32,"text":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em>","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"}],"keyword":["语句","4.5","提及","赋值语句","程序语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)&quot;语句块所组成的,<em class='similar 123S304I5' onmouseover=\"highlightSetter('123S304I5',false)\" onmouseout=\"highlightSetter('123S304I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar 123S304I6' onmouseover=\"highlightSetter('123S304I6',false)\" onmouseout=\"highlightSetter('123S304I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过","datatype":"webpage","clcs":[],"similarityPercentage":"65.3%","self":false,"text":"(initial或always)&quot;语句块所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"及高级程序语句<em class='similar 123S302I6' onmouseover=\"highlightSetter('123S302I6',false)\" onmouseout=\"highlightSetter('123S302I6',true)\">(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了","datatype":"book","clcs":[],"similarityPercentage":"59.5%","self":false,"text":"及高级程序语句<em class='similar'>(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":144.5,"teacher":"","textWithDynamicClass":"/deassign 或 force/release 语句组)<em class='similar 123S307I7' onmouseover=\"highlightSetter('123S307I7',false)\" onmouseout=\"highlightSetter('123S307I7',true)\">141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for","datatype":"book","clcs":[],"similarityPercentage":"58.6%","self":false,"text":"/deassign 或 force/release 语句组)<em class='similar'>141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 123S303I6' onmouseover=\"highlightSetter('123S303I6',false)\" onmouseout=\"highlightSetter('123S303I6',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关","datatype":"book","clcs":[],"similarityPercentage":"53.7%","self":false,"text":"和高级程���语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 123S305I4' onmouseover=\"highlightSetter('123S305I4',false)\" onmouseout=\"highlightSetter('123S305I4',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块","datatype":"webpage","clcs":[],"similarityPercentage":"53.7%","self":false,"text":"和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 123S306I10' onmouseover=\"highlightSetter('123S306I10',false)\" onmouseout=\"highlightSetter('123S306I10',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的","datatype":"webpage","clcs":[],"similarityPercentage":"53.7%","self":false,"text":"和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的"}],"textWithDynamicClass":"图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,<em class='similar T122I3' onmouseover=\"highlightSetter('T122I3',false)\" onmouseout=\"highlightSetter('T122I3',true)\">高级程序语句就包含分支语句和循环控制语句,</em>","similar_word_count":20,"text":"图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,<em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em>","suggest":{"synonyms":[],"keyword":["语句","程序语句","分支语句","控制语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":144.5,"teacher":"","textWithDynamicClass":"/deassign 或 force/release 语句组)<em class='similar 123S307I7' onmouseover=\"highlightSetter('123S307I7',false)\" onmouseout=\"highlightSetter('123S307I7',true)\">141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for","datatype":"book","clcs":[],"similarityPercentage":"70.8%","self":false,"text":"/deassign 或 force/release 语句组)<em class='similar'>141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)\"语句块所组成的,而块语句主要是由过程赋值语句和高级程序语句<em class='similar 123S304I6' onmouseover=\"highlightSetter('123S304I6',false)\" onmouseout=\"highlightSetter('123S304I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过","datatype":"webpage","clcs":[],"similarityPercentage":"68.1%","self":false,"text":"(initial或always)\"语句块所组成的,而块语句主要是由过程赋值语句和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 123S303I6' onmouseover=\"highlightSetter('123S303I6',false)\" onmouseout=\"highlightSetter('123S303I6',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关","datatype":"book","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 123S305I4' onmouseover=\"highlightSetter('123S305I4',false)\" onmouseout=\"highlightSetter('123S305I4',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块","datatype":"webpage","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 123S306I10' onmouseover=\"highlightSetter('123S306I10',false)\" onmouseout=\"highlightSetter('123S306I10',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的","datatype":"webpage","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"及高级程序语句<em class='similar 123S302I6' onmouseover=\"highlightSetter('123S302I6',false)\" onmouseout=\"highlightSetter('123S302I6',true)\">(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了","datatype":"book","clcs":[],"similarityPercentage":"57.8%","self":false,"text":"及高级程序语句<em class='similar'>(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了"}],"textWithDynamicClass":"高级程序语句就包含分支语句和循环控制语句,<em class='similar T122I4' onmouseover=\"highlightSetter('T122I4',false)\" onmouseout=\"highlightSetter('T122I4',true)\">分支语句包含条件分支语句及case条件控制语句,</em>","similar_word_count":20,"text":"高级程序语句就包含分支语句和循环控制语句,<em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>","suggest":{"synonyms":[],"keyword":["语句","分支语句","控制语句","case","条件控制语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":222.60867,"teacher":"","textWithDynamicClass":"其他与assign语句类似。<em class='similar 124S309I1' onmouseover=\"highlightSetter('124S309I1',false)\" onmouseout=\"highlightSetter('124S309I1',true)\">分支语句If-else条件分支语句If-else条件分支语句的作用是根据指定的判断条件是否满足来确定下一步要执行的操作。</em>它在使用时采用如下三种形式:1、使用形式1If(&","datatype":"webpage","clcs":[],"similarityPercentage":"50.6%","self":false,"text":"其他与assign语句类似。<em class='similar'>分支语句If-else条件分支语句If-else条件分支语句的作用是根据指定的判断条件是否满足来确定下一步要执行的操作。</em>它在使用时采用如下三种形式:1、使用形式1If(&"}],"textWithDynamicClass":"通过Verilog HDL语法可知,<em class='similar T123I1' onmouseover=\"highlightSetter('T123I1',false)\" onmouseout=\"highlightSetter('T123I1',true)\">if-else条件分支语句的作用是复选,</em><em class='similar T123I2' onmouseover=\"highlightSetter('T123I2',false)\" onmouseout=\"highlightSetter('T123I2',true)\">即通过是否满足��定的判断条件来判断下一步电路需要执行的操作或逻辑。</em>","similar_word_count":46,"text":"通过Verilog HDL语法可知,<em class='similar'>if-else条件分支语句的作用是复选,</em><em class='similar'>即通过是否满足给定的判断条件来判断下一步电路需要执行的操作或逻辑。</em>","suggest":{"synonyms":[],"keyword":["分支语句","复选","给定","判断条件","或逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar 126S313I4' onmouseover=\"highlightSetter('126S313I4',false)\" onmouseout=\"highlightSetter('126S313I4',true)\">与条件分支语句一样,</em><em class='similar 126S313I5' onmouseover=\"highlightSetter('126S313I5',false)\" onmouseout=\"highlightSetter('126S313I5',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了4种类型的循环语句,","datatype":"book","clcs":[],"similarityPercentage":"84.9%","self":false,"text":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar'>与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了4种类型的循环语句,"},{"profession":false,"keywords":[],"year":"2012","docid":"1900023738091111","author":"张晓飞，秦刚刚，杨阳等编著","university":"","source":"","title":"FPGA技术入门与典型项目开发实例","url":"","reference":false,"similarScore":192.91864,"teacher":"","textWithDynamicClass":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar 126S314I2' onmouseover=\"highlightSetter('126S314I2',false)\" onmouseout=\"highlightSetter('126S314I2',true)\">说明语句与条件分支语句一样</em>,<em class='similar 126S314I3' onmouseover=\"highlightSetter('126S314I3',false)\" onmouseout=\"highlightSetter('126S314I3',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另","datatype":"book","clcs":[],"similarityPercentage":"78.8%","self":false,"text":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar'>说明语句与条件分支语句一样</em>,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar 126S311I4' onmouseover=\"highlightSetter('126S311I4',false)\" onmouseout=\"highlightSetter('126S311I4',true)\">&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar 126S311I5' onmouseover=\"highlightSetter('126S311I5',false)\" onmouseout=\"highlightSetter('126S311I5',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。Verilog HDL语言提供了如下几种循环控制语句。","datatype":"book","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar'>&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。Verilog HDL语言提供了如下几种循环控制语句。"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar 126S312I5' onmouseover=\"highlightSetter('126S312I5',false)\" onmouseout=\"highlightSetter('126S312I5',true)\">6.4循环控制语句与条件分支语句一样,</em><em class='similar 126S312I6' onmouseover=\"highlightSetter('126S312I6',false)\" onmouseout=\"highlightSetter('126S312I6',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了如下几种循环控制语句:","datatype":"book","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar'>6.4循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了如下几种循环控制语句:"},{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":183.9676,"teacher":"","textWithDynamicClass":"t;时,执行第四个分支项对应的语句&quot;out钊~b)<em class='similar 126S315I7' onmouseover=\"highlightSetter('126S315I7',false)\" onmouseout=\"highlightSetter('126S315I7',true)\">+l ;&quot;。7.2循环控制语句与条件分支语句���样,</em><em class='similar 126S315I8' onmouseover=\"highlightSetter('126S315I8',false)\" onmouseout=\"highlightSetter('126S315I8',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。v","datatype":"book","clcs":[],"similarityPercentage":"73.9%","self":false,"text":"t;时,执行第四个分支项对应的语句&quot;out钊~b)<em class='similar'>+l ;&quot;。7.2循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。v"},{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar 126S316I11' onmouseover=\"highlightSetter('126S316I11',false)\" onmouseout=\"highlightSetter('126S316I11',true)\">循环语句:</em><em class='similar 126S316I12' onmouseover=\"highlightSetter('126S316I12',false)\" onmouseout=\"highlightSetter('126S316I12',true)\">verilog中有四种循环语句:</em>while、","datatype":"webpage","clcs":[],"similarityPercentage":"45.9%","self":false,"text":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar'>循环语句:</em><em class='similar'>verilog中有四种循环语句:</em>while、"}],"textWithDynamicClass":"<em class='similar T125I0' onmouseover=\"highlightSetter('T125I0',false)\" onmouseout=\"highlightSetter('T125I0',true)\">与条件分支语句表达含义一致,</em><em class='similar T125I1' onmouseover=\"highlightSetter('T125I1',false)\" onmouseout=\"highlightSetter('T125I1',true)\">循环控制语句也是高级Verilog HDL程序语句的一种,</em>","similar_word_count":33,"text":"<em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em>","suggest":{"synonyms":[{"synonyms":["寄义"],"keyword":"含义"}],"keyword":["条件分支","语句表达","含义","控制语句","程序语句","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar 126S313I7' onmouseover=\"highlightSetter('126S313I7',false)\" onmouseout=\"highlightSetter('126S313I7',true)\">Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。 forever循环语句:","datatype":"book","clcs":[],"similarityPercentage":"74.3%","self":false,"text":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。 forever循环语句:"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"循环控制语句也是一种高级程序语句,它在verilog HDL中被用来进行行为描述。<em class='similar 126S311I7' onmouseover=\"highlightSetter('126S311I7',false)\" onmouseout=\"highlightSetter('126S311I7',true)\">Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,","datatype":"book","clcs":[],"similarityPercentage":"70.8%","self":false,"text":"循环控制语句也是一种高级程序语句,它在verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar 126S312I8' onmouseover=\"highlightSetter('126S312I8',false)\" onmouseout=\"highlightSetter('126S312I8',true)\">Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1 forever循环语句 forever 循环语句实现的是一种无限的循环,","datatype":"book","clcs":[],"similarityPercentage":"70.1%","self":false,"text":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1 forever循环语句 forever 循环语句实现的是一种无限的循环,"}],"textWithDynamicClass":"与条件分支语句表达含义一致,循环控制语句也是高级Verilog HDL程序语句的一种,<em class='similar T125I2' onmouseover=\"highlightSetter('T125I2',false)\" onmouseout=\"highlightSetter('T125I2',true)\">Verilog提供的循环控制语句关键字有forever、</em>","similar_word_count":17,"text":"与条件分支语句表达含义一致,循环控制语句也是高级Verilog HDL程序语句的一种,<em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>","suggest":{"synonyms":[],"keyword":["控制语句","关键字","forever","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"verilog中有四种循环语句:<em class='similar 126S316I13' onmouseover=\"highlightSetter('126S316I13',false)\" onmouseout=\"highlightSetter('126S316I13',true)\">while、</em>for、<em class='similar 126S316I15' onmouseover=\"highlightSetter('126S316I15',false)\" onmouseout=\"highlightSetter('126S316I15',true)\">repeat和forever,</em><em class='similar 126S316I16' onmouseover=\"highlightSetter('126S316I16',false)\" onmouseout=\"highlightSetter('126S316I16',true)\">其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar 126S316I22' onmouseover=\"highlightSetter('126S316I22',false)\" onmouseout=\"highlightSetter('126S316I22',true)\">while</em>(条件表达式)begin各行为语句end;(b)f","datatype":"webpage","clcs":[],"similarityPercentage":"49.5%","self":false,"text":"verilog中有四种循环语句:<em class='similar'>while、</em>for、<em class='similar'>repeat和forever,</em><em class='similar'>其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar'>while</em>(条件表达式)begin各行为语句end;(b)f"}],"textWithDynamicClass":"repeat、<em class='similar T125I4' onmouseover=\"highlightSetter('T125I4',false)\" onmouseout=\"highlightSetter('T125I4',true)\">while、</em>","similar_word_count":2,"text":"repeat、<em class='similar'>while、</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"分支对应的语句\"out=(~b)+1\"。6.4循环控制语句与条件分支语句一样,<em class='similar 126S312I6' onmouseover=\"highlightSetter('126S312I6',false)\" onmouseout=\"highlightSetter('126S312I6',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 126S312I8' onmouseover=\"highlightSetter('126S312I8',false)\" onmouseout=\"highlightSetter('126S312I8',true)\">Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar 126S312I19' onmouseover=\"highlightSetter('126S312I19',false)\" onmouseout=\"highlightSetter('126S312I19',true)\"> forever循环语句 forever 循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。","datatype":"book","clcs":[],"similarityPercentage":"73.6%","self":false,"text":"分支对应的语句\"out=(~b)+1\"。6.4循环控制语句与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar'> forever循环语句 forever 循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"01\"时,才执行第4分支项对应的操作‘out=的;\"。3.6循环控制语句与条件分支语句一样,<em class='similar 126S311I5' onmouseover=\"highlightSetter('126S311I5',false)\" onmouseout=\"highlightSetter('126S311I5',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar 126S311I7' onmouseover=\"highlightSetter('126S311I7',false)\" onmouseout=\"highlightSetter('126S311I7',true)\">Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar 126S311I13' onmouseover=\"highlightSetter('126S311I13',false)\" onmouseout=\"highlightSetter('126S311I13',true)\">3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f","datatype":"book","clcs":[],"similarityPercentage":"72.1%","self":false,"text":"01\"时,才执行第4分支项对应的操作‘out=的;\"。3.6循环控制语句与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar'>3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。与条件分支语句一样,<em class='similar 126S313I5' onmouseover=\"highlightSetter('126S313I5',false)\" onmouseout=\"highlightSetter('126S313I5',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 126S313I7' onmouseover=\"highlightSetter('126S313I7',false)\" onmouseout=\"highlightSetter('126S313I7',true)\">Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar 126S313I9' onmouseover=\"highlightSetter('126S313I9',false)\" onmouseout=\"highlightSetter('126S313I9',true)\"> forever循环语句:</em><em class='similar 126S313I10' onmouseover=\"highlightSetter('126S313I10',false)\" onmouseout=\"highlightSetter('126S313I10',true)\">无限连续执行的语句,</em>","datatype":"book","clcs":[],"similarityPercentage":"71.2%","self":false,"text":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar'> forever循环语句:</em><em class='similar'>无限连续执行的语句,</em>"},{"profession":false,"keywords":[],"year":"2012","docid":"1900023738091111","author":"张晓飞，秦刚刚，杨阳等编著","university":"","source":"","title":"FPGA技术入门与典型项目开发实例","url":"","reference":false,"similarScore":192.91864,"teacher":"","textWithDynamicClass":"这种情况的方法。2.6 verilog HDL循环语句与结构说明语句与条件分支语句一样,<em class='similar 126S314I3' onmouseover=\"highlightSetter('126S314I3',false)\" onmouseout=\"highlightSetter('126S314I3',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另","datatype":"book","clcs":[],"similarityPercentage":"69.6%","self":false,"text":"这种情况的方法。2.6 verilog HDL循环语句与结构说明语句与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另"},{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":183.9676,"teacher":"","textWithDynamicClass":"t;时,执行第四个分支项对应的语句\"out钊~b)+l ;\"。7.2循环控制语句与条件分支语句一样,<em class='similar 126S315I8' onmouseover=\"highlightSetter('126S315I8',false)\" onmouseout=\"highlightSetter('126S315I8',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。v","datatype":"book","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"t;时,执行第四个分支项对应的语句\"out钊~b)+l ;\"。7.2循环控制语句与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。v"},{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar 126S316I11' onmouseover=\"highlightSetter('126S316I11',false)\" onmouseout=\"highlightSetter('126S316I11',true)\">循环语句:</em><em class='similar 126S316I12' onmouseover=\"highlightSetter('126S316I12',false)\" onmouseout=\"highlightSetter('126S316I12',true)\">verilog中有四种循环语句:</em><em class='similar 126S316I13' onmouseover=\"highlightSetter('126S316I13',false)\" onmouseout=\"highlightSetter('126S316I13',true)\">while、</em>for、<em class='similar 126S316I15' onmouseover=\"highlightSetter('126S316I15',false)\" onmouseout=\"highlightSetter('126S316I15',true)\">repeat和forever,</em><em class='similar 126S316I16' onmouseover=\"highlightSetter('126S316I16',false)\" onmouseout=\"highlightSetter('126S316I16',true)\">其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:while","datatype":"webpage","clcs":[],"similarityPercentage":"51.9%","self":false,"text":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar'>循环语句:</em><em class='similar'>verilog中有四种循环语句:</em><em class='similar'>while、</em>for、<em class='similar'>repeat和forever,</em><em class='similar'>其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:while"}],"textWithDynamicClass":"for四种,<em class='similar T125I6' onmouseover=\"highlightSetter('T125I6',false)\" onmouseout=\"highlightSetter('T125I6',true)\">其中除去forever语句是一种无限的循环语句外,</em>","similar_word_count":19,"text":"for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>","suggest":{"synonyms":[{"synonyms":["无尽"],"keyword":"无限"}],"keyword":["forever","语句","无限","循环语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar 129S323I9' onmouseover=\"highlightSetter('129S323I9',false)\" onmouseout=\"highlightSetter('129S323I9',true)\">函数</em><em class='similar 129S323I10' onmouseover=\"highlightSetter('129S323I10',false)\" onmouseout=\"highlightSetter('129S323I10',true)\">(function)</em><em class='similar 129S323I11' onmouseover=\"highlightSetter('129S323I11',false)\" onmouseout=\"highlightSetter('129S323I11',true)\">函数</em>(functinn)<em class='similar 129S323I13' onmouseover=\"highlightSetter('129S323I13',false)\" onmouseout=\"highlightSetter('129S323I13',true)\">类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用","datatype":"book","clcs":[],"similarityPercentage":"76.2%","self":false,"text":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(functinn)<em class='similar'>类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":",这个持续时间将是tic time个时钟周期长度。6.5.2<em class='similar 129S324I6' onmouseover=\"highlightSetter('129S324I6',false)\" onmouseout=\"highlightSetter('129S324I6',true)\">函数</em><em class='similar 129S324I7' onmouseover=\"highlightSetter('129S324I7',false)\" onmouseout=\"highlightSetter('129S324I7',true)\">(function)</em><em class='similar 129S324I8' onmouseover=\"highlightSetter('129S324I8',false)\" onmouseout=\"highlightSetter('129S324I8',true)\">函数</em>(funcion)<em class='similar 129S324I10' onmouseover=\"highlightSetter('129S324I10',false)\" onmouseout=\"highlightSetter('129S324I10',true)\">类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL语言中的函数使用","datatype":"book","clcs":[],"similarityPercentage":"76.2%","self":false,"text":",这个持续时间将是tic time个时钟周期长度。6.5.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(funcion)<em class='similar'>类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL语言中的函数使用"},{"profession":false,"keywords":[],"year":"","docid":"9000181939983411","author":"","university":"","source":"网页","title":"verilog任务和函数ppt课件","url":"https://www.docin.com/p%2D2480211351.html","reference":false,"similarScore":70.35714,"teacher":"","textWithDynamicClass":"14 Verilog Verilog function 函数<em class='similar 129S325I4' onmouseover=\"highlightSetter('129S325I4',false)\" onmouseout=\"highlightSetter('129S325I4',true)\">(function)</em><em class='similar 129S325I5' onmouseover=\"highlightSetter('129S325I5',false)\" onmouseout=\"highlightSetter('129S325I5',true)\">类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"14 Verilog Verilog function 函数<em class='similar'>(function)</em><em class='similar'>类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用"}],"textWithDynamicClass":"<em class='similar T128I0' onmouseover=\"highlightSetter('T128I0',false)\" onmouseout=\"highlightSetter('T128I0',true)\">Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar T128I1' onmouseover=\"highlightSetter('T128I1',false)\" onmouseout=\"highlightSetter('T128I1',true)\">函数</em><em class='similar T128I2' onmouseover=\"highlightSetter('T128I2',false)\" onmouseout=\"highlightSetter('T128I2',true)\">(Function)</em>","similar_word_count":33,"text":"<em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>","suggest":{"synonyms":[],"keyword":["编程语言","函数概念","语法"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 130S326I4' onmouseover=\"highlightSetter('130S326I4',false)\" onmouseout=\"highlightSetter('130S326I4',true)\">5.16函数的综合在Verilog HDL语句中,</em><em class='similar 130S326I5' onmouseover=\"highlightSetter('130S326I5',false)\" onmouseout=\"highlightSetter('130S326I5',true)\">函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,","datatype":"book","clcs":[],"similarityPercentage":"85.3%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,"}],"textWithDynamicClass":"<em class='similar T129I0' onmouseover=\"highlightSetter('T129I0',false)\" onmouseout=\"highlightSetter('T129I0',true)\">在Verilog HDL语句中,</em><em class='similar T129I1' onmouseover=\"highlightSetter('T129I1',false)\" onmouseout=\"highlightSetter('T129I1',true)\">函数代表了纯组合逻辑。</em>","similar_word_count":17,"text":"<em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em>","suggest":{"synonyms":[],"keyword":["语句","组合逻辑","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar 130S326I10' onmouseover=\"highlightSetter('130S326I10',false)\" onmouseout=\"highlightSetter('130S326I10',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar 130S326I11' onmouseover=\"highlightSetter('130S326I11',false)\" onmouseout=\"highlightSetter('130S326I11',true)\">仅被综合成导线。</em>例5一42给出了一个函数的实例,","datatype":"book","clcs":[],"similarityPercentage":"77.1%","self":false,"text":"函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar'>仅被综合成导线。</em>例5一42给出了一个函数的实例,"}],"textWithDynamicClass":"在Verilog HDL语句中,函数代表了纯组合逻辑。<em class='similar T129I2' onmouseover=\"highlightSetter('T129I2',false)\" onmouseout=\"highlightSetter('T129I2',true)\">在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar T129I3' onmouseover=\"highlightSetter('T129I3',false)\" onmouseout=\"highlightSetter('T129I3',true)\">仅被综合映射为成片上导线</em>","similar_word_count":40,"text":"在Verilog HDL语句中,函数代表了纯组合逻辑。<em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["语句","函数语句","临时","映射","成片","导线"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。5.16函数的综合在Verilog HDL语句中,<em class='similar 130S326I5' onmouseover=\"highlightSetter('130S326I5',false)\" onmouseout=\"highlightSetter('130S326I5',true)\">函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,","datatype":"book","clcs":[],"similarityPercentage":"75.8%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。5.16函数的综合在Verilog HDL语句中,<em class='similar'>函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,"}],"textWithDynamicClass":"[16]。<em class='similar T129I5' onmouseover=\"highlightSetter('T129I5',false)\" onmouseout=\"highlightSetter('T129I5',true)\">由于Function内部代表了纯组合逻辑,</em>","similar_word_count":14,"text":"[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>","suggest":{"synonyms":[],"keyword":["组合逻辑","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000131828806911","author":"","university":"","source":"网页","title":"浅谈Java中的数据_Hybeyond_的博客-CSDN博客","url":"https://blog.csdn.net/Hybeyond_/article/details/100088851","reference":false,"similarScore":201.72269,"teacher":"","textWithDynamicClass":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar 132S331I5' onmouseover=\"highlightSetter('132S331I5',false)\" onmouseout=\"highlightSetter('132S331I5',true)\">广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar 132S331I6' onmouseover=\"highlightSetter('132S331I6',false)\" onmouseout=\"highlightSetter('132S331I6',true)\">是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"82.6%","self":false,"text":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar'>广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"},{"profession":false,"keywords":[],"year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编；黄涛，吴强副主编；王社，魏郧华，胡凯，蔡振参编","university":"","source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":"","reference":false,"similarScore":237.46571,"teacher":"","textWithDynamicClass":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar 132S329I8' onmouseover=\"highlightSetter('132S329I8',false)\" onmouseout=\"highlightSetter('132S329I8',true)\">是事实或观察的结果,</em><em class='similar 132S329I9' onmouseover=\"highlightSetter('132S329I9',false)\" onmouseout=\"highlightSetter('132S329I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 132S329I10' onmouseover=\"highlightSetter('132S329I10',false)\" onmouseout=\"highlightSetter('132S329I10',true)\">是用于表示客观事物的未经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字","datatype":"book","clcs":["TP311.138"],"similarityPercentage":"77.0%","self":false,"text":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字"},{"profession":false,"keywords":[],"year":"","docid":"9000118062415311","author":"","university":"","source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search","reference":false,"similarScore":237.4657,"teacher":"","textWithDynamicClass":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar 132S330I8' onmouseover=\"highlightSetter('132S330I8',false)\" onmouseout=\"highlightSetter('132S330I8',true)\">是事实或观察的结果,</em><em class='similar 132S330I9' onmouseover=\"highlightSetter('132S330I9',false)\" onmouseout=\"highlightSetter('132S330I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 132S330I10' onmouseover=\"highlightSetter('132S330I10',false)\" onmouseout=\"highlightSetter('132S330I10',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"76.0%","self":false,"text":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"},{"profession":false,"keywords":[],"year":"","docid":"9000108431821311","author":"","university":"","source":"网页","title":"数据分析的准备工作：从问题分析到数据清洗","url":"http://m.toutiao.com/i6643684078983840264/","reference":false,"similarScore":613.7815,"teacher":"","textWithDynamicClass":"<em class='similar 132S328I0' onmouseover=\"highlightSetter('132S328I0',false)\" onmouseout=\"highlightSetter('132S328I0',true)\">是对客观事物的逻辑归纳,</em><em class='similar 132S328I1' onmouseover=\"highlightSetter('132S328I1',false)\" onmouseout=\"highlightSetter('132S328I1',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar 132S328I11' onmouseover=\"highlightSetter('132S328I11',false)\" onmouseout=\"highlightSetter('132S328I11',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 132S328I12' onmouseover=\"highlightSetter('132S328I12',false)\" onmouseout=\"highlightSetter('132S328I12',true)\">如正相关,</em><em class='similar 132S328I13' onmouseover=\"highlightSetter('132S328I13',false)\" onmouseout=\"highlightSetter('132S328I13',true)\">负相关。</em><em class='similar 132S328I14' onmouseover=\"highlightSetter('132S328I14',false)\" onmouseout=\"highlightSetter('132S328I14',true)\">数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发","datatype":"webpage","clcs":[],"similarityPercentage":"47.5%","self":false,"text":"<em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em><em class='similar'>数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发"}],"textWithDynamicClass":"<em class='similar T131I0' onmouseover=\"highlightSetter('T131I0',false)\" onmouseout=\"highlightSetter('T131I0',true)\">数据是对事实进行观察后产生的结果的描述,</em><em class='similar T131I1' onmouseover=\"highlightSetter('T131I1',false)\" onmouseout=\"highlightSetter('T131I1',true)\">是对客观事物一种数学逻辑归纳,</em><em class='similar T131I2' onmouseover=\"highlightSetter('T131I2',false)\" onmouseout=\"highlightSetter('T131I2',true)\">是用于表示客观事物的最好的原始素材</em>","similar_word_count":50,"text":"<em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>","suggest":{"synonyms":[{"synonyms":["事例"],"keyword":"事实"},{"synonyms":["总结"],"keyword":"归纳"}],"keyword":["事实","客观事物","数学逻辑","归纳","原始素材"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000188274078611","author":"","university":"","source":"网页","title":"数据标签生成、模型训练、事件识别方法和装置","url":"http://www.doc88.com/p%2D99729934791774.html","reference":false,"similarScore":240,"teacher":"","textWithDynamicClass":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar 132S332I3' onmouseover=\"highlightSetter('132S332I3',false)\" onmouseout=\"highlightSetter('132S332I3',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 132S332I4' onmouseover=\"highlightSetter('132S332I4',false)\" onmouseout=\"highlightSetter('132S332I4',true)\">如正相关,</em><em class='similar 132S332I5' onmouseover=\"highlightSetter('132S332I5',false)\" onmouseout=\"highlightSetter('132S332I5',true)\">负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。","datatype":"webpage","clcs":[],"similarityPercentage":"98.0%","self":false,"text":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。"},{"profession":false,"keywords":[],"year":"","docid":"9000108431821311","author":"","university":"","source":"网页","title":"数据分析的准备工作：从问题分析到数据清洗","url":"http://m.toutiao.com/i6643684078983840264/","reference":false,"similarScore":613.7815,"teacher":"","textWithDynamicClass":"是用于表示客观事物的未经加工的的原始素材。数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar 132S328I11' onmouseover=\"highlightSetter('132S328I11',false)\" onmouseout=\"highlightSetter('132S328I11',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 132S328I12' onmouseover=\"highlightSetter('132S328I12',false)\" onmouseout=\"highlightSetter('132S328I12',true)\">如正相关,</em><em class='similar 132S328I13' onmouseover=\"highlightSetter('132S328I13',false)\" onmouseout=\"highlightSetter('132S328I13',true)\">负相关。</em><em class='similar 132S328I14' onmouseover=\"highlightSetter('132S328I14',false)\" onmouseout=\"highlightSetter('132S328I14',true)\">数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发","datatype":"webpage","clcs":[],"similarityPercentage":"71.1%","self":false,"text":"是用于表示客观事物的未经加工的的原始素材。数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em><em class='similar'>数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发"}],"textWithDynamicClass":"[3]。<em class='similar T131I4' onmouseover=\"highlightSetter('T131I4',false)\" onmouseout=\"highlightSetter('T131I4',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar T131I5' onmouseover=\"highlightSetter('T131I5',false)\" onmouseout=\"highlightSetter('T131I5',true)\">如正相关,</em><em class='similar T131I6' onmouseover=\"highlightSetter('T131I6',false)\" onmouseout=\"highlightSetter('T131I6',true)\">负相关。</em>","similar_word_count":24,"text":"[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>","suggest":{"synonyms":[],"keyword":["数据相关性","指数","正相关","负相关"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000187461126911","author":"","university":"","source":"网页","title":"油藏经营管理","url":"https://www.docin.com/p%2D920724272.html","reference":false,"similarScore":104,"teacher":"","textWithDynamicClass":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar 133S334I4' onmouseover=\"highlightSetter('133S334I4',false)\" onmouseout=\"highlightSetter('133S334I4',true)\">量纲一般也不同,</em><em class='similar 133S334I5' onmouseover=\"highlightSetter('133S334I5',false)\" onmouseout=\"highlightSetter('133S334I5',true)\">数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或","datatype":"webpage","clcs":[],"similarityPercentage":"75.9%","self":false,"text":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar'>量纲一般也不同,</em><em class='similar'>数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或"}],"textWithDynamicClass":"本研究共计提取了67项特征,<em class='similar T132I1' onmouseover=\"highlightSetter('T132I1',false)\" onmouseout=\"highlightSetter('T132I1',true)\">这些特征的数据取值范围差别很大,</em><em class='similar T132I2' onmouseover=\"highlightSetter('T132I2',false)\" onmouseout=\"highlightSetter('T132I2',true)\">量纲也不同,</em>","similar_word_count":20,"text":"本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>","suggest":{"synonyms":[],"keyword":["取值范围","量纲"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117476774611","author":"csdn","university":"","source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596","reference":false,"similarScore":320.97223,"teacher":"","textWithDynamicClass":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar 134S336I2' onmouseover=\"highlightSetter('134S336I2',false)\" onmouseout=\"highlightSetter('134S336I2',true)\">最重要也最需要应用到数据上的转换器,</em><em class='similar 134S336I3' onmouseover=\"highlightSetter('134S336I3',false)\" onmouseout=\"highlightSetter('134S336I3',true)\">就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,往往导致机器学习算法的性能表现不佳,","datatype":"webpage","clcs":[],"similarityPercentage":"50.0%","self":false,"text":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar'>最重要也最需要应用到数据上的转换器,</em><em class='similar'>就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,往往导致机器学习算法的性能表现不佳,"}],"textWithDynamicClass":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar T133I2' onmouseover=\"highlightSetter('T133I2',false)\" onmouseout=\"highlightSetter('T133I2',true)\">所以需要对特征数据进行的一项重要操作就是特征缩放。</em>","similar_word_count":24,"text":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em>","suggest":{"synonyms":[],"keyword":["特征数据","特征缩放"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000143881533411","author":"","university":"","source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments","reference":false,"similarScore":311.05557,"teacher":"","textWithDynamicClass":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar 134S335I3' onmouseover=\"highlightSetter('134S335I3',false)\" onmouseout=\"highlightSetter('134S335I3',true)\">特征缩放,</em><em class='similar 134S335I4' onmouseover=\"highlightSetter('134S335I4',false)\" onmouseout=\"highlightSetter('134S335I4',true)\">如果输入的数值属性具有非常大的比例差异,</em>往往导致机器学习算法的性能表现不佳,","datatype":"webpage","clcs":[],"similarityPercentage":"46.2%","self":false,"text":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar'>特征缩放,</em><em class='similar'>如果输入的数值属性具有非常大的比例差异,</em>往往导致机器学习算法的性能表现不佳,"}],"textWithDynamicClass":"所以需要对特征数据进行的一项重要操作就是特征缩放。<em class='similar T133I3' onmouseover=\"highlightSetter('T133I3',false)\" onmouseout=\"highlightSetter('T133I3',true)\">若输入的样本的特征数据存在较大的数值差异,</em>","similar_word_count":20,"text":"所以需要对特征数据进行的一项重要操作就是特征缩放。<em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em>","suggest":{"synonyms":[],"keyword":["特征数据"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117476774611","author":"csdn","university":"","source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596","reference":false,"similarScore":320.97223,"teacher":"","textWithDynamicClass":"就是特征缩放。如果输入的数值属性具有非常大的比例差异,<em class='similar 134S336I5' onmouseover=\"highlightSetter('134S336I5',false)\" onmouseout=\"highlightSetter('134S336I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 134S336I6' onmouseover=\"highlightSetter('134S336I6',false)\" onmouseout=\"highlightSetter('134S336I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39","datatype":"webpage","clcs":[],"similarityPercentage":"79.2%","self":false,"text":"就是特征缩放。如果输入的数值属性具有非常大的比例差异,<em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39"},{"profession":false,"keywords":[],"year":"","docid":"9000143881533411","author":"","university":"","source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments","reference":false,"similarScore":311.05557,"teacher":"","textWithDynamicClass":"如果输入的数值属性具有非常大的比例差异,<em class='similar 134S335I5' onmouseover=\"highlightSetter('134S335I5',false)\" onmouseout=\"highlightSetter('134S335I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 134S335I6' onmouseover=\"highlightSetter('134S335I6',false)\" onmouseout=\"highlightSetter('134S335I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393","datatype":"webpage","clcs":[],"similarityPercentage":"76.1%","self":false,"text":"如果输入的数值属性具有非常大的比例差异,<em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393"}],"textWithDynamicClass":"若输入的样本的特征数据存在较大的数值差异,<em class='similar T133I4' onmouseover=\"highlightSetter('T133I4',false)\" onmouseout=\"highlightSetter('T133I4',true)\">往往会导致机器学习算法的性能表现不佳,</em><em class='similar T133I5' onmouseover=\"highlightSetter('T133I5',false)\" onmouseout=\"highlightSetter('T133I5',true)\">当然也有极少数特例,</em>","similar_word_count":27,"text":"若输入的样本的特征数据存在较大的数值差异,<em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>","suggest":{"synonyms":[],"keyword":["机器学习算法","性能表现","特例"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110791518511","author":"csdn","university":"","source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516","reference":false,"similarScore":80.35715,"teacher":"","textWithDynamicClass":"ng)和标准化(standardization)转换流水线:<em class='similar 135S337I13' onmouseover=\"highlightSetter('135S337I13',false)\" onmouseout=\"highlightSetter('135S337I13',true)\">利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们","datatype":"webpage","clcs":[],"similarityPercentage":"61.9%","self":false,"text":"ng)和标准化(standardization)转换流水线:<em class='similar'>利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们"}],"textWithDynamicClass":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar T134I1' onmouseover=\"highlightSetter('T134I1',false)\" onmouseout=\"highlightSetter('T134I1',true)\">所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>","similar_word_count":31,"text":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>","suggest":{"synonyms":[],"keyword":["scikit","learn","pipeline"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000123319620811","author":"","university":"","source":"网页","title":"基于神经网络的磁瓦表面缺陷检测识别_刘畅 - 道客巴巴","url":"https://www.doc88.com/p%2D6129946121758.html","reference":false,"similarScore":62.592594,"teacher":"","textWithDynamicClass":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar 138S340I8' onmouseover=\"highlightSetter('138S340I8',false)\" onmouseout=\"highlightSetter('138S340I8',true)\">使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中","datatype":"webpage","clcs":[],"similarityPercentage":"64.6%","self":false,"text":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar'>使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中"}],"textWithDynamicClass":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar T137I0' onmouseover=\"highlightSetter('T137I0',false)\" onmouseout=\"highlightSetter('T137I0',true)\">,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>","similar_word_count":27,"text":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>","suggest":{"synonyms":[],"keyword":["5折","交叉验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120755765111","author":"","university":"","source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search","reference":false,"similarScore":75.73964,"teacher":"","textWithDynamicClass":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar 139S341I9' onmouseover=\"highlightSetter('139S341I9',false)\" onmouseout=\"highlightSetter('139S341I9',true)\">模型训练,</em><em class='similar 139S341I10' onmouseover=\"highlightSetter('139S341I10',false)\" onmouseout=\"highlightSetter('139S341I10',true)\">输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar 139S341I11' onmouseover=\"highlightSetter('139S341I11',false)\" onmouseout=\"highlightSetter('139S341I11',true)\">训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心","datatype":"webpage","clcs":[],"similarityPercentage":"32.0%","self":false,"text":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar'>模型训练,</em><em class='similar'>输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar'>训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心"},{"profession":false,"keywords":[],"year":"","docid":"9000206973298911","author":"","university":"","source":"网页","title":"一种高空抛物的检测方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011159027.html","reference":false,"similarScore":92.5641,"teacher":"","textWithDynamicClass":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar 139S342I4' onmouseover=\"highlightSetter('139S342I4',false)\" onmouseout=\"highlightSetter('139S342I4',true)\">重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar 139S342I5' onmouseover=\"highlightSetter('139S342I5',false)\" onmouseout=\"highlightSetter('139S342I5',true)\">达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可","datatype":"webpage","clcs":[],"similarityPercentage":"26.7%","self":false,"text":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar'>重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar'>达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可"}],"textWithDynamicClass":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar T138I4' onmouseover=\"highlightSetter('T138I4',false)\" onmouseout=\"highlightSetter('T138I4',true)\">所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","similar_word_count":39,"text":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","suggest":{"synonyms":[{"synonyms":["注意"],"keyword":"着重"}],"keyword":["随机森林","着重","神经网络","模型训练","参数调整"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000189710959511","author":"","university":"","source":"网页","title":"GitHub - panbin/panbin-python: python开源项目","url":"https://github.com/panbin/panbin-python#%E6%A0%91%E8%8E%93%E6%B4%BE","reference":false,"similarScore":120.75099,"teacher":"","textWithDynamicClass":"夹内。sinaweibopy-新浪微博Python SDK。<em class='similar 140S343I3' onmouseover=\"highlightSetter('140S343I3',false)\" onmouseout=\"highlightSetter('140S343I3',true)\">keras- Keras是一个高度模块化的神经网络库,</em>用Python语言编写,可以基于TensorFlow或Theano框架运行。","datatype":"webpage","clcs":[],"similarityPercentage":"67.8%","self":false,"text":"夹内。sinaweibopy-新浪微博Python SDK。<em class='similar'>keras- Keras是一个高度模块化的神经网络库,</em>用Python语言编写,可以基于TensorFlow或Theano框架运行。"},{"profession":false,"keywords":[],"year":"","docid":"9000145996722811","author":"","university":"","source":"网页","title":"2015年出现的十大流行 Python 库 | 《Linux就该这么学》","url":"https://www.linuxprobe.com/top-ten-popular-python-library-2015.html#SOHUCS","reference":false,"similarScore":93.33333,"teacher":"","textWithDynamicClass":"我将给大家介绍2015年新出现的十大 Python 开发库:<em class='similar 140S344I4' onmouseover=\"highlightSetter('140S344I4',false)\" onmouseout=\"highlightSetter('140S344I4',true)\">Keras:</em><em class='similar 140S344I5' onmouseover=\"highlightSetter('140S344I5',false)\" onmouseout=\"highlightSetter('140S344I5',true)\">是一个基于python编写的高度模块化的神经网络库,</em>注重支持快速实验可以极大地缩短从想法到实现之间的时","datatype":"webpage","clcs":[],"similarityPercentage":"60.6%","self":false,"text":"我将给大家介绍2015年新出现的十大 Python 开发库:<em class='similar'>Keras:</em><em class='similar'>是一个基于python编写的高度模块化的神经网络库,</em>注重支持快速实验可以极大地缩短从想法到实现之间的时"}],"textWithDynamicClass":"<em class='similar T139I0' onmouseover=\"highlightSetter('T139I0',false)\" onmouseout=\"highlightSetter('T139I0',true)\">Keras是具有高度模块化且提供易用API的库的神经网络库。</em>","similar_word_count":24,"text":"<em class='similar'>Keras是具有高度模块化且提供易用API的库的神经网络库。</em>","suggest":{"synonyms":[],"keyword":["模块化","易用","神经","网络库"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000189710959511","author":"","university":"","source":"网页","title":"GitHub - panbin/panbin-python: python开源项目","url":"https://github.com/panbin/panbin-python#%E6%A0%91%E8%8E%93%E6%B4%BE","reference":false,"similarScore":120.75099,"teacher":"","textWithDynamicClass":"夹内。sinaweibopy-新浪微博Python SDK。keras- Keras是一个高度模块化的神经网络库,用Python语言编写,<em class='similar 140S343I5' onmouseover=\"highlightSetter('140S343I5',false)\" onmouseout=\"highlightSetter('140S343I5',true)\">可以基于TensorFlow或Theano框架运行。</em>yapf- yapf是一个Python文件代码格式","datatype":"webpage","clcs":[],"similarityPercentage":"54.6%","self":false,"text":"夹内。sinaweibopy-新浪微博Python SDK。keras- Keras是一个高度模块化的神经网络库,用Python语言编写,<em class='similar'>可以基于TensorFlow或Theano框架运行。</em>yapf- yapf是一个Python文件代码格式"},{"profession":false,"keywords":[],"year":"","docid":"9000145996722811","author":"","university":"","source":"网页","title":"2015年出现的十大流行 Python 库 | 《Linux就该这么学》","url":"https://www.linuxprobe.com/top-ten-popular-python-library-2015.html#SOHUCS","reference":false,"similarScore":93.33333,"teacher":"","textWithDynamicClass":"我将给大家介绍2015年新出现的十大 Python 开发库:Keras:<em class='similar 140S344I5' onmouseover=\"highlightSetter('140S344I5',false)\" onmouseout=\"highlightSetter('140S344I5',true)\">是一个基于python编写的高度模块化的神经网络库,</em>注重支持快速实验可以极大地缩短从想法到实现之间的时","datatype":"webpage","clcs":[],"similarityPercentage":"50.8%","self":false,"text":"我将给大家介绍2015年新出现的十大 Python 开发库:Keras:<em class='similar'>是一个基于python编写的高度模块化的神经网络库,</em>注重支持快速实验可以极大地缩短从想法到实现之间的时"}],"textWithDynamicClass":"Keras是具有高度模块化且提供易用API的库的神经网络库。<em class='similar T139I1' onmouseover=\"highlightSetter('T139I1',false)\" onmouseout=\"highlightSetter('T139I1',true)\">基于Python语言,</em><em class='similar T139I2' onmouseover=\"highlightSetter('T139I2',false)\" onmouseout=\"highlightSetter('T139I2',true)\">能以TensorFlow 或Theano等为后端运行。</em>","similar_word_count":19,"text":"Keras是具有高度模块化且提供易用API的库的神经网络库。<em class='similar'>基于Python语言,</em><em class='similar'>能以TensorFlow 或Theano等为后端运行。</em>","suggest":{"synonyms":[],"keyword":["后端"]}}],"word_count":39476,"similarity":0.192,"similarity_copy":0.192,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"总结与展望","word_similar_count":0,"word_ref_count":0,"sources":[],"similarity_pro":0,"word_copy_count":0,"word_self_count":0,"similar_paragraphs":[],"word_count":1545,"similarity":0,"similarity_copy":0,"similarity_self":0}],"similarity_custom":0,"similarity_pro":0,"last_part_similar_count":6214,"word_copy_count":7896,"chapter_similar_count":2,"max_source_info":{"source_max_similar_docid":"1900023715219511","source_max_similar_url":"","source_max_similar_title":"Verilog HDL应用程序设计实例精讲","source_max_similar_count":1301},"chapter_min_similar_word_count":302,"front_part_similar_count":1682,"chapter_max_similar_word_count":7594,"word_self_count":0,"TSetForS_Str":"{◑77S172I5◑:[◑T76I1◑],◑72S150I9◑:[◑T71I2◑],◑77S172I4◑:[◑T76I0◑],◑101S251I8◑:[◑T100I4◑],◑77S172I6◑:[◑T76I2◑],◑72S150I8◑:[◑T71I1◑],◑8S19I11◑:[◑T7I0◑],◑19S41I6◑:[◑T18I4◑,◑T18I5◑],◑8S19I12◑:[◑T7I0◑],◑17S38I5◑:[◑T16I0◑],◑19S41I5◑:[◑T18I2◑,◑T18I3◑],◑49S95I3◑:[◑T48I2◑],◑49S95I4◑:[◑T48I3◑],◑49S95I6◑:[◑T48I3◑,◑T48I5◑],◑9S21I9◑:[◑T8I0◑],◑9S21I8◑:[◑T8I0◑],◑132S330I10◑:[◑T131I2◑],◑49S95I2◑:[◑T48I0◑],◑49S95I8◑:[◑T48I3◑,◑T48I5◑],◑140S343I5◑:[◑T139I1◑,◑T139I2◑],◑76S167I7◑:[◑T75I2◑,◑T75I6◑],◑17S38I8◑:[◑T16I1◑],◑76S167I6◑:[◑T75I3◑],◑17S38I7◑:[◑T16I1◑],◑76S167I5◑:[◑T75I2◑,◑T75I6◑],◑76S167I4◑:[◑T75I1◑],◑17S38I9◑:[◑T16I2◑],◑76S167I3◑:[◑T75I0◑],◑123S303I5◑:[◑T122I2◑],◑8S20I10◑:[◑T7I0◑],◑123S303I4◑:[◑T122I2◑],◑123S303I6◑:[◑T122I3◑,◑T122I4◑],◑140S343I3◑:[◑T139I0◑],◑134S335I5◑:[◑T133I4◑],◑134S335I6◑:[◑T133I5◑],◑54S104I14◑:[◑T53I1◑,◑T53I3◑,◑T53I4◑,◑T53I5◑],◑132S332I3◑:[◑T131I4◑],◑132S332I5◑:[◑T131I6◑],◑54S104I11◑:[◑T53I4◑,◑T53I5◑],◑132S332I4◑:[◑T131I5◑],◑119S286I6◑:[◑T118I1◑],◑119S286I5◑:[◑T118I1◑],◑119S286I9◑:[◑T118I2◑],◑22S45I12◑:[◑T21I6◑],◑22S45I10◑:[◑T21I4◑],◑22S45I11◑:[◑T21I5◑],◑62S129I2◑:[◑T61I2◑],◑85S208I1◑:[◑T84I2◑,◑T84I3◑],◑62S129I1◑:[◑T61I1◑],◑85S208I4◑:[◑T84I3◑],◑62S129I7◑:[◑T61I5◑],◑62S129I6◑:[◑T61I4◑],◑62S129I5◑:[◑T61I3◑],◑85S208I0◑:[◑T84I1◑],◑85S208I6◑:[◑T84I6◑,◑T84I5◑],◑85S208I5◑:[◑T84I4◑],◑72S152I8◑:[◑T71I3◑],◑113S276I15◑:[◑T112I2◑],◑72S152I7◑:[◑T71I2◑],◑72S152I6◑:[◑T71I1◑],◑113S276I13◑:[◑T112I0◑],◑72S152I5◑:[◑T71I0◑],◑14S33I7◑:[◑T13I0◑],◑103S256I8◑:[◑T102I10◑],◑14S33I8◑:[◑T13I0◑],◑103S256I7◑:[◑T102I9◑],◑103S256I6◑:[◑T102I8◑],◑103S256I5◑:[◑T102I8◑],◑103S256I9◑:[◑T102I10◑],◑88S217I11◑:[◑T87I0◑,◑T87I1◑],◑88S217I12◑:[◑T87I3◑],◑26S49I0◑:[◑T25I2◑,◑T25I0◑],◑54S105I4◑:[◑T53I5◑],◑54S105I3◑:[◑T53I4◑],◑26S49I9◑:[◑T25I3◑],◑49S97I4◑:[◑T48I0◑],◑26S49I8◑:[◑T25I2◑],◑113S276I22◑:[◑T112I2◑],◑113S276I23◑:[◑T112I3◑],◑26S49I6◑:[◑T25I2◑,◑T25I0◑],◑54S105I2◑:[◑T53I3◑],◑9S23I5◑:[◑T8I0◑],◑83S195I9◑:[◑T82I5◑],◑113S276I20◑:[◑T112I0◑],◑9S23I4◑:[◑T8I0◑],◑83S195I8◑:[◑T82I6◑],◑113S276I21◑:[◑T112I1◑],◑49S97I5◑:[◑T48I0◑],◑49S97I6◑:[◑T48I0◑],◑49S97I7◑:[◑T48I1◑],◑71S147I9◑:[◑T70I2◑],◑71S147I8◑:[◑T70I1◑],◑71S147I6◑:[◑T70I4◑],◑59S123I8◑:[◑T58I0◑,◑T58I1◑],◑38S68I1◑:[◑T37I1◑],◑38S68I3◑:[◑T37I0◑],◑132S330I9◑:[◑T131I1◑],◑132S330I8◑:[◑T131I0◑],◑119S288I4◑:[◑T118I1◑],◑57S118I18◑:[◑T56I4◑,◑T56I6◑],◑122S299I5◑:[◑T121I1◑],◑119S288I6◑:[◑T118I3◑],◑79S180I12◑:[◑T78I2◑],◑119S288I5◑:[◑T118I2◑],◑57S118I11◑:[◑T56I4◑,◑T56I6◑],◑56S110I12◑:[◑T55I3◑,◑T55I4◑],◑57S118I10◑:[◑T56I4◑,◑T56I6◑],◑66S139I13◑:[◑T65I5◑,◑T65I4◑],◑66S139I12◑:[◑T65I2◑],◑96S236I8◑:[◑T95I8◑],◑96S236I7◑:[◑T95I7◑,◑T95I6◑],◑96S236I5◑:[◑T95I3◑,◑T95I4◑,◑T95I2◑],◑23S46I5◑:[◑T22I0◑],◑75S166I13◑:[◑T74I1◑],◑85S206I4◑:[◑T84I1◑],◑23S46I6◑:[◑T22I1◑],◑85S206I6◑:[◑T84I3◑],◑85S206I5◑:[◑T84I2◑,◑T84I3◑],◑56S109I13◑:[◑T55I0◑],◑36S65I9◑:[◑T35I1◑],◑85S206I8◑:[◑T84I4◑],◑85S206I7◑:[◑T84I3◑],◑75S166I15◑:[◑T74I2◑],◑85S206I9◑:[◑T84I6◑,◑T84I5◑],◑100S242I2◑:[◑T99I2◑],◑95S233I8◑:[◑T94I2◑],◑72S150I12◑:[◑T71I5◑],◑72S150I11◑:[◑T71I4◑],◑72S150I10◑:[◑T71I3◑],◑100S242I9◑:[◑T99I6◑],◑100S242I8◑:[◑T99I7◑,◑T99I6◑],◑15S35I8◑:[◑T14I5◑],◑100S242I7◑:[◑T99I4◑,◑T99I5◑],◑74S160I2◑:[◑T73I1◑],◑100S242I6◑:[◑T99I4◑,◑T99I5◑],◑100S242I5◑:[◑T99I4◑],◑57S115I4◑:[◑T56I4◑],◑74S160I1◑:[◑T73I2◑,◑T73I1◑,◑T73I3◑],◑100S242I3◑:[◑T99I3◑],◑75S162I9◑:[◑T74I5◑],◑57S115I7◑:[◑T56I0◑],◑57S115I8◑:[◑T56I0◑],◑57S115I9◑:[◑T56I1◑,◑T56I2◑],◑43S78I4◑:[◑T42I4◑],◑79S179I1◑:[◑T78I1◑],◑75S162I2◑:[◑T74I1◑],◑75S162I6◑:[◑T74I2◑],◑79S179I6◑:[◑T78I2◑],◑75S162I7◑:[◑T74I3◑],◑75S162I8◑:[◑T74I4◑],◑84S204I10◑:[◑T83I7◑],◑75S162I0◑:[◑T74I0◑],◑43S78I2◑:[◑T42I2◑],◑83S197I9◑:[◑T82I5◑],◑43S78I3◑:[◑T42I3◑],◑83S197I8◑:[◑T82I6◑],◑43S78I0◑:[◑T42I0◑],◑43S78I1◑:[◑T42I1◑],◑71S147I10◑:[◑T70I6◑],◑103S256I12◑:[◑T102I14◑],◑103S256I11◑:[◑T102I12◑],◑58S120I10◑:[◑T57I1◑],◑44S85I4◑:[◑T43I3◑],◑15S35I7◑:[◑T14I4◑],◑15S35I6◑:[◑T14I5◑],◑44S85I7◑:[◑T43I6◑],◑44S85I6◑:[◑T43I5◑],◑104S259I8◑:[◑T103I2◑],◑15S35I4◑:[◑T14I0◑,◑T14I1◑],◑123S307I7◑:[◑T122I3◑,◑T122I4◑],◑56S113I8◑:[◑T55I4◑],◑56S113I7◑:[◑T55I3◑],◑56S113I4◑:[◑T55I2◑],◑30S53I10◑:[◑T29I0◑],◑30S53I11◑:[◑T29I1◑],◑64S137I6◑:[◑T63I0◑],◑139S341I10◑:[◑T138I4◑],◑139S341I11◑:[◑T138I4◑],◑96S234I8◑:[◑T95I2◑],◑21S43I12◑:[◑T20I5◑],◑21S43I11◑:[◑T20I7◑],◑130S326I11◑:[◑T129I3◑],◑130S326I10◑:[◑T129I2◑],◑100S244I2◑:[◑T99I2◑],◑81S185I5◑:[◑T80I4◑],◑100S244I3◑:[◑T99I3◑],◑81S185I6◑:[◑T80I5◑],◑100S244I4◑:[◑T99I3◑],◑100S244I5◑:[◑T99I3◑],◑100S244I7◑:[◑T99I7◑,◑T99I5◑,◑T99I6◑],◑111S273I23◑:[◑T110I0◑],◑100S244I8◑:[◑T99I6◑],◑111S273I24◑:[◑T110I1◑],◑91S224I10◑:[◑T90I5◑],◑95S231I3◑:[◑T94I2◑],◑77S174I7◑:[◑T76I0◑],◑77S174I8◑:[◑T76I1◑],◑79S177I12◑:[◑T78I0◑],◑57S117I4◑:[◑T56I3◑],◑79S177I13◑:[◑T78I1◑],◑57S117I5◑:[◑T56I4◑,◑T56I6◑],◑57S117I6◑:[◑T56I5◑,◑T56I7◑],◑79S177I11◑:[◑T78I0◑],◑57S117I7◑:[◑T56I4◑,◑T56I6◑],◑57S117I8◑:[◑T56I5◑,◑T56I7◑],◑79S177I0◑:[◑T78I4◑],◑79S177I14◑:[◑T78I2◑],◑111S273I16◑:[◑T110I0◑],◑101S246I8◑:[◑T100I8◑],◑111S273I19◑:[◑T110I2◑],◑56S112I11◑:[◑T55I4◑],◑101S246I6◑:[◑T100I6◑],◑56S112I10◑:[◑T55I3◑],◑101S246I7◑:[◑T100I7◑],◑139S342I5◑:[◑T138I4◑],◑139S342I4◑:[◑T138I4◑],◑80S183I5◑:[◑T79I1◑],◑80S183I4◑:[◑T79I0◑],◑83S199I7◑:[◑T82I0◑],◑83S199I6◑:[◑T82I1◑],◑27S50I10◑:[◑T26I7◑],◑52S102I7◑:[◑T51I0◑],◑44S83I8◑:[◑T43I3◑],◑44S83I7◑:[◑T43I1◑,◑T43I2◑],◑123S305I3◑:[◑T122I2◑],◑123S305I2◑:[◑T122I2◑],◑123S305I4◑:[◑T122I3◑,◑T122I4◑],◑109S270I4◑:[◑T108I3◑],◑109S270I3◑:[◑T108I5◑],◑60S126I3◑:[◑T59I1◑],◑60S126I4◑:[◑T59I1◑],◑126S313I10◑:[◑T125I6◑],◑27S50I11◑:[◑T26I8◑],◑105S262I10◑:[◑T104I2◑],◑60S126I5◑:[◑T59I1◑],◑47S90I7◑:[◑T46I2◑],◑101S246I4◑:[◑T100I3◑],◑101S246I5◑:[◑T100I4◑],◑101S246I2◑:[◑T100I1◑],◑101S246I3◑:[◑T100I2◑,◑T100I3◑],◑101S246I1◑:[◑T100I0◑,◑T100I4◑],◑111S273I12◑:[◑T110I2◑],◑86S212I13◑:[◑T85I0◑],◑86S212I12◑:[◑T85I0◑],◑101S248I10◑:[◑T100I4◑],◑81S185I3◑:[◑T80I1◑],◑81S185I4◑:[◑T80I2◑],◑16S37I11◑:[◑T15I5◑],◑16S37I10◑:[◑T15I4◑],◑16S37I13◑:[◑T15I7◑],◑16S37I12◑:[◑T15I6◑],◑16S37I14◑:[◑T15I8◑],◑19S40I10◑:[◑T18I5◑],◑56S110I9◑:[◑T55I2◑],◑57S119I5◑:[◑T56I0◑],◑57S119I6◑:[◑T56I1◑,◑T56I2◑,◑T56I3◑],◑39S70I8◑:[◑T38I2◑],◑39S70I7◑:[◑T38I1◑],◑76S171I6◑:[◑T75I2◑,◑T75I6◑],◑101S248I9◑:[◑T100I3◑],◑101S248I6◑:[◑T100I0◑],◑102S252I2◑:[◑T101I1◑],◑101S248I7◑:[◑T100I1◑],◑102S252I3◑:[◑T101I2◑],◑102S252I4◑:[◑T101I3◑],◑101S248I5◑:[◑T100I0◑,◑T100I4◑],◑102S252I5◑:[◑T101I4◑],◑119S286I10◑:[◑T118I3◑],◑132S328I0◑:[◑T131I1◑],◑132S328I1◑:[◑T131I2◑],◑39S69I10◑:[◑T38I1◑],◑82S192I1◑:[◑T81I1◑,◑T81I2◑],◑61S127I9◑:[◑T60I4◑],◑61S127I3◑:[◑T60I0◑],◑82S192I5◑:[◑T81I3◑],◑61S127I5◑:[◑T60I1◑,◑T60I2◑],◑129S324I10◑:[◑T128I0◑],◑21S44I4◑:[◑T20I2◑],◑81S188I4◑:[◑T80I0◑,◑T80I1◑],◑105S261I1◑:[◑T104I1◑],◑81S188I5◑:[◑T80I2◑,◑T80I3◑],◑105S261I2◑:[◑T104I0◑],◑46S87I0◑:[◑T45I0◑],◑85S211I4◑:[◑T84I4◑],◑105S261I3◑:[◑T104I2◑],◑85S211I3◑:[◑T84I3◑],◑105S261I4◑:[◑T104I3◑],◑105S261I5◑:[◑T104I4◑],◑105S261I6◑:[◑T104I5◑],◑81S188I6◑:[◑T80I4◑],◑105S261I7◑:[◑T104I6◑],◑81S188I7◑:[◑T80I4◑],◑105S261I8◑:[◑T104I7◑],◑48S92I7◑:[◑T47I2◑],◑48S92I6◑:[◑T47I1◑],◑48S92I5◑:[◑T47I0◑],◑60S125I12◑:[◑T59I2◑],◑85S211I5◑:[◑T84I6◑,◑T84I5◑],◑46S87I4◑:[◑T45I3◑],◑60S125I13◑:[◑T59I1◑],◑64S133I3◑:[◑T63I0◑],◑64S133I4◑:[◑T63I0◑],◑64S133I6◑:[◑T63I1◑],◑64S133I7◑:[◑T63I2◑],◑116S281I6◑:[◑T115I3◑],◑116S281I7◑:[◑T115I4◑],◑116S281I8◑:[◑T115I5◑],◑116S281I9◑:[◑T115I6◑],◑32S57I22◑:[◑T31I2◑],◑32S57I23◑:[◑T31I3◑],◑32S57I24◑:[◑T31I4◑],◑96S235I10◑:[◑T95I8◑],◑121S296I7◑:[◑T120I2◑],◑121S296I5◑:[◑T120I0◑],◑121S296I6◑:[◑T120I1◑],◑121S296I9◑:[◑T120I3◑],◑97S238I8◑:[◑T96I3◑],◑99S240I7◑:[◑T98I1◑],◑99S240I6◑:[◑T98I0◑],◑119S290I9◑:[◑T118I3◑],◑113S275I9◑:[◑T112I2◑],◑119S290I8◑:[◑T118I2◑],◑119S290I7◑:[◑T118I1◑],◑56S112I7◑:[◑T55I2◑],◑100S241I14◑:[◑T99I3◑],◑97S238I4◑:[◑T96I0◑,◑T96I1◑],◑100S241I13◑:[◑T99I3◑],◑100S241I11◑:[◑T99I2◑],◑102S254I3◑:[◑T101I2◑,◑T101I3◑],◑63S130I13◑:[◑T62I7◑],◑63S130I11◑:[◑T62I6◑],◑63S130I10◑:[◑T62I6◑],◑100S241I19◑:[◑T99I4◑,◑T99I5◑],◑100S241I18◑:[◑T99I4◑,◑T99I5◑],◑100S241I15◑:[◑T99I3◑],◑67S140I9◑:[◑T66I0◑],◑67S140I8◑:[◑T66I0◑],◑84S204I9◑:[◑T83I6◑],◑84S204I8◑:[◑T83I5◑],◑84S204I6◑:[◑T83I1◑],◑18S39I5◑:[◑T17I0◑],◑84S204I5◑:[◑T83I1◑],◑18S39I6◑:[◑T17I2◑],◑21S44I9◑:[◑T20I6◑],◑21S44I8◑:[◑T20I5◑,◑T20I4◑],◑100S241I21◑:[◑T99I6◑],◑100S241I20◑:[◑T99I7◑,◑T99I6◑],◑21S44I5◑:[◑T20I3◑],◑101S246I10◑:[◑T100I6◑],◑76S169I11◑:[◑T75I1◑],◑112S274I11◑:[◑T111I1◑],◑112S274I10◑:[◑T111I0◑],◑112S274I12◑:[◑T111I2◑],◑55S106I9◑:[◑T54I0◑],◑75S165I9◑:[◑T74I2◑],◑75S161I10◑:[◑T74I3◑],◑75S161I12◑:[◑T74I5◑],◑75S161I11◑:[◑T74I4◑],◑55S106I4◑:[◑T54I6◑],◑55S106I3◑:[◑T54I0◑],◑64S135I8◑:[◑T63I0◑],◑55S106I2◑:[◑T54I6◑],◑89S219I13◑:[◑T88I2◑],◑89S219I14◑:[◑T88I1◑],◑8S19I6◑:[◑T7I0◑],◑72S149I8◑:[◑T71I5◑],◑72S149I7◑:[◑T71I4◑],◑72S149I9◑:[◑T71I5◑],◑41S74I17◑:[◑T40I8◑],◑72S149I4◑:[◑T71I2◑,◑T71I1◑],◑72S149I3◑:[◑T71I0◑],◑72S149I6◑:[◑T71I4◑],◑72S149I5◑:[◑T71I3◑],◑122S301I3◑:[◑T121I1◑],◑130S326I4◑:[◑T129I0◑],◑130S326I5◑:[◑T129I5◑,◑T129I1◑],◑8S19I5◑:[◑T7I0◑],◑121S298I5◑:[◑T120I1◑],◑121S298I6◑:[◑T120I1◑],◑121S298I4◑:[◑T120I0◑],◑126S314I2◑:[◑T125I0◑],◑126S314I3◑:[◑T125I1◑,◑T125I6◑],◑93S227I9◑:[◑T92I1◑],◑93S227I8◑:[◑T92I0◑],◑90S220I18◑:[◑T89I2◑],◑90S220I19◑:[◑T89I4◑],◑49S98I10◑:[◑T48I1◑],◑90S220I15◑:[◑T89I0◑],◑90S220I16◑:[◑T89I1◑],◑90S220I17◑:[◑T89I3◑],◑112S274I24◑:[◑T111I1◑],◑112S274I23◑:[◑T111I0◑],◑84S202I8◑:[◑T83I7◑],◑84S202I7◑:[◑T83I6◑],◑84S202I6◑:[◑T83I5◑],◑84S202I5◑:[◑T83I4◑],◑95S229I8◑:[◑T94I2◑],◑84S202I4◑:[◑T83I3◑,◑T83I7◑],◑111S273I4◑:[◑T110I0◑],◑111S273I5◑:[◑T110I1◑],◑84S202I2◑:[◑T83I1◑],◑112S274I16◑:[◑T111I0◑],◑84S202I1◑:[◑T83I0◑],◑112S274I19◑:[◑T111I2◑],◑43S82I0◑:[◑T42I3◑],◑55S108I3◑:[◑T54I6◑],◑91S223I9◑:[◑T90I2◑],◑18S39I9◑:[◑T17I5◑],◑91S223I7◑:[◑T90I0◑],◑18S39I7◑:[◑T17I3◑],◑18S39I8◑:[◑T17I4◑],◑58S121I5◑:[◑T57I1◑],◑43S82I6◑:[◑T42I2◑],◑58S121I4◑:[◑T57I0◑],◑43S82I5◑:[◑T42I1◑],◑58S121I3◑:[◑T57I0◑],◑43S82I4◑:[◑T42I0◑],◑100S243I13◑:[◑T99I0◑],◑74S156I4◑:[◑T73I1◑],◑100S243I14◑:[◑T99I0◑],◑74S156I1◑:[◑T73I0◑],◑129S323I9◑:[◑T128I1◑],◑74S156I2◑:[◑T73I1◑],◑106S267I8◑:[◑T105I2◑],◑106S267I9◑:[◑T105I3◑],◑74S156I5◑:[◑T73I2◑],◑106S267I6◑:[◑T105I0◑],◑106S267I7◑:[◑T105I1◑],◑55S108I2◑:[◑T54I5◑],◑49S98I0◑:[◑T48I0◑],◑49S98I1◑:[◑T48I0◑],◑49S98I2◑:[◑T48I0◑,◑T48I1◑],◑49S98I3◑:[◑T48I1◑],◑49S98I8◑:[◑T48I1◑],◑49S98I4◑:[◑T48I0◑],◑49S98I5◑:[◑T48I0◑],◑49S98I6◑:[◑T48I1◑],◑12S30I9◑:[◑T11I0◑],◑113S275I8◑:[◑T112I1◑],◑12S30I8◑:[◑T11I0◑],◑113S275I7◑:[◑T112I0◑],◑15S35I12◑:[◑T14I9◑],◑15S35I11◑:[◑T14I8◑],◑113S275I1◑:[◑T112I0◑],◑15S35I13◑:[◑T14I10◑],◑113S275I3◑:[◑T112I2◑],◑15S35I10◑:[◑T14I7◑],◑45S86I10◑:[◑T44I7◑],◑45S86I11◑:[◑T44I4◑,◑T44I8◑],◑87S215I7◑:[◑T86I0◑],◑126S312I8◑:[◑T125I2◑],◑32S57I14◑:[◑T31I4◑],◑32S57I12◑:[◑T31I2◑],◑126S312I5◑:[◑T125I0◑,◑T125I1◑],◑32S57I13◑:[◑T31I3◑],◑126S312I6◑:[◑T125I1◑,◑T125I6◑],◑36S65I10◑:[◑T35I2◑],◑36S65I11◑:[◑T35I4◑],◑36S65I12◑:[◑T35I4◑],◑49S96I13◑:[◑T48I3◑,◑T48I5◑],◑29S52I6◑:[◑T28I5◑],◑57S115I14◑:[◑T56I4◑,◑T56I6◑],◑82S190I3◑:[◑T81I1◑,◑T81I2◑],◑57S115I17◑:[◑T56I4◑,◑T56I6◑],◑76S169I6◑:[◑T75I2◑,◑T75I6◑],◑29S52I5◑:[◑T28I4◑],◑76S169I5◑:[◑T75I1◑],◑29S52I2◑:[◑T28I0◑],◑76S169I4◑:[◑T75I0◑],◑57S115I18◑:[◑T56I5◑,◑T56I7◑],◑76S169I3◑:[◑T75I0◑],◑82S190I7◑:[◑T81I3◑],◑84S200I8◑:[◑T83I7◑],◑84S200I7◑:[◑T83I6◑],◑84S200I6◑:[◑T83I5◑],◑84S200I5◑:[◑T83I4◑],◑105S263I7◑:[◑T104I7◑],◑84S200I4◑:[◑T83I3◑,◑T83I7◑],◑84S200I2◑:[◑T83I1◑],◑57S115I11◑:[◑T56I2◑],◑84S200I1◑:[◑T83I0◑],◑134S335I3◑:[◑T133I3◑],◑57S115I10◑:[◑T56I2◑],◑134S335I4◑:[◑T133I3◑],◑57S115I13◑:[◑T56I3◑],◑57S115I12◑:[◑T56I1◑],◑105S263I0◑:[◑T104I1◑],◑105S263I1◑:[◑T104I0◑],◑132S329I10◑:[◑T131I2◑],◑43S80I1◑:[◑T42I3◑],◑105S263I2◑:[◑T104I2◑],◑105S263I3◑:[◑T104I3◑],◑105S263I4◑:[◑T104I4◑],◑91S225I7◑:[◑T90I5◑],◑105S263I5◑:[◑T104I5◑],◑105S263I6◑:[◑T104I6◑],◑91S225I5◑:[◑T90I3◑],◑91S225I6◑:[◑T90I4◑],◑91S225I4◑:[◑T90I2◑],◑43S80I7◑:[◑T42I2◑],◑91S225I2◑:[◑T90I0◑],◑43S80I6◑:[◑T42I1◑],◑74S158I5◑:[◑T73I2◑],◑129S325I5◑:[◑T128I0◑],◑129S325I4◑:[◑T128I2◑],◑74S158I3◑:[◑T73I1◑],◑106S265I8◑:[◑T105I3◑],◑74S158I4◑:[◑T73I2◑],◑106S265I6◑:[◑T105I2◑],◑106S265I4◑:[◑T105I0◑],◑106S265I5◑:[◑T105I1◑],◑49S96I12◑:[◑T48I5◑],◑40S73I0◑:[◑T39I3◑],◑49S96I10◑:[◑T48I3◑],◑40S73I2◑:[◑T39I4◑,◑T39I3◑],◑62S128I10◑:[◑T61I5◑],◑63S131I6◑:[◑T62I0◑],◑42S76I2◑:[◑T41I0◑],◑123S302I4◑:[◑T122I2◑],◑44S83I10◑:[◑T43I5◑],◑44S83I11◑:[◑T43I6◑],◑44S83I12◑:[◑T43I6◑],◑44S83I13◑:[◑T43I6◑],◑132S331I6◑:[◑T131I2◑],◑132S331I5◑:[◑T131I1◑],◑100S245I12◑:[◑T99I3◑],◑100S245I11◑:[◑T99I3◑],◑60S125I8◑:[◑T59I1◑],◑60S125I6◑:[◑T59I1◑],◑100S245I10◑:[◑T99I3◑],◑60S125I7◑:[◑T59I1◑],◑113S275I13◑:[◑T112I0◑],◑57S119I20◑:[◑T56I6◑],◑113S275I14◑:[◑T112I1◑],◑62S128I4◑:[◑T61I1◑],◑82S191I11◑:[◑T81I3◑],◑85S207I2◑:[◑T84I2◑,◑T84I3◑],◑85S207I5◑:[◑T84I3◑],◑7S17I6◑:[◑T6I0◑],◑41S74I6◑:[◑T40I12◑,◑T40I2◑,◑T40I13◑,◑T40I7◑],◑62S128I8◑:[◑T61I3◑],◑41S74I7◑:[◑T40I8◑],◑41S74I8◑:[◑T40I9◑],◑85S207I1◑:[◑T84I1◑],◑41S74I9◑:[◑T40I10◑],◑62S128I5◑:[◑T61I2◑],◑36S64I7◑:[◑T35I1◑],◑79S178I12◑:[◑T78I4◑],◑7S17I7◑:[◑T6I0◑],◑62S128I9◑:[◑T61I4◑],◑79S178I11◑:[◑T78I2◑],◑85S207I7◑:[◑T84I6◑,◑T84I5◑],◑85S207I6◑:[◑T84I4◑],◑79S178I10◑:[◑T78I1◑],◑57S119I14◑:[◑T56I7◑],◑77S173I6◑:[◑T76I2◑],◑77S173I5◑:[◑T76I1◑],◑113S275I21◑:[◑T112I2◑],◑72S151I5◑:[◑T71I4◑],◑113S275I28◑:[◑T112I2◑],◑113S275I27◑:[◑T112I1◑],◑72S151I7◑:[◑T71I5◑],◑113S275I26◑:[◑T112I0◑],◑72S151I6◑:[◑T71I4◑],◑77S173I1◑:[◑T76I0◑],◑95S230I5◑:[◑T94I2◑],◑95S230I6◑:[◑T94I3◑],◑95S230I7◑:[◑T94I4◑],◑95S230I8◑:[◑T94I4◑],◑95S232I11◑:[◑T94I2◑],◑95S232I10◑:[◑T94I2◑],◑113S275I19◑:[◑T112I0◑],◑45S86I9◑:[◑T44I5◑],◑49S94I4◑:[◑T48I2◑],◑86S212I7◑:[◑T85I4◑],◑49S94I5◑:[◑T48I3◑],◑86S212I8◑:[◑T85I4◑],◑49S94I7◑:[◑T48I5◑],◑49S94I0◑:[◑T48I0◑],◑49S94I1◑:[◑T48I2◑],◑49S94I2◑:[◑T48I3◑],◑49S94I3◑:[◑T48I0◑],◑86S212I6◑:[◑T85I3◑],◑49S94I8◑:[◑T48I3◑,◑T48I5◑],◑76S168I9◑:[◑T75I3◑],◑76S168I8◑:[◑T75I2◑],◑76S168I7◑:[◑T75I1◑],◑76S168I6◑:[◑T75I0◑],◑76S168I5◑:[◑T75I0◑],◑76S168I1◑:[◑T75I1◑],◑123S304I6◑:[◑T122I3◑,◑T122I4◑],◑113S275I29◑:[◑T112I3◑],◑123S304I5◑:[◑T122I3◑,◑T122I2◑],◑56S111I11◑:[◑T55I4◑],◑54S104I8◑:[◑T53I1◑,◑T53I3◑,◑T53I4◑,◑T53I5◑],◑56S111I10◑:[◑T55I3◑],◑31S56I8◑:[◑T30I4◑],◑31S56I7◑:[◑T30I3◑],◑31S56I9◑:[◑T30I6◑,◑T30I5◑],◑31S56I6◑:[◑T30I2◑],◑31S56I5◑:[◑T30I1◑],◑126S316I22◑:[◑T125I4◑],◑36S66I9◑:[◑T35I1◑],◑119S287I5◑:[◑T118I3◑],◑119S287I4◑:[◑T118I2◑],◑45S86I5◑:[◑T44I0◑],◑45S86I6◑:[◑T44I1◑],◑45S86I7◑:[◑T44I3◑],◑45S86I8◑:[◑T44I4◑],◑96S237I7◑:[◑T95I3◑,◑T95I4◑,◑T95I2◑],◑95S229I14◑:[◑T94I4◑],◑2S4I7◑:[◑T1I0◑],◑2S4I6◑:[◑T1I0◑],◑95S229I11◑:[◑T94I3◑],◑126S316I11◑:[◑T125I1◑,◑T125I6◑],◑119S287I1◑:[◑T118I1◑],◑126S316I16◑:[◑T125I6◑],◑36S66I8◑:[◑T35I0◑],◑126S316I12◑:[◑T125I1◑,◑T125I6◑],◑126S316I13◑:[◑T125I4◑],◑14S34I9◑:[◑T13I0◑],◑47S89I5◑:[◑T46I2◑],◑126S316I15◑:[◑T125I6◑],◑37S67I10◑:[◑T36I1◑],◑68S142I4◑:[◑T67I1◑,◑T67I0◑],◑68S142I3◑:[◑T67I1◑],◑68S142I6◑:[◑T67I1◑],◑68S142I5◑:[◑T67I1◑],◑121S295I10◑:[◑T120I3◑],◑72S153I5◑:[◑T71I0◑],◑72S153I4◑:[◑T71I0◑],◑115S278I15◑:[◑T114I2◑],◑14S34I6◑:[◑T13I0◑],◑115S278I14◑:[◑T114I2◑],◑14S34I7◑:[◑T13I0◑],◑115S278I13◑:[◑T114I0◑],◑115S278I12◑:[◑T114I1◑],◑115S278I11◑:[◑T114I0◑,◑T114I1◑,◑T114I2◑],◑20S42I5◑:[◑T19I0◑],◑20S42I8◑:[◑T19I3◑,◑T19I4◑],◑12S29I6◑:[◑T11I0◑],◑12S29I7◑:[◑T11I0◑],◑20S42I7◑:[◑T19I2◑],◑83S194I9◑:[◑T82I5◑],◑83S194I8◑:[◑T82I6◑],◑25S48I4◑:[◑T24I1◑,◑T24I0◑],◑49S96I8◑:[◑T48I0◑],◑49S96I9◑:[◑T48I2◑],◑14S34I10◑:[◑T13I0◑],◑39S69I6◑:[◑T38I2◑],◑39S69I8◑:[◑T38I3◑],◑140S344I4◑:[◑T139I0◑],◑140S344I5◑:[◑T139I1◑,◑T139I0◑],◑39S69I4◑:[◑T38I0◑],◑123S302I6◑:[◑T122I3◑,◑T122I4◑],◑59S124I9◑:[◑T58I1◑],◑123S302I5◑:[◑T122I2◑],◑59S124I8◑:[◑T58I0◑,◑T58I3◑],◑59S124I7◑:[◑T58I0◑,◑T58I3◑],◑22S45I8◑:[◑T21I2◑],◑22S45I7◑:[◑T21I1◑],◑22S45I6◑:[◑T21I0◑],◑25S48I5◑:[◑T24I1◑,◑T24I0◑],◑25S48I6◑:[◑T24I2◑],◑56S114I5◑:[◑T55I3◑],◑56S114I6◑:[◑T55I4◑],◑56S114I3◑:[◑T55I3◑],◑22S45I9◑:[◑T21I3◑],◑56S114I4◑:[◑T55I4◑],◑47S91I4◑:[◑T46I2◑],◑32S58I3◑:[◑T31I4◑,◑T31I3◑,◑T31I2◑],◑47S91I5◑:[◑T46I2◑],◑47S91I6◑:[◑T46I2◑],◑96S235I9◑:[◑T95I7◑,◑T95I6◑],◑96S235I7◑:[◑T95I3◑,◑T95I4◑,◑T95I2◑],◑126S312I19◑:[◑T125I6◑],◑100S243I2◑:[◑T99I4◑,◑T99I5◑],◑100S243I3◑:[◑T99I7◑],◑79S178I8◑:[◑T78I0◑],◑81S184I6◑:[◑T80I5◑],◑100S243I4◑:[◑T99I6◑],◑79S178I9◑:[◑T78I0◑],◑100S243I5◑:[◑T99I6◑],◑100S243I6◑:[◑T99I6◑],◑100S243I7◑:[◑T99I6◑],◑103S257I7◑:[◑T102I8◑],◑75S165I10◑:[◑T74I1◑],◑100S243I0◑:[◑T99I3◑],◑103S257I9◑:[◑T102I10◑],◑103S257I12◑:[◑T102I14◑],◑100S243I1◑:[◑T99I4◑,◑T99I5◑],◑103S257I8◑:[◑T102I9◑],◑103S257I11◑:[◑T102I12◑],◑75S163I8◑:[◑T74I3◑],◑81S186I10◑:[◑T80I4◑],◑8S20I9◑:[◑T7I0◑],◑75S163I9◑:[◑T74I4◑],◑43S79I5◑:[◑T42I4◑],◑43S79I3◑:[◑T42I2◑],◑43S79I4◑:[◑T42I3◑],◑81S186I11◑:[◑T80I5◑],◑8S20I3◑:[◑T7I0◑],◑75S163I3◑:[◑T74I0◑],◑124S309I1◑:[◑T123I2◑,◑T123I1◑],◑75S163I4◑:[◑T74I1◑],◑75S163I7◑:[◑T74I2◑],◑80S182I8◑:[◑T79I2◑],◑80S182I7◑:[◑T79I2◑],◑139S341I9◑:[◑T138I4◑],◑80S182I6◑:[◑T79I1◑],◑80S182I5◑:[◑T79I0◑],◑43S79I1◑:[◑T42I0◑],◑43S79I2◑:[◑T42I1◑],◑83S196I7◑:[◑T82I5◑],◑83S196I6◑:[◑T82I6◑],◑44S84I5◑:[◑T43I5◑],◑44S84I3◑:[◑T43I3◑],◑18S39I10◑:[◑T17I6◑],◑103S257I3◑:[◑T102I6◑],◑91S223I13◑:[◑T90I6◑],◑91S223I10◑:[◑T90I3◑],◑44S84I6◑:[◑T43I6◑],◑91S223I11◑:[◑T90I4◑],◑65S138I5◑:[◑T64I5◑],◑65S138I3◑:[◑T64I3◑],◑138S340I8◑:[◑T137I0◑],◑65S138I4◑:[◑T64I4◑],◑75S163I10◑:[◑T74I5◑],◑66S139I5◑:[◑T65I0◑],◑66S139I6◑:[◑T65I1◑],◑50S100I5◑:[◑T49I6◑],◑50S100I6◑:[◑T49I6◑],◑50S100I0◑:[◑T49I1◑,◑T49I2◑],◑116S282I3◑:[◑T115I2◑,◑T115I4◑,◑T115I6◑],◑50S100I8◑:[◑T49I8◑,◑T49I9◑],◑78S176I4◑:[◑T77I0◑],◑85S209I3◑:[◑T84I3◑],◑118S285I5◑:[◑T117I0◑,◑T117I1◑],◑85S209I5◑:[◑T84I5◑],◑85S209I4◑:[◑T84I4◑],◑121S295I5◑:[◑T120I0◑],◑100S245I8◑:[◑T99I2◑],◑100S245I9◑:[◑T99I3◑],◑121S295I6◑:[◑T120I1◑],◑121S295I7◑:[◑T120I2◑],◑81S184I4◑:[◑T80I2◑],◑81S184I5◑:[◑T80I4◑],◑51S101I3◑:[◑T50I0◑],◑81S184I3◑:[◑T80I1◑],◑95S232I7◑:[◑T94I2◑],◑28S51I3◑:[◑T27I1◑],◑28S51I2◑:[◑T27I0◑],◑28S51I4◑:[◑T27I2◑],◑28S51I7◑:[◑T27I6◑],◑81S186I8◑:[◑T80I1◑],◑28S51I6◑:[◑T27I5◑],◑81S186I9◑:[◑T80I2◑],◑77S175I6◑:[◑T76I0◑],◑77S175I8◑:[◑T76I2◑],◑77S175I7◑:[◑T76I1◑],◑95S232I6◑:[◑T94I2◑],◑57S116I4◑:[◑T56I0◑],◑57S116I6◑:[◑T56I0◑],◑57S116I8◑:[◑T56I2◑],◑57S116I9◑:[◑T56I1◑],◑43S77I5◑:[◑T42I3◑],◑43S77I6◑:[◑T42I4◑],◑101S247I9◑:[◑T100I0◑,◑T100I4◑],◑75S161I5◑:[◑T74I0◑],◑75S161I6◑:[◑T74I1◑],◑101S247I7◑:[◑T100I2◑,◑T100I3◑],◑101S247I8◑:[◑T100I3◑],◑75S161I9◑:[◑T74I2◑],◑101S247I6◑:[◑T100I1◑],◑1S2I7◑:[◑T0I0◑],◑1S2I8◑:[◑T0I0◑],◑43S77I3◑:[◑T42I1◑],◑83S198I8◑:[◑T82I5◑],◑43S77I4◑:[◑T42I2◑],◑83S198I7◑:[◑T82I6◑],◑43S77I2◑:[◑T42I0◑],◑123S306I9◑:[◑T122I2◑],◑123S306I8◑:[◑T122I2◑],◑81S187I6◑:[◑T80I0◑,◑T80I1◑],◑85S210I5◑:[◑T84I3◑],◑123S306I10◑:[◑T122I3◑,◑T122I4◑],◑81S187I9◑:[◑T80I4◑],◑81S187I8◑:[◑T80I4◑],◑46S88I4◑:[◑T45I3◑],◑85S210I7◑:[◑T84I6◑,◑T84I5◑],◑46S88I0◑:[◑T45I0◑],◑85S210I6◑:[◑T84I4◑],◑96S234I10◑:[◑T95I3◑,◑T95I4◑,◑T95I5◑],◑96S234I13◑:[◑T95I8◑],◑96S234I12◑:[◑T95I7◑,◑T95I6◑],◑64S134I4◑:[◑T63I0◑],◑64S134I5◑:[◑T63I0◑],◑37S67I8◑:[◑T36I0◑],◑37S67I7◑:[◑T36I0◑],◑64S134I9◑:[◑T63I1◑],◑76S170I2◑:[◑T75I2◑,◑T75I6◑],◑76S170I1◑:[◑T75I2◑],◑32S58I13◑:[◑T31I4◑,◑T31I3◑],◑122S300I4◑:[◑T121I1◑],◑121S297I6◑:[◑T120I0◑],◑36S66I10◑:[◑T35I1◑],◑69S145I9◑:[◑T68I1◑],◑69S145I8◑:[◑T68I0◑],◑121S297I8◑:[◑T120I1◑],◑69S145I7◑:[◑T68I0◑],◑121S297I9◑:[◑T120I1◑],◑53S103I9◑:[◑T52I2◑],◑53S103I8◑:[◑T52I1◑],◑53S103I7◑:[◑T52I0◑],◑132S329I9◑:[◑T131I1◑],◑132S329I8◑:[◑T131I0◑],◑57S118I9◑:[◑T56I1◑,◑T56I2◑,◑T56I3◑],◑40S72I7◑:[◑T39I4◑,◑T39I3◑],◑40S72I8◑:[◑T39I5◑],◑102S253I8◑:[◑T101I2◑],◑101S249I5◑:[◑T100I1◑,◑T100I2◑,◑T100I3◑],◑101S249I6◑:[◑T100I2◑,◑T100I3◑],◑101S249I3◑:[◑T100I0◑],◑101S249I4◑:[◑T100I1◑],◑35S62I10◑:[◑T34I8◑],◑102S253I9◑:[◑T101I3◑],◑35S62I11◑:[◑T34I8◑],◑82S191I7◑:[◑T81I2◑],◑105S262I8◑:[◑T104I6◑],◑105S262I9◑:[◑T104I7◑],◑21S43I5◑:[◑T20I3◑],◑21S43I4◑:[◑T20I2◑],◑21S43I3◑:[◑T20I1◑],◑81S189I7◑:[◑T80I2◑],◑35S62I8◑:[◑T34I7◑],◑81S189I6◑:[◑T80I1◑],◑48S93I4◑:[◑T47I2◑],◑48S93I3◑:[◑T47I1◑],◑35S62I0◑:[◑T34I8◑],◑48S93I2◑:[◑T47I0◑],◑75S164I7◑:[◑T74I5◑],◑11S27I7◑:[◑T10I0◑],◑11S27I6◑:[◑T10I0◑],◑126S311I13◑:[◑T125I6◑],◑49S99I20◑:[◑T48I2◑],◑49S99I21◑:[◑T48I2◑],◑64S136I4◑:[◑T63I0◑],◑49S99I22◑:[◑T48I3◑],◑64S136I5◑:[◑T63I0◑],◑70S146I3◑:[◑T69I0◑],◑75S164I2◑:[◑T74I2◑],◑55S107I3◑:[◑T54I6◑],◑70S146I4◑:[◑T69I1◑],◑75S164I3◑:[◑T74I2◑],◑55S107I2◑:[◑T54I0◑],◑70S146I5◑:[◑T69I2◑],◑75S164I4◑:[◑T74I3◑],◑49S99I25◑:[◑T48I5◑],◑75S164I5◑:[◑T74I4◑],◑49S99I26◑:[◑T48I3◑,◑T48I5◑],◑70S146I7◑:[◑T69I3◑,◑T69I4◑],◑75S164I6◑:[◑T74I5◑],◑72S148I3◑:[◑T71I0◑],◑69S143I4◑:[◑T68I2◑],◑69S143I3◑:[◑T68I1◑],◑69S143I2◑:[◑T68I0◑],◑69S143I1◑:[◑T68I0◑],◑72S148I8◑:[◑T71I5◑],◑72S148I5◑:[◑T71I2◑],◑72S148I4◑:[◑T71I1◑],◑33S59I3◑:[◑T32I2◑,◑T32I1◑],◑72S148I7◑:[◑T71I4◑],◑72S148I6◑:[◑T71I3◑],◑135S337I13◑:[◑T134I1◑],◑24S47I4◑:[◑T23I1◑],◑24S47I3◑:[◑T23I0◑],◑126S315I8◑:[◑T125I1◑,◑T125I6◑],◑82S193I7◑:[◑T81I2◑],◑119S291I4◑:[◑T118I2◑],◑15S36I9◑:[◑T14I8◑],◑119S291I3◑:[◑T118I1◑],◑15S36I8◑:[◑T14I9◑],◑15S36I7◑:[◑T14I4◑],◑126S315I7◑:[◑T125I0◑,◑T125I1◑],◑56S111I8◑:[◑T55I3◑],◑56S111I9◑:[◑T55I4◑],◑76S170I5◑:[◑T75I1◑],◑16S37I5◑:[◑T15I0◑],◑16S37I6◑:[◑T15I1◑],◑67S141I3◑:[◑T66I2◑,◑T66I1◑],◑67S141I2◑:[◑T66I0◑],◑84S205I6◑:[◑T83I7◑],◑84S205I5◑:[◑T83I6◑],◑15S36I6◑:[◑T14I5◑],◑84S205I4◑:[◑T83I5◑],◑84S205I3◑:[◑T83I4◑],◑84S205I2◑:[◑T83I3◑,◑T83I7◑],◑84S205I0◑:[◑T83I1◑],◑21S43I9◑:[◑T20I5◑],◑21S43I8◑:[◑T20I5◑],◑24S47I5◑:[◑T23I2◑],◑21S43I6◑:[◑T20I4◑],◑43S81I3◑:[◑T42I0◑],◑43S81I2◑:[◑T42I3◑],◑91S224I8◑:[◑T90I3◑],◑91S224I9◑:[◑T90I4◑],◑58S120I9◑:[◑T57I0◑],◑58S120I8◑:[◑T57I0◑],◑91S224I7◑:[◑T90I2◑],◑91S224I5◑:[◑T90I0◑],◑43S81I5◑:[◑T42I2◑],◑43S81I4◑:[◑T42I1◑],◑119S289I7◑:[◑T118I3◑],◑74S157I3◑:[◑T73I1◑],◑119S289I6◑:[◑T118I2◑],◑119S289I5◑:[◑T118I1◑],◑57S116I10◑:[◑T56I1◑],◑106S266I7◑:[◑T105I2◑],◑74S157I5◑:[◑T73I2◑],◑106S266I8◑:[◑T105I3◑],◑106S266I5◑:[◑T105I0◑],◑106S266I6◑:[◑T105I1◑],◑90S222I4◑:[◑T89I1◑],◑90S222I5◑:[◑T89I2◑,◑T89I3◑,◑T89I1◑],◑90S222I6◑:[◑T89I4◑],◑113S276I7◑:[◑T112I0◑],◑113S276I1◑:[◑T112I0◑],◑113S276I3◑:[◑T112I2◑],◑113S276I2◑:[◑T112I1◑],◑87S216I6◑:[◑T86I0◑],◑93S227I20◑:[◑T92I3◑],◑126S313I7◑:[◑T125I2◑],◑126S313I9◑:[◑T125I6◑],◑113S276I8◑:[◑T112I1◑],◑126S313I4◑:[◑T125I0◑],◑126S313I5◑:[◑T125I1◑,◑T125I6◑],◑87S216I5◑:[◑T86I0◑],◑112S274I5◑:[◑T111I1◑],◑112S274I4◑:[◑T111I0◑],◑93S227I10◑:[◑T92I3◑],◑59S122I6◑:[◑T58I0◑],◑59S122I5◑:[◑T58I0◑],◑93S227I12◑:[◑T92I4◑],◑104S260I17◑:[◑T103I2◑],◑56S109I3◑:[◑T55I2◑],◑98S239I8◑:[◑T97I2◑],◑98S239I6◑:[◑T97I0◑],◑56S109I7◑:[◑T55I4◑],◑56S109I5◑:[◑T55I3◑],◑56S109I6◑:[◑T55I3◑],◑79S181I6◑:[◑T78I2◑],◑84S203I6◑:[◑T83I3◑,◑T83I7◑],◑56S109I0◑:[◑T55I3◑,◑T55I4◑],◑84S203I5◑:[◑T83I6◑],◑84S203I4◑:[◑T83I5◑],◑84S203I3◑:[◑T83I4◑],◑84S203I2◑:[◑T83I1◑],◑11S28I12◑:[◑T10I0◑],◑84S203I1◑:[◑T83I0◑],◑11S28I13◑:[◑T10I0◑],◑36S64I10◑:[◑T35I2◑],◑84S203I0◑:[◑T83I6◑],◑36S64I11◑:[◑T35I4◑],◑59S122I8◑:[◑T58I2◑],◑59S122I7◑:[◑T58I1◑],◑134S336I6◑:[◑T133I5◑],◑105S262I3◑:[◑T104I0◑,◑T104I1◑],◑134S336I5◑:[◑T133I4◑],◑105S262I4◑:[◑T104I2◑],◑105S262I5◑:[◑T104I3◑],◑105S262I6◑:[◑T104I4◑],◑105S262I7◑:[◑T104I5◑],◑129S324I8◑:[◑T128I1◑],◑64S132I5◑:[◑T63I0◑],◑129S324I7◑:[◑T128I2◑],◑64S132I6◑:[◑T63I0◑],◑129S324I6◑:[◑T128I1◑],◑64S132I7◑:[◑T63I1◑],◑64S132I8◑:[◑T63I2◑],◑106S264I9◑:[◑T105I3◑],◑106S264I7◑:[◑T105I1◑],◑106S264I8◑:[◑T105I2◑],◑74S159I7◑:[◑T73I2◑],◑106S264I6◑:[◑T105I0◑],◑132S328I11◑:[◑T131I4◑],◑40S72I4◑:[◑T39I3◑],◑132S328I14◑:[◑T131I4◑],◑133S334I5◑:[◑T132I1◑],◑40S72I5◑:[◑T39I3◑],◑132S328I13◑:[◑T131I6◑],◑133S334I4◑:[◑T132I2◑],◑132S328I12◑:[◑T131I5◑],◑63S130I6◑:[◑T62I0◑],◑63S130I8◑:[◑T62I4◑],◑63S130I7◑:[◑T62I4◑],◑42S75I3◑:[◑T41I0◑],◑1S2I10◑:[◑T0I1◑],◑42S75I5◑:[◑T41I0◑],◑1S2I11◑:[◑T0I1◑],◑42S75I4◑:[◑T41I0◑],◑129S323I11◑:[◑T128I1◑],◑129S323I13◑:[◑T128I0◑],◑19S40I9◑:[◑T18I4◑],◑19S40I8◑:[◑T18I3◑],◑19S40I7◑:[◑T18I2◑],◑19S40I6◑:[◑T18I0◑],◑67S140I10◑:[◑T66I2◑,◑T66I1◑],◑126S311I4◑:[◑T125I0◑,◑T125I1◑],◑126S311I5◑:[◑T125I1◑,◑T125I6◑],◑126S311I7◑:[◑T125I2◑],◑64S135I14◑:[◑T63I2◑],◑129S323I10◑:[◑T128I2◑],◑86S214I8◑:[◑T85I1◑],◑27S50I9◑:[◑T26I6◑],◑27S50I5◑:[◑T26I1◑],◑27S50I6◑:[◑T26I2◑],◑27S50I7◑:[◑T26I4◑],◑92S226I1◑:[◑T91I0◑],◑84S201I8◑:[◑T83I7◑],◑84S201I7◑:[◑T83I6◑],◑84S201I6◑:[◑T83I5◑],◑84S201I5◑:[◑T83I4◑],◑84S201I4◑:[◑T83I3◑,◑T83I7◑],◑84S201I2◑:[◑T83I1◑],◑84S201I1◑:[◑T83I0◑],◑90S221I15◑:[◑T89I1◑],◑92S226I5◑:[◑T91I4◑,◑T91I2◑],◑134S336I2◑:[◑T133I2◑],◑134S336I3◑:[◑T133I2◑]}","similarity":0.181,"similarity_copy":0.176,"similarity_self":0,"similarityPercentage":"17.6%","SSetForT_Str":"{◑T1I0◑:[◑2S4I7◑,◑2S4I6◑],◑T90I6◑:[◑91S223I13◑],◑T14I0◑:[◑15S35I4◑],◑T37I0◑:[◑38S68I3◑],◑T90I0◑:[◑91S223I7◑,◑91S224I5◑],◑T14I1◑:[◑15S35I4◑],◑T103I2◑:[◑104S259I8◑,◑104S260I17◑],◑T90I4◑:[◑91S223I11◑,◑91S224I9◑],◑T90I5◑:[◑91S224I10◑],◑T90I2◑:[◑91S223I9◑,◑91S224I7◑],◑T90I3◑:[◑91S223I10◑,◑91S224I8◑],◑T26I8◑:[◑27S50I11◑],◑T49I8◑:[◑50S100I8◑],◑T26I7◑:[◑27S50I10◑],◑T49I9◑:[◑50S100I8◑],◑T26I6◑:[◑27S50I9◑],◑T26I4◑:[◑27S50I7◑],◑T26I2◑:[◑27S50I6◑],◑T26I1◑:[◑27S50I5◑],◑T49I1◑:[◑50S100I0◑],◑T49I2◑:[◑50S100I0◑],◑T49I6◑:[◑50S100I5◑,◑50S100I6◑],◑T115I2◑:[◑116S282I3◑],◑T115I3◑:[◑116S281I6◑],◑T115I4◑:[◑116S282I3◑,◑116S281I7◑],◑T138I4◑:[◑139S341I10◑,◑139S342I5◑,◑139S341I11◑,◑139S342I4◑,◑139S341I9◑],◑T115I5◑:[◑116S281I8◑],◑T115I6◑:[◑116S282I3◑,◑116S281I9◑],◑T15I7◑:[◑16S37I13◑],◑T15I8◑:[◑16S37I14◑],◑T15I5◑:[◑16S37I11◑],◑T15I6◑:[◑16S37I12◑],◑T38I3◑:[◑39S69I8◑],◑T15I4◑:[◑16S37I10◑],◑T38I2◑:[◑39S69I6◑,◑39S70I8◑],◑T15I1◑:[◑16S37I6◑],◑T38I1◑:[◑39S70I7◑,◑39S69I10◑],◑T38I0◑:[◑39S69I4◑],◑T0I1◑:[◑1S2I10◑,◑1S2I11◑],◑T0I0◑:[◑1S2I7◑,◑1S2I8◑],◑T125I0◑:[◑126S315I7◑,◑126S311I4◑,◑126S314I2◑,◑126S312I5◑,◑126S313I4◑],◑T36I1◑:[◑37S67I10◑],◑T125I2◑:[◑126S312I8◑,◑126S313I7◑,◑126S311I7◑],◑T36I0◑:[◑37S67I8◑,◑37S67I7◑],◑T125I1◑:[◑126S315I8◑,◑126S316I12◑,◑126S315I7◑,◑126S316I11◑,◑126S311I4◑,◑126S311I5◑,◑126S312I5◑,◑126S314I3◑,◑126S312I6◑,◑126S313I5◑],◑T125I4◑:[◑126S316I13◑,◑126S316I22◑],◑T13I0◑:[◑14S34I10◑,◑14S34I9◑,◑14S33I7◑,◑14S34I6◑,◑14S33I8◑,◑14S34I7◑],◑T102I6◑:[◑103S257I3◑],◑T125I6◑:[◑126S315I8◑,◑126S313I9◑,◑126S316I11◑,◑126S311I5◑,◑126S314I3◑,◑126S312I6◑,◑126S313I5◑,◑126S316I16◑,◑126S313I10◑,◑126S311I13◑,◑126S316I12◑,◑126S316I15◑,◑126S312I19◑],◑T102I8◑:[◑103S257I7◑,◑103S256I6◑,◑103S256I5◑],◑T102I9◑:[◑103S256I7◑,◑103S257I8◑],◑T25I3◑:[◑26S49I9◑],◑T25I2◑:[◑26S49I8◑,◑26S49I6◑,◑26S49I0◑],◑T48I1◑:[◑49S98I2◑,◑49S98I3◑,◑49S98I8◑,◑49S98I10◑,◑49S98I6◑],◑T48I2◑:[◑49S94I4◑,◑49S95I3◑,◑49S94I1◑,◑49S96I9◑],◑T48I3◑:[◑49S94I5◑,◑49S95I4◑,◑49S96I10◑,◑49S95I6◑,◑49S94I2◑,◑49S94I8◑,◑49S95I8◑,◑49S96I13◑],◑T48I5◑:[◑49S96I12◑,◑49S94I7◑,◑49S95I6◑,◑49S94I8◑,◑49S95I8◑,◑49S96I13◑],◑T48I0◑:[◑49S98I0◑,◑49S98I1◑,◑49S98I2◑,◑49S94I0◑,◑49S94I3◑,◑49S95I2◑,◑49S98I4◑,◑49S98I5◑,◑49S96I8◑],◑T114I0◑:[◑115S278I13◑,◑115S278I11◑],◑T114I1◑:[◑115S278I12◑,◑115S278I11◑],◑T25I0◑:[◑26S49I6◑,◑26S49I0◑],◑T114I2◑:[◑115S278I15◑,◑115S278I14◑,◑115S278I11◑],◑T137I0◑:[◑138S340I8◑],◑T14I8◑:[◑15S35I11◑,◑15S36I9◑],◑T14I9◑:[◑15S35I12◑,◑15S36I8◑],◑T14I7◑:[◑15S35I10◑],◑T14I4◑:[◑15S35I7◑,◑15S36I7◑],◑T14I5◑:[◑15S36I6◑,◑15S35I6◑,◑15S35I8◑],◑T37I1◑:[◑38S68I1◑],◑T92I4◑:[◑93S227I12◑],◑T101I1◑:[◑102S252I2◑],◑T101I2◑:[◑102S253I8◑,◑102S252I3◑,◑102S254I3◑],◑T101I3◑:[◑102S253I9◑,◑102S252I4◑,◑102S254I3◑],◑T101I4◑:[◑102S252I5◑],◑T92I3◑:[◑93S227I10◑,◑93S227I20◑],◑T92I0◑:[◑93S227I8◑],◑T92I1◑:[◑93S227I9◑],◑T28I5◑:[◑29S52I6◑],◑T28I4◑:[◑29S52I5◑],◑T28I0◑:[◑29S52I2◑],◑T81I1◑:[◑82S190I3◑],◑T81I3◑:[◑82S190I7◑,◑82S191I11◑],◑T81I2◑:[◑82S190I3◑,◑82S191I7◑],◑T17I5◑:[◑18S39I9◑],◑T17I6◑:[◑18S39I10◑],◑T17I3◑:[◑18S39I7◑],◑T17I4◑:[◑18S39I8◑],◑T17I2◑:[◑18S39I6◑],◑T17I0◑:[◑18S39I5◑],◑T100I0◑:[◑101S246I1◑,◑101S247I9◑,◑101S248I6◑,◑101S249I3◑,◑101S248I5◑],◑T100I1◑:[◑101S246I2◑,◑101S249I5◑,◑101S248I7◑,◑101S247I6◑,◑101S249I4◑],◑T100I2◑:[◑101S246I3◑,◑101S247I7◑,◑101S249I5◑,◑101S249I6◑],◑T123I2◑:[◑124S309I1◑],◑T100I3◑:[◑101S246I4◑,◑101S246I3◑,◑101S248I9◑,◑101S247I7◑,◑101S249I5◑,◑101S247I8◑,◑101S249I6◑],◑T123I1◑:[◑124S309I1◑],◑T100I4◑:[◑101S246I5◑,◑101S251I8◑,◑101S246I1◑,◑101S248I10◑,◑101S247I9◑,◑101S248I5◑],◑T15I0◑:[◑16S37I5◑],◑T91I0◑:[◑92S226I1◑],◑T100I6◑:[◑101S246I6◑,◑101S246I10◑],◑T100I7◑:[◑101S246I7◑],◑T100I8◑:[◑101S246I8◑],◑T91I4◑:[◑92S226I5◑],◑T91I2◑:[◑92S226I5◑],◑T27I6◑:[◑28S51I7◑],◑T27I5◑:[◑28S51I6◑],◑T27I2◑:[◑28S51I4◑],◑T27I1◑:[◑28S51I3◑],◑T27I0◑:[◑28S51I2◑],◑T80I5◑:[◑81S184I6◑,◑81S185I6◑,◑81S186I11◑],◑T112I0◑:[◑113S275I13◑,◑113S276I7◑,◑113S275I7◑,◑113S276I1◑,◑113S275I1◑,◑113S275I26◑,◑113S276I13◑,◑113S275I19◑,◑113S276I20◑],◑T112I1◑:[◑113S275I8◑,◑113S275I27◑,◑113S275I14◑,◑113S276I2◑,◑113S276I21◑,◑113S276I8◑],◑T112I2◑:[◑113S276I15◑,◑113S275I21◑,◑113S275I28◑,◑113S276I22◑,◑113S276I3◑,◑113S275I3◑,◑113S275I9◑],◑T112I3◑:[◑113S276I23◑,◑113S275I29◑],◑T80I0◑:[◑81S188I4◑,◑81S187I6◑],◑T80I2◑:[◑81S188I5◑,◑81S189I7◑,◑81S186I9◑,◑81S184I4◑,◑81S185I4◑],◑T80I1◑:[◑81S188I4◑,◑81S187I6◑,◑81S186I8◑,◑81S189I6◑,◑81S185I3◑,◑81S184I3◑],◑T80I4◑:[◑81S186I10◑,◑81S185I5◑,◑81S187I9◑,◑81S188I6◑,◑81S187I8◑,◑81S188I7◑,◑81S184I5◑],◑T80I3◑:[◑81S188I5◑],◑T39I5◑:[◑40S72I8◑],◑T39I4◑:[◑40S73I2◑,◑40S72I7◑],◑T39I3◑:[◑40S73I0◑,◑40S73I2◑,◑40S72I4◑,◑40S72I5◑,◑40S72I7◑],◑T16I2◑:[◑17S38I9◑],◑T16I0◑:[◑17S38I5◑],◑T16I1◑:[◑17S38I8◑,◑17S38I7◑],◑T56I0◑:[◑57S116I4◑,◑57S115I7◑,◑57S116I6◑,◑57S115I8◑,◑57S119I5◑],◑T79I0◑:[◑80S182I5◑,◑80S183I4◑],◑T56I1◑:[◑57S115I9◑,◑57S116I9◑,◑57S119I6◑,◑57S118I9◑,◑57S116I10◑,◑57S115I12◑],◑T56I2◑:[◑57S115I9◑,◑57S116I8◑,◑57S119I6◑,◑57S118I9◑,◑57S115I11◑,◑57S115I10◑],◑T79I2◑:[◑80S182I8◑,◑80S182I7◑],◑T122I3◑:[◑123S306I10◑,◑123S302I6◑,◑123S304I6◑,◑123S303I6◑,◑123S304I5◑,◑123S305I4◑,◑123S307I7◑],◑T56I3◑:[◑57S117I4◑,◑57S119I6◑,◑57S118I9◑,◑57S115I13◑],◑T79I1◑:[◑80S182I6◑,◑80S183I5◑],◑T122I2◑:[◑123S306I9◑,◑123S302I4◑,◑123S303I5◑,◑123S305I3◑,◑123S302I5◑,◑123S303I4◑,◑123S305I2◑,◑123S304I5◑,◑123S306I8◑],◑T122I4◑:[◑123S306I10◑,◑123S302I6◑,◑123S304I6◑,◑123S303I6◑,◑123S305I4◑,◑123S307I7◑],◑T10I0◑:[◑11S27I7◑,◑11S27I6◑,◑11S28I12◑,◑11S28I13◑],◑T45I0◑:[◑46S87I0◑,◑46S88I0◑],◑T68I0◑:[◑69S143I2◑,◑69S143I1◑,◑69S145I8◑,◑69S145I7◑],◑T111I0◑:[◑112S274I10◑,◑112S274I23◑,◑112S274I16◑,◑112S274I4◑],◑T111I1◑:[◑112S274I11◑,◑112S274I24◑,◑112S274I5◑],◑T68I2◑:[◑69S143I4◑],◑T111I2◑:[◑112S274I12◑,◑112S274I19◑],◑T45I3◑:[◑46S88I4◑,◑46S87I4◑],◑T68I1◑:[◑69S143I3◑,◑69S145I9◑],◑T134I1◑:[◑135S337I13◑],◑T22I1◑:[◑23S46I6◑],◑T22I0◑:[◑23S46I5◑],◑T34I8◑:[◑35S62I10◑,◑35S62I11◑,◑35S62I0◑],◑T34I7◑:[◑35S62I8◑],◑T55I0◑:[◑56S109I13◑],◑T78I1◑:[◑79S177I13◑,◑79S178I10◑],◑T55I2◑:[◑56S110I9◑,◑56S113I4◑,◑56S109I3◑],◑T78I0◑:[◑79S177I12◑,◑79S178I8◑,◑79S177I11◑,◑79S178I9◑],◑T121I1◑:[◑122S299I5◑,◑122S300I4◑,◑122S301I3◑],◑T55I3◑:[◑56S114I5◑,◑56S109I0◑,◑56S113I7◑,◑56S114I3◑,◑56S110I12◑,◑56S109I5◑,◑56S109I6◑],◑T55I4◑:[◑56S109I0◑,◑56S114I6◑,◑56S114I4◑,◑56S110I12◑,◑56S113I8◑,◑56S109I7◑],◑T78I2◑:[◑79S178I11◑,◑79S181I6◑,◑79S177I14◑,◑79S180I12◑],◑T32I2◑:[◑33S59I3◑],◑T32I1◑:[◑33S59I3◑],◑T21I6◑:[◑22S45I12◑],◑T44I5◑:[◑45S86I9◑],◑T44I7◑:[◑45S86I10◑],◑T44I8◑:[◑45S86I11◑],◑T44I0◑:[◑45S86I5◑],◑T110I0◑:[◑111S273I23◑,◑111S273I4◑,◑111S273I16◑],◑T44I1◑:[◑45S86I6◑],◑T67I1◑:[◑68S142I4◑,◑68S142I3◑,◑68S142I6◑,◑68S142I5◑],◑T110I1◑:[◑111S273I24◑,◑111S273I5◑],◑T67I0◑:[◑68S142I4◑],◑T110I2◑:[◑111S273I12◑,◑111S273I19◑],◑T44I3◑:[◑45S86I7◑],◑T133I3◑:[◑134S335I3◑,◑134S335I4◑],◑T44I4◑:[◑45S86I11◑,◑45S86I8◑],◑T133I2◑:[◑134S336I2◑,◑134S336I3◑],◑T21I5◑:[◑22S45I11◑],◑T133I5◑:[◑134S336I6◑,◑134S335I6◑],◑T21I4◑:[◑22S45I10◑],◑T133I4◑:[◑134S335I5◑,◑134S336I5◑],◑T21I3◑:[◑22S45I9◑],◑T21I2◑:[◑22S45I8◑],◑T21I1◑:[◑22S45I7◑],◑T21I0◑:[◑22S45I6◑],◑T14I10◑:[◑15S35I13◑],◑T56I4◑:[◑57S115I14◑,◑57S115I17◑,◑57S117I5◑,◑57S118I18◑,◑57S117I7◑,◑57S118I11◑,◑57S118I10◑,◑57S115I4◑],◑T56I5◑:[◑57S117I6◑,◑57S115I18◑,◑57S117I8◑],◑T56I6◑:[◑57S115I14◑,◑57S115I17◑,◑57S117I5◑,◑57S118I18◑,◑57S117I7◑,◑57S119I20◑,◑57S118I11◑,◑57S118I10◑],◑T56I7◑:[◑57S117I6◑,◑57S115I18◑,◑57S117I8◑,◑57S119I14◑],◑T120I1◑:[◑121S298I5◑,◑121S298I6◑,◑121S295I6◑,◑121S296I6◑,◑121S297I8◑,◑121S297I9◑],◑T120I0◑:[◑121S295I5◑,◑121S297I6◑,◑121S296I5◑,◑121S298I4◑],◑T120I3◑:[◑121S295I10◑,◑121S296I9◑],◑T120I2◑:[◑121S296I7◑,◑121S295I7◑],◑T58I0◑:[◑59S122I6◑,◑59S122I5◑,◑59S124I8◑,◑59S123I8◑,◑59S124I7◑],◑T58I1◑:[◑59S124I9◑,◑59S122I7◑,◑59S123I8◑],◑T35I2◑:[◑36S65I10◑,◑36S64I10◑],◑T35I1◑:[◑36S65I9◑,◑36S64I7◑,◑36S66I10◑,◑36S66I9◑],◑T35I0◑:[◑36S66I8◑],◑T47I2◑:[◑48S92I7◑,◑48S93I4◑],◑T132I2◑:[◑133S334I4◑],◑T132I1◑:[◑133S334I5◑],◑T47I0◑:[◑48S92I5◑,◑48S93I2◑],◑T47I1◑:[◑48S92I6◑,◑48S93I3◑],◑T24I2◑:[◑25S48I6◑],◑T24I1◑:[◑25S48I5◑,◑25S48I4◑],◑T24I0◑:[◑25S48I5◑,◑25S48I4◑],◑T59I1◑:[◑60S126I3◑,◑60S126I4◑,◑60S125I13◑,◑60S125I8◑,◑60S125I6◑,◑60S126I5◑,◑60S125I7◑],◑T59I2◑:[◑60S125I12◑],◑T57I0◑:[◑58S120I9◑,◑58S120I8◑,◑58S121I4◑,◑58S121I3◑],◑T57I1◑:[◑58S121I5◑,◑58S120I10◑],◑T11I0◑:[◑12S30I9◑,◑12S30I8◑,◑12S29I6◑,◑12S29I7◑],◑T69I3◑:[◑70S146I7◑],◑T69I2◑:[◑70S146I5◑],◑T69I4◑:[◑70S146I7◑],◑T131I1◑:[◑132S329I9◑,◑132S328I0◑,◑132S330I9◑,◑132S331I5◑],◑T131I0◑:[◑132S329I8◑,◑132S330I8◑],◑T131I2◑:[◑132S329I10◑,◑132S330I10◑,◑132S328I1◑,◑132S331I6◑],◑T69I1◑:[◑70S146I4◑],◑T131I5◑:[◑132S328I12◑,◑132S332I4◑],◑T46I2◑:[◑47S89I5◑,◑47S91I4◑,◑47S91I5◑,◑47S90I7◑,◑47S91I6◑],◑T69I0◑:[◑70S146I3◑],◑T131I4◑:[◑132S328I11◑,◑132S328I14◑,◑132S332I3◑],◑T23I2◑:[◑24S47I5◑],◑T131I6◑:[◑132S328I13◑,◑132S332I5◑],◑T23I1◑:[◑24S47I4◑],◑T23I0◑:[◑24S47I3◑],◑T35I4◑:[◑36S65I11◑,◑36S64I11◑,◑36S65I12◑],◑T58I2◑:[◑59S122I8◑],◑T58I3◑:[◑59S124I8◑,◑59S124I7◑],◑T52I0◑:[◑53S103I7◑],◑T75I0◑:[◑76S168I6◑,◑76S168I5◑,◑76S169I4◑,◑76S169I3◑,◑76S167I3◑],◑T98I0◑:[◑99S240I6◑],◑T52I1◑:[◑53S103I8◑],◑T98I1◑:[◑99S240I7◑],◑T52I2◑:[◑53S103I9◑],◑T75I2◑:[◑76S170I2◑,◑76S168I8◑,◑76S170I1◑,◑76S169I6◑,◑76S167I7◑,◑76S167I5◑,◑76S171I6◑],◑T75I1◑:[◑76S169I11◑,◑76S168I7◑,◑76S169I5◑,◑76S167I4◑,◑76S168I1◑,◑76S170I5◑],◑T75I3◑:[◑76S168I9◑,◑76S167I6◑],◑T75I6◑:[◑76S170I2◑,◑76S169I6◑,◑76S167I7◑,◑76S167I5◑,◑76S171I6◑],◑T40I12◑:[◑41S74I6◑],◑T40I13◑:[◑41S74I6◑],◑T40I10◑:[◑41S74I9◑],◑T41I0◑:[◑42S75I3◑,◑42S76I2◑,◑42S75I5◑,◑42S75I4◑],◑T87I0◑:[◑88S217I11◑],◑T87I1◑:[◑88S217I11◑],◑T64I4◑:[◑65S138I4◑],◑T64I3◑:[◑65S138I3◑],◑T64I5◑:[◑65S138I5◑],◑T87I3◑:[◑88S217I12◑],◑T99I7◑:[◑100S243I3◑,◑100S244I7◑,◑100S242I8◑,◑100S241I20◑],◑T99I5◑:[◑100S243I2◑,◑100S241I19◑,◑100S241I18◑,◑100S244I7◑,◑100S242I7◑,◑100S242I6◑,◑100S243I1◑],◑T99I6◑:[◑100S243I4◑,◑100S243I5◑,◑100S243I6◑,◑100S243I7◑,◑100S244I7◑,◑100S244I8◑,◑100S242I9◑,◑100S242I8◑,◑100S241I21◑,◑100S241I20◑],◑T74I1◑:[◑75S166I13◑,◑75S162I2◑,◑75S165I10◑,◑75S161I6◑,◑75S163I4◑],◑T74I0◑:[◑75S162I0◑,◑75S161I5◑,◑75S163I3◑],◑T97I2◑:[◑98S239I8◑],◑T74I3◑:[◑75S163I8◑,◑75S161I10◑,◑75S164I4◑,◑75S162I7◑],◑T74I2◑:[◑75S165I9◑,◑75S166I15◑,◑75S164I2◑,◑75S164I3◑,◑75S162I6◑,◑75S161I9◑,◑75S163I7◑],◑T97I0◑:[◑98S239I6◑],◑T74I5◑:[◑75S162I9◑,◑75S164I7◑,◑75S161I12◑,◑75S163I10◑,◑75S164I6◑],◑T74I4◑:[◑75S163I9◑,◑75S161I11◑,◑75S164I5◑,◑75S162I8◑],◑T8I0◑:[◑9S21I9◑,◑9S21I8◑],◑T51I0◑:[◑52S102I7◑],◑T40I9◑:[◑41S74I8◑],◑T63I1◑:[◑64S132I7◑,◑64S133I6◑,◑64S134I9◑],◑T86I0◑:[◑87S215I7◑,◑87S216I6◑,◑87S216I5◑],◑T40I2◑:[◑41S74I6◑],◑T63I0◑:[◑64S133I3◑,◑64S132I5◑,◑64S133I4◑,◑64S132I6◑,◑64S134I4◑,◑64S134I5◑,◑64S135I8◑],◑T63I2◑:[◑64S135I14◑,◑64S132I8◑,◑64S133I7◑],◑T40I7◑:[◑41S74I6◑],◑T40I8◑:[◑41S74I17◑,◑41S74I7◑],◑T54I0◑:[◑55S106I9◑,◑55S106I3◑,◑55S107I2◑],◑T77I0◑:[◑78S176I4◑],◑T54I5◑:[◑55S108I2◑],◑T31I4◑:[◑32S58I3◑,◑32S57I14◑,◑32S57I24◑,◑32S58I13◑],◑T31I3◑:[◑32S58I3◑,◑32S57I23◑,◑32S57I13◑,◑32S58I13◑],◑T31I2◑:[◑32S57I22◑,◑32S58I3◑,◑32S57I12◑],◑T7I0◑:[◑8S20I9◑,◑8S19I5◑,◑8S19I6◑,◑8S20I10◑,◑8S19I11◑,◑8S19I12◑,◑8S20I3◑],◑T20I7◑:[◑21S43I11◑],◑T43I6◑:[◑44S84I6◑,◑44S83I11◑,◑44S83I12◑,◑44S83I13◑],◑T89I4◑:[◑90S220I19◑,◑90S222I6◑],◑T66I0◑:[◑67S141I2◑,◑67S140I9◑,◑67S140I8◑],◑T43I1◑:[◑44S83I7◑],◑T43I2◑:[◑44S83I7◑],◑T66I2◑:[◑67S141I3◑,◑67S140I10◑],◑T89I2◑:[◑90S220I18◑,◑90S222I5◑],◑T43I3◑:[◑44S84I3◑,◑44S83I8◑],◑T66I1◑:[◑67S141I3◑,◑67S140I10◑],◑T89I3◑:[◑90S222I5◑,◑90S220I17◑],◑T89I0◑:[◑90S220I15◑],◑T43I5◑:[◑44S84I5◑,◑44S83I10◑],◑T89I1◑:[◑90S222I4◑,◑90S222I5◑,◑90S221I15◑,◑90S220I16◑],◑T20I6◑:[◑21S44I9◑],◑T20I5◑:[◑21S43I12◑,◑21S43I9◑,◑21S44I8◑,◑21S43I8◑],◑T20I4◑:[◑21S44I8◑,◑21S43I6◑],◑T20I3◑:[◑21S43I5◑,◑21S44I5◑],◑T20I2◑:[◑21S44I4◑,◑21S43I4◑],◑T20I1◑:[◑21S43I3◑],◑T78I4◑:[◑79S178I12◑,◑79S177I0◑],◑T99I0◑:[◑100S243I13◑,◑100S243I14◑],◑T53I1◑:[◑54S104I14◑,◑54S104I8◑],◑T76I1◑:[◑77S172I5◑,◑77S173I5◑,◑77S174I8◑,◑77S175I7◑],◑T76I0◑:[◑77S172I4◑,◑77S173I1◑,◑77S174I7◑,◑77S175I6◑],◑T53I3◑:[◑54S105I2◑,◑54S104I14◑,◑54S104I8◑],◑T99I3◑:[◑100S245I12◑,◑100S245I11◑,◑100S244I3◑,◑100S244I4◑,◑100S244I5◑,◑100S241I15◑,◑100S241I14◑,◑100S241I13◑,◑100S245I9◑,◑100S243I0◑,◑100S245I10◑,◑100S242I3◑],◑T53I4◑:[◑54S105I3◑,◑54S104I14◑,◑54S104I8◑,◑54S104I11◑],◑T76I2◑:[◑77S173I6◑,◑77S172I6◑,◑77S175I8◑],◑T99I4◑:[◑100S243I2◑,◑100S241I19◑,◑100S241I18◑,◑100S242I7◑,◑100S242I6◑,◑100S242I5◑,◑100S243I1◑],◑T53I5◑:[◑54S105I4◑,◑54S104I14◑,◑54S104I8◑,◑54S104I11◑],◑T99I2◑:[◑100S242I2◑,◑100S244I2◑,◑100S245I8◑,◑100S241I11◑],◑T30I6◑:[◑31S56I9◑],◑T30I5◑:[◑31S56I9◑],◑T30I4◑:[◑31S56I8◑],◑T30I3◑:[◑31S56I7◑],◑T30I2◑:[◑31S56I6◑],◑T6I0◑:[◑7S17I7◑,◑7S17I6◑],◑T30I1◑:[◑31S56I5◑],◑T108I3◑:[◑109S270I4◑],◑T108I5◑:[◑109S270I3◑],◑T42I0◑:[◑43S81I3◑,◑43S79I1◑,◑43S78I0◑,◑43S77I2◑,◑43S82I4◑],◑T42I1◑:[◑43S77I3◑,◑43S79I2◑,◑43S78I1◑,◑43S82I5◑,◑43S80I6◑,◑43S81I4◑],◑T65I1◑:[◑66S139I6◑],◑T42I2◑:[◑43S79I3◑,◑43S78I2◑,◑43S77I4◑,◑43S82I6◑,◑43S80I7◑,◑43S81I5◑],◑T65I0◑:[◑66S139I5◑],◑T42I3◑:[◑43S81I2◑,◑43S82I0◑,◑43S80I1◑,◑43S77I5◑,◑43S79I4◑,◑43S78I3◑],◑T42I4◑:[◑43S79I5◑,◑43S78I4◑,◑43S77I6◑],◑T65I2◑:[◑66S139I12◑],◑T65I5◑:[◑66S139I13◑],◑T88I1◑:[◑89S219I14◑],◑T65I4◑:[◑66S139I13◑],◑T88I2◑:[◑89S219I13◑],◑T54I6◑:[◑55S108I3◑,◑55S106I4◑,◑55S107I3◑,◑55S106I2◑],◑T71I4◑:[◑72S151I5◑,◑72S150I11◑,◑72S151I6◑,◑72S149I7◑,◑72S148I7◑,◑72S149I6◑],◑T94I4◑:[◑95S229I14◑,◑95S230I7◑,◑95S230I8◑],◑T71I3◑:[◑72S152I8◑,◑72S150I10◑,◑72S148I6◑,◑72S149I5◑],◑T94I2◑:[◑95S232I7◑,◑95S233I8◑,◑95S229I8◑,◑95S232I11◑,◑95S232I10◑,◑95S231I3◑,◑95S230I5◑,◑95S232I6◑],◑T71I5◑:[◑72S150I12◑,◑72S151I7◑,◑72S149I8◑,◑72S148I8◑,◑72S149I9◑],◑T94I3◑:[◑95S229I11◑,◑95S230I6◑],◑T71I0◑:[◑72S148I3◑,◑72S153I5◑,◑72S152I5◑,◑72S153I4◑,◑72S149I3◑],◑T71I2◑:[◑72S150I9◑,◑72S152I7◑,◑72S148I5◑,◑72S149I4◑],◑T71I1◑:[◑72S150I8◑,◑72S152I6◑,◑72S149I4◑,◑72S148I4◑],◑T83I3◑:[◑84S203I6◑,◑84S205I2◑,◑84S202I4◑,◑84S201I4◑,◑84S200I4◑],◑T60I4◑:[◑61S127I9◑],◑T83I5◑:[◑84S204I8◑,◑84S205I4◑,◑84S202I6◑,◑84S201I6◑,◑84S203I4◑,◑84S200I6◑],◑T83I4◑:[◑84S205I3◑,◑84S202I5◑,◑84S201I5◑,◑84S203I3◑,◑84S200I5◑],◑T83I7◑:[◑84S205I6◑,◑84S202I8◑,◑84S204I10◑,◑84S201I8◑,◑84S203I6◑,◑84S200I8◑,◑84S205I2◑,◑84S202I4◑,◑84S201I4◑,◑84S200I4◑],◑T83I6◑:[◑84S204I9◑,◑84S205I5◑,◑84S202I7◑,◑84S201I7◑,◑84S203I5◑,◑84S200I7◑,◑84S203I0◑],◑T60I0◑:[◑61S127I3◑],◑T60I1◑:[◑61S127I5◑],◑T83I1◑:[◑84S204I6◑,◑84S204I5◑,◑84S203I2◑,◑84S205I0◑,◑84S202I2◑,◑84S201I2◑,◑84S200I2◑],◑T60I2◑:[◑61S127I5◑],◑T83I0◑:[◑84S203I1◑,◑84S202I1◑,◑84S201I1◑,◑84S200I1◑],◑T19I3◑:[◑20S42I8◑],◑T19I4◑:[◑20S42I8◑],◑T19I2◑:[◑20S42I7◑],◑T19I0◑:[◑20S42I5◑],◑T70I4◑:[◑71S147I6◑],◑T70I6◑:[◑71S147I10◑],◑T102I14◑:[◑103S256I12◑,◑103S257I12◑],◑T129I0◑:[◑130S326I4◑],◑T70I1◑:[◑71S147I8◑],◑T102I10◑:[◑103S256I8◑,◑103S257I9◑,◑103S256I9◑],◑T129I2◑:[◑130S326I10◑],◑T129I1◑:[◑130S326I5◑],◑T102I12◑:[◑103S256I11◑,◑103S257I11◑],◑T70I2◑:[◑71S147I9◑],◑T129I3◑:[◑130S326I11◑],◑T129I5◑:[◑130S326I5◑],◑T29I1◑:[◑30S53I11◑],◑T29I0◑:[◑30S53I10◑],◑T82I6◑:[◑83S197I8◑,◑83S198I7◑,◑83S194I8◑,◑83S196I6◑],◑T82I5◑:[◑83S197I9◑,◑83S198I8◑,◑83S194I9◑,◑83S196I7◑],◑T82I0◑:[◑83S199I7◑],◑T118I1◑:[◑119S286I6◑,◑119S288I4◑,◑119S286I5◑,◑119S291I3◑,◑119S290I7◑],◑T118I2◑:[◑119S286I9◑,◑119S288I5◑,◑119S291I4◑,◑119S290I8◑],◑T118I3◑:[◑119S286I10◑,◑119S288I6◑,◑119S290I9◑],◑T82I1◑:[◑83S199I6◑],◑T18I4◑:[◑19S40I9◑,◑19S41I6◑],◑T18I5◑:[◑19S40I10◑,◑19S41I6◑],◑T18I2◑:[◑19S40I7◑,◑19S41I5◑],◑T18I3◑:[◑19S40I8◑,◑19S41I5◑],◑T18I0◑:[◑19S40I6◑],◑T73I2◑:[◑74S158I5◑,◑74S156I5◑,◑74S157I5◑,◑74S158I4◑,◑74S159I7◑,◑74S160I1◑],◑T73I1◑:[◑74S156I4◑,◑74S157I3◑,◑74S156I2◑,◑74S158I3◑,◑74S160I2◑,◑74S160I1◑],◑T96I3◑:[◑97S238I8◑],◑T96I0◑:[◑97S238I4◑],◑T73I3◑:[◑74S160I1◑],◑T96I1◑:[◑97S238I4◑],◑T105I0◑:[◑106S267I6◑,◑106S266I5◑,◑106S265I4◑,◑106S264I6◑],◑T105I1◑:[◑106S267I7◑,◑106S264I7◑,◑106S266I6◑,◑106S265I5◑],◑T128I1◑:[◑129S323I11◑,◑129S323I9◑,◑129S324I8◑,◑129S324I6◑],◑T105I2◑:[◑106S267I8◑,◑106S266I7◑,◑106S265I6◑,◑106S264I8◑],◑T128I0◑:[◑129S323I13◑,◑129S325I5◑,◑129S324I10◑],◑T105I3◑:[◑106S267I9◑,◑106S264I9◑,◑106S265I8◑,◑106S266I8◑],◑T128I2◑:[◑129S324I7◑,◑129S325I4◑,◑129S323I10◑],◑T50I0◑:[◑51S101I3◑],◑T73I0◑:[◑74S156I1◑],◑T85I1◑:[◑86S214I8◑],◑T85I0◑:[◑86S212I13◑,◑86S212I12◑],◑T62I4◑:[◑63S130I8◑,◑63S130I7◑],◑T85I3◑:[◑86S212I6◑],◑T62I6◑:[◑63S130I11◑,◑63S130I10◑],◑T85I4◑:[◑86S212I7◑,◑86S212I8◑],◑T62I7◑:[◑63S130I13◑],◑T117I0◑:[◑118S285I5◑],◑T117I1◑:[◑118S285I5◑],◑T62I0◑:[◑63S130I6◑,◑63S131I6◑],◑T95I3◑:[◑96S234I10◑,◑96S235I7◑],◑T95I4◑:[◑96S234I10◑,◑96S235I7◑],◑T95I2◑:[◑96S234I8◑,◑96S235I7◑],◑T95I7◑:[◑96S235I9◑,◑96S234I12◑],◑T95I8◑:[◑96S235I10◑,◑96S234I13◑],◑T95I5◑:[◑96S234I10◑],◑T95I6◑:[◑96S235I9◑,◑96S234I12◑],◑T104I0◑:[◑105S261I2◑,◑105S263I1◑,◑105S262I3◑],◑T104I1◑:[◑105S261I1◑,◑105S263I0◑,◑105S262I3◑],◑T104I2◑:[◑105S261I3◑,◑105S263I2◑,◑105S262I4◑,◑105S262I10◑],◑T104I3◑:[◑105S261I4◑,◑105S263I3◑,◑105S262I5◑],◑T104I4◑:[◑105S261I5◑,◑105S263I4◑,◑105S262I6◑],◑T104I5◑:[◑105S261I6◑,◑105S263I5◑,◑105S262I7◑],◑T104I6◑:[◑105S261I7◑,◑105S263I6◑,◑105S262I8◑],◑T104I7◑:[◑105S261I8◑,◑105S263I7◑,◑105S262I9◑],◑T61I3◑:[◑62S128I8◑,◑62S129I5◑],◑T84I2◑:[◑85S207I2◑,◑85S208I1◑,◑85S206I5◑],◑T61I2◑:[◑62S129I2◑,◑62S128I5◑],◑T84I1◑:[◑85S206I4◑,◑85S207I1◑,◑85S208I0◑],◑T61I5◑:[◑62S129I7◑,◑62S128I10◑],◑T84I4◑:[◑85S211I4◑,◑85S206I8◑,◑85S207I6◑,◑85S208I5◑,◑85S209I4◑,◑85S210I6◑],◑T61I4◑:[◑62S128I9◑,◑62S129I6◑],◑T84I3◑:[◑85S210I5◑,◑85S211I3◑,◑85S206I7◑,◑85S207I2◑,◑85S208I1◑,◑85S206I6◑,◑85S207I5◑,◑85S208I4◑,◑85S209I3◑,◑85S206I5◑],◑T84I6◑:[◑85S207I7◑,◑85S208I6◑,◑85S206I9◑,◑85S210I7◑,◑85S211I5◑],◑T84I5◑:[◑85S207I7◑,◑85S208I6◑,◑85S209I5◑,◑85S206I9◑,◑85S210I7◑,◑85S211I5◑],◑T139I1◑:[◑140S343I5◑,◑140S344I5◑],◑T139I0◑:[◑140S344I4◑,◑140S344I5◑,◑140S343I3◑],◑T139I2◑:[◑140S343I5◑],◑T61I1◑:[◑62S128I4◑,◑62S129I1◑]}"},"report_fulltext_comparison":{"word_pro_count":0,"similarity_ref":0,"word_ref_count":0,"word_similar_count":7896,"word_custom_count":0,"chapters":[{"word_pro_count":0,"similarity_ref":0,"chapter":"中英文摘要等","word_similar_count":302,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000202562427011","author":"","similarity":0.023,"self":false,"similar_word_count":86,"source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000142555028611","author":"","similarity":0.016,"self":false,"similar_word_count":61,"source":"网页","title":"微网·微波论坛·ads P21_32-by_bubulong_文档库","url":"http://www.wendangku.net/doc/f7a6c619c5da50e2524d7ffd.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000132163561611","author":"","similarity":0.015,"self":false,"similar_word_count":57,"source":"网页","title":"GBT - 信息安全技术 安全处理器技术规范 - 道客巴巴","url":"http://www.doc88.com/p%2D9866157742471.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.014,"self":false,"similar_word_count":55,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000458370111","author":"","similarity":0.013,"self":false,"similar_word_count":50,"source":"大学生论文联合库","title":"基于遗传算法的汽车电气故障诊断研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203081199911","author":"","similarity":0.012,"self":false,"similar_word_count":47,"source":"网页","title":"一种字典更新方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011335384.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000427064411","author":"周燕美","similarity":0.012,"self":false,"similar_word_count":47,"source":"大学生论文联合库","title":"中药质量控制方法","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000368749211","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"大学生论文联合库","title":"电力系统中的变压器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133380057111","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"网页","title":"基于FPGA的人脸识别算法及其实现 - 道客巴巴","url":"http://www.doc88.com/p%2D0032550396430.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133699744011","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"使用混合式分裂束激光划线处理及等离子体蚀刻的晶圆切割的制作方法","url":"http://www.xjishu.com/zhuanli/59/201280038309.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203132291211","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"内窥镜用处理器、程序、信息处理方法和信息处理装置与流程","url":"http://www.xjishu.com/zhuanli/55/202080019466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186245429911","author":"","similarity":0.011,"self":false,"similar_word_count":43,"source":"网页","title":"多重编解码器编码器及多重编解码器编码系统","url":"http://www.doc88.com/p%2D31073366987892.html"},{"reference":false,"teacher":"","datatype":"book","year":"1997","docid":"1900023554017211","author":"胡乾斌等著","similarity":0.01,"self":false,"similar_word_count":39,"source":"武汉：华中理工大学出版社","title":"数字集成电子技术基础","url":""}],"similarity_pro":0,"word_copy_count":302,"word_self_count":0,"similar_paragraphs":[{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000202562427011","author":"","university":"","source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html","reference":false,"similarScore":176.3443,"teacher":"","textWithDynamicClass":"ns,gsm)数据的通信方法和相关装置。背景技术:2.目前,<em class='similar 1S2I7' onmouseover=\"highlightSetter('1S2I7',false)\" onmouseout=\"highlightSetter('1S2I7',true)\">无线回传一体化基站多采用专用集成电路</em><em class='similar 1S2I8' onmouseover=\"highlightSetter('1S2I8',false)\" onmouseout=\"highlightSetter('1S2I8',true)\">(application-specific integrated circuit,</em>asic)<em class='similar 1S2I10' onmouseover=\"highlightSetter('1S2I10',false)\" onmouseout=\"highlightSetter('1S2I10',true)\">片上系统</em><em class='similar 1S2I11' onmouseover=\"highlightSetter('1S2I11',false)\" onmouseout=\"highlightSetter('1S2I11',true)\">(system-on-a-chip,</em>soc)芯片设计。通常来说,该芯片可以集成长期演进","datatype":"webpage","clcs":[],"similarityPercentage":"50.4%","self":false,"text":"ns,gsm)数据的通信方法和相关装置。背景技术:2.目前,<em class='similar'>无线回传一体化基站多采用专用集成电路</em><em class='similar'>(application-specific integrated circuit,</em>asic)<em class='similar'>片上系统</em><em class='similar'>(system-on-a-chip,</em>soc)芯片设计。通常来说,该芯片可以集成长期演进"}],"textWithDynamicClass":"<em class='similar T0I0' onmouseover=\"highlightSetter('T0I0',false)\" onmouseout=\"highlightSetter('T0I0',true)\">ASIC Application Specific Integrated Circuit 专用集成电路</em><em class='similar T0I1' onmouseover=\"highlightSetter('T0I1',false)\" onmouseout=\"highlightSetter('T0I1',true)\">SoC System on Chip 片上系统</em>","replaceMap":{"▲SoC System on Chip 片上系统":"\nSoC \t\tSystem on Chip\t\t\t\t\t\t片上系统","ASIC Application Specific Integrated Circuit 专用集成电路":"ASIC \t\tApplication Specific Integrated Circuit\t\t专用集成电路"},"similar_word_count":65,"text":"<em class='similar'>ASIC Application Specific Integrated Circuit 专用集成电路</em><em class='similar'>SoC System on Chip 片上系统</em>","suggest":{"synonyms":[],"keyword":["asic","application","specific","integrated","circuit","专用集成电路","soc","chip","片上系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203081199911","author":"","university":"","source":"网页","title":"一种字典更新方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011335384.html","reference":false,"similarScore":158.66666,"teacher":"","textWithDynamicClass":"grammable logic device,简称cpld)<em class='similar 2S4I6' onmouseover=\"highlightSetter('2S4I6',false)\" onmouseout=\"highlightSetter('2S4I6',true)\">,现场可编程逻辑门阵列</em><em class='similar 2S4I7' onmouseover=\"highlightSetter('2S4I7',false)\" onmouseout=\"highlightSetter('2S4I7',true)\">(field-programmable gate array,</em>简称fpga),通用阵列逻辑(generic ar","datatype":"webpage","clcs":[],"similarityPercentage":"93.3%","self":false,"text":"grammable logic device,简称cpld)<em class='similar'>,现场可编程逻辑门阵列</em><em class='similar'>(field-programmable gate array,</em>简称fpga),通用阵列逻辑(generic ar"}],"textWithDynamicClass":"<em class='similar T1I0' onmouseover=\"highlightSetter('T1I0',false)\" onmouseout=\"highlightSetter('T1I0',true)\">FPGA Field Programmable Gate Array 现场可编程逻辑门阵列</em>","replaceMap":{"FPGA Field Programmable Gate Array 现场可编程逻辑门阵列":"FPGA\t\tField Programmable Gate Array\t\t\t现场可编程逻辑门阵列"},"similar_word_count":40,"text":"<em class='similar'>FPGA Field Programmable Gate Array 现场可编程逻辑门阵列</em>","suggest":{"synonyms":[],"keyword":["fpga","field","programmable","gate","array","现场可编程逻辑门阵列"]}},{"sources":[{"profession":false,"keywords":[],"year":"1997","docid":"1900023554017211","author":"胡乾斌等著","university":"","source":"武汉：华中理工大学出版社","title":"数字集成电子技术基础","url":"","reference":false,"similarScore":133.57141,"teacher":"","textWithDynamicClass":"类集成存储器用于存放二值信息,按使用功能可分为:读写存储器,<em class='similar 7S17I6' onmouseover=\"highlightSetter('7S17I6',false)\" onmouseout=\"highlightSetter('7S17I6',true)\">又称为随机存取存储器RAM</em><em class='similar 7S17I7' onmouseover=\"highlightSetter('7S17I7',false)\" onmouseout=\"highlightSetter('7S17I7',true)\">(Random Access Memory )</em>;只读存储器 ROM (Read Only Mem","datatype":"book","clcs":[],"similarityPercentage":"78.6%","self":false,"text":"类集成存储器用于存放二值信息,按使用功能可分为:读写存储器,<em class='similar'>又称为随机存取存储器RAM</em><em class='similar'>(Random Access Memory )</em>;只读存储器 ROM (Read Only Mem"}],"textWithDynamicClass":"<em class='similar T6I0' onmouseover=\"highlightSetter('T6I0',false)\" onmouseout=\"highlightSetter('T6I0',true)\">RAM Random Access Memory 随机存取存储器</em>","replaceMap":{"RAM Random Access Memory 随机存取存储器":"RAM\t\tRandom Access Memory\t\t\t\t随机存取存储器"},"similar_word_count":28,"text":"<em class='similar'>RAM Random Access Memory 随机存取存储器</em>","suggest":{"synonyms":[],"keyword":["ram","random","access","memory","随机存取存储器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000186245429911","author":"","university":"","source":"网页","title":"多重编解码器编码器及多重编解码器编码系统","url":"http://www.doc88.com/p%2D31073366987892.html","reference":false,"similarScore":231.47615,"teacher":"","textWithDynamicClass":"220。[0069]第一存储器140可被实施为易失性存储器,<em class='similar 8S19I5' onmouseover=\"highlightSetter('8S19I5',false)\" onmouseout=\"highlightSetter('8S19I5',true)\">例如静态随机存取存储器</em><em class='similar 8S19I6' onmouseover=\"highlightSetter('8S19I6',false)\" onmouseout=\"highlightSetter('8S19I6',true)\">(static random  access  memory,</em>SRAM)。易失性存储器可被实施为随机存取存储器(random  access memory,RAM)、<em class='similar 8S19I11' onmouseover=\"highlightSetter('8S19I11',false)\" onmouseout=\"highlightSetter('8S19I11',true)\">静态随机存取存储器</em><em class='similar 8S19I12' onmouseover=\"highlightSetter('8S19I12',false)\" onmouseout=\"highlightSetter('8S19I12',true)\">(static </em>","datatype":"webpage","clcs":[],"similarityPercentage":"77.2%","self":false,"text":"220。[0069]第一存储器140可被实施为易失性存储器,<em class='similar'>例如静态随机存取存储器</em><em class='similar'>(static random  access  memory,</em>SRAM)。易失性存储器可被实施为随机存取存储器(random  access memory,RAM)、<em class='similar'>静态随机存取存储器</em><em class='similar'>(static </em>"},{"profession":false,"keywords":[],"year":"","docid":"9000133699744011","author":"","university":"","source":"网页","title":"使用混合式分裂束激光划线处理及等离子体蚀刻的晶圆切割的制作方法","url":"http://www.xjishu.com/zhuanli/59/201280038309.html","reference":false,"similarScore":203.57141,"teacher":"","textWithDynamicClass":"SDRAM)或 Rambus DRAM (RDRAM)<em class='similar 8S20I3' onmouseover=\"highlightSetter('8S20I3',false)\" onmouseout=\"highlightSetter('8S20I3',true)\">等等的动态随机存取存储器</em>(dynamic random access memory ;DRAM))、静态存储器906(例如:快闪存储器、<em class='similar 8S20I9' onmouseover=\"highlightSetter('8S20I9',false)\" onmouseout=\"highlightSetter('8S20I9',true)\">静态随机存取存储器</em><em class='similar 8S20I10' onmouseover=\"highlightSetter('8S20I10',false)\" onmouseout=\"highlightSetter('8S20I10',true)\">(static random access memory;</em> SRAM)等等)、及辅助存储器918(例如:数据","datatype":"webpage","clcs":[],"similarityPercentage":"70.2%","self":false,"text":"SDRAM)或 Rambus DRAM (RDRAM)<em class='similar'>等等的动态随机存取存储器</em>(dynamic random access memory ;DRAM))、静态存储器906(例如:快闪存储器、<em class='similar'>静态随机存取存储器</em><em class='similar'>(static random access memory;</em> SRAM)等等)、及辅助存储器918(例如:数据"}],"textWithDynamicClass":"<em class='similar T7I0' onmouseover=\"highlightSetter('T7I0',false)\" onmouseout=\"highlightSetter('T7I0',true)\">SRAM Static Random Access Memory 静态随机存取存储器</em>","replaceMap":{"SRAM Static Random Access Memory 静态随机存取存储器":"SRAM\t\tStatic Random Access Memory\t\t\t静态随机存取存储器"},"similar_word_count":37,"text":"<em class='similar'>SRAM Static Random Access Memory 静态随机存取存储器</em>","suggest":{"synonyms":[],"keyword":["sram","static","random","access","memory","静态随机存取存储器"]}},{"sources":[{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":123.52942,"teacher":"","textWithDynamicClass":"或为某事项处理而翻转其值时,该属性建立一个BIT类型的信号。<em class='similar 9S21I8' onmouseover=\"highlightSetter('9S21I8',false)\" onmouseout=\"highlightSetter('9S21I8',true)\">第三章 Verilog 结构 HDL是硬件描述语言</em><em class='similar 9S21I9' onmouseover=\"highlightSetter('9S21I9',false)\" onmouseout=\"highlightSetter('9S21I9',true)\">(Hardware Description Language)</em>的缩写。HDL有多种,但最流行和通用的只有 Ver","datatype":"book","clcs":[],"similarityPercentage":"58.8%","self":false,"text":"或为某事项处理而翻转其值时,该属性建立一个BIT类型的信号。<em class='similar'>第三章 Verilog 结构 HDL是硬件描述语言</em><em class='similar'>(Hardware Description Language)</em>的缩写。HDL有多种,但最流行和通用的只有 Ver"}],"textWithDynamicClass":"<em class='similar T8I0' onmouseover=\"highlightSetter('T8I0',false)\" onmouseout=\"highlightSetter('T8I0',true)\">HDL Hardware Description Language 硬件描述语言</em>","replaceMap":{"HDL Hardware Description Language 硬件描述语言":"HDL\t\tHardware Description Language\t\t\t硬件描述语言"},"similar_word_count":36,"text":"<em class='similar'>HDL Hardware Description Language 硬件描述语言</em>","suggest":{"synonyms":[],"keyword":["hdl","hardware","description","language","硬件描述语言"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000142555028611","author":"","university":"","source":"网页","title":"微网·微波论坛·ads P21_32-by_bubulong_文档库","url":"http://www.wendangku.net/doc/f7a6c619c5da50e2524d7ffd.html","reference":false,"similarScore":139.99997,"teacher":"","textWithDynamicClass":"ffd.htmlrf-射频(Radio Frequency)<em class='similar 11S27I6' onmouseover=\"highlightSetter('11S27I6',false)\" onmouseout=\"highlightSetter('11S27I6',true)\">eda-电子设计自动化</em><em class='similar 11S27I7' onmouseover=\"highlightSetter('11S27I7',false)\" onmouseout=\"highlightSetter('11S27I7',true)\">(Electronic Design Automation)</em>","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"ffd.htmlrf-射频(Radio Frequency)<em class='similar'>eda-电子设计自动化</em><em class='similar'>(Electronic Design Automation)</em>"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000368749211","author":"","university":"","source":"大学生论文联合库","title":"电力系统中的变压器","url":"","reference":false,"similarScore":126.29631,"teacher":"","textWithDynamicClass":";(3)具有很强的移植能力;(4)设计描述与器件无关;(5)<em class='similar 11S28I12' onmouseover=\"highlightSetter('11S28I12',false)\" onmouseout=\"highlightSetter('11S28I12',true)\">程序易于共享和复用2.2 EDA技术 EDA是世纪电子设计自动化</em><em class='similar 11S28I13' onmouseover=\"highlightSetter('11S28I13',false)\" onmouseout=\"highlightSetter('11S28I13',true)\">(Electronic Design Automation)</em>的缩写,在20世纪90年代初从计算机辅助设计(CA","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"40.7%","self":false,"text":";(3)具有很强的移植能力;(4)设计描述与器件无关;(5)<em class='similar'>程序易于共享和复用2.2 EDA技术 EDA是世纪电子设计自动化</em><em class='similar'>(Electronic Design Automation)</em>的缩写,在20世纪90年代初从计算机辅助设计(CA"}],"textWithDynamicClass":"<em class='similar T10I0' onmouseover=\"highlightSetter('T10I0',false)\" onmouseout=\"highlightSetter('T10I0',true)\">EDA Electronic Design Automation 电子设计自动化</em>RF Random Forest 随机森林","replaceMap":{"▲RF Random Forest 随机森林":"\nRF\t\t\tRandom Forest\t\t\t\t\t\t随机森林","EDA Electronic Design Automation 电子设计自动化":"EDA\t\tElectronic Design Automation\t\t\t电子设计自动化"},"similar_word_count":36,"text":"<em class='similar'>EDA Electronic Design Automation 电子设计自动化</em>RF Random Forest 随机森林","suggest":{"synonyms":[],"keyword":["eda","electronic","design","automation","电子设计自动化","rf","random","forest","随机森林"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203132291211","author":"","university":"","source":"网页","title":"内窥镜用处理器、程序、信息处理方法和信息处理装置与流程","url":"http://www.xjishu.com/zhuanli/55/202080019466.html","reference":false,"similarScore":97.777794,"teacher":"","textWithDynamicClass":"进行了说明,但是学习模型9并不限定于nn,也可以是利用svm<em class='similar 12S30I8' onmouseover=\"highlightSetter('12S30I8',false)\" onmouseout=\"highlightSetter('12S30I8',true)\">(support vector machine,</em><em class='similar 12S30I9' onmouseover=\"highlightSetter('12S30I9',false)\" onmouseout=\"highlightSetter('12S30I9',true)\">支持向量机)</em>、贝叶斯网络、回归树等其他学习算法来构建的学习模型","datatype":"webpage","clcs":[],"similarityPercentage":"88.9%","self":false,"text":"进行了说明,但是学习模型9并不限定于nn,也可以是利用svm<em class='similar'>(support vector machine,</em><em class='similar'>支持向量机)</em>、贝叶斯网络、回归树等其他学习算法来构建的学习模型"},{"profession":false,"keywords":[],"year":"","docid":"9000133380057111","author":"","university":"","source":"网页","title":"基于FPGA的人脸识别算法及其实现 - 道客巴巴","url":"http://www.doc88.com/p%2D0032550396430.html","reference":false,"similarScore":92.44444,"teacher":"","textWithDynamicClass":"题得以顺利解决。在这之后,更多2D人脸识别算法也被相应提出,<em class='similar 12S29I6' onmouseover=\"highlightSetter('12S29I6',false)\" onmouseout=\"highlightSetter('12S29I6',true)\">其中支持向量机</em><em class='similar 12S29I7' onmouseover=\"highlightSetter('12S29I7',false)\" onmouseout=\"highlightSetter('12S29I7',true)\">(Support Vector Machine,</em>SVM)是最为突出的15‘7J。相比于国外,国内的","datatype":"webpage","clcs":[],"similarityPercentage":"71.1%","self":false,"text":"题得以顺利解决。在这之后,更多2D人脸识别算法也被相应提出,<em class='similar'>其中支持向量机</em><em class='similar'>(Support Vector Machine,</em>SVM)是最为突出的15‘7J。相比于国外,国内的"}],"textWithDynamicClass":"<em class='similar T11I0' onmouseover=\"highlightSetter('T11I0',false)\" onmouseout=\"highlightSetter('T11I0',true)\">SVM Support Vector Machine 支持向量机</em>","replaceMap":{"SVM Support Vector Machine 支持向量机":"SVM\t\tSupport Vector Machine\t\t\t\t\t支持向量机"},"similar_word_count":28,"text":"<em class='similar'>SVM Support Vector Machine 支持向量机</em>","suggest":{"synonyms":[],"keyword":["svm","support","vector","machine","支持向量机"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000427064411","author":"周燕美","university":"","source":"大学生论文联合库","title":"中药质量控制方法","url":"","reference":false,"similarScore":215.99997,"teacher":"","textWithDynamicClass":"3.898%的信息。层次聚类分析将样品聚成了4类。1.4.2<em class='similar 14S34I6' onmouseover=\"highlightSetter('14S34I6',false)\" onmouseout=\"highlightSetter('14S34I6',true)\">人工神经网络</em><em class='similar 14S34I7' onmouseover=\"highlightSetter('14S34I7',false)\" onmouseout=\"highlightSetter('14S34I7',true)\">( Artificial Neural Network,</em> ANN )<em class='similar 14S34I9' onmouseover=\"highlightSetter('14S34I9',false)\" onmouseout=\"highlightSetter('14S34I9',true)\">人工神经网络</em><em class='similar 14S34I10' onmouseover=\"highlightSetter('14S34I10',false)\" onmouseout=\"highlightSetter('14S34I10',true)\">( Artificial Neural Network,</em> ANN )最早于1940年—1950年提出来的一","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"90.0%","self":false,"text":"3.898%的信息。层次聚类分析将样品聚成了4类。1.4.2<em class='similar'>人工神经网络</em><em class='similar'>( Artificial Neural Network,</em> ANN )<em class='similar'>人工神经网络</em><em class='similar'>( Artificial Neural Network,</em> ANN )最早于1940年—1950年提出来的一"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000458370111","author":"","university":"","source":"大学生论文联合库","title":"基于遗传算法的汽车电气故障诊断研究","url":"","reference":false,"similarScore":107.999985,"teacher":"","textWithDynamicClass":",主要包括:专家系统(Expert System,,ES)、<em class='similar 14S33I7' onmouseover=\"highlightSetter('14S33I7',false)\" onmouseout=\"highlightSetter('14S33I7',true)\">人工神经网络</em><em class='similar 14S33I8' onmouseover=\"highlightSetter('14S33I8',false)\" onmouseout=\"highlightSetter('14S33I8',true)\">(Artificial Neural Network,</em>ANN)、贝叶斯网络(Bayesian Netwo","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"90.0%","self":false,"text":",主要包括:专家系统(Expert System,,ES)、<em class='similar'>人工神经网络</em><em class='similar'>(Artificial Neural Network,</em>ANN)、贝叶斯网络(Bayesian Netwo"}],"textWithDynamicClass":"<em class='similar T13I0' onmouseover=\"highlightSetter('T13I0',false)\" onmouseout=\"highlightSetter('T13I0',true)\">ANN Artificial Neural Network 人工神经网络</em>","replaceMap":{"ANN Artificial Neural Network 人工神经网络":"ANN\t\tArtificial Neural Network\t\t\t\t人工神经网络"},"similar_word_count":32,"text":"<em class='similar'>ANN Artificial Neural Network 人工神经网络</em>","suggest":{"synonyms":[],"keyword":["ann","artificial","neural","network","人工神经网络"]}}],"word_count":3814,"similarity":0.079,"similarity_copy":0.079,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"绪论","word_similar_count":7594,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.045,"self":false,"similar_word_count":1776,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.031,"self":false,"similar_word_count":1232,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.019,"self":false,"similar_word_count":742,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.013,"self":false,"similar_word_count":497,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.011,"self":false,"similar_word_count":447,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183209387311","author":"","similarity":0.009,"self":false,"similar_word_count":358,"source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1"},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":285,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.007,"self":false,"similar_word_count":278,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.006,"self":false,"similar_word_count":245,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.006,"self":false,"similar_word_count":224,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138838221611","author":"","similarity":0.004,"self":false,"similar_word_count":158,"source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135414128511","author":"","similarity":0.004,"self":false,"similar_word_count":142,"source":"网页","title":"数学分类","url":"https://blog.csdn.net/qq_30815237/article/details/88739072"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"journal","year":"2018","docid":"1000027943830211","author":"钟海燕;李玲;麦雄发;王雨","similarity":0.003,"self":false,"similar_word_count":136,"source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000126492999811","author":"","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","similarity":0.003,"self":false,"similar_word_count":128,"source":"","title":"Verilog HDL���字系统设计及实践","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135879019911","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128075291811","author":"","similarity":0.003,"self":false,"similar_word_count":127,"source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000178176625511","author":"","similarity":0.003,"self":false,"similar_word_count":116,"source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016047965011","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181730880511","author":"","similarity":0.003,"self":false,"similar_word_count":102,"source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186521686911","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015763116111","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030621911","author":"","similarity":0.002,"self":false,"similar_word_count":96,"source":"网页","title":"Verilog程序如何优化减少逻辑单元的使用数量","url":"https://blog.csdn.net/u010173859/article/details/17511749"},{"reference":false,"teacher":"","datatype":"wiki","year":"","docid":"9100005028085811","author":"","similarity":0.002,"self":false,"similar_word_count":91,"source":"百科","title":"Verilog HDL","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181240768511","author":"","similarity":0.002,"self":false,"similar_word_count":88,"source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000208370017111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128720481111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"西瓜书学习笔记——第八章：集成学习_Andrewings-CSDN博客","url":"https://blog.csdn.net/shichensuyu/article/details/93312974"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":81,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138505610111","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"随机森林算法梳理_sanpang2288的博客-CSDN博客","url":"https://blog.csdn.net/sanpang2288/article/details/89024781"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000185145501211","author":"","similarity":0.002,"self":false,"similar_word_count":73,"source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191352255511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000184235326811","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000029360914111","author":"冯静达;焦学军;李启杰;郭娅美;杨涵钧;楚洪祚","similarity":0.002,"self":false,"similar_word_count":72,"source":"航天医学与医学工程","title":"基于心率和呼吸特征结合的睡眠分期研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000141550370811","author":"","similarity":0.002,"self":false,"similar_word_count":71,"source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189446884611","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000941227311","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"光学计算机程序设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015758038411","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000798956911","author":"JXT","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000524795711","author":"-","similarity":0.002,"self":false,"similar_word_count":69,"source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110384254911","author":"","similarity":0.002,"self":false,"similar_word_count":69,"source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000017085073411","author":"","similarity":0.002,"self":false,"similar_word_count":68,"source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000207907782911","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"逻辑综合中的工艺映射算法研究","url":"https://www.docin.com/p%2D851853545.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015681295811","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2015","docid":"2200000669311311","author":"戚薏","similarity":0.002,"self":false,"similar_word_count":65,"source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000180302201811","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189917812511","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138770563211","author":"","similarity":0.002,"self":false,"similar_word_count":62,"source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082132296211","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023653559711","author":"何海群著","similarity":0.001,"self":false,"similar_word_count":59,"source":"","title":"零起点  Python足彩大数据与机器学习实盘分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079748404511","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146036562311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"选择题   数字系统设计","url":"https://wenku.baidu.com/view/dd29f7e9b8f67c1cfad6b8c1"},{"reference":false,"teacher":"","datatype":"journal","year":"2019","docid":"1000029331339811","author":"刘博;卢婷婷;陈国磊;赵璐","similarity":0.001,"self":false,"similar_word_count":58,"source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120314096811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179275463811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于Verilog的8051微控制器中断系统的设计---优秀毕业论文 参考文献 可复..","url":"https://www.docin.com/p%2D827308466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"}],"similarity_pro":0,"word_copy_count":7594,"word_self_count":0,"similar_paragraphs":[{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":443.2727,"teacher":"","textWithDynamicClass":"作者简介.77第一章绪论1第一章绪论1.1研究背景1.1.1<em class='similar 15S35I4' onmouseover=\"highlightSetter('15S35I4',false)\" onmouseout=\"highlightSetter('15S35I4',true)\">论文研究背景随着市场环境对集成电路的功能要求愈加严格,</em>芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar 15S35I7' onmouseover=\"highlightSetter('15S35I7',false)\" onmouseout=\"highlightSetter('15S35I7',true)\">(Application Specific Integrated Circuit,</em><em class='similar 15S35I8' onmouseover=\"highlightSetter('15S35I8',false)\" onmouseout=\"highlightSetter('15S35I8',true)\">专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,<em class='similar 15S35I10' onmouseover=\"highlightSetter('15S35I10',false)\" onmouseout=\"highlightSetter('15S35I10',true)\">这项称为片上系统 SOC</em><em class='similar 15S35I11' onmouseover=\"highlightSetter('15S35I11',false)\" onmouseout=\"highlightSetter('15S35I11',true)\">(System On Chip,</em><em class='similar 15S35I12' onmouseover=\"highlightSetter('15S35I12',false)\" onmouseout=\"highlightSetter('15S35I12',true)\">片上系统)</em><em class='similar 15S35I13' onmouseover=\"highlightSetter('15S35I13',false)\" onmouseout=\"highlightSetter('15S35I13',true)\">的技术在目前的业界已经得到广泛的应用</em>[1]。一般情况下,采用 ASIC 的设计功耗更低","datatype":"webpage","clcs":[],"similarityPercentage":"54.1%","self":false,"text":"作者简介.77第一章绪论1第一章绪论1.1研究背景1.1.1<em class='similar'>论文研究背景随着市场环境对集成电路的功能要求愈加严格,</em>芯片的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,<em class='similar'>这项称为片上系统 SOC</em><em class='similar'>(System On Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的技术在目前的业界已经得到广泛的应用</em>[1]。一般情况下,采用 ASIC 的设计功耗更低"},{"profession":false,"keywords":[],"year":"","docid":"9000180302201811","author":"","university":"","source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html","reference":false,"similarScore":153.33333,"teacher":"","textWithDynamicClass":"Device)为实验载的体,以EDA.T00l 为开发环境,<em class='similar 15S36I6' onmouseover=\"highlightSetter('15S36I6',false)\" onmouseout=\"highlightSetter('15S36I6',true)\">以专用集成电路ASIC</em><em class='similar 15S36I7' onmouseover=\"highlightSetter('15S36I7',false)\" onmouseout=\"highlightSetter('15S36I7',true)\">(Application Specific Integrated Circuit)</em><em class='similar 15S36I8' onmouseover=\"highlightSetter('15S36I8',false)\" onmouseout=\"highlightSetter('15S36I8',true)\">和片上系统SOC</em><em class='similar 15S36I9' onmouseover=\"highlightSetter('15S36I9',false)\" onmouseout=\"highlightSetter('15S36I9',true)\">(System Chip)</em>芯片为目标器件,对电子产品进行一系列自动化设计而形","datatype":"webpage","clcs":[],"similarityPercentage":"76.7%","self":false,"text":"Device)为实验载的体,以EDA.T00l 为开发环境,<em class='similar'>以专用集成电路ASIC</em><em class='similar'>(Application Specific Integrated Circuit)</em><em class='similar'>和片上系统SOC</em><em class='similar'>(System Chip)</em>芯片为目标器件,对电子产品进行一系列自动化设计而形"}],"textWithDynamicClass":"<em class='similar T14I0' onmouseover=\"highlightSetter('T14I0',false)\" onmouseout=\"highlightSetter('T14I0',true)\">随着市场环境的逐步升级,</em><em class='similar T14I1' onmouseover=\"highlightSetter('T14I1',false)\" onmouseout=\"highlightSetter('T14I1',true)\">市场需求对与IC的功能愈加严格,</em>IC的复杂度在工艺的进步下也逐步增加。目前的ASIC<em class='similar T14I4' onmouseover=\"highlightSetter('T14I4',false)\" onmouseout=\"highlightSetter('T14I4',true)\">(Application Specific Integrated Circuit,</em><em class='similar T14I5' onmouseover=\"highlightSetter('T14I5',false)\" onmouseout=\"highlightSetter('T14I5',true)\">专用集成电路)</em>设计,<em class='similar T14I7' onmouseover=\"highlightSetter('T14I7',false)\" onmouseout=\"highlightSetter('T14I7',true)\">这项又称为片上系统SoC</em><em class='similar T14I8' onmouseover=\"highlightSetter('T14I8',false)\" onmouseout=\"highlightSetter('T14I8',true)\">(System on Chip,</em><em class='similar T14I9' onmouseover=\"highlightSetter('T14I9',false)\" onmouseout=\"highlightSetter('T14I9',true)\">片上系统)</em><em class='similar T14I10' onmouseover=\"highlightSetter('T14I10',false)\" onmouseout=\"highlightSetter('T14I10',true)\">的集成电路技术在业界已经得到广泛的认可与应用,</em>且当代的SoC设计也不在局限于一块IC上一般情况下,由于采用ASIC设计具有功耗低、投产成本低、","replaceMap":{},"similar_word_count":127,"text":"<em class='similar'>随着市场环境的逐步升级,</em><em class='similar'>市场需求对与IC的功能愈加严格,</em>IC的复杂度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em>设计,<em class='similar'>这项又称为片上系统SoC</em><em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的集成电路技术在业界已经得到广泛的认可与应用,</em>且当代的SoC设计也不在局限于一块IC上一般情况下,由于采用ASIC设计具有功耗低、投产成本低、","suggest":{"synonyms":[{"synonyms":["晋级"],"keyword":"升级"},{"synonyms":["���发"],"keyword":"愈加"}],"keyword":["市场环境","升级","市场需求","ic","愈加","复杂度","asic","application","specific","integrated","circuit","专用集成电路","这项","片上系统","soc","chip","集成电路技术","在业"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":560.8334,"teacher":"","textWithDynamicClass":"ip,片上系统)的技术在目前的业界已经得到广泛的应用[1]。<em class='similar 16S37I5' onmouseover=\"highlightSetter('16S37I5',false)\" onmouseout=\"highlightSetter('16S37I5',true)\">一般情况下</em>,<em class='similar 16S37I6' onmouseover=\"highlightSetter('16S37I6',false)\" onmouseout=\"highlightSetter('16S37I6',true)\">采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar 16S37I10' onmouseover=\"highlightSetter('16S37I10',false)\" onmouseout=\"highlightSetter('16S37I10',true)\">所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em><em class='similar 16S37I11' onmouseover=\"highlightSetter('16S37I11',false)\" onmouseout=\"highlightSetter('16S37I11',true)\">也正是由于 ASIC 的复杂性,</em><em class='similar 16S37I12' onmouseover=\"highlightSetter('16S37I12',false)\" onmouseout=\"highlightSetter('16S37I12',true)\">使得 ASIC 的设计风险也大幅增加。</em><em class='similar 16S37I13' onmouseover=\"highlightSetter('16S37I13',false)\" onmouseout=\"highlightSetter('16S37I13',true)\">一旦芯片设计失败,</em><em class='similar 16S37I14' onmouseover=\"highlightSetter('16S37I14',false)\" onmouseout=\"highlightSetter('16S37I14',true)\">不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯","datatype":"webpage","clcs":[],"similarityPercentage":"73.8%","self":false,"text":"ip,片上系统)的技术在目前的业界已经得到广泛的应用[1]。<em class='similar'>一般情况下</em>,<em class='similar'>采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar'>所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em><em class='similar'>也正是由于 ASIC 的复杂性,</em><em class='similar'>使得 ASIC 的设计风险也大幅增加。</em><em class='similar'>一旦芯片设计失败,</em><em class='similar'>不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯"}],"textWithDynamicClass":"System on Chip,片上系统)的集成电路技术在业界已经得到广泛的认可与应用,且当代的SoC设计也不在局限于一块IC上<em class='similar T15I0' onmouseover=\"highlightSetter('T15I0',false)\" onmouseout=\"highlightSetter('T15I0',true)\">一般情况下</em>,<em class='similar T15I1' onmouseover=\"highlightSetter('T15I1',false)\" onmouseout=\"highlightSetter('T15I1',true)\">由于采用ASIC设计具有功耗低、</em>投产成本低、迭代周期快等优势,<em class='similar T15I4' onmouseover=\"highlightSetter('T15I4',false)\" onmouseout=\"highlightSetter('T15I4',true)\">所以ASIC可容纳更为复杂和灵活的逻辑设计。</em><em class='similar T15I5' onmouseover=\"highlightSetter('T15I5',false)\" onmouseout=\"highlightSetter('T15I5',true)\">同样正是由于现代ASIC设计的高复杂度,</em><em class='similar T15I6' onmouseover=\"highlightSetter('T15I6',false)\" onmouseout=\"highlightSetter('T15I6',true)\">使得其研发设计的风险也在大幅增加。</em><em class='similar T15I7' onmouseover=\"highlightSetter('T15I7',false)\" onmouseout=\"highlightSetter('T15I7',true)\">一旦芯片设计失败,</em><em class='similar T15I8' onmouseover=\"highlightSetter('T15I8',false)\" onmouseout=\"highlightSetter('T15I8',true)\">将会导致大量研发本的损失,</em>所以,IC正确性验证逐步变为超高复杂度IC研发过程中必备且关键的环节。","replaceMap":{},"similar_word_count":103,"text":"System on Chip,片上系统)的集成电路技术在业界已经得到广泛的认可与应用,且当代的SoC设计也不在局限于一块IC上<em class='similar'>一般情况下</em>,<em class='similar'>由于采用ASIC设计具有功耗低、</em>投产成本低、迭代周期快等优势,<em class='similar'>所以ASIC可容纳更为复杂和灵活的逻辑设计。</em><em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em><em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发本的损失,</em>所以,IC正确性验证逐步变为超高复杂度IC研发过程中必备且关键的环节。","suggest":{"synonyms":[{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["限制"],"keyword":"局限"},{"synonyms":["一齐"],"keyword":"一块"},{"synonyms":["倾轧"],"keyword":"容纳"}],"keyword":["当代","soc","局限","一块","ic","一般情况","asic","功耗","投产","成本低","迭代周期","容纳","逻辑设计","复杂度","研发设计","芯片设计","正确性验证","变为","超高"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":474.1964,"teacher":"","textWithDynamicClass":"如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。所以,<em class='similar 17S38I5' onmouseover=\"highlightSetter('17S38I5',false)\" onmouseout=\"highlightSetter('17S38I5',true)\">验证逐步变为复杂芯片研发过程中的关键环节。</em>最新一项统计数据表明,<em class='similar 17S38I7' onmouseover=\"highlightSetter('17S38I7',false)\" onmouseout=\"highlightSetter('17S38I7',true)\">在一些项目中,</em><em class='similar 17S38I8' onmouseover=\"highlightSetter('17S38I8',false)\" onmouseout=\"highlightSetter('17S38I8',true)\">芯片的设计团队规模甚至不如验证团队规模,</em><em class='similar 17S38I9' onmouseover=\"highlightSetter('17S38I9',false)\" onmouseout=\"highlightSetter('17S38I9',true)\">验证所花费的时间也占到产品研发周期的一半以上,</em>找到有效可行的验证方法成为验证的关键。目前,最常见","datatype":"webpage","clcs":[],"similarityPercentage":"70.8%","self":false,"text":"如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。所以,<em class='similar'>验证逐步变为复杂芯片研发过程中的关键环节。</em>最新一项统计数据表明,<em class='similar'>在一些项目中,</em><em class='similar'>芯片的设计团队规模甚至不如验证团队规模,</em><em class='similar'>验证所花费的时间也占到产品研发周期的一半以上,</em>找到有效可行的验证方法成为验证的关键。目前,最常见"}],"textWithDynamicClass":"一旦芯片设计失败,将会导致大量研发本的损失,所以,IC正确性验证逐步变为超高复<em class='similar T16I0' onmouseover=\"highlightSetter('T16I0',false)\" onmouseout=\"highlightSetter('T16I0',true)\">杂度IC研发过程中必备且关键的环节。</em><em class='similar T16I1' onmouseover=\"highlightSetter('T16I1',false)\" onmouseout=\"highlightSetter('T16I1',true)\">最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,</em><em class='similar T16I2' onmouseover=\"highlightSetter('T16I2',false)\" onmouseout=\"highlightSetter('T16I2',true)\">验证所花费的时间也占到产品研发周期的一半以上,</em>找到有效可行的验证方法成为验证的关键[4]。目前,最常见的验证方法是软件仿真技术,","replaceMap":{},"similar_word_count":77,"text":"一旦芯片设计失败,将会导致大量研发本的损失,所以,IC正确性验证逐步变为超高复<em class='similar'>杂度IC研发过程中必备且关键的环节。</em><em class='similar'>最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,</em><em class='similar'>验证所花费的时间也占到产品研发周期的一半以上,</em>找到有效可行的验证方法成为验证的关键[4]。目前,最常见的验证方法是软件仿真技术,","suggest":{"synonyms":[{"synonyms":["破钞"],"keyword":"花费"}],"keyword":["ic","研发过程","必备","统计数据","团队规模","花费","研发周期","一半"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":670,"teacher":"","textWithDynamicClass":"验证团队规模,验证所花费的时间也占到产品研发周期的一半以上,<em class='similar 18S39I5' onmouseover=\"highlightSetter('18S39I5',false)\" onmouseout=\"highlightSetter('18S39I5',true)\">找到有效可行的验证方法成为验证的关键。</em><em class='similar 18S39I6' onmouseover=\"highlightSetter('18S39I6',false)\" onmouseout=\"highlightSetter('18S39I6',true)\">目前,</em><em class='similar 18S39I7' onmouseover=\"highlightSetter('18S39I7',false)\" onmouseout=\"highlightSetter('18S39I7',true)\">最常见的验证方法是软件仿真技术,</em><em class='similar 18S39I8' onmouseover=\"highlightSetter('18S39I8',false)\" onmouseout=\"highlightSetter('18S39I8',true)\">但是软件仿真虽然简单易行,</em><em class='similar 18S39I9' onmouseover=\"highlightSetter('18S39I9',false)\" onmouseout=\"highlightSetter('18S39I9',true)\">在面对复杂的集成电路设计时,</em><em class='similar 18S39I10' onmouseover=\"highlightSetter('18S39I10',false)\" onmouseout=\"highlightSetter('18S39I10',true)\">其验证效率过低,</em>最终可能影响到产品的及时发布。而基于 FPGA 的","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"验证团队规模,验证所花费的时间也占到产品研发周期的一半以上,<em class='similar'>找到有效可行的验证方法成为验证的关键。</em><em class='similar'>目前,</em><em class='similar'>最常见的验证方法是软件仿真技术,</em><em class='similar'>但是软件仿真虽然简单易行,</em><em class='similar'>在面对复杂的集成电路设计时,</em><em class='similar'>其验证效率过低,</em>最终可能影响到产品的及时发布。而基于 FPGA 的"}],"textWithDynamicClass":"验证所花费的时间也占到产品研发周期的一半以上,<em class='similar T17I0' onmouseover=\"highlightSetter('T17I0',false)\" onmouseout=\"highlightSetter('T17I0',true)\">找到有效可行的验证方法成为验证的关键</em>[4]。<em class='similar T17I2' onmouseover=\"highlightSetter('T17I2',false)\" onmouseout=\"highlightSetter('T17I2',true)\">目前,</em><em class='similar T17I3' onmouseover=\"highlightSetter('T17I3',false)\" onmouseout=\"highlightSetter('T17I3',true)\">最常见的验证方法是软件仿真技术,</em><em class='similar T17I4' onmouseover=\"highlightSetter('T17I4',false)\" onmouseout=\"highlightSetter('T17I4',true)\">但是软件仿真虽然简单易行,</em><em class='similar T17I5' onmouseover=\"highlightSetter('T17I5',false)\" onmouseout=\"highlightSetter('T17I5',true)\">在面对复杂的集成电路设计时,</em><em class='similar T17I6' onmouseover=\"highlightSetter('T17I6',false)\" onmouseout=\"highlightSetter('T17I6',true)\">其验证效率过低,</em>最终可能影响到产品的及时发布[6]。而基于FPGA的原型验证方法,依靠其可反复擦除、","replaceMap":{},"similar_word_count":72,"text":"验证所花费的时间也占到产品研发周期的一半以上,<em class='similar'>找到有效可行的验证方法成为验证的关键</em>[4]。<em class='similar'>目前,</em><em class='similar'>最常见的验证方法是软件仿真技术,</em><em class='similar'>但是软件仿真虽然简单易行,</em><em class='similar'>在面对复杂的集成电路设计时,</em><em class='similar'>其验证效率过低,</em>最终可能影响到产品的及时发布[6]。而基于FPGA的原型验证方法,依靠其可反复擦除、","suggest":{"synonyms":[],"keyword":["可行","验证方法","软件仿真技术","软件仿真","简单易行","集成电路","设计时","验证效率","过低"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":745,"teacher":"","textWithDynamicClass":"真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar 19S40I6' onmouseover=\"highlightSetter('19S40I6',false)\" onmouseout=\"highlightSetter('19S40I6',true)\">最终可能影响到产品的及时发布。</em><em class='similar 19S40I7' onmouseover=\"highlightSetter('19S40I7',false)\" onmouseout=\"highlightSetter('19S40I7',true)\">而基于 FPGA 的原型验证方法,</em><em class='similar 19S40I8' onmouseover=\"highlightSetter('19S40I8',false)\" onmouseout=\"highlightSetter('19S40I8',true)\">凭借其可反复擦除、</em><em class='similar 19S40I9' onmouseover=\"highlightSetter('19S40I9',false)\" onmouseout=\"highlightSetter('19S40I9',true)\">可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar 19S40I10' onmouseover=\"highlightSetter('19S40I10',false)\" onmouseout=\"highlightSetter('19S40I10',true)\">被越来越多的验证团队所采用。</em>近年来,随着便携式可穿戴设备和移动智能手机市场的需","datatype":"webpage","clcs":[],"similarityPercentage":"95.5%","self":false,"text":"真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar'>最终可能影响到产品的及时发布。</em><em class='similar'>而基于 FPGA 的原型验证方法,</em><em class='similar'>凭借其可反复擦除、</em><em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用。</em>近年来,随着便携式可穿戴设备和移动智能手机市场的需"},{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":213.90642,"teacher":"","textWithDynamicClass":"grammable Gate Array,现场可编程门阵列)<em class='similar 19S41I5' onmouseover=\"highlightSetter('19S41I5',false)\" onmouseout=\"highlightSetter('19S41I5',true)\">的原型验证技术凭借其可反复擦除、</em><em class='similar 19S41I6' onmouseover=\"highlightSetter('19S41I6',false)\" onmouseout=\"highlightSetter('19S41I6',true)\">可真实的模拟设计中的硬件行为等优势受到验证团队越来越多的重视。</em>本文正是基于多 FPGA 的验证思想,以一款 LT","datatype":"webpage","clcs":[],"similarityPercentage":"47.5%","self":false,"text":"grammable Gate Array,现场可编程门阵列)<em class='similar'>的原型验证技术凭借其可反复擦除、</em><em class='similar'>可真实的模拟设计中的硬件行为等优势受到验证团队越来越多的重视。</em>本文正是基于多 FPGA 的验证思想,以一款 LT"}],"textWithDynamicClass":"但是软件仿真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar T18I0' onmouseover=\"highlightSetter('T18I0',false)\" onmouseout=\"highlightSetter('T18I0',true)\">最终可能影响到产品的及时发布</em>[6]。<em class='similar T18I2' onmouseover=\"highlightSetter('T18I2',false)\" onmouseout=\"highlightSetter('T18I2',true)\">而基于FPGA的原型验证方法,</em><em class='similar T18I3' onmouseover=\"highlightSetter('T18I3',false)\" onmouseout=\"highlightSetter('T18I3',true)\">依靠其可反复擦除、</em><em class='similar T18I4' onmouseover=\"highlightSetter('T18I4',false)\" onmouseout=\"highlightSetter('T18I4',true)\">可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar T18I5' onmouseover=\"highlightSetter('T18I5',false)\" onmouseout=\"highlightSetter('T18I5',true)\">被越来越多的验证团队所采用</em>[6]。","replaceMap":{},"similar_word_count":84,"text":"但是软件仿真虽然简单易行,在面对复杂的集成电路设计时,其验证效率过低,<em class='similar'>最终可能影响到产品的及时发布</em>[6]。<em class='similar'>而基于FPGA的原型验证方法,</em><em class='similar'>依靠其可反复擦除、</em><em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>[6]。","suggest":{"synonyms":[],"keyword":["可能影响","fpga","原型","验证方法","擦除","真实的","模拟设计","硬件","系统全面","设计功能"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":544.0563,"teacher":"","textWithDynamicClass":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar 20S42I5' onmouseover=\"highlightSetter('20S42I5',false)\" onmouseout=\"highlightSetter('20S42I5',true)\">集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,<em class='similar 20S42I7' onmouseover=\"highlightSetter('20S42I7',false)\" onmouseout=\"highlightSetter('20S42I7',true)\">正确性验证已成为高性能芯片研发过程中的关键环节,</em><em class='similar 20S42I8' onmouseover=\"highlightSetter('20S42I8',false)\" onmouseout=\"highlightSetter('20S42I8',true)\">因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电子科技大学硕士学位论文2验","datatype":"webpage","clcs":[],"similarityPercentage":"56.7%","self":false,"text":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar'>集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,<em class='similar'>正确性验证已成为高性能芯片研发过程中的关键环节,</em><em class='similar'>因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电子科技大学硕士学位论文2验"}],"textWithDynamicClass":"<em class='similar T19I0' onmouseover=\"highlightSetter('T19I0',false)\" onmouseout=\"highlightSetter('T19I0',true)\">目前随着高性能ASIC芯片设计复杂度的提升以及体系结构的不断升级换代及创新,</em>SoC设计的规模在快速膨胀,<em class='similar T19I2' onmouseover=\"highlightSetter('T19I2',false)\" onmouseout=\"highlightSetter('T19I2',true)\">研发中的验证阶段已成为高性能芯片研发过程中的关键环节,</em><em class='similar T19I3' onmouseover=\"highlightSetter('T19I3',false)\" onmouseout=\"highlightSetter('T19I3',true)\">因此为保证验证的高效性和准确性,</em><em class='similar T19I4' onmouseover=\"highlightSetter('T19I4',false)\" onmouseout=\"highlightSetter('T19I4',true)\">许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。</em>在具有超高复杂与高性能IC验证上,主流验证方法分为以下三类:软件模拟验证、硬件加速器仿真验证、","replaceMap":{},"similar_word_count":112,"text":"<em class='similar'>目前随着高性能ASIC芯片设计复杂度的提升以及体系结构的不断升级换代及创新,</em>SoC设计的规模在快速膨胀,<em class='similar'>研发中的验证阶段已成为高性能芯片研发过程中的关键环节,</em><em class='similar'>因此为保证验证的高效性和准确性,</em><em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。</em>在具有超高复杂与高性能IC验证上,主流验证方法分为以下三类:软件模拟验证、硬件加速器仿真验证、","suggest":{"synonyms":[{"synonyms":["接踵"],"keyword":"相继"}],"keyword":["高性能","asic","芯片设计","复杂度","体系结构","升级换代","soc","快速膨胀","研发过程","关键环节","高效性","准确性","eda","集成电路设计公司","相继","验证方法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":493.57147,"teacher":"","textWithDynamicClass":"。在复杂的高性能芯片西安电子科技大学硕士学位论文2验证方面,<em class='similar 21S43I3' onmouseover=\"highlightSetter('21S43I3',false)\" onmouseout=\"highlightSetter('21S43I3',true)\">主要的验证方法分为三类:</em><em class='similar 21S43I4' onmouseover=\"highlightSetter('21S43I4',false)\" onmouseout=\"highlightSetter('21S43I4',true)\">软件模拟验证、</em><em class='similar 21S43I5' onmouseover=\"highlightSetter('21S43I5',false)\" onmouseout=\"highlightSetter('21S43I5',true)\">硬件加速器仿真验证、</em><em class='similar 21S43I6' onmouseover=\"highlightSetter('21S43I6',false)\" onmouseout=\"highlightSetter('21S43I6',true)\">FPGA原型验证</em>[2]。<em class='similar 21S43I8' onmouseover=\"highlightSetter('21S43I8',false)\" onmouseout=\"highlightSetter('21S43I8',true)\">在芯片功能准确性的验证过程中,</em><em class='similar 21S43I9' onmouseover=\"highlightSetter('21S43I9',false)\" onmouseout=\"highlightSetter('21S43I9',true)\">软件模拟验证是最常采用的方法,</em>其优点是模拟精确、<em class='similar 21S43I11' onmouseover=\"highlightSetter('21S43I11',false)\" onmouseout=\"highlightSetter('21S43I11',true)\">方便灵活,</em><em class='similar 21S43I12' onmouseover=\"highlightSetter('21S43I12',false)\" onmouseout=\"highlightSetter('21S43I12',true)\">因此芯片的模块功能验证一般采用软件模拟的方法。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"58.1%","self":false,"text":"。在复杂的高性能芯片西安电子科技大学硕士学位论文2验证方面,<em class='similar'>主要的验证方法分为三类:</em><em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证、</em><em class='similar'>FPGA原型验证</em>[2]。<em class='similar'>在芯片功能准确性的验证过程中,</em><em class='similar'>软件模拟验证是最常采用的方法,</em>其优点是模拟精确、<em class='similar'>方便灵活,</em><em class='similar'>因此芯片的模块功能验证一般采用软件模拟的方法。</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000126754842711","author":"","university":"","source":"网页","title":"一款多核处理器FPGA验证平台的设计与实现-论文 - 道客...","url":"https://www.doc88.com/p%2D7854445766655.html","reference":false,"similarScore":283.89612,"teacher":"","textWithDynamicClass":"成功与否的关键因素之一.通常在高性能处理器芯片的验证过程中,<em class='similar 21S44I4' onmouseover=\"highlightSetter('21S44I4',false)\" onmouseout=\"highlightSetter('21S44I4',true)\">软件模拟验证、</em><em class='similar 21S44I5' onmouseover=\"highlightSetter('21S44I5',false)\" onmouseout=\"highlightSetter('21S44I5',true)\">硬件加速器仿真验证和 F PGA </em>( field programmable gate—array)原型验证是最常见的3种方法.<em class='similar 21S44I8' onmouseover=\"highlightSetter('21S44I8',false)\" onmouseout=\"highlightSetter('21S44I8',true)\">软件模拟验证是当今芯片正确性验证的一种最常��的验证手段,</em><em class='similar 21S44I9' onmouseover=\"highlightSetter('21S44I9',false)\" onmouseout=\"highlightSetter('21S44I9',true)\">具有模拟精准、</em>","datatype":"webpage","clcs":[],"similarityPercentage":"55.7%","self":false,"text":"成功与否的关键因素之一.通常在高性能处理器芯片的验证过程中,<em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证和 F PGA </em>( field programmable gate—array)原型验证是最常见的3种方法.<em class='similar'>软件模拟验证是当今芯片正确性验证的一种最常用的验证手段,</em><em class='similar'>具有模拟精准、</em>"}],"textWithDynamicClass":"因此为保证验证的高效性和准确性,许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。在具有超高复杂与高性能IC验证上,<em class='similar T20I1' onmouseover=\"highlightSetter('T20I1',false)\" onmouseout=\"highlightSetter('T20I1',true)\">主流验证方法分为以下三类:</em><em class='similar T20I2' onmouseover=\"highlightSetter('T20I2',false)\" onmouseout=\"highlightSetter('T20I2',true)\">软件模拟验证、</em><em class='similar T20I3' onmouseover=\"highlightSetter('T20I3',false)\" onmouseout=\"highlightSetter('T20I3',true)\">硬件加速器仿真验证、</em><em class='similar T20I4' onmouseover=\"highlightSetter('T20I4',false)\" onmouseout=\"highlightSetter('T20I4',true)\">FPGA原型验证。</em><em class='similar T20I5' onmouseover=\"highlightSetter('T20I5',false)\" onmouseout=\"highlightSetter('T20I5',true)\">软件模拟验证是验证集成电路设计功能正确性上最常采用的方法,</em><em class='similar T20I6' onmouseover=\"highlightSetter('T20I6',false)\" onmouseout=\"highlightSetter('T20I6',true)\">其具有模拟精确、</em><em class='similar T20I7' onmouseover=\"highlightSetter('T20I7',false)\" onmouseout=\"highlightSetter('T20I7',true)\">方便灵活等优点,</em>因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,当芯片整体复杂度提升,软件模拟的效率也在不断下降,同时也将难以覆盖整体IC功能的验证。实践表明,","replaceMap":{},"similar_word_count":84,"text":"因此为保证验证的高效性和准确性,许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。在具有超高复杂与高性能IC验证上,<em class='similar'>主流验证方法分为以下三类:</em><em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证、</em><em class='similar'>FPGA原型验证。</em><em class='similar'>软件模拟验证是验证集成电路设计功能正确性上最常采用的方法,</em><em class='similar'>其具有模拟精确、</em><em class='similar'>方便灵活等优点,</em>因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,当芯片整体复杂度提升,软件模拟的效率也在不断下降,同时也将难以覆盖整体IC功能的验证。实践表明,","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"}],"keyword":["超高","高性能","ic","主流","验证方法","三类","模拟验证","硬件加速器","仿真验证","fpga","原型验证","集成电路","设计功能","正确性","精确","量级","正确性验证","emu"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":485.18704,"teacher":"","textWithDynamicClass":"便灵活,因此芯片的模块功能验证一般采用软件模拟的方法。但是,<em class='similar 22S45I6' onmouseover=\"highlightSetter('22S45I6',false)\" onmouseout=\"highlightSetter('22S45I6',true)\">随着芯片复杂度的提升,</em><em class='similar 22S45I7' onmouseover=\"highlightSetter('22S45I7',false)\" onmouseout=\"highlightSetter('22S45I7',true)\">软件模拟的效率将迅速降低,</em><em class='similar 22S45I8' onmouseover=\"highlightSetter('22S45I8',false)\" onmouseout=\"highlightSetter('22S45I8',true)\">并且越来越难以覆盖芯片整体的功能验证。</em><em class='similar 22S45I9' onmouseover=\"highlightSetter('22S45I9',false)\" onmouseout=\"highlightSetter('22S45I9',true)\">实践表明,</em><em class='similar 22S45I10' onmouseover=\"highlightSetter('22S45I10',false)\" onmouseout=\"highlightSetter('22S45I10',true)\">不论基于何种算法去设计软件工具的模拟方式,</em><em class='similar 22S45I11' onmouseover=\"highlightSetter('22S45I11',false)\" onmouseout=\"highlightSetter('22S45I11',true)\">当芯片所包含的电路门数超过一定数目时,</em><em class='similar 22S45I12' onmouseover=\"highlightSetter('22S45I12',false)\" onmouseout=\"highlightSetter('22S45I12',true)\">软件工具将无法准确反映系统信号的变化,</em>","datatype":"webpage","clcs":[],"similarityPercentage":"48.5%","self":false,"text":"便灵活,因此芯片的模块功能验证一般采用软件模拟的方法。但是,<em class='similar'>随着芯片复杂度的提升,</em><em class='similar'>软件模拟的效率将迅速降低,</em><em class='similar'>并且越来越难以覆盖芯片整体的功能验证。</em><em class='similar'>实践表明,</em><em class='similar'>不论基于何种算法去设计软件工具的模拟方式,</em><em class='similar'>当芯片所包含的电路门数超过一定数目时,</em><em class='similar'>软件工具将无法准确反映系统信号的变化,</em>"}],"textWithDynamicClass":"方便灵活等优点,因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,<em class='similar T21I0' onmouseover=\"highlightSetter('T21I0',false)\" onmouseout=\"highlightSetter('T21I0',true)\">当芯片整体复杂度提升,</em><em class='similar T21I1' onmouseover=\"highlightSetter('T21I1',false)\" onmouseout=\"highlightSetter('T21I1',true)\">软件模拟的效率也在不断下降,</em><em class='similar T21I2' onmouseover=\"highlightSetter('T21I2',false)\" onmouseout=\"highlightSetter('T21I2',true)\">同时也将难以覆盖整体IC功能的验证。</em><em class='similar T21I3' onmouseover=\"highlightSetter('T21I3',false)\" onmouseout=\"highlightSetter('T21I3',true)\">实践表明,</em><em class='similar T21I4' onmouseover=\"highlightSetter('T21I4',false)\" onmouseout=\"highlightSetter('T21I4',true)\">不论使用哪种算法去设计EDA工具的仿真方式,</em><em class='similar T21I5' onmouseover=\"highlightSetter('T21I5',false)\" onmouseout=\"highlightSetter('T21I5',true)\">当IC设计所包含的电路门数超过一定数目时,</em><em class='similar T21I6' onmouseover=\"highlightSetter('T21I6',false)\" onmouseout=\"highlightSetter('T21I6',true)\">EDA工具对于系统信号的反应将很难保证,</em>验证的效率也将会被极大制约,从而很难高效的实现验证结果[3]。针对软件模拟仿真的局限性,","replaceMap":{},"similar_word_count":111,"text":"方便灵活等优点,因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,<em class='similar'>当芯片整体复杂度提升,</em><em class='similar'>软件模拟的效率也在不断下降,</em><em class='similar'>同时也将难以覆盖整体IC功能的验证。</em><em class='similar'>实践表明,</em><em class='similar'>不论使用哪种算法去设计EDA工具的仿真方式,</em><em class='similar'>当IC设计所包含的电路门数超过一定数目时,</em><em class='similar'>EDA工具对于系统信号的反应将很难保证,</em>验证的效率也将会被极大制约,从而很难高效的实现验证结果[3]。针对软件模拟仿真的局限性,","suggest":{"synonyms":[{"synonyms":["数量"],"keyword":"数目"}],"keyword":["复杂度","软件模拟","ic","eda","仿真","设计所","数目","系统信号"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":126.15385,"teacher":"","textWithDynamicClass":"路门数超过一定数目时,软件工具将无法准确反映系统信号的变化,<em class='similar 23S46I5' onmouseover=\"highlightSetter('23S46I5',false)\" onmouseout=\"highlightSetter('23S46I5',true)\">验证效率受到极大制约,</em><em class='similar 23S46I6' onmouseover=\"highlightSetter('23S46I6',false)\" onmouseout=\"highlightSetter('23S46I6',true)\">很难实现高效的验证效果。</em>针对软件模拟仿真的局限性,各大集成电路公司提出了硬","datatype":"webpage","clcs":[],"similarityPercentage":"60.1%","self":false,"text":"路门数超过一定数目时,软件工具将无法准确反映系统信号的变化,<em class='similar'>验证效率受到极大制约,</em><em class='similar'>很难实现高效的验证效果。</em>针对软件模拟仿真的局限性,各大集成电路公司提出了硬"}],"textWithDynamicClass":"同时也将难以覆盖整体IC功能的验证。实践表明,不论使用哪种算法去设计EDA工具的仿真方式,当IC设计所包含的电路门数超过一定数目时,EDA工具对于系统信号的反应将很难保证,<em class='similar T22I0' onmouseover=\"highlightSetter('T22I0',false)\" onmouseout=\"highlightSetter('T22I0',true)\">验证的效率也将会被极大制约,</em><em class='similar T22I1' onmouseover=\"highlightSetter('T22I1',false)\" onmouseout=\"highlightSetter('T22I1',true)\">从而很难高效的实现验证结果</em>[3]。针对软件模拟仿真的局限性,各大EDA厂商与集成电路厂商进而提出通过硬件加速器来实现仿真验证,其主要思想是通过专门的硬件加速器,将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,","replaceMap":{},"similar_word_count":27,"text":"同时也将难以覆盖整体IC功能的验证。实践表明,不论使用哪种算法去设计EDA工具的仿真方式,当IC设计所包含的电路门数超过一定数目时,EDA工具对于系统信号的反应将很难保证,<em class='similar'>验证的效率也将会被极大制约,</em><em class='similar'>从而很难高效的实现验证结果</em>[3]。针对软件模拟仿真的局限性,各大EDA厂商与集成电路厂商进而提出通过硬件加速器来实现仿真验证,其主要思想是通过专门的硬件加速器,将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,","suggest":{"synonyms":[],"keyword":["高效的","验证结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":321.9583,"teacher":"","textWithDynamicClass":"统信号的变化,验证效率受到极大制约,很难实现高效的验证效果。<em class='similar 24S47I3' onmouseover=\"highlightSetter('24S47I3',false)\" onmouseout=\"highlightSetter('24S47I3',true)\">针对软件模拟仿真的局限性,</em><em class='similar 24S47I4' onmouseover=\"highlightSetter('24S47I4',false)\" onmouseout=\"highlightSetter('24S47I4',true)\">各大集成电路公司提出了硬件加速器仿真验证,</em><em class='similar 24S47I5' onmouseover=\"highlightSetter('24S47I5',false)\" onmouseout=\"highlightSetter('24S47I5',true)\">主要思想是做出专门的硬件加速器,</em>将软件模拟中的某些复杂运算交给硬件加速器计算,最后","datatype":"webpage","clcs":[],"similarityPercentage":"68.5%","self":false,"text":"统信号的变化,验证效率受到极大制约,很难实现高效的验证效果。<em class='similar'>针对软件模拟仿真的局限性,</em><em class='similar'>各大集成电路公司提出了硬件加速器仿真验证,</em><em class='similar'>主要思想是做出专门的硬件加速器,</em>将软件模拟中的某些复杂运算交给硬件加速器计算,最后"}],"textWithDynamicClass":"验证的效率也将会被极大制约,从而很难高效的实现验证结果[3]。<em class='similar T23I0' onmouseover=\"highlightSetter('T23I0',false)\" onmouseout=\"highlightSetter('T23I0',true)\">针对软件模拟仿真的局限性,</em><em class='similar T23I1' onmouseover=\"highlightSetter('T23I1',false)\" onmouseout=\"highlightSetter('T23I1',true)\">各大EDA厂商与集成电路厂商进而提出通过硬件加速器来实现仿真验证,</em><em class='similar T23I2' onmouseover=\"highlightSetter('T23I2',false)\" onmouseout=\"highlightSetter('T23I2',true)\">其主要思想是通过专门的硬件加速器,</em>将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,最后硬件加速器将运算结果传回仿真软件,","replaceMap":{},"similar_word_count":63,"text":"验证的效率也将会被极大制约,从而很难高效的实现验证结果[3]。<em class='similar'>针对软件模拟仿真的局限性,</em><em class='similar'>各大EDA厂商与集成电路厂商进而提出通过硬件加速器来实现仿真验证,</em><em class='similar'>其主要思想是通过专门的硬件加速器,</em>将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,最后硬件加速器将运算结果传回仿真软件,","suggest":{"synonyms":[],"keyword":["模拟仿真","局限性","eda","厂商","集成电路","硬件加速器","仿真验证","主要思想"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":387.8704,"teacher":"","textWithDynamicClass":"司提出了硬件加速器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar 25S48I4' onmouseover=\"highlightSetter('25S48I4',false)\" onmouseout=\"highlightSetter('25S48I4',true)\">将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar 25S48I5' onmouseover=\"highlightSetter('25S48I5',false)\" onmouseout=\"highlightSetter('25S48I5',true)\">最后硬件加速器将运算结果传回仿真软件,</em><em class='similar 25S48I6' onmouseover=\"highlightSetter('25S48I6',false)\" onmouseout=\"highlightSetter('25S48I6',true)\">最终从整体上提升验证效率</em>[3]。而且硬件加速器验证的仿真环境也更加真实,相","datatype":"webpage","clcs":[],"similarityPercentage":"74.6%","self":false,"text":"司提出了硬件加速器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar'>将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em><em class='similar'>最终从整体上提升验证效率</em>[3]。而且硬件加速器验证的仿真环境也更加真实,相"}],"textWithDynamicClass":"其主要思想是通过专门的硬件加速器,<em class='similar T24I0' onmouseover=\"highlightSetter('T24I0',false)\" onmouseout=\"highlightSetter('T24I0',true)\">将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,</em><em class='similar T24I1' onmouseover=\"highlightSetter('T24I1',false)\" onmouseout=\"highlightSetter('T24I1',true)\">最后硬件加速器将运算结果传回仿真软件,</em><em class='similar T24I2' onmouseover=\"highlightSetter('T24I2',false)\" onmouseout=\"highlightSetter('T24I2',true)\">最终提升整体上的验证效率。</em>而且硬件加速器验证的仿真环境也更加真实,相比于完全使用软件来实现仿真,","replaceMap":{},"similar_word_count":60,"text":"其主要思想是通过专门的硬件加速器,<em class='similar'>将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,</em><em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em><em class='similar'>最终提升整体上的验证效率。</em>而且硬件加速器验证的���真环境也更加真实,相比于完全使用软件来实现仿真,","suggest":{"synonyms":[{"synonyms":["通告"],"keyword":"告诉"}],"keyword":["软件仿真","运算","告诉","硬件加速器","运算结果","传回","仿真软件","验证效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":462.27274,"teacher":"","textWithDynamicClass":"<em class='similar 26S49I0' onmouseover=\"highlightSetter('26S49I0',false)\" onmouseout=\"highlightSetter('26S49I0',true)\">司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,最后硬件加速器将运算结果传回仿真软件,最终从整体上提升验证效率[3]。<em class='similar 26S49I6' onmouseover=\"highlightSetter('26S49I6',false)\" onmouseout=\"highlightSetter('26S49I6',true)\">而且硬件加速器验证的仿真环境也更加真实,</em>相比于软件去实现芯片电路的模型构建,<em class='similar 26S49I8' onmouseover=\"highlightSetter('26S49I8',false)\" onmouseout=\"highlightSetter('26S49I8',true)\">硬件加速器采用真实的硬件仿真环境,</em><em class='similar 26S49I9' onmouseover=\"highlightSetter('26S49I9',false)\" onmouseout=\"highlightSetter('26S49I9',true)\">可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,这","datatype":"webpage","clcs":[],"similarityPercentage":"71.1%","self":false,"text":"<em class='similar'>司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,最后硬件加速器将运算结果传回仿真软件,最终从整体上提升验证效率[3]。<em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em>相比于软件去实现芯片电路的模型构建,<em class='similar'>硬件加速器采用真实的硬件仿真环境,</em><em class='similar'>可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,这"}],"textWithDynamicClass":"最后硬件加速器将运算结果传回仿真软件,最终提升整体上的验证效率。<em class='similar T25I0' onmouseover=\"highlightSetter('T25I0',false)\" onmouseout=\"highlightSetter('T25I0',true)\">而且硬件加速器验证的仿真环境也更加真实,</em>相比于完全使用软件来实现仿真,<em class='similar T25I2' onmouseover=\"highlightSetter('T25I2',false)\" onmouseout=\"highlightSetter('T25I2',true)\">硬件加速器使用了真实的硬件仿真环境,</em><em class='similar T25I3' onmouseover=\"highlightSetter('T25I3',false)\" onmouseout=\"highlightSetter('T25I3',true)\">可以更加真实的反映集成电路设计系统的各种问题,</em>从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,这对于验证工程师的调试很有帮助,","replaceMap":{},"similar_word_count":61,"text":"最后硬件加速器将运算结果传回仿真软件,最终提升整体上的验证效率。<em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em>相比于完全使用软件来实现仿真,<em class='similar'>硬件加速器使用了真实的硬件仿真环境,</em><em class='similar'>可以更加真实的反映集成电路设计系统的各种问题,</em>从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,这对于验证工程师的调试很有帮助,","suggest":{"synonyms":[{"synonyms":["资助"],"keyword":"辅助"}],"keyword":["硬件加速器","仿真环境","仿真","真实的","硬件","集成电路","设计系统","各种问题","辅助","开发人员"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":760.78564,"teacher":"","textWithDynamicClass":"的各种问题,有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar 27S50I5' onmouseover=\"highlightSetter('27S50I5',false)\" onmouseout=\"highlightSetter('27S50I5',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar 27S50I6' onmouseover=\"highlightSetter('27S50I6',false)\" onmouseout=\"highlightSetter('27S50I6',true)\">典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em><em class='similar 27S50I7' onmouseover=\"highlightSetter('27S50I7',false)\" onmouseout=\"highlightSetter('27S50I7',true)\">但是硬件加速仿真验证也存在缺陷,</em>因为这种方法需要专门的团队进行硬件加速器的设计,<em class='similar 27S50I9' onmouseover=\"highlightSetter('27S50I9',false)\" onmouseout=\"highlightSetter('27S50I9',true)\">并且还需要设计软件模拟器与硬件加速器之间的通信接口,</em><em class='similar 27S50I10' onmouseover=\"highlightSetter('27S50I10',false)\" onmouseout=\"highlightSetter('27S50I10',true)\">而一旦所验证的设计改变,</em><em class='similar 27S50I11' onmouseover=\"highlightSetter('27S50I11',false)\" onmouseout=\"highlightSetter('27S50I11',true)\">原来的硬件加速器便无法再次重复利用,</em>","datatype":"webpage","clcs":[],"similarityPercentage":"72.5%","self":false,"text":"的各种问题,有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em><em class='similar'>但是硬件加速仿真验证也存在缺陷,</em>因为这种方法需要专门的团队进行硬件加速器的设计,<em class='similar'>并且还需要设计软件模拟器与硬件加速器之间的通信接口,</em><em class='similar'>而一旦所验证的设计改变,</em><em class='similar'>原来的硬件加速器便无法再次重复利用,</em>"}],"textWithDynamicClass":"可以更加真实的反映集成电路设计系统的各种问题,从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,<em class='similar T26I1' onmouseover=\"highlightSetter('T26I1',false)\" onmouseout=\"highlightSetter('T26I1',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar T26I2' onmouseover=\"highlightSetter('T26I2',false)\" onmouseout=\"highlightSetter('T26I2',true)\">典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar T26I4' onmouseover=\"highlightSetter('T26I4',false)\" onmouseout=\"highlightSetter('T26I4',true)\">但是硬件仿真器也存在固有的缺陷,</em>因为其需要针对特定的电路构造特点的硬件加速设备,<em class='similar T26I6' onmouseover=\"highlightSetter('T26I6',false)\" onmouseout=\"highlightSetter('T26I6',true)\">同时还需要EDA软件与硬件加速设备间的通信接口,</em><em class='similar T26I7' onmouseover=\"highlightSetter('T26I7',false)\" onmouseout=\"highlightSetter('T26I7',true)\">而一旦所验证的设计改变,</em><em class='similar T26I8' onmouseover=\"highlightSetter('T26I8',false)\" onmouseout=\"highlightSetter('T26I8',true)\">原有的硬件加速固件将可能无法复用,</em>从而需要重新设计硬件固件及相关接口。从理论上讲,本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,但硬件仿真器的成本高昂,","replaceMap":{},"similar_word_count":131,"text":"可以更加真实的反映集成电路设计系统的各种问题,从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar'>但是硬件仿真器也存在固有的缺陷,</em>因为其需要针对特定的电路构造特点的硬件加速设备,<em class='similar'>同时还需要EDA软件与硬件加速设备间的通信接口,</em><em class='similar'>而一旦所验证的设计改变,</em><em class='similar'>原有的硬件加速固件将可能无法复用,</em>从而需要重新设计硬件固件及相关接口。从理论上讲,本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,但硬件仿真器的成本高昂,","suggest":{"synonyms":[{"synonyms":["捉拿"],"keyword":"捕获"}],"keyword":["软件仿真","捕获","工程师","调试","硬件仿真器","cadence","palladium","mentor","veloce","35","固有","构造特点","硬件加速","eda","设备间","通信接口","固件","复用","重新设计","硬件","理论上"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":529.9151,"teacher":"","textWithDynamicClass":"件加速器和通信接口。从理论上讲,<em class='similar 28S51I2' onmouseover=\"highlightSetter('28S51I2',false)\" onmouseout=\"highlightSetter('28S51I2',true)\">本文的原型验证也可以通过硬件仿真器实现,</em><em class='similar 28S51I3' onmouseover=\"highlightSetter('28S51I3',false)\" onmouseout=\"highlightSetter('28S51I3',true)\">但硬件仿真器的价格太昂贵,</em><em class='similar 28S51I4' onmouseover=\"highlightSetter('28S51I4',false)\" onmouseout=\"highlightSetter('28S51I4',true)\">而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。<em class='similar 28S51I6' onmouseover=\"highlightSetter('28S51I6',false)\" onmouseout=\"highlightSetter('28S51I6',true)\">随着 FPGA 性能的不断提升,</em><em class='similar 28S51I7' onmouseover=\"highlightSetter('28S51I7',false)\" onmouseout=\"highlightSetter('28S51I7',true)\">基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG","datatype":"webpage","clcs":[],"similarityPercentage":"65.4%","self":false,"text":"件加速器和通信接口。从理论上讲,<em class='similar'>本文的原型验证也可以通过硬件仿真器实现,</em><em class='similar'>但硬件仿真器的价格太昂贵,</em><em class='similar'>而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。<em class='similar'>随着 FPGA 性能的不断提升,</em><em class='similar'>基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG"}],"textWithDynamicClass":"原有的硬件加速固件将可能无法复用,从而需要重新设计硬件固件及相关接口。从理论上讲,<em class='similar T27I0' onmouseover=\"highlightSetter('T27I0',false)\" onmouseout=\"highlightSetter('T27I0',true)\">本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,</em><em class='similar T27I1' onmouseover=\"highlightSetter('T27I1',false)\" onmouseout=\"highlightSetter('T27I1',true)\">但硬件仿真器的成本高昂,</em><em class='similar T27I2' onmouseover=\"highlightSetter('T27I2',false)\" onmouseout=\"highlightSetter('T27I2',true)\">而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar T27I5' onmouseover=\"highlightSetter('T27I5',false)\" onmouseout=\"highlightSetter('T27I5',true)\">随着FPGA性能的不断提升,</em><em class='similar T27I6' onmouseover=\"highlightSetter('T27I6',false)\" onmouseout=\"highlightSetter('T27I6',true)\">基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","replaceMap":{},"similar_word_count":111,"text":"原有的硬件加速固件将可能无法复用,从而需要重新设计硬件固件及相关接口。从理论上讲,<em class='similar'>本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,</em><em class='similar'>但硬件仿真器的成本高昂,</em><em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"},{"synonyms":["高亢"],"keyword":"高昂"},{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["完好"],"keyword":"完备"}],"keyword":["提及","高密度","原型验证系统","亦可","硬件仿真器","高昂","当代","fpga","技术发展","配套软件","完备","擦除","原型验证","集成电路","设计验证","芯片验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":239.54285,"teacher":"","textWithDynamicClass":"够系统全面的反映设计功能等优势,被越来越多的验证团队所采用。<em class='similar 29S52I2' onmouseover=\"highlightSetter('29S52I2',false)\" onmouseout=\"highlightSetter('29S52I2',true)\">近年来,</em>随着便携式可穿戴设备和移动智能手机市场的需求逐渐旺盛,高性能ASIC 芯片的功能与复杂度也逐步攀升,<em class='similar 29S52I5' onmouseover=\"highlightSetter('29S52I5',false)\" onmouseout=\"highlightSetter('29S52I5',true)\">单个 FPGA 的资源已无法满足验证一个 ASIC芯片设计的需要,</em><em class='similar 29S52I6' onmouseover=\"highlightSetter('29S52I6',false)\" onmouseout=\"highlightSetter('29S52I6',true)\">因此基于多 FPGA 的验证技术成为最佳选择。</em>而使用多个 FPGA搭建验证平台也必然带来逻辑划分","datatype":"webpage","clcs":[],"similarityPercentage":"55.7%","self":false,"text":"够系统全面的反映设计功能等优势,被越来越多的验证团队所采用。<em class='similar'>近年来,</em>随着便携式可穿戴设备和移动智能手机市场的需求逐渐旺盛,高性能ASIC 芯片的功能与复杂度也逐步攀升,<em class='similar'>单个 FPGA 的资源已无法满足验证一个 ASIC芯片设计的需要,</em><em class='similar'>因此基于多 FPGA 的验证技术成为最佳选择。</em>而使用多个 FPGA搭建验证平台也必然带来逻辑划分"}],"textWithDynamicClass":"<em class='similar T28I0' onmouseover=\"highlightSetter('T28I0',false)\" onmouseout=\"highlightSetter('T28I0',true)\">近年来,</em>随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,<em class='similar T28I4' onmouseover=\"highlightSetter('T28I4',false)\" onmouseout=\"highlightSetter('T28I4',true)\">仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,</em><em class='similar T28I5' onmouseover=\"highlightSetter('T28I5',false)\" onmouseout=\"highlightSetter('T28I5',true)\">因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</em>","replaceMap":{},"similar_word_count":61,"text":"<em class='similar'>近年来,</em>随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,<em class='similar'>仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,</em><em class='similar'>因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</em>","suggest":{"synonyms":[],"keyword":["人工智能","gpu","cpu","高性能","快速发展","与运算","单个","fpga","片上资源","asic","芯片设计","多颗","高密度","原型","验证技术","最优"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000798956911","author":"JXT","university":"","source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":"","reference":false,"similarScore":145.6,"teacher":"","textWithDynamicClass":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar 30S53I10' onmouseover=\"highlightSetter('30S53I10',false)\" onmouseout=\"highlightSetter('30S53I10',true)\">设计者将要通过硬件描述语言在寄存器传输级</em><em class='similar 30S53I11' onmouseover=\"highlightSetter('30S53I11',false)\" onmouseout=\"highlightSetter('30S53I11',true)\">(Register Transfer Level,</em> RTL)进行逻辑设计[13],进而在逻辑级定义芯","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"63.3%","self":false,"text":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar'>设计者将要通过硬件描述语言在寄存器传输级</em><em class='similar'>(Register Transfer Level,</em> RTL)进行逻辑设计[13],进而在逻辑级定义芯"}],"textWithDynamicClass":"<em class='similar T29I0' onmouseover=\"highlightSetter('T29I0',false)\" onmouseout=\"highlightSetter('T29I0',true)\">当设计者通过硬件描述语言完成对集成电路寄存器传输级</em><em class='similar T29I1' onmouseover=\"highlightSetter('T29I1',false)\" onmouseout=\"highlightSetter('T29I1',true)\">(Register Transfer Level,</em>RTL)的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,包括逻辑综合、逻辑优化、技术映射、逻辑打包、布局、布线等。","replaceMap":{},"similar_word_count":48,"text":"<em class='similar'>当设计者通过硬件描述语言完成对集成电路寄存器传输级</em><em class='similar'>(Register Transfer Level,</em>RTL)的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,包括逻辑综合、逻辑优化、技术映射、逻辑打包、布局、布线等。","suggest":{"synonyms":[],"keyword":["设计者","硬件描述语言","集成电路","寄存器传输级","register","transfer","level","rtl","编码设计","级设计","基本步骤","fpga","内部结构","比特","流文件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190331742911","author":"","university":"","source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html","reference":false,"similarScore":148.66666,"teacher":"","textWithDynamicClass":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar 31S56I5' onmouseover=\"highlightSetter('31S56I5',false)\" onmouseout=\"highlightSetter('31S56I5',true)\">逻辑综合、</em><em class='similar 31S56I6' onmouseover=\"highlightSetter('31S56I6',false)\" onmouseout=\"highlightSetter('31S56I6',true)\">逻辑优化、</em><em class='similar 31S56I7' onmouseover=\"highlightSetter('31S56I7',false)\" onmouseout=\"highlightSetter('31S56I7',true)\">技术映射、</em><em class='similar 31S56I8' onmouseover=\"highlightSetter('31S56I8',false)\" onmouseout=\"highlightSetter('31S56I8',true)\">打包、</em><em class='similar 31S56I9' onmouseover=\"highlightSetter('31S56I9',false)\" onmouseout=\"highlightSetter('31S56I9',true)\">布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节","datatype":"webpage","clcs":[],"similarityPercentage":"78.2%","self":false,"text":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar'>逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>打包、</em><em class='similar'>布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节"}],"textWithDynamicClass":"的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar T30I1' onmouseover=\"highlightSetter('T30I1',false)\" onmouseout=\"highlightSetter('T30I1',true)\">包括逻辑综合、</em><em class='similar T30I2' onmouseover=\"highlightSetter('T30I2',false)\" onmouseout=\"highlightSetter('T30I2',true)\">逻辑优化、</em><em class='similar T30I3' onmouseover=\"highlightSetter('T30I3',false)\" onmouseout=\"highlightSetter('T30I3',true)\">技术映射、</em><em class='similar T30I4' onmouseover=\"highlightSetter('T30I4',false)\" onmouseout=\"highlightSetter('T30I4',true)\">逻辑打包、</em><em class='similar T30I5' onmouseover=\"highlightSetter('T30I5',false)\" onmouseout=\"highlightSetter('T30I5',true)\">布局、</em><em class='similar T30I6' onmouseover=\"highlightSetter('T30I6',false)\" onmouseout=\"highlightSetter('T30I6',true)\">布线等。</em>","replaceMap":{},"similar_word_count":29,"text":"的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>逻辑打包、</em><em class='similar'>布局、</em><em class='similar'>布线等。</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["构造"],"keyword":"布局"}],"keyword":["rtl","设计步骤","逻辑综合","逻辑优化","映射","逻辑","打包","布局","布线"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000137314923511","author":"","university":"","source":"网页","title":"基于NPN的快速函数分类算法 - 道客巴巴","url":"http://www.doc88.com/p%2D0748678725567.html","reference":false,"similarScore":213.33333,"teacher":"","textWithDynamicClass":"可以看出,ASIC的自顶向下的设计流程依次包括:系统级设计,<em class='similar 32S57I12' onmouseover=\"highlightSetter('32S57I12',false)\" onmouseout=\"highlightSetter('32S57I12',true)\">RTL级设计,</em><em class='similar 32S57I13' onmouseover=\"highlightSetter('32S57I13',false)\" onmouseout=\"highlightSetter('32S57I13',true)\">逻辑综合,</em><em class='similar 32S57I14' onmouseover=\"highlightSetter('32S57I14',false)\" onmouseout=\"highlightSetter('32S57I14',true)\">工艺映射,</em>布局布线,生成版图。FPGA的EDA流程如图2m)所示。从图中可以看出,FPGA的自顶向下的设计流程依次包括:系统级设计,<em class='similar 32S57I22' onmouseover=\"highlightSetter('32S57I22',false)\" onmouseout=\"highlightSetter('32S57I22',true)\">RTL级设计,</em><em class='similar 32S57I23' onmouseover=\"highlightSetter('32S57I23',false)\" onmouseout=\"highlightSetter('32S57I23',true)\">逻辑综合,</em><em class='similar 32S57I24' onmouseover=\"highlightSetter('32S57I24',false)\" onmouseout=\"highlightSetter('32S57I24',true)\">工艺映射,</em>打包,布局布线,生成位流。","datatype":"webpage","clcs":[],"similarityPercentage":"88.9%","self":false,"text":"可以看出,ASIC的自顶向下的设计流程依次包括:系统级设计,<em class='similar'>RTL级设计,</em><em class='similar'>逻辑综合,</em><em class='similar'>工艺映射,</em>布局布线,生成版图。FPGA的EDA流程如图2m)所示。从图中可以看出,FPGA的自顶向下的设计流程依次包括:系统级设计,<em class='similar'>RTL级设计,</em><em class='similar'>逻辑综合,</em><em class='similar'>工艺映射,</em>打包,布局布线,生成位流。"},{"profession":false,"keywords":[],"year":"","docid":"9000137314923511","author":"","university":"","source":"网页","title":"基于NPN的快速函数分类算法 - 道客巴巴","url":"http://www.doc88.com/p%2D0748678725567.html","reference":false,"similarScore":160,"teacher":"","textWithDynamicClass":"包含的设计流程主要是自顶向下的设计流程。万方数据系统级设计,<em class='similar 32S58I3' onmouseover=\"highlightSetter('32S58I3',false)\" onmouseout=\"highlightSetter('32S58I3',true)\">RTL级设计逻辑综合上工艺映射</em>(Ma卯jng)、 rl布局(PIa舱)、 r{布线(Route)、 r版图生成版图图2(a)AsIC设计流程系统级设计,<em class='similar 32S58I13' onmouseover=\"highlightSetter('32S58I13',false)\" onmouseout=\"highlightSetter('32S58I13',true)\">RTL级设计上逻辑综合一~~量�6�8�6�8一工艺映射</em>(Mapping)一~』~~打包(","datatype":"webpage","clcs":[],"similarityPercentage":"48.5%","self":false,"text":"包含的设计流程主要是自顶向下的设计流程。万方数据系统级设计,<em class='similar'>RTL级设计逻辑综合上工艺映射</em>(Ma卯jng)、 rl布局(PIa舱)、 r{布线(Route)、 r版图生成版图图2(a)AsIC设计流程系统级设计,<em class='similar'>RTL级设计上逻辑综合一~~量�6�8�6�8一工艺映射</em>(Mapping)一~』~~打包("}],"textWithDynamicClass":"由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、<em class='similar T31I2' onmouseover=\"highlightSetter('T31I2',false)\" onmouseout=\"highlightSetter('T31I2',true)\">RTL级设计分割、</em><em class='similar T31I3' onmouseover=\"highlightSetter('T31I3',false)\" onmouseout=\"highlightSetter('T31I3',true)\">逻辑综合、</em><em class='similar T31I4' onmouseover=\"highlightSetter('T31I4',false)\" onmouseout=\"highlightSetter('T31I4',true)\">工艺映射、</em>单个FPGA的布局和布线等,由于高密度FPGA原型验证流程步骤繁多且耗时较长,设计者在编写和修改RTL描述时,无法快速预估待划分电路在FPGA上实现时需要的片上硬件资源数量,这样就可能导致无法完成综合流程或者无法完成FPGA布局布线,或互联关系复杂,无法满足FPGA间组网关系,从而需要多次设计迭代来解决上述问题。另外,在逻辑综合流程中,","replaceMap":{},"similar_word_count":19,"text":"由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、<em class='similar'>RTL级设计分割、</em><em class='similar'>逻辑综合、</em><em class='similar'>工艺映射、</em>单个FPGA的布局和布线等,由于高密度FPGA原型验证流程步骤繁多且耗时较长,设计者在编写和修改RTL描述时,无法快速预估待划分电路在FPGA上实现时需要的片上硬件资源数量,这样就可能导致无法完成综合流程或者无法完成FPGA布局布线,或互联关系复杂,无法满足FPGA间组网关系,从而需要多次设计迭代来解决上述问题。另外,在逻辑综合流程中,","suggest":{"synonyms":[{"synonyms":["构造"],"keyword":"布局"},{"synonyms":["割据"],"keyword":"分割"},{"synonyms":["庞杂"],"keyword":"繁多"},{"synonyms":["编辑"],"keyword":"编写"}],"keyword":["高密度","fpga","原型验证","1.2","rtl","级设计","组网","布局","分割","逻辑综合","工艺映射","单个","布线","繁多","耗时","设计者","编写","快速预估","硬件","资源数量","布局布线","互联关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000207135856711","author":"","university":"","source":"网页","title":"搭建一对一直播平台，选择直播系统源码，这几点不容忽视","url":"https://www.docin.com/p%2D2431152169.html","reference":false,"similarScore":129.59998,"teacher":"","textWithDynamicClass":"果自己拿到一套源码光是修改和搭建就需要耗费一到两个月的时间,<em class='similar 33S59I3' onmouseover=\"highlightSetter('33S59I3',false)\" onmouseout=\"highlightSetter('33S59I3',true)\">那后期所耗费的时间成本和人力成本也是不可预估的。</em>另外,选择专业服务商不仅可以提供优质源码,还可以提","datatype":"webpage","clcs":[],"similarityPercentage":"56.3%","self":false,"text":"果自己拿到一套源码光是修改和搭建就需要耗费一到两个月的时间,<em class='similar'>那后期所耗费的时间成本和人力成本也是不可预估的。</em>另外,选择专业服务商不仅可以提供优质源码,还可以提"}],"textWithDynamicClass":"若用户的设计超过百亿门时,<em class='similar T32I1' onmouseover=\"highlightSetter('T32I1',false)\" onmouseout=\"highlightSetter('T32I1',true)\">进行一次迭代所耗费的时间成本,</em><em class='similar T32I2' onmouseover=\"highlightSetter('T32I2',false)\" onmouseout=\"highlightSetter('T32I2',true)\">人力成本都是不可预估的,</em>所以若可以在不进行综合、布局布线等流程时快速获得所需要的所需要资源的估计值,将会为缩短开发人员的迭代周期提供帮助。同时由于高密度FPGA原型验证划分阶段需要以设计资源使用情况来划分合理的分割边界,合理的分割边界将会对设计在满足硬件FPGA组网前提下为系统的运行,规划,验证,调试提供良好的帮助,而分割边界的确认需要以RTL设计中的每个层级中每个节点的Instance的各项资源作为依据。","replaceMap":{},"similar_word_count":27,"text":"若用户的设计超过百亿门时,<em class='similar'>进行一次迭代所耗费的时间成本,</em><em class='similar'>人力成本都是不可预估的,</em>所以若可以在不进行综合、布局布线等流程时快速获得所需要的所需要资源的估计值,将会为缩短开发人员的迭代周期提供帮助。同时由于高密度FPGA原型验证划分阶段需要以设计资源使用情况来划分合理的分割边界,合理的分割边界将会对设计在满足硬件FPGA组网前提下为系统的运行,规划,验证,调试提供良好的帮助,而分割边界的确认需要以RTL设计中的每个层级中每个节点的Instance的各项资源作为依据。","suggest":{"synonyms":[{"synonyms":["糜费"],"keyword":"耗费"},{"synonyms":["收缩"],"keyword":"缩短"},{"synonyms":["割据"],"keyword":"分割"},{"synonyms":["范围"],"keyword":"边界"}],"keyword":["百亿门","迭代","耗费","时间成本","人力成本","预估","布局布线","估计值","缩短","开发人员","迭代周期","高密度","fpga","原型验证","划分阶段","设计资源","使用情况","分割","边界","硬件","组网","调试"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000761364311","author":"","university":"","source":"大学生论文联合库","title":"土壤含水量计算方法及应用","url":"","reference":false,"similarScore":172.01923,"teacher":"","textWithDynamicClass":"存在门电路不足的缺陷,同时,作为定制电路,它们应用场合有限,<em class='similar 35S62I8' onmouseover=\"highlightSetter('35S62I8',false)\" onmouseout=\"highlightSetter('35S62I8',true)\">在这样的时代背景下,</em>FPGA(<em class='similar 35S62I10' onmouseover=\"highlightSetter('35S62I10',false)\" onmouseout=\"highlightSetter('35S62I10',true)\">现场可编程门阵列)</em><em class='similar 35S62I11' onmouseover=\"highlightSetter('35S62I11',false)\" onmouseout=\"highlightSetter('35S62I11',true)\">变应运而生。</em> UDB1008S信号发生器同时具有TTL 输出和","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"34.4%","self":false,"text":"存在门电路不足的缺陷,同时,作为定制电路,它们应用场合有限,<em class='similar'>在这样的时代背景下,</em>FPGA(<em class='similar'>现场可编程门阵列)</em><em class='similar'>变应运而生。</em> UDB1008S信号发生器同时具有TTL 输出和"}],"textWithDynamicClass":"FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。<em class='similar T34I7' onmouseover=\"highlightSetter('T34I7',false)\" onmouseout=\"highlightSetter('T34I7',true)\">在这种时代背景下,</em><em class='similar T34I8' onmouseover=\"highlightSetter('T34I8',false)\" onmouseout=\"highlightSetter('T34I8',true)\">现场可编程门阵列FPGA应运而生。</em>相对于其他相同种类的芯片,由于其可反复擦除的特性,使得基于FPGA进行研发的容错率更好,成本降低。在目前的多数集成电路研发团队的研发过程中,研发团队会先基于一定数量的FPGA芯片对集成电路功能、","replaceMap":{},"similar_word_count":26,"text":"FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。<em class='similar'>在这种时代背景下,</em><em class='similar'>现场可编程门阵列FPGA应运而生。</em>相对于其他相同种类的芯片,由于其可反复擦除的特性,使得基于FPGA进行研发的容错率更好,成本降低。在目前的多数集成电路研发团队的研发过程中,研发团队会先基于一定数量的FPGA芯片对集成电路功能、","suggest":{"synonyms":[{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["快速"],"keyword":"急剧"}],"keyword":["逻辑电路","集成电路","43","fpga","当代","快速发展","缩影","急剧","研发企业","功能需求","价格低廉","现场可编程门阵列","应运而生","擦除","容错","成本降低"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190765717911","author":"","university":"","source":"网页","title":"2019年12月_oyzy_Sean的篝火_SeanOY_CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/month/2019/12","reference":false,"similarScore":139.66664,"teacher":"","textWithDynamicClass":"A学习笔记(四)FPGA概要一、FPGA组成要素FPGA主要<em class='similar 36S66I8' onmouseover=\"highlightSetter('36S66I8',false)\" onmouseout=\"highlightSetter('36S66I8',true)\">由三部分组成</em>:<em class='similar 36S66I9' onmouseover=\"highlightSetter('36S66I9',false)\" onmouseout=\"highlightSetter('36S66I9',true)\">实现逻辑电路的逻辑要素</em><em class='similar 36S66I10' onmouseover=\"highlightSetter('36S66I10',false)\" onmouseout=\"highlightSetter('36S66I10',true)\">(逻辑块,</em>Logical Block,LB)、与外部进行信号","datatype":"webpage","clcs":[],"similarityPercentage":"49.9%","self":false,"text":"A学习笔记(四)FPGA概要一、FPGA组成要素FPGA主要<em class='similar'>由三部分组成</em>:<em class='similar'>实现逻辑电路的逻辑要素</em><em class='similar'>(逻辑块,</em>Logical Block,LB)、与外部进行信号"},{"profession":false,"keywords":[],"year":"","docid":"9000139077271711","author":"","university":"","source":"网页","title":"基于FPGA的高速信号采集 - 道客巴巴","url":"http://www.doc88.com/p%2D3761385833794.html","reference":false,"similarScore":95.71428,"teacher":"","textWithDynamicClass":"二是直接输入内部[8]。图2-2I/O单元结构图(2)可配置<em class='similar 36S64I7' onmouseover=\"highlightSetter('36S64I7',false)\" onmouseout=\"highlightSetter('36S64I7',true)\">逻辑块</em>(CLB)CLB(<em class='similar 36S64I10' onmouseover=\"highlightSetter('36S64I10',false)\" onmouseout=\"highlightSetter('36S64I10',true)\">Configurable Logic Block)</em><em class='similar 36S64I11' onmouseover=\"highlightSetter('36S64I11',false)\" onmouseout=\"highlightSetter('36S64I11',true)\">是FPGA内的基本逻辑单元。</em>不同特性器件的CLB的实际数量不同,一定程度上讲,","datatype":"webpage","clcs":[],"similarityPercentage":"50.4%","self":false,"text":"二是直接输入内部[8]。图2-2I/O单元结构图(2)可配置<em class='similar'>逻辑块</em>(CLB)CLB(<em class='similar'>Configurable Logic Block)</em><em class='similar'>是FPGA内的基本逻辑单元。</em>不同特性器件的CLB的实际数量不同,一定程度上讲,"},{"profession":false,"keywords":[],"year":"","docid":"9000099944372611","author":"","university":"","source":"网页","title":"CME-HRFa","url":"","reference":false,"similarScore":88.214294,"teacher":"","textWithDynamicClass":"钟管理模块。第2章 FPGA 可编程逻辑模块(PLB)可编程<em class='similar 36S65I9' onmouseover=\"highlightSetter('36S65I9',false)\" onmouseout=\"highlightSetter('36S65I9',true)\">逻辑模块</em><em class='similar 36S65I10' onmouseover=\"highlightSetter('36S65I10',false)\" onmouseout=\"highlightSetter('36S65I10',true)\">(Programmable Logic Block)</em><em class='similar 36S65I11' onmouseover=\"highlightSetter('36S65I11',false)\" onmouseout=\"highlightSetter('36S65I11',true)\">是基本的逻辑块,</em><em class='similar 36S65I12' onmouseover=\"highlightSetter('36S65I12',false)\" onmouseout=\"highlightSetter('36S65I12',true)\">由逻辑单元</em>(LE)和 Xbar 组成。PLB 是 Fabri","datatype":"webpage","clcs":[],"similarityPercentage":"40.1%","self":false,"text":"钟管理模块。第2章 FPGA 可编程逻辑模块(PLB)可编程<em class='similar'>逻辑模块</em><em class='similar'>(Programmable Logic Block)</em><em class='similar'>是基本的逻辑块,</em><em class='similar'>由逻辑单元</em>(LE)和 Xbar 组成。PLB 是 Fabri"}],"textWithDynamicClass":"FPGA大致<em class='similar T35I0' onmouseover=\"highlightSetter('T35I0',false)\" onmouseout=\"highlightSetter('T35I0',true)\">由三部分构成</em>:<em class='similar T35I1' onmouseover=\"highlightSetter('T35I1',false)\" onmouseout=\"highlightSetter('T35I1',true)\">第一部分是实现逻辑电路的逻辑要素即逻辑块</em><em class='similar T35I2' onmouseover=\"highlightSetter('T35I2',false)\" onmouseout=\"highlightSetter('T35I2',true)\">(Logic Block,</em>LB)<em class='similar T35I4' onmouseover=\"highlightSetter('T35I4',false)\" onmouseout=\"highlightSetter('T35I4',true)\">也就是我们常说的基本逻辑单元,</em>可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,","replaceMap":{},"similar_word_count":54,"text":"FPGA大致<em class='similar'>由三部分构成</em>:<em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em><em class='similar'>(Logic Block,</em>LB)<em class='similar'>也就是我们常说的基本逻辑单元,</em>可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,","suggest":{"synonyms":[],"keyword":["fpga","第一部分","逻辑电路","逻辑要素","逻辑块","logic","block","lb","常说","逻辑单元","可编程逻辑","实现方式","多重","最早的","乘积项","查找表","数据选择器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190761327111","author":"","university":"","source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox","reference":false,"similarScore":287.29163,"teacher":"","textWithDynamicClass":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar 37S67I7' onmouseover=\"highlightSetter('37S67I7',false)\" onmouseout=\"highlightSetter('37S67I7',true)\">逻辑要素逻辑要素由可以实现任意逻辑电路的可编程部分触发器</em><em class='similar 37S67I8' onmouseover=\"highlightSetter('37S67I8',false)\" onmouseout=\"highlightSetter('37S67I8',true)\">(Flip-Flop,</em>FF)<em class='similar 37S67I10' onmouseover=\"highlightSetter('37S67I10',false)\" onmouseout=\"highlightSetter('37S67I10',true)\">等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/","datatype":"webpage","clcs":[],"similarityPercentage":"63.8%","self":false,"text":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar'>逻辑要素逻辑要素由可以实现任意逻辑电路的可编程部分触发器</em><em class='similar'>(Flip-Flop,</em>FF)<em class='similar'>等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/"}],"textWithDynamicClass":"可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等<em class='similar T36I0' onmouseover=\"highlightSetter('T36I0',false)\" onmouseout=\"highlightSetter('T36I0',true)\">,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,</em><em class='similar T36I1' onmouseover=\"highlightSetter('T36I1',false)\" onmouseout=\"highlightSetter('T36I1',true)\">FF等数据存储电路和数据选择器组成</em>[43]。逻辑要素是在FPGA设计开发流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB(","replaceMap":{},"similar_word_count":59,"text":"可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等<em class='similar'>,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,</em><em class='similar'>FF等数据存储电路和数据选择器组成</em>[43]。逻辑要素是在FPGA设计开发流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB(","suggest":{"synonyms":[],"keyword":["逻辑电路","可编程","触发器","flip","flop","ff","存储电路","数据选择器","43","逻辑要素","fpga","开发流程","紧俏","资源种类","厂商","逻辑","块结构","基本原理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135795011511","author":"","university":"","source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310","reference":false,"similarScore":77.61903,"teacher":"","textWithDynamicClass":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar 38S68I1' onmouseover=\"highlightSetter('38S68I1',false)\" onmouseout=\"highlightSetter('38S68I1',true)\">(Configurable Logic Block)</em>来介绍,<em class='similar 38S68I3' onmouseover=\"highlightSetter('38S68I3',false)\" onmouseout=\"highlightSetter('38S68I3',true)\">把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把","datatype":"webpage","clcs":[],"similarityPercentage":"48.5%","self":false,"text":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar'>(Configurable Logic Block)</em>来介绍,<em class='similar'>把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把"}],"textWithDynamicClass":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar T37I0' onmouseover=\"highlightSetter('T37I0',false)\" onmouseout=\"highlightSetter('T37I0',true)\">如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar T37I1' onmouseover=\"highlightSetter('T37I1',false)\" onmouseout=\"highlightSetter('T37I1',true)\">(Configurable Logic Block)</em>,是以LUT来构成的。第二部分则是用以组成信号输入和输出的重要部分即IO块,主要用于与FPGA外部信号进行交互,第三部分是连接FPGA内部互联资源的内部布线资源。","replaceMap":{},"similar_word_count":55,"text":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar'>(Configurable Logic Block)</em>,是以LUT来构成的。第二部分则是用以组成信号输入和输出的重要部分即IO块,主要用于与FPGA外部信号进行交互,第三部分是连接FPGA内部互联资源的内部布线资源。","suggest":{"synonyms":[],"keyword":["xilinx","设计研发","fpga","逻辑单元","clb","configurable","logic","block","lut","第二部分","用以","输入和输出","io","外部信号","交互","内部互联","布线"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000511009311","author":"-","university":"","source":"大学生论文联合库","title":"振动检测与控制系统","url":"","reference":false,"similarScore":220.63637,"teacher":"","textWithDynamicClass":"它的门电路不是受限制的,同时它不会有定制电路不足的问题出现。<em class='similar 39S69I4' onmouseover=\"highlightSetter('39S69I4',false)\" onmouseout=\"highlightSetter('39S69I4',true)\">FPGA芯片的主体由以下7个部分组成:</em>时钟管理、<em class='similar 39S69I6' onmouseover=\"highlightSetter('39S69I6',false)\" onmouseout=\"highlightSetter('39S69I6',true)\">基本可编程逻辑单元、</em>嵌入块式RAM、<em class='similar 39S69I8' onmouseover=\"highlightSetter('39S69I8',false)\" onmouseout=\"highlightSetter('39S69I8',true)\">布线资源、</em>内嵌的底层功能单元、<em class='similar 39S69I10' onmouseover=\"highlightSetter('39S69I10',false)\" onmouseout=\"highlightSetter('39S69I10',true)\">可编程输入输出单元和内嵌专用硬件模块。</em> FPGA的原理是逻辑单元阵列这一技术,它是由可配","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"48.0%","self":false,"text":"它的门电路不是受限制的,同时它不会有定制电路不足的问题出现。<em class='similar'>FPGA芯片的主体由以下7个部分组成:</em>时钟管理、<em class='similar'>基本可编程逻辑单元、</em>嵌入块式RAM、<em class='similar'>布线资源、</em>内嵌的底层功能单元、<em class='similar'>可编程输入输出单元和内嵌专用硬件模块。</em> FPGA的原理是逻辑单元阵列这一技术,它是由可配"},{"profession":false,"keywords":[],"year":"2015","docid":"2200000697760411","author":"yu","university":"","source":"大学生论文联合库","title":"基于arm的信号发生器","url":"","reference":false,"similarScore":114.54545,"teacher":"","textWithDynamicClass":"组成部分。总的概括起来,FPGA的基本结构主要由6部分组成,<em class='similar 39S70I7' onmouseover=\"highlightSetter('39S70I7',false)\" onmouseout=\"highlightSetter('39S70I7',true)\">可编程输入/输出单元、</em><em class='similar 39S70I8' onmouseover=\"highlightSetter('39S70I8',false)\" onmouseout=\"highlightSetter('39S70I8',true)\">基本可编程逻辑单元、</em>内嵌的RAM、丰富的布线资源、底层的功能单元和专用","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"63.6%","self":false,"text":"组成部分。总的概括起来,FPGA的基本结构主要由6部分组成,<em class='similar'>可编程输入/输出单元、</em><em class='similar'>基本可编程逻辑单元、</em>内嵌的RAM、丰富的布线资源、底层的功能单元和专用"}],"textWithDynamicClass":"<em class='similar T38I0' onmouseover=\"highlightSetter('T38I0',false)\" onmouseout=\"highlightSetter('T38I0',true)\">上述FPGA三部分主要组成具体包括以下内容:</em><em class='similar T38I1' onmouseover=\"highlightSetter('T38I1',false)\" onmouseout=\"highlightSetter('T38I1',true)\">可编程输入输出及内嵌RAM、</em><em class='similar T38I2' onmouseover=\"highlightSetter('T38I2',false)\" onmouseout=\"highlightSetter('T38I2',true)\">可编程逻辑单元、</em><em class='similar T38I3' onmouseover=\"highlightSetter('T38I3',false)\" onmouseout=\"highlightSetter('T38I3',true)\">布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx���新的Virtex-7系列FPGA。而在以上FPGA的结构中,","replaceMap":{},"similar_word_count":50,"text":"<em class='similar'>上述FPGA三部分主要组成具体包括以下内容:</em><em class='similar'>可编程输入输出及内嵌RAM、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在以上FPGA的结构中,","suggest":{"synonyms":[],"keyword":["fpga","可编程","输入输出","内嵌","ram","逻辑单元","布线","逻辑功能","链接","可配置","存储形式","外部模块","dsp","lutram","carry"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000136790174611","author":"","university":"","source":"网页","title":"基于FPGA的数字信号处理算法研究与高效实现 - 道客巴巴","url":"http://www.doc88.com/p%2D1896842532586.html","reference":false,"similarScore":208.16666,"teacher":"","textWithDynamicClass":"的灵活配置,可以适配不同的电气标准与I/O 物理特性。(2)<em class='similar 40S72I4' onmouseover=\"highlightSetter('40S72I4',false)\" onmouseout=\"highlightSetter('40S72I4',true)\">基本可编程逻辑单元:</em><em class='similar 40S72I5' onmouseover=\"highlightSetter('40S72I5',false)\" onmouseout=\"highlightSetter('40S72I5',true)\">可编程逻辑单元是F P G A 的主要组成部分,</em>是实现逻辑功能的基本单元。<em class='similar 40S72I7' onmouseover=\"highlightSetter('40S72I7',false)\" onmouseout=\"highlightSetter('40S72I7',true)\">可编程逻辑单元主要由查找表和触发器组成。</em><em class='similar 40S72I8' onmouseover=\"highlightSetter('40S72I8',false)\" onmouseout=\"highlightSetter('40S72I8',true)\">查找表</em>一般完成纯组合逻辑功能。 F P G A 内部的寄","datatype":"webpage","clcs":[],"similarityPercentage":"34.1%","self":false,"text":"的灵活配置,可以适配不同的电气标准与I/O 物理特性。(2)<em class='similar'>基本可编程逻辑单元:</em><em class='similar'>可编程逻辑单元是F P G A 的主要组成部分,</em>是实现逻辑功能的基本单元。<em class='similar'>可编程逻辑单元主要由查找表和触发器组成。</em><em class='similar'>查找表</em>一般完成纯组合逻辑功能。 F P G A 内部的寄"},{"profession":false,"keywords":[],"year":"","docid":"9000088539211811","author":"","university":"","source":"网页","title":"FPGA入门教程","url":"","reference":false,"similarScore":136.66667,"teacher":"","textWithDynamicClass":"<em class='similar 40S73I0' onmouseover=\"highlightSetter('40S73I0',false)\" onmouseout=\"highlightSetter('40S73I0',true)\">结构与组成的可编程逻辑单元构成阵列,</em>又由可编程 I/O 单元围绕阵排成阵列的逻辑单元由布线通道中的可编程内连线连接起来实现一定的逻辑功能。<em class='similar 40S73I2' onmouseover=\"highlightSetter('40S73I2',false)\" onmouseout=\"highlightSetter('40S73I2',true)\"> FPGA 的可编程逻辑单元一般由查找表和触发器构成。</em>下图所示即为 Cyclone 系列 FPGA 芯 ","datatype":"webpage","clcs":[],"similarityPercentage":"36.0%","self":false,"text":"<em class='similar'>结构与组成的可编程逻辑单元构成阵列,</em>又由可编程 I/O 单元围绕阵排成阵列的逻辑单元由布线通道中的可编程内连线连接起来实现一定的逻辑功能。<em class='similar'> FPGA 的可编程逻辑单元一般由查找表和触发器构成。</em>下图所示即为 Cyclone 系列 FPGA 芯 "}],"textWithDynamicClass":"在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在以上FPGA的结构中,设计者及其支持软件中最关系、<em class='similar T39I3' onmouseover=\"highlightSetter('T39I3',false)\" onmouseout=\"highlightSetter('T39I3',true)\">最重要的是可编程逻辑单元,</em><em class='similar T39I4' onmouseover=\"highlightSetter('T39I4',false)\" onmouseout=\"highlightSetter('T39I4',true)\">它主要包括触发器和查找表两部分。</em><em class='similar T39I5' onmouseover=\"highlightSetter('T39I5',false)\" onmouseout=\"highlightSetter('T39I5',true)\">查找表</em>在功能实际上等效为一种特殊的静态存储器SRAM。","replaceMap":{},"similar_word_count":56,"text":"在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在以上FPGA的结构中,设计者及其支持软件中最关系、<em class='similar'>最重要的是可编程逻辑单元,</em><em class='similar'>它主要包括触发器和查找表两部分。</em><em class='similar'>查找表</em>在功能实际上等效为一种特殊的静态存储器SRAM。","suggest":{"synonyms":[],"keyword":["xilinx","virtex","7系列","fpga","设计者","支持软件","可编程","逻辑单元","触发器","查找表","等效","静态存储器","sram"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000177264690911","author":"","university":"","source":"网页","title":"FPGA基础知识","url":"https://wenku.baidu.com/view/4725085450ea551810a6f524ccbff121dd36c5c7","reference":false,"similarScore":163.85713,"teacher":"","textWithDynamicClass":"出就会根据规则改变状态,然后保持这种状态直到收到另一个触发。<em class='similar 41S74I6' onmouseover=\"highlightSetter('41S74I6',false)\" onmouseout=\"highlightSetter('41S74I6',true)\">触发器</em><em class='similar 41S74I7' onmouseover=\"highlightSetter('41S74I7',false)\" onmouseout=\"highlightSetter('41S74I7',true)\">(flip-flops)</em><em class='similar 41S74I8' onmouseover=\"highlightSetter('41S74I8',false)\" onmouseout=\"highlightSetter('41S74I8',true)\">电路相互关联,</em><em class='similar 41S74I9' onmouseover=\"highlightSetter('41S74I9',false)\" onmouseout=\"highlightSetter('41S74I9',true)\">从而为使用存芯片和微处理器的数字集成电路</em>(IC)形成逻辑门。它们可用来存储一比特的数据。该数据可表示音序器的状态、计数器的价值、在计算机存的ASCII字符或任何其他的信息。有几种不同类型的触发器<em class='similar 41S74I17' onmouseover=\"highlightSetter('41S74I17',false)\" onmouseout=\"highlightSetter('41S74I17',true)\">(flip-flops)</em>电路具有指","datatype":"webpage","clcs":[],"similarityPercentage":"49.7%","self":false,"text":"出就会根据规则改变状态,然后保持这种状态直到收到另一个触发。<em class='similar'>触发器</em><em class='similar'>(flip-flops)</em><em class='similar'>电路相互关联,</em><em class='similar'>从而为使用存芯片和微处理器的数字集成电路</em>(IC)形成逻辑门。它们可用来存储一比特的数据。该数据可表示音序器的状态、计数器的价值、在计算机存的ASCII字符或任何其他的信息。有几种不同类型的触发器<em class='similar'>(flip-flops)</em>电路具有指"}],"textWithDynamicClass":"可编程逻辑单元中的另一种重要资源FF(Flip Flop)<em class='similar T40I2' onmouseover=\"highlightSetter('T40I2',false)\" onmouseout=\"highlightSetter('T40I2',true)\">触发器,</em>其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。<em class='similar T40I7' onmouseover=\"highlightSetter('T40I7',false)\" onmouseout=\"highlightSetter('T40I7',true)\">触发器</em><em class='similar T40I8' onmouseover=\"highlightSetter('T40I8',false)\" onmouseout=\"highlightSetter('T40I8',true)\">(flip-flops)</em><em class='similar T40I9' onmouseover=\"highlightSetter('T40I9',false)\" onmouseout=\"highlightSetter('T40I9',true)\">电路之间是相互关联的,</em><em class='similar T40I10' onmouseover=\"highlightSetter('T40I10',false)\" onmouseout=\"highlightSetter('T40I10',true)\">从而形成数字集成电路的逻辑门。</em>在FPGA中存在有多种类型的FF,<em class='similar T40I12' onmouseover=\"highlightSetter('T40I12',false)\" onmouseout=\"highlightSetter('T40I12',true)\">如切换触发器、</em><em class='similar T40I13' onmouseover=\"highlightSetter('T40I13',false)\" onmouseout=\"highlightSetter('T40I13',true)\">重置触发器、</em>JK触发器和D信号触发器等。常见的触发器结构通常包含最多2个输入信号、时钟信号及输出信号。","replaceMap":{},"similar_word_count":58,"text":"可编程逻辑单元中的另一种重要资源FF(Flip Flop)<em class='similar'>触发器,</em>其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。<em class='similar'>触发器</em><em class='similar'>(flip-flops)</em><em class='similar'>电路之间是相互关联的,</em><em class='similar'>从而形成数字集成电路的逻辑门。</em>在FPGA中存在有多种类型的FF,<em class='similar'>如切换触发器、</em><em class='similar'>重置触发器、</em>JK触发器和D信号触发器等。常见的触发器结构通常包含最多2个输入信号、时钟信号及输出信号。","suggest":{"synonyms":[],"keyword":["可编程","逻辑单元","另一种","重要资源","ff","flip","flop","触发器","基本结构","2.4所","基本原理","数字电路","设计使用","双稳态","双稳态触发器","flops","相互关联","数字集成电路","逻辑门","fpga","切换","重置","jk"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000379746211","author":"王微","university":"","source":"大学生论文联合库","title":"基于plc的智能电梯控制系统设计方案","url":"","reference":false,"similarScore":171.30432,"teacher":"","textWithDynamicClass":"大的特点就是使用比较简单,可以用简洁的语句来描写复杂的设计,<em class='similar 42S75I3' onmouseover=\"highlightSetter('42S75I3',false)\" onmouseout=\"highlightSetter('42S75I3',true)\">因此Verilog语言是目前使用频率最高的一种硬件描述语言;</em><em class='similar 42S75I4' onmouseover=\"highlightSetter('42S75I4',false)\" onmouseout=\"highlightSetter('42S75I4',true)\">Verilog HDL既是一种行为级描述语言,</em><em class='similar 42S75I5' onmouseover=\"highlightSetter('42S75I5',false)\" onmouseout=\"highlightSetter('42S75I5',true)\">也可以认为是一种结构描述语言,</em>这意味着可以利用Verilog HDL语言对系统的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"34.3%","self":false,"text":"大的特点就是使用比较简单,可以用简洁的语句来描写复杂的设计,<em class='similar'>因此Verilog语言是目前使用频率最高的一种硬件描述语言;</em><em class='similar'>Verilog HDL既是一种行为级描述语言,</em><em class='similar'>也可以认为是一种结构描述语言,</em>这意味着可以利用Verilog HDL语言对系统的"},{"profession":false,"keywords":[],"year":"","docid":"9000109813760211","author":"","university":"","source":"网页","title":"QPSK调制信号的同步载波提取 - 道客巴巴","url":"http://www.doc88.com/p-4932194174692.html","reference":false,"similarScore":97.826065,"teacher":"","textWithDynamicClass":"inx 公司提供的 DDS 和 mult的 IP core,<em class='similar 42S76I2' onmouseover=\"highlightSetter('42S76I2',false)\" onmouseout=\"highlightSetter('42S76I2',true)\">用 Verilog HDL 硬件描述语言实现电路的行为级描述,</em>综合后的RTL级电路如图6所示。(上接第53页)[","datatype":"webpage","clcs":[],"similarityPercentage":"51.5%","self":false,"text":"inx 公司提供的 DDS 和 mult的 IP core,<em class='similar'>用 Verilog HDL 硬件描述语言实现电路的行为级描述,</em>综合后的RTL级电路如图6所示。(上接第53页)["}],"textWithDynamicClass":"<em class='similar T41I0' onmouseover=\"highlightSetter('T41I0',false)\" onmouseout=\"highlightSetter('T41I0',true)\">Verilog HDL是用以描述硬件行为级的一种高级硬件描述语言,</em>其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示逻辑电路图、逻辑表达式等,还可以表示数字逻辑系统所完成的逻辑功能。Verilog HDL是当前世界上最流行的两种硬件描述语言之一,","replaceMap":{},"similar_word_count":32,"text":"<em class='similar'>Verilog HDL是用以描述硬件行为级的一种高级硬件描述语言,</em>其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示逻辑电路图、逻辑表达式等,还可以表示数字逻辑系统所完成的逻辑功能。Verilog HDL是当前世界上最流行的两种硬件描述语言之一,","suggest":{"synonyms":[],"keyword":["verilog","hdl","用以","硬件","行为级","硬件描述语言","文本","字符","数字逻辑系统","逻辑行为","系统结构"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000102438231611","author":"","university":"","source":"网页","title":"串口接收模块的verilog设计 ","url":"","reference":false,"similarScore":616.2244,"teacher":"","textWithDynamicClass":"<em class='similar 43S78I0' onmouseover=\"highlightSetter('43S78I0',false)\" onmouseout=\"highlightSetter('43S78I0',true)\">用它可以表示逻辑电路图、</em><em class='similar 43S78I1' onmouseover=\"highlightSetter('43S78I1',false)\" onmouseout=\"highlightSetter('43S78I1',true)\">逻辑表达式,</em><em class='similar 43S78I2' onmouseover=\"highlightSetter('43S78I2',false)\" onmouseout=\"highlightSetter('43S78I2',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar 43S78I3' onmouseover=\"highlightSetter('43S78I3',false)\" onmouseout=\"highlightSetter('43S78I3',true)\"> Verilog HDL是目前世界上最流行的两种硬件描述语言之一,</em><em class='similar 43S78I4' onmouseover=\"highlightSetter('43S78I4',false)\" onmouseout=\"highlightSetter('43S78I4',true)\">是在20世纪80年代中期开发出来的。</em>Verilog HDL这种硬件描述语言被用于从算法","datatype":"webpage","clcs":[],"similarityPercentage":"85.6%","self":false,"text":"<em class='similar'>用它可以表示逻辑电路图、</em><em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar'> Verilog HDL是目前世界上最流行的两种硬件描述语言之一,</em><em class='similar'>是在20世纪80年代中期开发出来的。</em>Verilog HDL这种硬件描述语言被用于从算法"},{"profession":false,"keywords":[],"year":"","docid":"9000137920215311","author":"","university":"","source":"网页","title":"基于FPGA的除法器的设计与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D8049746941589.html","reference":false,"similarScore":606.7185,"teacher":"","textWithDynamicClass":"文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar 43S79I1' onmouseover=\"highlightSetter('43S79I1',false)\" onmouseout=\"highlightSetter('43S79I1',true)\">Verilog HDL 硬件描述语言可以表示逻辑电路图、</em><em class='similar 43S79I2' onmouseover=\"highlightSetter('43S79I2',false)\" onmouseout=\"highlightSetter('43S79I2',true)\">逻辑表达式,</em><em class='similar 43S79I3' onmouseover=\"highlightSetter('43S79I3',false)\" onmouseout=\"highlightSetter('43S79I3',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar 43S79I4' onmouseover=\"highlightSetter('43S79I4',false)\" onmouseout=\"highlightSetter('43S79I4',true)\">Verilog HDL是世界上最流行的两种硬件描述语言之一,</em><em class='similar 43S79I5' onmouseover=\"highlightSetter('43S79I5',false)\" onmouseout=\"highlightSetter('43S79I5',true)\">是在20世纪80年代中期 Gateway Design Automation 公司开发出来的。</em> Verilog 的设计初衷是成为一种基本语法与 ","datatype":"webpage","clcs":[],"similarityPercentage":"74.9%","self":false,"text":"文本���式来描述数字系统硬件的结构和行为的语言,<em class='similar'>Verilog HDL 硬件描述语言可以表示逻辑电路图、</em><em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar'>Verilog HDL是世界上最流行的两种硬件描述语言之一,</em><em class='similar'>是在20世纪80年代中期 Gateway Design Automation 公司开发出来的。</em> Verilog 的设计初衷是成为一种基本语法与 "},{"profession":false,"keywords":[],"year":"","docid":"9100005028085811","author":"","university":"","source":"百科","title":"Verilog HDL","url":"","reference":false,"similarScore":599.23584,"teacher":"","textWithDynamicClass":"e),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar 43S77I2' onmouseover=\"highlightSetter('43S77I2',false)\" onmouseout=\"highlightSetter('43S77I2',true)\">用它可以表示逻辑电路图、</em><em class='similar 43S77I3' onmouseover=\"highlightSetter('43S77I3',false)\" onmouseout=\"highlightSetter('43S77I3',true)\">逻辑表达式,</em><em class='similar 43S77I4' onmouseover=\"highlightSetter('43S77I4',false)\" onmouseout=\"highlightSetter('43S77I4',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar 43S77I5' onmouseover=\"highlightSetter('43S77I5',false)\" onmouseout=\"highlightSetter('43S77I5',true)\"> Verilog HDL和VHDL是目前世界上最流行的两种硬件描述语言,</em><em class='similar 43S77I6' onmouseover=\"highlightSetter('43S77I6',false)\" onmouseout=\"highlightSetter('43S77I6',true)\">都是在20世纪80年代中期开发出来的。</em>前者由Gateway Design Automat","datatype":"wiki","clcs":[],"similarityPercentage":"82.1%","self":false,"text":"e),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar'>用它可以表示逻辑电路图、</em><em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar'> Verilog HDL和VHDL是目前世界上最流行的两种硬件描述语言,</em><em class='similar'>都是在20世纪80年代中期开发出来的。</em>前者由Gateway Design Automat"},{"profession":false,"keywords":[],"year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","university":"","source":"","title":"Verilog HDL数字系统设计及实践","url":"","reference":false,"similarScore":406.50854,"teacher":"","textWithDynamicClass":"描述语言是一种以文本形式来描述数字系统硬件结构和行为的语言,<em class='similar 43S81I2' onmouseover=\"highlightSetter('43S81I2',false)\" onmouseout=\"highlightSetter('43S81I2',true)\">是目前世界上最流行的一种硬件描述语言,</em><em class='similar 43S81I3' onmouseover=\"highlightSetter('43S81I3',false)\" onmouseout=\"highlightSetter('43S81I3',true)\">用它可以表示逻辑电路图、</em><em class='similar 43S81I4' onmouseover=\"highlightSetter('43S81I4',false)\" onmouseout=\"highlightSetter('43S81I4',true)\">逻辑表达式,</em><em class='similar 43S81I5' onmouseover=\"highlightSetter('43S81I5',false)\" onmouseout=\"highlightSetter('43S81I5',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>本书共分11章,内容分别为:第1章 verilog","datatype":"book","clcs":[],"similarityPercentage":"76.7%","self":false,"text":"描述语言是一种以文本形式来描述数字系统硬件结构和行为的语言,<em class='similar'>是目前世界上最流行的一种硬件描述语言,</em><em class='similar'>用它可以表示逻辑电路图、</em><em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>本书共分11章,内容分别为:第1章 verilog"},{"profession":false,"keywords":[],"year":"2013","docid":"1000003812466811","author":"刘明达；刘晓洁","university":"武汉大学计算机学院","source":"计算机光盘软件与应用","title":"基于VerilogHDL的简单CPU设计","url":"","reference":false,"similarScore":311.96307,"teacher":"","textWithDynamicClass":"<em class='similar 43S82I0' onmouseover=\"highlightSetter('43S82I0',false)\" onmouseout=\"highlightSetter('43S82I0',true)\">1引言VerilogHDL【1】是一种硬件描述语言</em>(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar 43S82I4' onmouseover=\"highlightSetter('43S82I4',false)\" onmouseout=\"highlightSetter('43S82I4',true)\">用它可以表示逻辑电路图、</em><em class='similar 43S82I5' onmouseover=\"highlightSetter('43S82I5',false)\" onmouseout=\"highlightSetter('43S82I5',true)\">逻辑表达式,</em><em class='similar 43S82I6' onmouseover=\"highlightSetter('43S82I6',false)\" onmouseout=\"highlightSetter('43S82I6',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em>由于Verilog接近C语言的语言规则,适合进行F","datatype":"journal","clcs":["TP332；"],"similarityPercentage":"63.7%","self":false,"text":"<em class='similar'>1引言VerilogHDL【1】是一种硬件描述语言</em>(HDL:HardwareDiscriptionLanguage),是一种以文本形式来描述数字系统硬件的结构和行为的语言,<em class='similar'>用它可以表示逻辑电路图、</em><em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em>由于Verilog接近C语言的语言规则,适合进行F"},{"profession":false,"keywords":[],"year":"","docid":"9000100917757811","author":"","university":"","source":"网页","title":"sopc课程设计整体 ","url":"","reference":false,"similarScore":277.12115,"teacher":"","textWithDynamicClass":"简称Verilog)<em class='similar 43S80I1' onmouseover=\"highlightSetter('43S80I1',false)\" onmouseout=\"highlightSetter('43S80I1',true)\">是一种应用广泛的硬件描述语言,</em>是以文本形式来描述数字系统硬件的结构和行为的语言,可用于从算法级、门级到开关级的多种抽象层次的数字系统设计。它可以表示逻辑电路图、<em class='similar 43S80I6' onmouseover=\"highlightSetter('43S80I6',false)\" onmouseout=\"highlightSetter('43S80I6',true)\">逻辑表达式,</em><em class='similar 43S80I7' onmouseover=\"highlightSetter('43S80I7',false)\" onmouseout=\"highlightSetter('43S80I7',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em> Verilog HDL的产生和应用可追溯到20世","datatype":"webpage","clcs":[],"similarityPercentage":"72.9%","self":false,"text":"简称Verilog)<em class='similar'>是一种应用广泛的硬件描述语言,</em>是以文本形式来描述数字系统硬件的结构和行为的语言,可用于从算法级、门级到开关级的多种抽象层次的数字系统设计。它可以表示逻辑电路图、<em class='similar'>逻辑表达式,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em> Verilog HDL的产生和应用可追溯到20世"}],"textWithDynamicClass":"其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。<em class='similar T42I0' onmouseover=\"highlightSetter('T42I0',false)\" onmouseout=\"highlightSetter('T42I0',true)\">通过合理的使用该语言可以表示正确表示逻辑电路图、</em><em class='similar T42I1' onmouseover=\"highlightSetter('T42I1',false)\" onmouseout=\"highlightSetter('T42I1',true)\">逻辑表达式等,</em><em class='similar T42I2' onmouseover=\"highlightSetter('T42I2',false)\" onmouseout=\"highlightSetter('T42I2',true)\">还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar T42I3' onmouseover=\"highlightSetter('T42I3',false)\" onmouseout=\"highlightSetter('T42I3',true)\">Verilog HDL是当前世界上最流行的两种硬件描述语言之一,</em><em class='similar T42I4' onmouseover=\"highlightSetter('T42I4',false)\" onmouseout=\"highlightSetter('T42I4',true)\">都是在20世纪80年代中期开发出来的。</em>根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,由于Verilog HDL是机器可读的、人类可读的,","replaceMap":{},"similar_word_count":101,"text":"其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。<em class='similar'>通过合理的使用该语言可以表示正确表示逻辑电路图、</em><em class='similar'>逻辑表达式等,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar'>Verilog HDL是当前世界上最流行的两种硬件描述语言之一,</em><em class='similar'>都是在20世纪80年代中期开发出来的。</em>根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,由于Verilog HDL是机器可读的、人类可读的,","suggest":{"synonyms":[{"synonyms":["通行"],"keyword":"流行"}],"keyword":["逻辑电路图","逻辑表达式","数字逻辑系统","逻辑功能","verilog","hdl","流行","硬件描述语言","20","80","中期","ieee","电路系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000437751211","author":"","university":"","source":"大学生论文联合库","title":"数字频率发生器","url":"","reference":false,"similarScore":321.09988,"teacher":"","textWithDynamicClass":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar 44S83I7' onmouseover=\"highlightSetter('44S83I7',false)\" onmouseout=\"highlightSetter('44S83I7',true)\">由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar 44S83I8' onmouseover=\"highlightSetter('44S83I8',false)\" onmouseout=\"highlightSetter('44S83I8',true)\">因此它支持硬件设计的开发、</em>验证、<em class='similar 44S83I10' onmouseover=\"highlightSetter('44S83I10',false)\" onmouseout=\"highlightSetter('44S83I10',true)\">综合和测试;</em><em class='similar 44S83I11' onmouseover=\"highlightSetter('44S83I11',false)\" onmouseout=\"highlightSetter('44S83I11',true)\">硬件数据之间的通信;</em><em class='similar 44S83I12' onmouseover=\"highlightSetter('44S83I12',false)\" onmouseout=\"highlightSetter('44S83I12',true)\">硬件的设计、</em><em class='similar 44S83I13' onmouseover=\"highlightSetter('44S83I13',false)\" onmouseout=\"highlightSetter('44S83I13',true)\">维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"54.4%","self":false,"text":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar'>由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar'>因此它支持硬件设计的开发、</em>验证、<em class='similar'>综合和测试;</em><em class='similar'>硬件数据之间的通信;</em><em class='similar'>硬件的设计、</em><em class='similar'>维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的"},{"profession":false,"keywords":[],"year":"","docid":"9000118992500811","author":"","university":"","source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html","reference":false,"similarScore":155.05556,"teacher":"","textWithDynamicClass":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar 44S84I3' onmouseover=\"highlightSetter('44S84I3',false)\" onmouseout=\"highlightSetter('44S84I3',true)\">所以它支持硬件设计的开发、</em>验证、<em class='similar 44S84I5' onmouseover=\"highlightSetter('44S84I5',false)\" onmouseout=\"highlightSetter('44S84I5',true)\">综合和测试;</em><em class='similar 44S84I6' onmouseover=\"highlightSetter('44S84I6',false)\" onmouseout=\"highlightSetter('44S84I6',true)\">支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的","datatype":"webpage","clcs":[],"similarityPercentage":"55.4%","self":false,"text":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar'>所以它支持硬件设计的开发、</em>验证、<em class='similar'>综合和测试;</em><em class='similar'>支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的"}],"textWithDynamicClass":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar T43I1' onmouseover=\"highlightSetter('T43I1',false)\" onmouseout=\"highlightSetter('T43I1',true)\">由于Verilog HDL是机器可读的、</em><em class='similar T43I2' onmouseover=\"highlightSetter('T43I2',false)\" onmouseout=\"highlightSetter('T43I2',true)\">人类可读的,</em><em class='similar T43I3' onmouseover=\"highlightSetter('T43I3',false)\" onmouseout=\"highlightSetter('T43I3',true)\">所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar T43I5' onmouseover=\"highlightSetter('T43I5',false)\" onmouseout=\"highlightSetter('T43I5',true)\">合成和测试、</em><em class='similar T43I6' onmouseover=\"highlightSetter('T43I6',false)\" onmouseout=\"highlightSetter('T43I6',true)\">硬件设计数据的通信和维护、</em>修改[16]。","replaceMap":{},"similar_word_count":63,"text":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>修改[16]。","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"}],"keyword":["表示形式","verilog","hdl","机器","可读","硬件设计","正确性验证","硬件","设计数据","16"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":440.46054,"teacher":"","textWithDynamicClass":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar 45S86I5' onmouseover=\"highlightSetter('45S86I5',false)\" onmouseout=\"highlightSetter('45S86I5',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar 45S86I6' onmouseover=\"highlightSetter('45S86I6',false)\" onmouseout=\"highlightSetter('45S86I6',true)\">连续赋值语句,</em><em class='similar 45S86I7' onmouseover=\"highlightSetter('45S86I7',false)\" onmouseout=\"highlightSetter('45S86I7',true)\">在此表达式中寄存器和线网都可以连续驱动线网,</em><em class='similar 45S86I8' onmouseover=\"highlightSetter('45S86I8',false)\" onmouseout=\"highlightSetter('45S86I8',true)\">实现基本的结构化建模:</em><em class='similar 45S86I9' onmouseover=\"highlightSetter('45S86I9',false)\" onmouseout=\"highlightSetter('45S86I9',true)\">过程赋值语句,</em><em class='similar 45S86I10' onmouseover=\"highlightSetter('45S86I10',false)\" onmouseout=\"highlightSetter('45S86I10',true)\">在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar 45S86I11' onmouseover=\"highlightSetter('45S86I11',false)\" onmouseout=\"highlightSetter('45S86I11',true)\">实现基本的行为建模。</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"51.2%","self":false,"text":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>连续赋值语句,</em><em class='similar'>在此表达式中寄存器和线网都可以连续驱动线网,</em><em class='similar'>实现基本的结构化建模:</em><em class='similar'>过程赋值语句,</em><em class='similar'>在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar'>实现基本的行为建模。</em>"}],"textWithDynamicClass":"<em class='similar T44I0' onmouseover=\"highlightSetter('T44I0',false)\" onmouseout=\"highlightSetter('T44I0',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar T44I1' onmouseover=\"highlightSetter('T44I1',false)\" onmouseout=\"highlightSetter('T44I1',true)\">一种是连续型赋值语句,</em>通过使用连续性赋值表达式,<em class='similar T44I3' onmouseover=\"highlightSetter('T44I3',false)\" onmouseout=\"highlightSetter('T44I3',true)\">其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,</em><em class='similar T44I4' onmouseover=\"highlightSetter('T44I4',false)\" onmouseout=\"highlightSetter('T44I4',true)\">从而实现基本建模;</em><em class='similar T44I5' onmouseover=\"highlightSetter('T44I5',false)\" onmouseout=\"highlightSetter('T44I5',true)\">另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar T44I7' onmouseover=\"highlightSetter('T44I7',false)\" onmouseout=\"highlightSetter('T44I7',true)\">将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar T44I8' onmouseover=\"highlightSetter('T44I8',false)\" onmouseout=\"highlightSetter('T44I8',true)\">从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,每个模块都将用于描述该模块对应的功能描述逻辑[16]。这些模块将被开发者进行抽象,然后通过线网连接。","replaceMap":{},"similar_word_count":116,"text":"<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>通过使用连续性赋值表达式,<em class='similar'>其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,</em><em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,每个模块都将用于描述该模块对应的功能描述逻辑[16]。这些模块将被开发者进行抽象,然后通过线网连接。","suggest":{"synonyms":[],"keyword":["verilog","hdl","语句","连续型","赋值语句","连续性","赋值","表达式","寄存器","线网","连续驱动","fpga","线网结构","建模","另一种","过程性","行为级","网间","运算结果","rtl","行为描述"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000668314211","author":"戚薏","university":"","source":"大学生论文联合库","title":"数字锁相环模块设计与实现","url":"","reference":false,"similarScore":169.09091,"teacher":"","textWithDynamicClass":"<em class='similar 46S87I0' onmouseover=\"highlightSetter('46S87I0',false)\" onmouseout=\"highlightSetter('46S87I0',true)\">,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化描述方式也可以采用行为化的描述方式,或者二者结合。这些模块都被加工到一定的抽象级别,<em class='similar 46S87I4' onmouseover=\"highlightSetter('46S87I4',false)\" onmouseout=\"highlightSetter('46S87I4',true)\">然后通过线网连接。</em> Verilog HDL开发流程主要如下:1.设计","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"51.2%","self":false,"text":"<em class='similar'>,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化描述方式也可以采用行为化的描述方式,或者二者结合。这些模块都被加工到一定的抽象级别,<em class='similar'>然后通过线网连接。</em> Verilog HDL开发流程主要如下:1.设计"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":150.34091,"teacher":"","textWithDynamicClass":"<em class='similar 46S88I0' onmouseover=\"highlightSetter('46S88I0',false)\" onmouseout=\"highlightSetter('46S88I0',true)\">,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化的描述方式也可以采用行为化的描述方式,或者二者的结合。这些模块都被加工到一定的抽象级别,<em class='similar 46S88I4' onmouseover=\"highlightSetter('46S88I4',false)\" onmouseout=\"highlightSetter('46S88I4',true)\">然后通过线网互连。</em> verilog HDL语言可以通过编程语言接口程","datatype":"book","clcs":[],"similarityPercentage":"45.6%","self":false,"text":"<em class='similar'>,每一模块都有一个输入/输出接口和该模块相应的功能描述。</em>而该功能描述既可以采用结构化的描述方式也可以采用行为化的描述方式,或者二者的结合。这些模块都被加工到一定的抽象级别,<em class='similar'>然后通过线网互连。</em> verilog HDL语言可以通过编程语言接口程"}],"textWithDynamicClass":"从而实现基本建模;另一种是过程型赋值语句,在过程性赋值语句的行为级描述中,将使用寄存器来存储寄存器与线网间的运算结果,从而实现行为级的描述建模。一个完整的RTL级行为描述设计通常会包含多个模块,<em class='similar T45I0' onmouseover=\"highlightSetter('T45I0',false)\" onmouseout=\"highlightSetter('T45I0',true)\">每个模块都将用于描述该模块对应的功能描述逻辑</em>[16]。这些模块将被开发者进行抽象,<em class='similar T45I3' onmouseover=\"highlightSetter('T45I3',false)\" onmouseout=\"highlightSetter('T45I3',true)\">然后通过线网连接。</em>","replaceMap":{},"similar_word_count":31,"text":"从而实现基本建模;另一种是过程型赋值语句,在过程性赋值语句的行为级描述中,将使用寄存器来存储寄存器与线网间的运算结果,从而实现行为级的描述建模。一个完整的RTL级行为描述设计通常会包含多个模块,<em class='similar'>每个模块都将用于描述该模块对应的功能描述逻辑</em>[16]。这些模块将被开发者进行抽象,<em class='similar'>然后通过线网连接。</em>","suggest":{"synonyms":[{"synonyms":["笼统"],"keyword":"抽象"}],"keyword":["描述逻辑","16","开发者","抽象","线网"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203286107511","author":"","university":"","source":"网页","title":"超大规模集成电路设计","url":"http://wenku.baidu.com/view/3ff28c97f61fb7360b4c659d.html","reference":false,"similarScore":70.37549,"teacher":"","textWithDynamicClass":"CalibreTape-outRTL编码设计(1)RTL <em class='similar 47S91I4' onmouseover=\"highlightSetter('47S91I4',false)\" onmouseout=\"highlightSetter('47S91I4',true)\">(寄存器传输级)</em><em class='similar 47S91I5' onmouseover=\"highlightSetter('47S91I5',false)\" onmouseout=\"highlightSetter('47S91I5',true)\">设计用硬件描述语言HDL</em><em class='similar 47S91I6' onmouseover=\"highlightSetter('47S91I6',false)\" onmouseout=\"highlightSetter('47S91I6',true)\">(Verilog、</em>VHDL)来描述硬件描述语言(Hardware ","datatype":"webpage","clcs":[],"similarityPercentage":"39.1%","self":false,"text":"CalibreTape-outRTL编码设计(1)RTL <em class='similar'>(寄存器传输级)</em><em class='similar'>设计用硬件描述语言HDL</em><em class='similar'>(Verilog、</em>VHDL)来描述硬件描述语言(Hardware "},{"profession":false,"keywords":[],"year":"2009","docid":"1900000860122211","author":"樊运晓；罗云编著","university":"","source":"化学工业出版社","title":"系统安全工程","url":"","reference":false,"similarScore":43.478256,"teacher":"","textWithDynamicClass":"定模块的控制信号和输入输出数据接口。模块的实现细节明确以后,<em class='similar 47S89I5' onmouseover=\"highlightSetter('47S89I5',false)\" onmouseout=\"highlightSetter('47S89I5',true)\">用硬件描述语言 Verilog 编写 RTL</em>(Register Translate Level","datatype":"book","clcs":[],"similarityPercentage":"39.5%","self":false,"text":"定模块的控制信号和输入输出数据接口。模块的实现细节明确以后,<em class='similar'>用硬件描述语言 Verilog 编写 RTL</em>(Register Translate Level"},{"profession":false,"keywords":[],"year":"","docid":"9000179275463811","author":"","university":"","source":"网页","title":"基于Verilog的8051微控制器中断系统的设计---优秀毕业论文 参考文献 可复..","url":"https://www.docin.com/p%2D827308466.html","reference":false,"similarScore":43.478256,"teacher":"","textWithDynamicClass":"不同的设计数据库等。本课题完成电路原理分析及子模块设计之后,<em class='similar 47S90I7' onmouseover=\"highlightSetter('47S90I7',false)\" onmouseout=\"highlightSetter('47S90I7',true)\">用硬件描述语言Verilog 编写 RTL</em>(Register Translate Level","datatype":"webpage","clcs":[],"similarityPercentage":"39.5%","self":false,"text":"不同的设计数据库等。本课题完成电路原理分析及子模块设计之后,<em class='similar'>用硬件描述语言Verilog 编写 RTL</em>(Register Translate Level"}],"textWithDynamicClass":"而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,<em class='similar T46I2' onmouseover=\"highlightSetter('T46I2',false)\" onmouseout=\"highlightSetter('T46I2',true)\">首选通过使用Verilog HDL等硬件描述语言编写寄存器传输级</em>(RTL)代码来描述电路设计的行为级逻辑即RTL级描述。RTL级描述通过逻辑综合得到电路网表(Netlist),通过对网表进行优化、技术映射、FPGA布局布线等操作后,最后生成FPGA配置数据(bitstream)。其中对于大型原型验证系统最为关注的前端工程就是逻辑综合和技术映射,","replaceMap":{},"similar_word_count":31,"text":"而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,<em class='similar'>首选通过使用Verilog HDL等硬件描述语言编写寄存器传输级</em>(RTL)代码来描述电路设计的行为级逻辑即RTL级描述。RTL级描述通过逻辑综合得到电路网表(Netlist),通过对网表进行优化、技术映射、FPGA布局布线等操作后,最后生成FPGA配置数据(bitstream)。其中对于大型原型验证系统最为关注的前端工程就是逻辑综合和技术映射,","suggest":{"synonyms":[{"synonyms":["编辑"],"keyword":"编写"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["fpga","设计流程","高密度","原型验证","首选","verilog","hdl","硬件描述语言","编写","寄存器传输级","rtl","电路设计","行为级","逻辑","逻辑综合","电路网表","netlist","网表","映射","布局布线","配置数据","bitstream"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000202005048511","author":"","university":"","source":"网页","title":"RTL 和 综合 等一些基本概念的��记_gioc的专栏-CSDN博客","url":"https://blog.csdn.net/gioc/article/details/84648115#insertcode","reference":false,"similarScore":186.65845,"teacher":"","textWithDynamicClass":"法级描述更明确具体，因此它被用于很多的实际系统的设计中。2、<em class='similar 48S92I5' onmouseover=\"highlightSetter('48S92I5',false)\" onmouseout=\"highlightSetter('48S92I5',true)\">综合就是从采用 HDL语言描述的寄存器传输级</em><em class='similar 48S92I6' onmouseover=\"highlightSetter('48S92I6',false)\" onmouseout=\"highlightSetter('48S92I6',true)\">(RTL)</em><em class='similar 48S92I7' onmouseover=\"highlightSetter('48S92I7',false)\" onmouseout=\"highlightSetter('48S92I7',true)\">电路模型构造出门级网表的过程。</em>3、 EDA等固定名词英文全称（按英文顺序排列） ","datatype":"webpage","clcs":[],"similarityPercentage":"54.9%","self":false,"text":"法级描述更明确具体，因此它被用于很多的实际系统的设计中。2、<em class='similar'>综合就是从采用 HDL语言描述的寄存器传输级</em><em class='similar'>(RTL)</em><em class='similar'>电路模型构造出门级网表的过程。</em>3、 EDA等固定名词英文全称（按英文顺序排列） "},{"profession":false,"keywords":[],"year":"","docid":"9000181240768511","author":"","university":"","source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html","reference":false,"similarScore":159.9017,"teacher":"","textWithDynamicClass":"erence Manual. Synopsys3什么是综合?<em class='similar 48S93I2' onmouseover=\"highlightSetter('48S93I2',false)\" onmouseout=\"highlightSetter('48S93I2',true)\">n n综合是从采用Verilog HDL描述的寄存器传输级</em><em class='similar 48S93I3' onmouseover=\"highlightSetter('48S93I3',false)\" onmouseout=\"highlightSetter('48S93I3',true)\">(RTL)</em><em class='similar 48S93I4' onmouseover=\"highlightSetter('48S93I4',false)\" onmouseout=\"highlightSetter('48S93I4',true)\">电路模型构造出门级网表的过程。</em>n 综合可能有个中间步骤,生成的网表是由一些RTL","datatype":"webpage","clcs":[],"similarityPercentage":"47.0%","self":false,"text":"erence Manual. Synopsys3什么是综合?<em class='similar'>n n综合是从采用Verilog HDL描述的寄存器传输级</em><em class='similar'>(RTL)</em><em class='similar'>电路模型构造出门级网表的过程。</em>n 综合可能有个中间步骤,生成的网表是由一些RTL"}],"textWithDynamicClass":"<em class='similar T47I0' onmouseover=\"highlightSetter('T47I0',false)\" onmouseout=\"highlightSetter('T47I0',true)\">对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级</em><em class='similar T47I1' onmouseover=\"highlightSetter('T47I1',false)\" onmouseout=\"highlightSetter('T47I1',true)\">(RTL)</em><em class='similar T47I2' onmouseover=\"highlightSetter('T47I2',false)\" onmouseout=\"highlightSetter('T47I2',true)\">电路抽象级模型构造出对应的门级电路网表的过程。</em>","replaceMap":{},"similar_word_count":68,"text":"<em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级</em><em class='similar'>(RTL)</em><em class='similar'>电路抽象级模型构造出对应的门级电路网表的过程。</em>","suggest":{"synonyms":[{"synonyms":["笼统"],"keyword":"抽象"}],"keyword":["fpga","数字电路设计","硬件描述语言","寄存器传输级","rtl","抽象","模型构造","电路网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000191352255511","author":"","university":"","source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html","reference":false,"similarScore":515.34033,"teacher":"","textWithDynamicClass":"<em class='similar 49S94I0' onmouseover=\"highlightSetter('49S94I0',false)\" onmouseout=\"highlightSetter('49S94I0',true)\">高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar 49S94I1' onmouseover=\"highlightSetter('49S94I1',false)\" onmouseout=\"highlightSetter('49S94I1',true)\">从算法表示、</em><em class='similar 49S94I2' onmouseover=\"highlightSetter('49S94I2',false)\" onmouseout=\"highlightSetter('49S94I2',true)\">行为描述转换到寄存器传输级</em><em class='similar 49S94I3' onmouseover=\"highlightSetter('49S94I3',false)\" onmouseout=\"highlightSetter('49S94I3',true)\">(将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar 49S94I4' onmouseover=\"highlightSetter('49S94I4',false)\" onmouseout=\"highlightSetter('49S94I4',true)\">从算法表示、</em><em class='similar 49S94I5' onmouseover=\"highlightSetter('49S94I5',false)\" onmouseout=\"highlightSetter('49S94I5',true)\">行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合:<em class='similar 49S94I7' onmouseover=\"highlightSetter('49S94I7',false)\" onmouseout=\"highlightSetter('49S94I7',true)\">)◆逻辑综合:</em><em class='similar 49S94I8' onmouseover=\"highlightSetter('49S94I8',false)\" onmouseout=\"highlightSetter('49S94I8',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"49.1%","self":false,"text":"<em class='similar'>高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em><em class='similar'>(将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合:<em class='similar'>)◆逻辑综合:</em><em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转"},{"profession":false,"keywords":[],"year":"","docid":"9000181521137511","author":"","university":"","source":"网页","title":"Verilog期末复习题","url":"https://www.docin.com/p%2D2585143971.html","reference":false,"similarScore":455.06827,"teacher":"","textWithDynamicClass":"<em class='similar 49S98I0' onmouseover=\"highlightSetter('49S98I0',false)\" onmouseout=\"highlightSetter('49S98I0',true)\">逻辑综合:</em><em class='similar 49S98I1' onmouseover=\"highlightSetter('49S98I1',false)\" onmouseout=\"highlightSetter('49S98I1',true)\">将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar 49S98I2' onmouseover=\"highlightSetter('49S98I2',false)\" onmouseout=\"highlightSetter('49S98I2',true)\">包括行为综合,</em><em class='similar 49S98I3' onmouseover=\"highlightSetter('49S98I3',false)\" onmouseout=\"highlightSetter('49S98I3',true)\">、逻辑综合:</em><em class='similar 49S98I4' onmouseover=\"highlightSetter('49S98I4',false)\" onmouseout=\"highlightSetter('49S98I4',true)\">将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar 49S98I5' onmouseover=\"highlightSetter('49S98I5',false)\" onmouseout=\"highlightSetter('49S98I5',true)\">包括行为综合,</em><em class='similar 49S98I6' onmouseover=\"highlightSetter('49S98I6',false)\" onmouseout=\"highlightSetter('49S98I6',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar 49S98I8' onmouseover=\"highlightSetter('49S98I8',false)\" onmouseout=\"highlightSetter('49S98I8',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar 49S98I10' onmouseover=\"highlightSetter('49S98I10',false)\" onmouseout=\"highlightSetter('49S98I10',true)\">逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。","datatype":"webpage","clcs":[],"similarityPercentage":"42.1%","self":false,"text":"<em class='similar'>逻辑综合:</em><em class='similar'>将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar'>包括行为综合,</em><em class='similar'>、逻辑综合:</em><em class='similar'>将较高层的设计描述自动转化为较低层次描述的过程,</em><em class='similar'>包括行为综合,</em><em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。<em class='similar'>逻辑综合和版图综合或结构综合,</em>最后生成电路逻辑网表的过程。"},{"profession":false,"keywords":[],"year":"","docid":"9000189917812511","author":"","university":"","source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html","reference":false,"similarScore":337.97867,"teacher":"","textWithDynamicClass":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar 49S95I2' onmouseover=\"highlightSetter('49S95I2',false)\" onmouseout=\"highlightSetter('49S95I2',true)\">将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar 49S95I3' onmouseover=\"highlightSetter('49S95I3',false)\" onmouseout=\"highlightSetter('49S95I3',true)\">从算法表示、</em><em class='similar 49S95I4' onmouseover=\"highlightSetter('49S95I4',false)\" onmouseout=\"highlightSetter('49S95I4',true)\">行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合◆逻辑综合:<em class='similar 49S95I6' onmouseover=\"highlightSetter('49S95I6',false)\" onmouseout=\"highlightSetter('49S95I6',true)\"> RTL级描述转换到逻辑门级</em>(包括触发器)<em class='similar 49S95I8' onmouseover=\"highlightSetter('49S95I8',false)\" onmouseout=\"highlightSetter('49S95I8',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"49.7%","self":false,"text":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar'>将较高层次的设计描述自动转化为较低层次描述的过程◆行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL)◆逻辑综合◆逻辑综合:<em class='similar'> RTL级描述转换到逻辑门级</em>(包括触发器)<em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)◆版图综合或结构综合:从逻辑门表示转"},{"profession":false,"keywords":[],"year":"","docid":"9000189446884611","author":"","university":"","source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html","reference":false,"similarScore":306.67603,"teacher":"","textWithDynamicClass":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar 49S96I8' onmouseover=\"highlightSetter('49S96I8',false)\" onmouseout=\"highlightSetter('49S96I8',true)\">将较高层次的设计描述自动转化为较低层次描述的过程行为综合:</em><em class='similar 49S96I9' onmouseover=\"highlightSetter('49S96I9',false)\" onmouseout=\"highlightSetter('49S96I9',true)\">从算法表示、</em><em class='similar 49S96I10' onmouseover=\"highlightSetter('49S96I10',false)\" onmouseout=\"highlightSetter('49S96I10',true)\">行为描述转换到寄存器传输级</em>(RTL);<em class='similar 49S96I12' onmouseover=\"highlightSetter('49S96I12',false)\" onmouseout=\"highlightSetter('49S96I12',true)\">逻辑综合:</em><em class='similar 49S96I13' onmouseover=\"highlightSetter('49S96I13',false)\" onmouseout=\"highlightSetter('49S96I13',true)\">RTL级描述转换到逻辑门级</em>(包括触发器);版图综合或结构综合:从逻辑门表示转","datatype":"webpage","clcs":[],"similarityPercentage":"50.3%","self":false,"text":"描述语言与软件编程语言有本质的区别综合(Synthesis)<em class='similar'>将较高层次的设计描述自动转化为较低层次描述的过程行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL);<em class='similar'>逻辑综合:</em><em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器);版图综合或结构综合:从逻辑门表示转"}],"textWithDynamicClass":"<em class='similar T48I0' onmouseover=\"highlightSetter('T48I0',false)\" onmouseout=\"highlightSetter('T48I0',true)\">综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,</em><em class='similar T48I1' onmouseover=\"highlightSetter('T48I1',false)\" onmouseout=\"highlightSetter('T48I1',true)\">综合细分行为综合与逻辑综合,</em><em class='similar T48I2' onmouseover=\"highlightSetter('T48I2',false)\" onmouseout=\"highlightSetter('T48I2',true)\">行为综合是从算法表示、</em><em class='similar T48I3' onmouseover=\"highlightSetter('T48I3',false)\" onmouseout=\"highlightSetter('T48I3',true)\">行为描述转换到RTL级,</em>如HLS综合;<em class='similar T48I5' onmouseover=\"highlightSetter('T48I5',false)\" onmouseout=\"highlightSetter('T48I5',true)\">而逻辑综合是从RTL级描述转换到包含有多级触发的逻辑门级的过程,</em>也是在FPGA片上资源估算过程中最关注的步骤,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。","replaceMap":{},"similar_word_count":117,"text":"<em class='similar'>综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,</em><em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>如HLS综合;<em class='similar'>而逻辑综合是从RTL级描述转换到包含有多级触发的逻辑门级的过程,</em>也是在FPGA片上资源估算过程中最关注的步骤,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。","suggest":{"synonyms":[{"synonyms":["经过"],"keyword":"经由"},{"synonyms":["一双"],"keyword":"一对"}],"keyword":["综合的","高层","集成电路","逻辑的","经由","自动化工具","低层次","描述的","细分","逻辑综合","行为描述","rtl","hls","多级","触发","逻辑门","fpga","资源估算","后续","一对","高密度","原型验证系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110384254911","author":"","university":"","source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9","reference":false,"similarScore":485.1764,"teacher":"","textWithDynamicClass":"<em class='similar 50S100I0' onmouseover=\"highlightSetter('50S100I0',false)\" onmouseout=\"highlightSetter('50S100I0',true)\">它生成的网表是由导线相互连接的寄存器传输级功能块</em>(如触发器、算术逻辑单元和多路选择器)组成的。此时,<em class='similar 50S100I5' onmouseover=\"highlightSetter('50S100I5',false)\" onmouseout=\"highlightSetter('50S100I5',true)\">就要使用RTL模块构造器的程序了,</em><em class='similar 50S100I6' onmouseover=\"highlightSetter('50S100I6',false)\" onmouseout=\"highlightSetter('50S100I6',true)\">该构造器用来针对用户指定的目标工艺从预定元件库中构造或获取每一个必需的RTL功能模块。</em>产生门级网表以后,<em class='similar 50S100I8' onmouseover=\"highlightSetter('50S100I8',false)\" onmouseout=\"highlightSetter('50S100I8',true)\">逻辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。</em>这些面积和时序约束也可以用来指导模块构造器恰当地选","datatype":"webpage","clcs":[],"similarityPercentage":"44.9%","self":false,"text":"<em class='similar'>它生成的网表是由导线相互连接的寄存器传输级功能块</em>(如触发器、算术逻辑单元和多路选择器)组成的。此时,<em class='similar'>就要使用RTL模块构造器的程序了,</em><em class='similar'>该构造器用来针对用户指定的目标工艺从预定元件库中构造或获取每一个必需的RTL功能模块。</em>产生门级网表以后,<em class='similar'>逻辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。</em>这些面积和时序约束也可以用来指导模块构造器恰当地选"}],"textWithDynamicClass":"综合整个ASIC设计流程的中间步骤,<em class='similar T49I1' onmouseover=\"highlightSetter('T49I1',false)\" onmouseout=\"highlightSetter('T49I1',true)\">综合后生成的网表文件,</em><em class='similar T49I2' onmouseover=\"highlightSetter('T49I2',false)\" onmouseout=\"highlightSetter('T49I2',true)\">其本质是基于导线来进行连接的RTL级功能块</em>(如FF、LB和MUX等)所组成。<em class='similar T49I6' onmouseover=\"highlightSetter('T49I6',false)\" onmouseout=\"highlightSetter('T49I6',true)\">而这里一般就需要使用RTL模块构造器来通过用户所注明或进一步指定的目标工艺元件库中构造或从已有库中获取必须的RTL级功能模块。</em>综合产生网表文件后,<em class='similar T49I8' onmouseover=\"highlightSetter('T49I8',false)\" onmouseout=\"highlightSetter('T49I8',true)\">逻辑优化器会读入网表,</em><em class='similar T49I9' onmouseover=\"highlightSetter('T49I9',false)\" onmouseout=\"highlightSetter('T49I9',true)\">并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。</em>并且,这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。","replaceMap":{},"similar_word_count":143,"text":"综合整个ASIC设计流程的中间步骤,<em class='similar'>综合后生成的网表文件,</em><em class='similar'>其本质是基于导线来进行连接的RTL级功能块</em>(如FF、LB和MUX等)所组成。<em class='similar'>而这里一般就需要使用RTL模块构造器来通过用户所注明或进一步指定的目标工艺元件库中构造或从已有库中获取必须的RTL级功能模块。</em>综合产生网表文件后,<em class='similar'>逻辑优化器会读入网表,</em><em class='similar'>并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。</em>并且,这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。","suggest":{"synonyms":[{"synonyms":["白叟"],"keyword":"后生"},{"synonyms":["注脚"],"keyword":"注明"},{"synonyms":["上钩"],"keyword":"入网"}],"keyword":["asic","设计流程","后生","网表文件","导线","rtl","功能块","ff","lb","mux","构造器","注明","目标工艺","元件库","功能模块","逻辑","优化器","会读","入网","用户配置","fpga","片上资源","时序约束","网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000878391411","author":"","university":"","source":"大学生论文联合库","title":"电路综合学习资料","url":"","reference":false,"similarScore":164.87802,"teacher":"","textWithDynamicClass":"辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。<em class='similar 51S101I3' onmouseover=\"highlightSetter('51S101I3',false)\" onmouseout=\"highlightSetter('51S101I3',true)\">这些面积和时序约束也可以用来指导RTL模块构造器适当的选取和生成RTL级功能块。</em>综合的过程如下图:读入设计及其子设计设置顶层的设计","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"47.1%","self":false,"text":"辑优化器读入网表并以用户指定的面积和时序约束为目标优化网表。<em class='similar'>这些面积和时序约束也可以用来指导RTL模块构造器适当的选取和生成RTL级功能块。</em>综合的过程如下图:读入设计及其子设计设置顶层的设计"}],"textWithDynamicClass":"并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。并且,<em class='similar T50I0' onmouseover=\"highlightSetter('T50I0',false)\" onmouseout=\"highlightSetter('T50I0',true)\">这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。</em>既然综合器的目标是能将硬件描述语言转换成为底层的门级网表,那么综合器必定有一种映射的机制,能够实现Verilog代码中的某些变量、组件映射成对应的硬件元件,这种映射机制将是后续我们基于机器学习进行资源映射方法研究所重点关注的对象。","replaceMap":{},"similar_word_count":44,"text":"并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。并且,<em class='similar'>这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。</em>既然综合器的目标是能将硬件描述语言转换成为底层的门级网表,那么综合器必定有一种映射的机制,能够实现Verilog代码中的某些变量、组件映射成对应的硬件元件,这种映射机制将是后续我们基于机器学习进行资源映射方法研究所重点关注的对象。","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["资源约束","面积约束","时序约束","构造器","rtl","功能块","综合器","硬件描述","语言转换","底层","网表","映射","verilog","硬件","映射机制","后续","机器学习","映射方法","重点关注"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":129.70589,"teacher":"","textWithDynamicClass":"络表,如锁存器(latch)、触发器(flip一n叩)等。.<em class='similar 52S102I7' onmouseover=\"highlightSetter('52S102I7',false)\" onmouseout=\"highlightSetter('52S102I7',true)\"> RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。</em>.逻辑优化器读取未优化的门级网表,并按照用户设置的","datatype":"book","clcs":[],"similarityPercentage":"51.9%","self":false,"text":"络表,如锁存器(latch)、触发器(flip一n叩)等。.<em class='similar'> RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。</em>.逻辑优化器读取未优化的门级网表,并按照用户设置的"}],"textWithDynamicClass":"<em class='similar T51I0' onmouseover=\"highlightSetter('T51I0',false)\" onmouseout=\"highlightSetter('T51I0',true)\">②RTL模块构造器从用户指定或综合器所携带的工艺库中里提取并生成对应的模块;</em>","replaceMap":{},"similar_word_count":38,"text":"<em class='similar'>②RTL模块构造器从用户指定或综合器所携带的工艺库中里提取并生成对应的模块;</em>","suggest":{"synonyms":[{"synonyms":["率领"],"keyword":"携带"}],"keyword":["rtl","构造器","综合器","携带","工艺库"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":230.35712,"teacher":"","textWithDynamicClass":"RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。<em class='similar 53S103I7' onmouseover=\"highlightSetter('53S103I7',false)\" onmouseout=\"highlightSetter('53S103I7',true)\">.逻辑优化器读取未优化的门级网表,</em><em class='similar 53S103I8' onmouseover=\"highlightSetter('53S103I8',false)\" onmouseout=\"highlightSetter('53S103I8',true)\">并按照用户设置的面积和时序约束,</em><em class='similar 53S103I9' onmouseover=\"highlightSetter('53S103I9',false)\" onmouseout=\"highlightSetter('53S103I9',true)\">进行优化。</em>图5一2给出了基本verilog HDL单元(el","datatype":"book","clcs":[],"similarityPercentage":"67.8%","self":false,"text":"RTL模块构造器从用户指定的预定义库里提取并生成RTL模块。<em class='similar'>.逻辑优化器读取未优化的门级网表,</em><em class='similar'>并按照用户设置的面积和时序约束,</em><em class='similar'>进行优化。</em>图5一2给出了基本verilog HDL单元(el"}],"textWithDynamicClass":"<em class='similar T52I0' onmouseover=\"highlightSetter('T52I0',false)\" onmouseout=\"highlightSetter('T52I0',true)\">③逻辑优化器读取未优化的门级网表,</em><em class='similar T52I1' onmouseover=\"highlightSetter('T52I1',false)\" onmouseout=\"highlightSetter('T52I1',true)\">并按照用户所期望的布局后面积和系统运行各个信号的时序约束,</em><em class='similar T52I2' onmouseover=\"highlightSetter('T52I2',false)\" onmouseout=\"highlightSetter('T52I2',true)\">进行进一步的优化;</em>","replaceMap":{},"similar_word_count":55,"text":"<em class='similar'>③逻辑优化器读取未优化的门级网表,</em><em class='similar'>并按照用户所期望的布局后面积和系统运行各个信号的时序约束,</em><em class='similar'>进行进一步的优化;</em>","suggest":{"synonyms":[{"synonyms":["构造"],"keyword":"布局"}],"keyword":["逻辑","优化器","读取","优化的","网表","布局","系统运行","时序约束"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":240.34962,"teacher":"","textWithDynamicClass":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar 54S104I8' onmouseover=\"highlightSetter('54S104I8',false)\" onmouseout=\"highlightSetter('54S104I8',true)\">是如何转换成硬件的;</em>.常量(oonstants)<em class='similar 54S104I11' onmouseover=\"highlightSetter('54S104I11',false)\" onmouseout=\"highlightSetter('54S104I11',true)\">是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar 54S104I14' onmouseover=\"highlightSetter('54S104I14',false)\" onmouseout=\"highlightSetter('54S104I14',true)\">是如何转换成硬件的。</em>常量数据类型(net、register、param","datatype":"book","clcs":[],"similarityPercentage":"82.9%","self":false,"text":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar'>是如何转换成硬件的;</em>.常量(oonstants)<em class='similar'>是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar'>是如何转换成硬件的。</em>常量数据类型(net、register、param"},{"profession":false,"keywords":[],"year":"","docid":"9000055794445311","author":"","university":"","source":"网页","title":"浅析Verilog硬件原语pdf下载_爱问共享资料","url":"http://ishare.iask.sina.com.cn/f/25351732.html","reference":false,"similarScore":169.72028,"teacher":"","textWithDynamicClass":"这里我们研究Verilog的硬件语义是为了分析以下几个问题:<em class='similar 54S105I2' onmouseover=\"highlightSetter('54S105I2',false)\" onmouseout=\"highlightSetter('54S105I2',true)\">)数据类型如何变成硬件?</em><em class='similar 54S105I3' onmouseover=\"highlightSetter('54S105I3',false)\" onmouseout=\"highlightSetter('54S105I3',true)\">)常量如何映射成逻辑值?</em><em class='similar 54S105I4' onmouseover=\"highlightSetter('54S105I4',false)\" onmouseout=\"highlightSetter('54S105I4',true)\">)语句如何转变成硬件?</em>逻辑值体系逻辑值体系n硬件建模中常用的值有:逻辑逻","datatype":"webpage","clcs":[],"similarityPercentage":"58.5%","self":false,"text":"这里我们研究Verilog的硬件语义是为了分析以下几个问题:<em class='similar'>)数据类型如何变成硬件?</em><em class='similar'>)常量如何映射成逻辑值?</em><em class='similar'>)语句如何转变成硬件?</em>逻辑值体系逻辑值体系n硬件建模中常用的值有:逻辑逻"}],"textWithDynamicClass":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,<em class='similar T53I1' onmouseover=\"highlightSetter('T53I1',false)\" onmouseout=\"highlightSetter('T53I1',true)\">更加关注于Verilog HDL语句是如何转换成实际硬件器件的,</em>如:<em class='similar T53I3' onmouseover=\"highlightSetter('T53I3',false)\" onmouseout=\"highlightSetter('T53I3',true)\">数据类型是如何映射成硬件的,</em><em class='similar T53I4' onmouseover=\"highlightSetter('T53I4',false)\" onmouseout=\"highlightSetter('T53I4',true)\">常量是如何转换成逻辑数值的,</em><em class='similar T53I5' onmouseover=\"highlightSetter('T53I5',false)\" onmouseout=\"highlightSetter('T53I5',true)\">语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。","replaceMap":{},"similar_word_count":71,"text":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,<em class='similar'>更加关注于Verilog HDL语句是如何转换成实际硬件器件的,</em>如:<em class='similar'>数据类型是如何映射成硬件的,</em><em class='similar'>常量是如何转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["聚焦","机器","学习资源","估算模型","verilog","hdl","语句","硬件","器件","数据类型","映射","常量","逻辑","详细分析","综合原则"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":302.41382,"teacher":"","textWithDynamicClass":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar 55S106I3' onmouseover=\"highlightSetter('55S106I3',false)\" onmouseout=\"highlightSetter('55S106I3',true)\">(即连续赋值语句产生作用后,</em><em class='similar 55S106I4' onmouseover=\"highlightSetter('55S106I4',false)\" onmouseout=\"highlightSetter('55S106I4',true)\">赋值表达式中信号的任何变化都将立即反映到被赋值线网型数据的取值上,</em>这也是我们有时会使用&quot;连续驱动&quot;这个术语的原因),而在过程赋值语句情况下,只有在过程赋值语句被执行时才执行赋值操作,语句执行完后被赋值变量的取值不再受到赋值表达式的影响。<em class='similar 55S106I9' onmouseover=\"highlightSetter('55S106I9',false)\" onmouseout=\"highlightSetter('55S106I9',true)\">下面是连续赋值语句的完</em>","datatype":"book","clcs":[],"similarityPercentage":"39.3%","self":false,"text":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar'>(即连续赋值语句产生作用后,</em><em class='similar'>赋值表达式中信号的任何变化都将立即反映到被赋值线网型数据的取值上,</em>这也是我们有时会使用&quot;连续驱动&quot;这个术语的原因),而在过程赋值语句情况下,只有在过程赋值语句被执行时才执行赋值操作,语句执行完后被赋值变量的取值不再受到赋值表达式的影响。<em class='similar'>下面是连续赋值语句的完</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000138838221611","author":"","university":"","source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html","reference":false,"similarScore":242.41376,"teacher":"","textWithDynamicClass":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar 55S107I2' onmouseover=\"highlightSetter('55S107I2',false)\" onmouseout=\"highlightSetter('55S107I2',true)\">(即连续赋值语句产生作用后,</em><em class='similar 55S107I3' onmouseover=\"highlightSetter('55S107I3',false)\" onmouseout=\"highlightSetter('55S107I3',true)\">赋值表达式中信号的变化都将立即反映到被赋值线网型数据的取值上)</em>,只有在过程赋值语句被执行时才执行赋值操作,语句执","datatype":"webpage","clcs":[],"similarityPercentage":"57.7%","self":false,"text":"语句对被赋值线网型数据的赋值是&quot;连续&quot;的<em class='similar'>(即连续赋值语句产生作用后,</em><em class='similar'>赋值表达式中信号的变化都将立即反映到被赋值线网型数据的取值上)</em>,只有在过程赋值语句被执行时才执行赋值操作,语句执"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":200.43105,"teacher":"","textWithDynamicClass":"连续赋值语句内&quot;赋值表达式&quot;的连续驱动,<em class='similar 55S108I3' onmouseover=\"highlightSetter('55S108I3',false)\" onmouseout=\"highlightSetter('55S108I3',true)\">&quot;赋值表达式&quot;内任何操作数的变化都会引起被赋值变量或线网型数据取值的更新,</em>直到对其执行了&quot;撤销过程连续赋值&quo","datatype":"book","clcs":[],"similarityPercentage":"33.4%","self":false,"text":"连续赋值语句内&quot;赋值表达式&quot;的连续驱动,<em class='similar'>&quot;赋值表达式&quot;内任何操作数的变化都会引起被赋值变量或线网型数据取值的更新,</em>直到对其执行了&quot;撤销过程连续赋值&quo"}],"textWithDynamicClass":"<em class='similar T54I0' onmouseover=\"highlightSetter('T54I0',false)\" onmouseout=\"highlightSetter('T54I0',true)\">连续赋值语句</em>(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中综合器会将连续赋值语句右侧的表达式逻辑进行提取,用于驱动该语句中左侧的net类型资源,<em class='similar T54I5' onmouseover=\"highlightSetter('T54I5',false)\" onmouseout=\"highlightSetter('T54I5',true)\">连续赋值语句的右侧表达式中逻辑功能实现后</em>,<em class='similar T54I6' onmouseover=\"highlightSetter('T54I6',false)\" onmouseout=\"highlightSetter('T54I6',true)\">赋值表达式中信号的变化随机会被传输至赋值线网型数据的取值上</em>[16]。","replaceMap":{},"similar_word_count":56,"text":"<em class='similar'>连续赋值语句</em>(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中综合器会将连续赋值语句右侧的表达式逻辑进行提取,用于驱动该语句中左侧的net类型资源,<em class='similar'>连续赋值语句的右侧表达式中逻辑功能实现后</em>,<em class='similar'>赋值表达式中信号的变化随机会被传输至赋值线网型数据的取值上</em>[16]。","suggest":{"synonyms":[],"keyword":["赋值语句","continuous","assignment","语句","硬件实现","2.7所","eda","综合器","右侧","表达式","逻辑","左侧","net","功能实现","赋值","网型","取值","16"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":325.21118,"teacher":"","textWithDynamicClass":"<em class='similar 56S109I0' onmouseover=\"highlightSetter('56S109I0',false)\" onmouseout=\"highlightSetter('56S109I0',true)\">由赋值语句右边的逻辑A八B简单驱动而已。</em> A B 图5一4连续赋值语句的综合赫201\\油成叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值(Procedural Assignment)<em class='similar 56S109I3' onmouseover=\"highlightSetter('56S109I3',false)\" onmouseout=\"highlightSetter('56S109I3',true)\">语句的硬件实现是:</em>从赋值语句<em class='similar 56S109I5' onmouseover=\"highlightSetter('56S109I5',false)\" onmouseout=\"highlightSetter('56S109I5',true)\">(即&quot;=&quot;或&quot;&lt;=&quot;)</em><em class='similar 56S109I6' onmouseover=\"highlightSetter('56S109I6',false)\" onmouseout=\"highlightSetter('56S109I6',true)\">右边提取出的逻辑,</em><em class='similar 56S109I7' onmouseover=\"highlightSetter('56S109I7',false)\" onmouseout=\"highlightSetter('56S109I7',true)\">用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar 56S109I13' onmouseover=\"highlightSetter('56S109I13',false)\" onmouseout=\"highlightSetter('56S109I13',true)\">有两种类型的过程赋值语句:</em>.","datatype":"book","clcs":[],"similarityPercentage":"52.5%","self":false,"text":"<em class='similar'>由赋值语句右边的逻辑A八B简单驱动而已。</em> A B 图5一4连续赋值语句的综合赫201\\油成叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值(Procedural Assignment)<em class='similar'>语句的硬件实现是:</em>从赋值语句<em class='similar'>(即&quot;=&quot;或&quot;&lt;=&quot;)</em><em class='similar'>右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar'>有两种类型的过程赋值语句:</em>."},{"profession":false,"keywords":[],"year":"","docid":"9000185145501211","author":"","university":"","source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff","reference":false,"similarScore":314.11768,"teacher":"","textWithDynamicClass":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar 56S114I3' onmouseover=\"highlightSetter('56S114I3',false)\" onmouseout=\"highlightSetter('56S114I3',true)\">从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net过程赋值语句的综合:<em class='similar 56S114I5' onmouseover=\"highlightSetter('56S114I5',false)\" onmouseout=\"highlightSetter('56S114I5',true)\">从赋值语句右边提取出的逻辑,</em><em class='similar 56S114I6' onmouseover=\"highlightSetter('56S114I6',false)\" onmouseout=\"highlightSetter('56S114I6',true)\">用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a","datatype":"webpage","clcs":[],"similarityPercentage":"51.5%","self":false,"text":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar'>从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net过程赋值语句的综合:<em class='similar'>从赋值语句右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a"},{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":184.05731,"teacher":"","textWithDynamicClass":"己想要的逻辑。我就阻塞与非阻塞赋值这个题目具体说明一下。1、<em class='similar 56S113I4' onmouseover=\"highlightSetter('56S113I4',false)\" onmouseout=\"highlightSetter('56S113I4',true)\">连续赋值连续赋值语句的硬件实现是:</em>从赋值语句(=)<em class='similar 56S113I7' onmouseover=\"highlightSetter('56S113I7',false)\" onmouseout=\"highlightSetter('56S113I7',true)\">右边提取出的逻辑,</em><em class='similar 56S113I8' onmouseover=\"highlightSetter('56S113I8',false)\" onmouseout=\"highlightSetter('56S113I8',true)\">用于驱动赋值语句左边的线网</em>(net)连续赋值语句 module cONtin","datatype":"webpage","clcs":[],"similarityPercentage":"49.7%","self":false,"text":"己想要的逻辑。我就阻塞与非阻塞赋值这个题目具体说明一下。1、<em class='similar'>连续赋值连续赋值语句的硬件实现是:</em>从赋值语句(=)<em class='similar'>右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的线网</em>(net)连续赋值语句 module cONtin"},{"profession":false,"keywords":[],"year":"","docid":"9000010354498311","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449","reference":false,"similarScore":183.33331,"teacher":"","textWithDynamicClass":"uta,b;outputc;assignc=a&amp;b;<em class='similar 56S110I9' onmouseover=\"highlightSetter('56S110I9',false)\" onmouseout=\"highlightSetter('56S110I9',true)\">endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或&lt;=)<em class='similar 56S110I12' onmouseover=\"highlightSetter('56S110I12',false)\" onmouseout=\"highlightSetter('56S110I12',true)\">右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句","datatype":"webpage","clcs":[],"similarityPercentage":"53.9%","self":false,"text":"uta,b;outputc;assignc=a&amp;b;<em class='similar'>endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或&lt;=)<em class='similar'>右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句"}],"textWithDynamicClass":"<em class='similar T55I0' onmouseover=\"highlightSetter('T55I0',false)\" onmouseout=\"highlightSetter('T55I0',true)\">过程过程赋值语句</em>(Procejural Assignment)<em class='similar T55I2' onmouseover=\"highlightSetter('T55I2',false)\" onmouseout=\"highlightSetter('T55I2',true)\">语句对应的FPGA的硬件实现是:</em><em class='similar T55I3' onmouseover=\"highlightSetter('T55I3',false)\" onmouseout=\"highlightSetter('T55I3',true)\">从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,</em><em class='similar T55I4' onmouseover=\"highlightSetter('T55I4',false)\" onmouseout=\"highlightSetter('T55I4',true)\">用于驱动赋值语句左边的变量,</em>但是有个语法前提,就是用于驱动赋值语句左边的变量是reg类型,","replaceMap":{},"similar_word_count":63,"text":"<em class='similar'>过程过程赋值语句</em>(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现是:</em><em class='similar'>从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em>但是有个语法前提,就是用于驱动赋值语句左边的变量是reg类型,","suggest":{"synonyms":[],"keyword":["赋值语句","procejural","assignment","语句","fpga","硬件实现","右边","逻辑","左边","语法"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":688.1052,"teacher":"","textWithDynamicClass":"t;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar 57S115I7' onmouseover=\"highlightSetter('57S115I7',false)\" onmouseout=\"highlightSetter('57S115I7',true)\">用于驱动赋值语句左边的变量</em><em class='similar 57S115I8' onmouseover=\"highlightSetter('57S115I8',false)\" onmouseout=\"highlightSetter('57S115I8',true)\">(必须是reg类型)</em><em class='similar 57S115I9' onmouseover=\"highlightSetter('57S115I9',false)\" onmouseout=\"highlightSetter('57S115I9',true)\">。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar 57S115I10' onmouseover=\"highlightSetter('57S115I10',false)\" onmouseout=\"highlightSetter('57S115I10',true)\">(仅用于仿真)</em><em class='similar 57S115I11' onmouseover=\"highlightSetter('57S115I11',false)\" onmouseout=\"highlightSetter('57S115I11',true)\">,也可出现在&quot;always&quot;块语句中,</em><em class='similar 57S115I12' onmouseover=\"highlightSetter('57S115I12',false)\" onmouseout=\"highlightSetter('57S115I12',true)\">但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em><em class='similar 57S115I13' onmouseover=\"highlightSetter('57S115I13',false)\" onmouseout=\"highlightSetter('57S115I13',true)\">有两种类型的过程赋值语句:</em><em class='similar 57S115I14' onmouseover=\"highlightSetter('57S115I14',false)\" onmouseout=\"highlightSetter('57S115I14',true)\">.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar 57S115I17' onmouseover=\"highlightSetter('57S115I17',false)\" onmouseout=\"highlightSetter('57S115I17',true)\">非阻塞赋值语句</em><em class='similar 57S115I18' onmouseover=\"highlightSetter('57S115I18',false)\" onmouseout=\"highlightSetter('57S115I18',true)\">(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在","datatype":"book","clcs":[],"similarityPercentage":"59.8%","self":false,"text":"t;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的变量</em><em class='similar'>(必须是reg类型)</em><em class='similar'>。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar'>(仅用于仿真)</em><em class='similar'>,也可出现在&quot;always&quot;块语句中,</em><em class='similar'>但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em><em class='similar'>有两种类型的过程赋值语句:</em><em class='similar'>.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar'>非阻塞赋值语句</em><em class='similar'>(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":268.81818,"teacher":"","textWithDynamicClass":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar 57S118I9' onmouseover=\"highlightSetter('57S118I9',false)\" onmouseout=\"highlightSetter('57S118I9',true)\">过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar 57S118I10' onmouseover=\"highlightSetter('57S118I10',false)\" onmouseout=\"highlightSetter('57S118I10',true)\">包括阻塞赋值语句、</em><em class='similar 57S118I11' onmouseover=\"highlightSetter('57S118I11',false)\" onmouseout=\"highlightSetter('57S118I11',true)\">非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar 57S118I18' onmouseover=\"highlightSetter('57S118I18',false)\" onmouseout=\"highlightSetter('57S118I18',true)\">阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是&quot;=&quot","datatype":"webpage","clcs":[],"similarityPercentage":"58.4%","self":false,"text":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar'>过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar'>包括阻塞赋值语句、</em><em class='similar'>非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar'>阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是&quot;=&quot"},{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar 57S117I4' onmouseover=\"highlightSetter('57S117I4',false)\" onmouseout=\"highlightSetter('57S117I4',true)\">(=或有两种类型的过程赋值语句:</em><em class='similar 57S117I5' onmouseover=\"highlightSetter('57S117I5',false)\" onmouseout=\"highlightSetter('57S117I5',true)\">阻塞赋值语句</em><em class='similar 57S117I6' onmouseover=\"highlightSetter('57S117I6',false)\" onmouseout=\"highlightSetter('57S117I6',true)\">(Blocking Assignment STatement)</em><em class='similar 57S117I7' onmouseover=\"highlightSetter('57S117I7',false)\" onmouseout=\"highlightSetter('57S117I7',true)\">、非阻塞赋值语句</em><em class='similar 57S117I8' onmouseover=\"highlightSetter('57S117I8',false)\" onmouseout=\"highlightSetter('57S117I8',true)\">(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在","datatype":"webpage","clcs":[],"similarityPercentage":"78.1%","self":false,"text":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar'>(=或有两种类型的过程赋值语句:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在"},{"profession":false,"keywords":[],"year":"","docid":"9000185145501211","author":"","university":"","source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff","reference":false,"similarScore":193.91782,"teacher":"","textWithDynamicClass":"左边的net过程赋值语句的综合:从赋值语句右边提取出的逻辑,<em class='similar 57S116I6' onmouseover=\"highlightSetter('57S116I6',false)\" onmouseout=\"highlightSetter('57S116I6',true)\">用于驱动赋值语句左边的reg型变量。</em>注意:<em class='similar 57S116I8' onmouseover=\"highlightSetter('57S116I8',false)\" onmouseout=\"highlightSetter('57S116I8',true)\">initia语句仅用于仿真,</em><em class='similar 57S116I9' onmouseover=\"highlightSetter('57S116I9',false)\" onmouseout=\"highlightSetter('57S116I9',true)\">不综合。</em><em class='similar 57S116I10' onmouseover=\"highlightSetter('57S116I10',false)\" onmouseout=\"highlightSetter('57S116I10',true)\">只有在always中才能被综合。</em>建议组合逻辑用阻塞语句,时序逻辑用非阻塞语句,任何","datatype":"webpage","clcs":[],"similarityPercentage":"33.4%","self":false,"text":"左边的net过程赋值语句的综合:从赋值语句右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的reg型变量。</em>注意:<em class='similar'>initia语句仅用于仿真,</em><em class='similar'>不综合。</em><em class='similar'>只有在always中才能被综合。</em>建议组合逻辑用阻塞语句,时序逻辑用非阻塞语句,任何"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":171.84586,"teacher":"","textWithDynamicClass":";否则out=bendmodule 563、过程赋值语句3、<em class='similar 57S119I5' onmouseover=\"highlightSetter('57S119I5',false)\" onmouseout=\"highlightSetter('57S119I5',true)\">过程赋值语句用于对reg型变量赋值,</em><em class='similar 57S119I6' onmouseover=\"highlightSetter('57S119I6',false)\" onmouseout=\"highlightSetter('57S119I6',true)\">过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar 57S119I14' onmouseover=\"highlightSetter('57S119I14',false)\" onmouseout=\"highlightSetter('57S119I14',true)\">(non-blocking)</em>赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar 57S119I20' onmouseover=\"highlightSetter('57S119I20',false)\" onmouseout=\"highlightSetter('57S119I20',true)\">非阻塞赋值方式 </em>","datatype":"webpage","clcs":[],"similarityPercentage":"40.9%","self":false,"text":";否则out=bendmodule 563、过程赋值语句3、<em class='similar'>过程赋值语句用于对reg型变量赋值,</em><em class='similar'>过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar'>(non-blocking)</em>赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar'>非阻塞赋值方式 </em>"}],"textWithDynamicClass":"从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,用于驱动赋值语句左边的变量,但是有个语法前提,<em class='similar T56I0' onmouseover=\"highlightSetter('T56I0',false)\" onmouseout=\"highlightSetter('T56I0',true)\">就是用于驱动赋值语句左边的变量是reg类型,</em><em class='similar T56I1' onmouseover=\"highlightSetter('T56I1',false)\" onmouseout=\"highlightSetter('T56I1',true)\">且只有Always语句块中的过程赋值语句才可以被综合器综合,</em><em class='similar T56I2' onmouseover=\"highlightSetter('T56I2',false)\" onmouseout=\"highlightSetter('T56I2',true)\">若出现在initial语句块中将被仅用于仿真。</em><em class='similar T56I3' onmouseover=\"highlightSetter('T56I3',false)\" onmouseout=\"highlightSetter('T56I3',true)\">过程赋值语句有以下两种分别为:</em><em class='similar T56I4' onmouseover=\"highlightSetter('T56I4',false)\" onmouseout=\"highlightSetter('T56I4',true)\">阻塞赋值语句</em><em class='similar T56I5' onmouseover=\"highlightSetter('T56I5',false)\" onmouseout=\"highlightSetter('T56I5',true)\">(Blocking Assignment Statement)</em><em class='similar T56I6' onmouseover=\"highlightSetter('T56I6',false)\" onmouseout=\"highlightSetter('T56I6',true)\">、非阻塞赋值语句</em><em class='similar T56I7' onmouseover=\"highlightSetter('T56I7',false)\" onmouseout=\"highlightSetter('T56I7',true)\">(Non-blocking Assignment Statement)</em>","replaceMap":{},"similar_word_count":166,"text":"从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,用于驱动赋值语句左边的变量,但是有个语法前提,<em class='similar'>就是用于驱动赋值语句左边的变量是reg类型,</em><em class='similar'>且只有Always语句块中的过程赋值语句才可以被综合器综合,</em><em class='similar'>若出现在initial语句块中将被仅用于仿真。</em><em class='similar'>过程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(Non-blocking Assignment Statement)</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["赋值语句","左边","reg","语句","综合器","initial","中将","仿真","阻塞","blocking","assignment","statement","非阻塞"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":227.3913,"teacher":"","textWithDynamicClass":"ng Assignment statement)。5.3.1<em class='similar 58S120I8' onmouseover=\"highlightSetter('58S120I8',false)\" onmouseout=\"highlightSetter('58S120I8',true)\">阻塞赋值语句阻塞赋值语句可以简述为:</em><em class='similar 58S120I9' onmouseover=\"highlightSetter('58S120I9',false)\" onmouseout=\"highlightSetter('58S120I9',true)\">在一个always块中,</em><em class='similar 58S120I10' onmouseover=\"highlightSetter('58S120I10',false)\" onmouseout=\"highlightSetter('58S120I10',true)\">语句是按从上到下顺序执行。</em>例5一2描述了一个阻塞赋值语句的实例。[例5一21","datatype":"book","clcs":[],"similarityPercentage":"63.2%","self":false,"text":"ng Assignment statement)。5.3.1<em class='similar'>阻塞赋值语句阻塞赋值语句可以简述为:</em><em class='similar'>在一个always块中,</em><em class='similar'>语句是按从上到下顺序执行。</em>例5一2描述了一个阻塞赋值语句的实例。[例5一21"},{"profession":false,"keywords":[],"year":"","docid":"9000208370017111","author":"","university":"","source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html","reference":false,"similarScore":174.82141,"teacher":"","textWithDynamicClass":"gnment(CAB); input endmodule2,<em class='similar 58S121I3' onmouseover=\"highlightSetter('58S121I3',false)\" onmouseout=\"highlightSetter('58S121I3',true)\">阻塞赋值语句综合:</em><em class='similar 58S121I4' onmouseover=\"highlightSetter('58S121I4',false)\" onmouseout=\"highlightSetter('58S121I4',true)\">在一个alwanys 块中,</em><em class='similar 58S121I5' onmouseover=\"highlightSetter('58S121I5',false)\" onmouseout=\"highlightSetter('58S121I5',true)\">语句是按照从上到下的顺序执行的。</em> module BlockingAssignmen","datatype":"webpage","clcs":[],"similarityPercentage":"58.3%","self":false,"text":"gnment(CAB); input endmodule2,<em class='similar'>阻塞赋值语句综合:</em><em class='similar'>在一个alwanys 块中,</em><em class='similar'>语句是按照从上到下的顺序执行的。</em> module BlockingAssignmen"}],"textWithDynamicClass":"<em class='similar T57I0' onmouseover=\"highlightSetter('T57I0',false)\" onmouseout=\"highlightSetter('T57I0',true)\">阻塞赋值语句简而言之就是在一个always语句块中,</em><em class='similar T57I1' onmouseover=\"highlightSetter('T57I1',false)\" onmouseout=\"highlightSetter('T57I1',true)\">语句是从上到下顺序执行,</em>综合时将会在依据赋值语句逻辑原理结合always块的触发器来实现逻辑综合,阻塞赋值语句RTL级描述与电路映射如图2.8所示。","replaceMap":{},"similar_word_count":38,"text":"<em class='similar'>阻塞赋值语句简而言之就是在一个always语句块中,</em><em class='similar'>语句是从上到下顺序执行,</em>综合时将会在依据赋值语句逻辑原理结合always块的触发器来实现逻辑综合,阻塞赋值语句RTL级描述与电路映射如图2.8所示。","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["阻塞","赋值语句","语句","从上到下","逻辑原理","触发器","逻辑综合","rtl","映射","2.8所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":251.00003,"teacher":"","textWithDynamicClass":"ql的值是同步的,即q2被赋予的是ql更新后的值。5.3.2<em class='similar 59S122I5' onmouseover=\"highlightSetter('59S122I5',false)\" onmouseout=\"highlightSetter('59S122I5',true)\">非阻塞赋值语句非阻塞赋值语句可以简述为:</em><em class='similar 59S122I6' onmouseover=\"highlightSetter('59S122I6',false)\" onmouseout=\"highlightSetter('59S122I6',true)\">在一个always块中,</em><em class='similar 59S122I7' onmouseover=\"highlightSetter('59S122I7',false)\" onmouseout=\"highlightSetter('59S122I7',true)\">语句是并行执行的。</em><em class='similar 59S122I8' onmouseover=\"highlightSetter('59S122I8',false)\" onmouseout=\"highlightSetter('59S122I8',true)\">例5一3描述了一个非阻塞赋值语句</em>的实例。[例5一3】非阻塞赋值语句。 module","datatype":"book","clcs":[],"similarityPercentage":"47.4%","self":false,"text":"ql的值是同步的,即q2被赋予的是ql更新后的值。5.3.2<em class='similar'>非阻塞赋值语句非阻塞赋值语句可以简述为:</em><em class='similar'>在一个always块中,</em><em class='similar'>语句是并行执行的。</em><em class='similar'>例5一3描述了一个非阻塞赋值语句</em>的实例。[例5一3】非阻塞赋值语句。 module"},{"profession":false,"keywords":[],"year":"","docid":"9000208370017111","author":"","university":"","source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html","reference":false,"similarScore":121.92249,"teacher":"","textWithDynamicClass":"钟上升沿出发后,变量q2 q2被赋予的是q1的更新后的值3,<em class='similar 59S124I7' onmouseover=\"highlightSetter('59S124I7',false)\" onmouseout=\"highlightSetter('59S124I7',true)\">非阻塞赋值语句综合:</em><em class='similar 59S124I8' onmouseover=\"highlightSetter('59S124I8',false)\" onmouseout=\"highlightSetter('59S124I8',true)\">在一个Always 块中,</em><em class='similar 59S124I9' onmouseover=\"highlightSetter('59S124I9',false)\" onmouseout=\"highlightSetter('59S124I9',true)\">语句是并行执行的。</em> module nonblockingAssign","datatype":"webpage","clcs":[],"similarityPercentage":"50.8%","self":false,"text":"钟上升沿出发后,变量q2 q2被赋予的是q1的更新后的值3,<em class='similar'>非阻塞赋值语句综合:</em><em class='similar'>在一个Always 块中,</em><em class='similar'>语句是并行执行的。</em> module nonblockingAssign"},{"profession":false,"keywords":[],"year":"","docid":"9000187623883311","author":"","university":"","source":"网页","title":"第2章 逻辑代数和硬件描述语言基础_逻辑代数_2012_9_17","url":"http://www.doc88.com/p%2D97139944759918.html","reference":false,"similarScore":79.99999,"teacher":"","textWithDynamicClass":"、&quot; assign&quot;语句、实例元件调用、<em class='similar 59S123I8' onmouseover=\"highlightSetter('59S123I8',false)\" onmouseout=\"highlightSetter('59S123I8',true)\">&quot;always&quot;模块内的非阻塞赋值语句都是并行执行的!</em> Verilog HDL模型的5种抽象级别的描述","datatype":"webpage","clcs":[],"similarityPercentage":"42.1%","self":false,"text":"、&quot; assign&quot;语句、实例元件调用、<em class='similar'>&quot;always&quot;模块内的非阻塞赋值语句都是并行执行的!</em> Verilog HDL模型的5种抽象级别的描述"}],"textWithDynamicClass":"<em class='similar T58I0' onmouseover=\"highlightSetter('T58I0',false)\" onmouseout=\"highlightSetter('T58I0',true)\">非阻塞赋值语句简而言之是在一个always语法块中,</em><em class='similar T58I1' onmouseover=\"highlightSetter('T58I1',false)\" onmouseout=\"highlightSetter('T58I1',true)\">语句是并行执行的,</em>非阻塞赋值语句RTL级描述与电路映射图2.9所示,<em class='similar T58I3' onmouseover=\"highlightSetter('T58I3',false)\" onmouseout=\"highlightSetter('T58I3',true)\">对比上图可以得到对于一个Always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,</em>但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。","replaceMap":{},"similar_word_count":84,"text":"<em class='similar'>非阻塞赋值语句简而言之是在一个always语法块中,</em><em class='similar'>语句是并行执行的,</em>非阻塞赋值语句RTL级描述与电路映射图2.9所示,<em class='similar'>对比上图可以得到对于一个Always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,</em>但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["非阻塞","赋值语句","语法","语句","并行执行","rtl","映射图","2.9所","上图","阻塞","并行","器件","资源数量","主要影响","右边","逻辑的"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":245.85153,"teacher":"","textWithDynamicClass":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar 60S125I6' onmouseover=\"highlightSetter('60S125I6',false)\" onmouseout=\"highlightSetter('60S125I6',true)\">(case expression)</em><em class='similar 60S125I7' onmouseover=\"highlightSetter('60S125I7',false)\" onmouseout=\"highlightSetter('60S125I7',true)\">和选择项表达式</em><em class='similar 60S125I8' onmouseover=\"highlightSetter('60S125I8',false)\" onmouseout=\"highlightSetter('60S125I8',true)\">(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar 60S125I12' onmouseover=\"highlightSetter('60S125I12',false)\" onmouseout=\"highlightSetter('60S125I12',true)\">case语句可以看做是嵌套的if语句,</em><em class='similar 60S125I13' onmouseover=\"highlightSetter('60S125I13',false)\" onmouseout=\"highlightSetter('60S125I13',true)\">从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可","datatype":"book","clcs":[],"similarityPercentage":"44.7%","self":false,"text":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar'>(case expression)</em><em class='similar'>和选择项表达式</em><em class='similar'>(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar'>case语句可以看做是嵌套的if语句,</em><em class='similar'>从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":97.64706,"teacher":"","textWithDynamicClass":"verilog HDL语言中,允许把常量(constant)<em class='similar 60S126I3' onmouseover=\"highlightSetter('60S126I3',false)\" onmouseout=\"highlightSetter('60S126I3',true)\">作为case语句的条件表达式,</em><em class='similar 60S126I4' onmouseover=\"highlightSetter('60S126I4',false)\" onmouseout=\"highlightSetter('60S126I4',true)\">而在选择项表达式中使用变量。</em><em class='similar 60S126I5' onmouseover=\"highlightSetter('60S126I5',false)\" onmouseout=\"highlightSetter('60S126I5',true)\">常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代","datatype":"book","clcs":[],"similarityPercentage":"28.7%","self":false,"text":"verilog HDL语言中,允许把常量(constant)<em class='similar'>作为case语句的条件表达式,</em><em class='similar'>而在选择项表达式中使用变量。</em><em class='similar'>常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代"}],"textWithDynamicClass":"在Verilog HDL语句种,<em class='similar T59I1' onmouseover=\"highlightSetter('T59I1',false)\" onmouseout=\"highlightSetter('T59I1',true)\">case包含两类条件表达式和选择项表达式,</em><em class='similar T59I2' onmouseover=\"highlightSetter('T59I2',false)\" onmouseout=\"highlightSetter('T59I2',true)\">case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。","replaceMap":{},"similar_word_count":40,"text":"在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。","suggest":{"synonyms":[],"keyword":["verilog","hdl","语句","case","两类","条件表达式","选择项","表达式","看作","嵌套","综合原则","条件语句","2.13所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":330.62494,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 61S127I3' onmouseover=\"highlightSetter('61S127I3',false)\" onmouseout=\"highlightSetter('61S127I3',true)\">5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。<em class='similar 61S127I5' onmouseover=\"highlightSetter('61S127I5',false)\" onmouseout=\"highlightSetter('61S127I5',true)\">函数在综合的时候,</em>被展开成了内联的(in一hne)代码。<em class='similar 61S127I9' onmouseover=\"highlightSetter('61S127I9',false)\" onmouseout=\"highlightSetter('61S127I9',true)\">任何在函数中定义的局���变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函","datatype":"book","clcs":[],"similarityPercentage":"75.1%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。<em class='similar'>函数在综合的时候,</em>被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函"}],"textWithDynamicClass":"<em class='similar T60I0' onmouseover=\"highlightSetter('T60I0',false)\" onmouseout=\"highlightSetter('T60I0',true)\">在verilog HDL语句中。</em><em class='similar T60I1' onmouseover=\"highlightSetter('T60I1',false)\" onmouseout=\"highlightSetter('T60I1',true)\">function如C++的内联函数一样,</em><em class='similar T60I2' onmouseover=\"highlightSetter('T60I2',false)\" onmouseout=\"highlightSetter('T60I2',true)\">在逻辑综合时,</em>将会被直接展开成对应代码放在对应的模块中。<em class='similar T60I4' onmouseover=\"highlightSetter('T60I4',false)\" onmouseout=\"highlightSetter('T60I4',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。","replaceMap":{},"similar_word_count":67,"text":"<em class='similar'>在verilog HDL语句中。</em><em class='similar'>function如C++的内联函数一样,</em><em class='similar'>在逻辑综合时,</em>将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"}],"keyword":["verilog","hdl","语句","function","内联函数","逻辑综合","局部变量","当做","临时","表述","行为级","逻辑","时序控制","组合逻辑","2.15所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":706.33905,"teacher":"","textWithDynamicClass":"的重要组成部分,也是FPGA 支持软件工具中最为关键的部分,<em class='similar 62S128I4' onmouseover=\"highlightSetter('62S128I4',false)\" onmouseout=\"highlightSetter('62S128I4',true)\">其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em><em class='similar 62S128I5' onmouseover=\"highlightSetter('62S128I5',false)\" onmouseout=\"highlightSetter('62S128I5',true)\">进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar 62S128I8' onmouseover=\"highlightSetter('62S128I8',false)\" onmouseout=\"highlightSetter('62S128I8',true)\">已形成了以面积优化、</em><em class='similar 62S128I9' onmouseover=\"highlightSetter('62S128I9',false)\" onmouseout=\"highlightSetter('62S128I9',true)\">时间延迟优化、</em><em class='similar 62S128I10' onmouseover=\"highlightSetter('62S128I10',false)\" onmouseout=\"highlightSetter('62S128I10',true)\">功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上","datatype":"webpage","clcs":[],"similarityPercentage":"76.8%","self":false,"text":"的重要组成部分,也是FPGA 支持软件工具中最为关键的部分,<em class='similar'>其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em><em class='similar'>进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar'>已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em><em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上"},{"profession":false,"keywords":[],"year":"","docid":"9000126492999811","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html","reference":false,"similarScore":706.339,"teacher":"","textWithDynamicClass":"支持软件工具中最为关键的部分,<em class='similar 62S129I1' onmouseover=\"highlightSetter('62S129I1',false)\" onmouseout=\"highlightSetter('62S129I1',true)\">其优化结果对综合后下一阶段的布局布线论文第一章绪论3等步骤有着决定性的作用,</em><em class='similar 62S129I2' onmouseover=\"highlightSetter('62S129I2',false)\" onmouseout=\"highlightSetter('62S129I2',true)\">进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar 62S129I5' onmouseover=\"highlightSetter('62S129I5',false)\" onmouseout=\"highlightSetter('62S129I5',true)\">已形成了以面积优化、</em><em class='similar 62S129I6' onmouseover=\"highlightSetter('62S129I6',false)\" onmouseout=\"highlightSetter('62S129I6',true)\">时间延迟优化、</em><em class='similar 62S129I7' onmouseover=\"highlightSetter('62S129I7',false)\" onmouseout=\"highlightSetter('62S129I7',true)\">功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上","datatype":"webpage","clcs":[],"similarityPercentage":"75.1%","self":false,"text":"支持软件工具中最为关键的部分,<em class='similar'>其优化结果对综合后下一阶段的布局布线论文第一章绪论3等步骤有着决定性的作用,</em><em class='similar'>进而影响最终电路芯片的性能和成本。</em>在国外,研究机构的技术水平远高于国内,<em class='similar'>已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em><em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>国内也有少数的研究成果,一般是在国外现有研究基础上"}],"textWithDynamicClass":"技术映射是将技术映射作为综合优化的重要组成部分,也是FPGA支持软件工具EDA中最为关键的部分,技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar T61I1' onmouseover=\"highlightSetter('T61I1',false)\" onmouseout=\"highlightSetter('T61I1',true)\">其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em><em class='similar T61I2' onmouseover=\"highlightSetter('T61I2',false)\" onmouseout=\"highlightSetter('T61I2',true)\">进而最终影响芯片的性能成本,</em><em class='similar T61I3' onmouseover=\"highlightSetter('T61I3',false)\" onmouseout=\"highlightSetter('T61I3',true)\">故而已形成了以面积优化、</em><em class='similar T61I4' onmouseover=\"highlightSetter('T61I4',false)\" onmouseout=\"highlightSetter('T61I4',true)\">时间延迟优化、</em><em class='similar T61I5' onmouseover=\"highlightSetter('T61I5',false)\" onmouseout=\"highlightSetter('T61I5',true)\">功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>","replaceMap":{},"similar_word_count":101,"text":"技术映射是将技术映射作为综合优化的重要组成部分,也是FPGA支持软件工具EDA中最为关键的部分,技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em><em class='similar'>进而最终影响芯片的性能成本,</em><em class='similar'>故而已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em><em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["提早"],"keyword":"延迟"}],"keyword":["映射","fpga","eda","至关重要","优化结果","设计流程","布局布线","决定性","面积优化","延迟优化","功率优化","延迟","同时优化"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar 63S130I6' onmouseover=\"highlightSetter('63S130I6',false)\" onmouseout=\"highlightSetter('63S130I6',true)\">02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em><em class='similar 63S130I7' onmouseover=\"highlightSetter('63S130I7',false)\" onmouseout=\"highlightSetter('63S130I7',true)\">这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar 63S130I8' onmouseover=\"highlightSetter('63S130I8',false)\" onmouseout=\"highlightSetter('63S130I8',true)\">是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar 63S130I10' onmouseover=\"highlightSetter('63S130I10',false)\" onmouseout=\"highlightSetter('63S130I10',true)\">因此对最终电路实现的质量</em><em class='similar 63S130I11' onmouseover=\"highlightSetter('63S130I11',false)\" onmouseout=\"highlightSetter('63S130I11',true)\">(面积、</em>速度、<em class='similar 63S130I13' onmouseover=\"highlightSetter('63S130I13',false)\" onmouseout=\"highlightSetter('63S130I13',true)\">功耗等)</em>至关重要。","datatype":"webpage","clcs":[],"similarityPercentage":"59.3%","self":false,"text":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar'>02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em><em class='similar'>这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar'>是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar'>因此对最终电路实现的质量</em><em class='similar'>(面积、</em>速度、<em class='similar'>功耗等)</em>至关重要。"},{"profession":false,"keywords":[],"year":"","docid":"9000195223375811","author":"","university":"","source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07","reference":false,"similarScore":400,"teacher":"","textWithDynamicClass":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar 63S131I6' onmouseover=\"highlightSetter('63S131I6',false)\" onmouseout=\"highlightSetter('63S131I6',true)\">10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是","datatype":"webpage","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar'>10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是"}],"textWithDynamicClass":"<em class='similar T62I0' onmouseover=\"highlightSetter('T62I0',false)\" onmouseout=\"highlightSetter('T62I0',true)\">工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar T62I4' onmouseover=\"highlightSetter('T62I4',false)\" onmouseout=\"highlightSetter('T62I4',true)\">FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为进行逻辑转换的重要步骤,<em class='similar T62I6' onmouseover=\"highlightSetter('T62I6',false)\" onmouseout=\"highlightSetter('T62I6',true)\">因此对FPGA片上最终实现的电路的面积、</em><em class='similar T62I7' onmouseover=\"highlightSetter('T62I7',false)\" onmouseout=\"highlightSetter('T62I7',true)\">功耗、</em>运行速度相当重要。","replaceMap":{},"similar_word_count":92,"text":"<em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为进行逻辑转换的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>运行速度相当重要。","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["工艺映射","网表","fpga","逻辑单元","43","提及","lut","mux","ff","逻辑","映射","rtl","描述的","硬件","逻辑转换","重要步骤","功耗","运行速度"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar 64S133I3' onmouseover=\"highlightSetter('64S133I3',false)\" onmouseout=\"highlightSetter('64S133I3',true)\">第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar 64S133I4' onmouseover=\"highlightSetter('64S133I4',false)\" onmouseout=\"highlightSetter('64S133I4',true)\">输出是实际工艺下可实现的门级网表,</em>其具体流程如图2—2所示。<em class='similar 64S133I6' onmouseover=\"highlightSetter('64S133I6',false)\" onmouseout=\"highlightSetter('64S133I6',true)\">图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em><em class='similar 64S133I7' onmouseover=\"highlightSetter('64S133I7',false)\" onmouseout=\"highlightSetter('64S133I7',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路","datatype":"webpage","clcs":[],"similarityPercentage":"35.4%","self":false,"text":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar'>第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表,</em>其具体流程如图2—2所示。<em class='similar'>图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em><em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar 64S132I5' onmouseover=\"highlightSetter('64S132I5',false)\" onmouseout=\"highlightSetter('64S132I5',true)\">工艺映射的输入是布尔网络,</em><em class='similar 64S132I6' onmouseover=\"highlightSetter('64S132I6',false)\" onmouseout=\"highlightSetter('64S132I6',true)\">输出是实际工艺下可实现的门级网表。</em><em class='similar 64S132I7' onmouseover=\"highlightSetter('64S132I7',false)\" onmouseout=\"highlightSetter('64S132I7',true)\">布尔网络表示的是一组逻辑表达式,</em><em class='similar 64S132I8' onmouseover=\"highlightSetter('64S132I8',false)\" onmouseout=\"highlightSetter('64S132I8',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步","datatype":"webpage","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar'>工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em><em class='similar'>布尔网络表示的是一组逻辑表达式,</em><em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003386423011","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所! 上海200030；上海交通大学大规模集成电路研究所! 上海200030","source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":"","reference":false,"similarScore":208.49808,"teacher":"","textWithDynamicClass":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar 64S134I4' onmouseover=\"highlightSetter('64S134I4',false)\" onmouseout=\"highlightSetter('64S134I4',true)\">工艺映射自动化过程的输入是布尔网络,</em><em class='similar 64S134I5' onmouseover=\"highlightSetter('64S134I5',false)\" onmouseout=\"highlightSetter('64S134I5',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar 64S134I9' onmouseover=\"highlightSetter('64S134I9',false)\" onmouseout=\"highlightSetter('64S134I9',true)\">1工艺映射所谓的布尔网络是一组逻辑表达式,</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"39.3%","self":false,"text":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar'>工艺映射自动化过程的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar'>1工艺映射所谓的布尔网络是一组逻辑表达式,</em>"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003389855311","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所!上海200030；上海交通大学大规模集成电路研究所!上海200030","source":"微电子学","title":"速度优化再分解设计方法","url":"","reference":false,"similarScore":138.55557,"teacher":"","textWithDynamicClass":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar 64S135I8' onmouseover=\"highlightSetter('64S135I8',false)\" onmouseout=\"highlightSetter('64S135I8',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar 64S135I14' onmouseover=\"highlightSetter('64S135I14',false)\" onmouseout=\"highlightSetter('64S135I14',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"38.5%","self":false,"text":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>"}],"textWithDynamicClass":"<em class='similar T63I0' onmouseover=\"highlightSetter('T63I0',false)\" onmouseout=\"highlightSetter('T63I0',true)\">由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar T63I1' onmouseover=\"highlightSetter('T63I1',false)\" onmouseout=\"highlightSetter('T63I1',true)\">门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar T63I2' onmouseover=\"highlightSetter('T63I2',false)\" onmouseout=\"highlightSetter('T63I2',true)\">该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","replaceMap":{},"similar_word_count":104,"text":"<em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","suggest":{"synonyms":[],"keyword":["2.16","工艺映射","网表","可实现","这一个","为是","一组组","逻辑表达式","布尔网络","布尔","网络图","逻辑功能","组合单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":240.18208,"teacher":"","textWithDynamicClass":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar 65S138I3' onmouseover=\"highlightSetter('65S138I3',false)\" onmouseout=\"highlightSetter('65S138I3',true)\">原电路可由一组单输出布尔子网络表示。</em><em class='similar 65S138I4' onmouseover=\"highlightSetter('65S138I4',false)\" onmouseout=\"highlightSetter('65S138I4',true)\">根据工艺映射算法的不同需要,</em><em class='similar 65S138I5' onmouseover=\"highlightSetter('65S138I5',false)\" onmouseout=\"highlightSetter('65S138I5',true)\">原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻","datatype":"webpage","clcs":[],"similarityPercentage":"51.1%","self":false,"text":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar'>原电路可由一组单输出布尔子网络表示。</em><em class='similar'>根据工艺映射算法的不同需要,</em><em class='similar'>原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻"}],"textWithDynamicClass":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar T64I3' onmouseover=\"highlightSetter('T64I3',false)\" onmouseout=\"highlightSetter('T64I3',true)\">原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar T64I4' onmouseover=\"highlightSetter('T64I4',false)\" onmouseout=\"highlightSetter('T64I4',true)\">根据工艺映射算法的不同,</em><em class='similar T64I5' onmouseover=\"highlightSetter('T64I5',false)\" onmouseout=\"highlightSetter('T64I5',true)\">原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。","replaceMap":{},"similar_word_count":70,"text":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["完成"],"keyword":"完毕"}],"keyword":["布尔图","提升技术","映射","完毕","原始","布尔网络","逻辑电路","一个个","布尔","子网络","映射算法","一张","dag","15"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":433.45938,"teacher":"","textWithDynamicClass":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar 66S139I5' onmouseover=\"highlightSetter('66S139I5',false)\" onmouseout=\"highlightSetter('66S139I5',true)\">逻辑分解是将电路进行逻辑上的变化,</em><em class='similar 66S139I6' onmouseover=\"highlightSetter('66S139I6',false)\" onmouseout=\"highlightSetter('66S139I6',true)\">目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar 66S139I12' onmouseover=\"highlightSetter('66S139I12',false)\" onmouseout=\"highlightSetter('66S139I12',true)\">以便于以后的匹配和映射。</em><em class='similar 66S139I13' onmouseover=\"highlightSetter('66S139I13',false)\" onmouseout=\"highlightSetter('66S139I13',true)\">经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分","datatype":"webpage","clcs":[],"similarityPercentage":"55.6%","self":false,"text":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar'>逻辑分解是将电路进行逻辑上的变化,</em><em class='similar'>目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar'>以便于以后的匹配和映射。</em><em class='similar'>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分"}],"textWithDynamicClass":"<em class='similar T65I0' onmouseover=\"highlightSetter('T65I0',false)\" onmouseout=\"highlightSetter('T65I0',true)\">逻辑分解是将电路进行逻辑等价的转换,</em><em class='similar T65I1' onmouseover=\"highlightSetter('T65I1',false)\" onmouseout=\"highlightSetter('T65I1',true)\">目的是将复杂的逻辑单元用基本的逻辑形式表达,</em><em class='similar T65I2' onmouseover=\"highlightSetter('T65I2',false)\" onmouseout=\"highlightSetter('T65I2',true)\">以便于以后的匹配和映射</em>[45]。<em class='similar T65I4' onmouseover=\"highlightSetter('T65I4',false)\" onmouseout=\"highlightSetter('T65I4',true)\">布尔网络在经过逻辑分解操作后,</em><em class='similar T65I5' onmouseover=\"highlightSetter('T65I5',false)\" onmouseout=\"highlightSetter('T65I5',true)\">其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","replaceMap":{},"similar_word_count":97,"text":"<em class='similar'>逻辑分解是将电路进行逻辑等价的转换,</em><em class='similar'>目的是将复杂的逻辑单元用基本的逻辑形式表达,</em><em class='similar'>以便于以后的匹配和映射</em>[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["其实"],"keyword":"原本"}],"keyword":["逻辑分解","逻辑等价","逻辑单元","逻辑","形式表达","匹配","映射","45","布尔网络","原本","逻辑关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":250.31253,"teacher":"","textWithDynamicClass":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar 67S140I8' onmouseover=\"highlightSetter('67S140I8',false)\" onmouseout=\"highlightSetter('67S140I8',true)\">经过划分和逻辑分解之后,</em><em class='similar 67S140I9' onmouseover=\"highlightSetter('67S140I9',false)\" onmouseout=\"highlightSetter('67S140I9',true)\">下一步就是匹配。</em><em class='similar 67S140I10' onmouseover=\"highlightSetter('67S140I10',false)\" onmouseout=\"highlightSetter('67S140I10',true)\">之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是","datatype":"webpage","clcs":[],"similarityPercentage":"56.9%","self":false,"text":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar'>经过划分和逻辑分解之后,</em><em class='similar'>下一步就是匹配。</em><em class='similar'>之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是"},{"profession":false,"keywords":[],"year":"","docid":"9000207907782911","author":"","university":"","source":"网页","title":"逻辑综合中的工艺映射算法研究","url":"https://www.docin.com/p%2D851853545.html","reference":false,"similarScore":146.76111,"teacher":"","textWithDynamicClass":";工艺映射&quot;的步骤是&quot;匹配&quot;。<em class='similar 67S141I3' onmouseover=\"highlightSetter('67S141I3',false)\" onmouseout=\"highlightSetter('67S141I3',true)\">在此之前进行的&quot;逻辑分解&quot;和&quot;划分&quot;都是对布尔网络进行与工艺无关的处理。</em>而匹配则要把布尔网络和实际的库单元相联系了。匹配有","datatype":"webpage","clcs":[],"similarityPercentage":"30.6%","self":false,"text":";工艺映射&quot;的步骤是&quot;匹配&quot;。<em class='similar'>在此之前进行的&quot;逻辑分解&quot;和&quot;划分&quot;都是对布尔网络进行与工艺无关的处理。</em>而匹配则要把布尔网络和实际的库单元相联系了。匹配有"}],"textWithDynamicClass":"<em class='similar T66I0' onmouseover=\"highlightSetter('T66I0',false)\" onmouseout=\"highlightSetter('T66I0',true)\">经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar T66I1' onmouseover=\"highlightSetter('T66I1',false)\" onmouseout=\"highlightSetter('T66I1',true)\">而匹配则是在划分与逻辑分解后,</em><em class='similar T66I2' onmouseover=\"highlightSetter('T66I2',false)\" onmouseout=\"highlightSetter('T66I2',true)\">将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,","replaceMap":{},"similar_word_count":53,"text":"<em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所提供的实际工艺下可实现的逻辑单元或更高级的片���器件对布尔图进行等效匹配,","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["逻辑分解","匹配","无关","布尔网络","工艺库","fpga","厂商"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":399.961,"teacher":"","textWithDynamicClass":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar 68S142I4' onmouseover=\"highlightSetter('68S142I4',false)\" onmouseout=\"highlightSetter('68S142I4',true)\">就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar 68S142I5' onmouseover=\"highlightSetter('68S142I5',false)\" onmouseout=\"highlightSetter('68S142I5',true)\">也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar 68S142I6' onmouseover=\"highlightSetter('68S142I6',false)\" onmouseout=\"highlightSetter('68S142I6',true)\">FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结","datatype":"webpage","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar'>就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar'>也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar'>FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结"}],"textWithDynamicClass":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar T67I0' onmouseover=\"highlightSetter('T67I0',false)\" onmouseout=\"highlightSetter('T67I0',true)\">提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar T67I1' onmouseover=\"highlightSetter('T67I1',false)\" onmouseout=\"highlightSetter('T67I1',true)\">是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。","replaceMap":{},"similar_word_count":58,"text":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["可实现","逻辑单元","器件","布尔图","等效","匹配","理想的","布尔网络","45","fpga","表述","电路逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":578.5817,"teacher":"","textWithDynamicClass":"但是由于考虑到时间和速率,<em class='similar 69S143I1' onmouseover=\"highlightSetter('69S143I1',false)\" onmouseout=\"highlightSetter('69S143I1',true)\">大多数的商用EDA工具使用较多的依然还是基于树或图的结构匹配算法。</em><em class='similar 69S143I2' onmouseover=\"highlightSetter('69S143I2',false)\" onmouseout=\"highlightSetter('69S143I2',true)\">工艺映射自动化过程的最后一步是覆盖,</em><em class='similar 69S143I3' onmouseover=\"highlightSetter('69S143I3',false)\" onmouseout=\"highlightSetter('69S143I3',true)\">它的作用是根据实际电路的要求,</em><em class='similar 69S143I4' onmouseover=\"highlightSetter('69S143I4',false)\" onmouseout=\"highlightSetter('69S143I4',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹","datatype":"webpage","clcs":[],"similarityPercentage":"61.6%","self":false,"text":"但是由于考虑到时间和速率,<em class='similar'>大多数的商用EDA工具使用较多的依然还是基于树或图的结构匹配算法。</em><em class='similar'>工艺映射自动化过程的最后一步是覆盖,</em><em class='similar'>它的作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹"},{"profession":false,"keywords":[],"year":"","docid":"9000190283878711","author":"","university":"","source":"网页","title":"多级逻辑面积优化设计方法","url":"http://www.doc88.com/p%2D4943406875941.html","reference":false,"similarScore":152.62021,"teacher":"","textWithDynamicClass":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar 69S145I7' onmouseover=\"highlightSetter('69S145I7',false)\" onmouseout=\"highlightSetter('69S145I7',true)\">工艺映射自动化过程的最后一步是疆盖。</em><em class='similar 69S145I8' onmouseover=\"highlightSetter('69S145I8',false)\" onmouseout=\"highlightSetter('69S145I8',true)\">它的作用就是在多种可行的匹配中,</em><em class='similar 69S145I9' onmouseover=\"highlightSetter('69S145I9',false)\" onmouseout=\"highlightSetter('69S145I9',true)\">根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出","datatype":"webpage","clcs":[],"similarityPercentage":"37.2%","self":false,"text":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar'>工艺映射自动化过程的最后一步是疆盖。</em><em class='similar'>它的作用就是在多种可行的匹配中,</em><em class='similar'>根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出"}],"textWithDynamicClass":"<em class='similar T68I0' onmouseover=\"highlightSetter('T68I0',false)\" onmouseout=\"highlightSetter('T68I0',true)\">在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,</em><em class='similar T68I1' onmouseover=\"highlightSetter('T68I1',false)\" onmouseout=\"highlightSetter('T68I1',true)\">其作用是根据实际电路的要求,</em><em class='similar T68I2' onmouseover=\"highlightSetter('T68I2',false)\" onmouseout=\"highlightSetter('T68I2',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。既依据一定的规则分离出部分子图进行匹配,并从匹配集中选出库单元,完成布尔网图到工艺网表的实际映射。","replaceMap":{},"similar_word_count":82,"text":"<em class='similar'>在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,</em><em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。既依据一定的规则分离出部分子图进行匹配,并从匹配集中选出库单元,完成布尔网图到工艺网表的实际映射。","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["eda","映射","最后一步","匹配","图结构","器件","可行","47"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":416.88254,"teacher":"","textWithDynamicClass":"点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。<em class='similar 70S146I3' onmouseover=\"highlightSetter('70S146I3',false)\" onmouseout=\"highlightSetter('70S146I3',true)\">也就是依据一定的规则分隔出部分网表进行匹配,</em><em class='similar 70S146I4' onmouseover=\"highlightSetter('70S146I4',false)\" onmouseout=\"highlightSetter('70S146I4',true)\">并从匹配集中选出库单元,</em><em class='similar 70S146I5' onmouseover=\"highlightSetter('70S146I5',false)\" onmouseout=\"highlightSetter('70S146I5',true)\">完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,<em class='similar 70S146I7' onmouseover=\"highlightSetter('70S146I7',false)\" onmouseout=\"highlightSetter('70S146I7',true)\">要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。<em class='similar'>也就是依据一定的规则分隔出部分网表进行匹配,</em><em class='similar'>并从匹配集中选出库单元,</em><em class='similar'>完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,<em class='similar'>要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库"}],"textWithDynamicClass":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。<em class='similar T69I0' onmouseover=\"highlightSetter('T69I0',false)\" onmouseout=\"highlightSetter('T69I0',true)\">既依据一定的规则分离出部分子图进行匹配,</em><em class='similar T69I1' onmouseover=\"highlightSetter('T69I1',false)\" onmouseout=\"highlightSetter('T69I1',true)\">并从匹配集中选出库单元,</em><em class='similar T69I2' onmouseover=\"highlightSetter('T69I2',false)\" onmouseout=\"highlightSetter('T69I2',true)\">完成布尔网图到工艺网表的实际映射。</em><em class='similar T69I3' onmouseover=\"highlightSetter('T69I3',false)\" onmouseout=\"highlightSetter('T69I3',true)\">要保证每完成的一组匹配单元,</em><em class='similar T69I4' onmouseover=\"highlightSetter('T69I4',false)\" onmouseout=\"highlightSetter('T69I4',true)\">其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,</em>且每组单元间不存在重叠关系。工艺映射的核心优化算法是如何分割布尔网表、如何选取匹配集,从而满足用户所期望的对面积、功耗、","replaceMap":{},"similar_word_count":90,"text":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。<em class='similar'>既依据一定的规则分离出部分子图进行匹配,</em><em class='similar'>并从匹配集中选出库单元,</em><em class='similar'>完成布尔网图到工艺网表的实际映射。</em><em class='similar'>要保证每完成的一组匹配单元,</em><em class='similar'>其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,</em>且每组单元间不存在重叠关系。工艺映射的核心优化算法是如何分割布尔网表、如何选取匹配集,从而满足用户所期望的对面积、功耗、","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["堆叠"],"keyword":"重叠"}],"keyword":["子图","匹配","出库","布尔","网图","网表","映射","重叠"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":314,"teacher":"","textWithDynamicClass":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,<em class='similar 71S147I6' onmouseover=\"highlightSetter('71S147I6',false)\" onmouseout=\"highlightSetter('71S147I6',true)\">功耗等)</em>最优的一组匹配。<em class='similar 71S147I8' onmouseover=\"highlightSetter('71S147I8',false)\" onmouseout=\"highlightSetter('71S147I8',true)\">覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar 71S147I9' onmouseover=\"highlightSetter('71S147I9',false)\" onmouseout=\"highlightSetter('71S147I9',true)\">如何选取匹配集。</em><em class='similar 71S147I10' onmouseover=\"highlightSetter('71S147I10',false)\" onmouseout=\"highlightSetter('71S147I10',true)\">最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程","datatype":"webpage","clcs":[],"similarityPercentage":"78.5%","self":false,"text":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,<em class='similar'>功耗等)</em>最优的一组匹配。<em class='similar'>覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集。</em><em class='similar'>最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程"}],"textWithDynamicClass":"其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,且每组单元间不存在重叠关系。<em class='similar T70I1' onmouseover=\"highlightSetter('T70I1',false)\" onmouseout=\"highlightSetter('T70I1',true)\">工艺映射的核心优化算法是如何分割布尔网表、</em><em class='similar T70I2' onmouseover=\"highlightSetter('T70I2',false)\" onmouseout=\"highlightSetter('T70I2',true)\">如何选取匹配集,</em>从而满足用户所期望的对面积、<em class='similar T70I4' onmouseover=\"highlightSetter('T70I4',false)\" onmouseout=\"highlightSetter('T70I4',true)\">功耗、</em>速度的需求。<em class='similar T70I6' onmouseover=\"highlightSetter('T70I6',false)\" onmouseout=\"highlightSetter('T70I6',true)\">最后以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。","replaceMap":{},"similar_word_count":48,"text":"其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,且每组单元间不存在重叠关系。<em class='similar'>工艺映射的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集,</em>从而满足用户所期望的对面积、<em class='similar'>功耗、</em>速度的需求。<em class='similar'>最后以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。","suggest":{"synonyms":[{"synonyms":["割据"],"keyword":"分割"},{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["工艺映射","优化算法","分割","布尔","网表","匹配","功耗","高密度","fpga","原型验证系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":663.8369,"teacher":"","textWithDynamicClass":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar 72S148I3' onmouseover=\"highlightSetter('72S148I3',false)\" onmouseout=\"highlightSetter('72S148I3',true)\">但机器学习是一门多学科的交叉专业,</em><em class='similar 72S148I4' onmouseover=\"highlightSetter('72S148I4',false)\" onmouseout=\"highlightSetter('72S148I4',true)\">涵盖概率论,</em><em class='similar 72S148I5' onmouseover=\"highlightSetter('72S148I5',false)\" onmouseout=\"highlightSetter('72S148I5',true)\">统计学,</em><em class='similar 72S148I6' onmouseover=\"highlightSetter('72S148I6',false)\" onmouseout=\"highlightSetter('72S148I6',true)\">近似理论和复杂算法等知识,</em><em class='similar 72S148I7' onmouseover=\"highlightSetter('72S148I7',false)\" onmouseout=\"highlightSetter('72S148I7',true)\">使用计算机为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar 72S148I8' onmouseover=\"highlightSetter('72S148I8',false)\" onmouseout=\"highlightSetter('72S148I8',true)\">并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会","datatype":"webpage","clcs":[],"similarityPercentage":"79.0%","self":false,"text":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar'>但机器学习是一门多学科的交叉专业,</em><em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":556.6789,"teacher":"","textWithDynamicClass":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar 72S149I3' onmouseover=\"highlightSetter('72S149I3',false)\" onmouseout=\"highlightSetter('72S149I3',true)\">1机器学习机器学习是一门多学科交叉专业,</em><em class='similar 72S149I4' onmouseover=\"highlightSetter('72S149I4',false)\" onmouseout=\"highlightSetter('72S149I4',true)\">涵盖概率学与统计学知识,</em><em class='similar 72S149I5' onmouseover=\"highlightSetter('72S149I5',false)\" onmouseout=\"highlightSetter('72S149I5',true)\">近似理论和复杂算法知识,</em><em class='similar 72S149I6' onmouseover=\"highlightSetter('72S149I6',false)\" onmouseout=\"highlightSetter('72S149I6',true)\">用计算机作为工具,</em><em class='similar 72S149I7' onmouseover=\"highlightSetter('72S149I7',false)\" onmouseout=\"highlightSetter('72S149I7',true)\">致力于实时模拟人类学习方式,</em><em class='similar 72S149I8' onmouseover=\"highlightSetter('72S149I8',false)\" onmouseout=\"highlightSetter('72S149I8',true)\">将现有内容进行知识结构划分,</em><em class='similar 72S149I9' onmouseover=\"highlightSetter('72S149I9',false)\" onmouseout=\"highlightSetter('72S149I9',true)\">有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域","datatype":"journal","clcs":[],"similarityPercentage":"67.1%","self":false,"text":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar'>1机器学习机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率学与统计学知识,</em><em class='similar'>近似理论和复杂算法知识,</em><em class='similar'>用计算机作为工具,</em><em class='similar'>致力于实时模拟人类学习方式,</em><em class='similar'>将现有内容进行知识结构划分,</em><em class='similar'>有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域"},{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":547.76556,"teacher":"","textWithDynamicClass":"的核心,也就是使计算机具有人工智能的根本途径。它(机器学习)<em class='similar 72S150I8' onmouseover=\"highlightSetter('72S150I8',false)\" onmouseout=\"highlightSetter('72S150I8',true)\">涵盖概率论,</em><em class='similar 72S150I9' onmouseover=\"highlightSetter('72S150I9',false)\" onmouseout=\"highlightSetter('72S150I9',true)\">统计学,</em><em class='similar 72S150I10' onmouseover=\"highlightSetter('72S150I10',false)\" onmouseout=\"highlightSetter('72S150I10',true)\">近似理论和复杂算法等多学科知识,</em><em class='similar 72S150I11' onmouseover=\"highlightSetter('72S150I11',false)\" onmouseout=\"highlightSetter('72S150I11',true)\">使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em><em class='similar 72S150I12' onmouseover=\"highlightSetter('72S150I12',false)\" onmouseout=\"highlightSetter('72S150I12',true)\">将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,","datatype":"webpage","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"的核心,也就是使计算机具有人工智能的根本途径。它(机器学习)<em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等多学科知识,</em><em class='similar'>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em><em class='similar'>将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,"},{"profession":false,"keywords":[],"year":"","docid":"9000146417610611","author":"","university":"","source":"网页","title":"基于数据挖掘技术的组件核子密度预测研究_雷济充","url":"http://www.doc88.com/p%2D49199834379055.html","reference":false,"similarScore":275.35712,"teacher":"","textWithDynamicClass":"速建立辐射剂量场以保护人员安全,同时还有利于乏燃料的再利用。<em class='similar 72S152I5' onmouseover=\"highlightSetter('72S152I5',false)\" onmouseout=\"highlightSetter('72S152I5',true)\">机器学习是一门多学科交叉专业,</em><em class='similar 72S152I6' onmouseover=\"highlightSetter('72S152I6',false)\" onmouseout=\"highlightSetter('72S152I6',true)\">涵盖概率论、</em><em class='similar 72S152I7' onmouseover=\"highlightSetter('72S152I7',false)\" onmouseout=\"highlightSetter('72S152I7',true)\">统计学、</em><em class='similar 72S152I8' onmouseover=\"highlightSetter('72S152I8',false)\" onmouseout=\"highlightSetter('72S152I8',true)\">近似理论以及复杂算法等知识,</em>具有精确、自动化、迅速、可自定义以及规模化等特点,","datatype":"webpage","clcs":[],"similarityPercentage":"78.7%","self":false,"text":"速建立辐射剂量场以保护人员安全,同时还有利于乏燃料的再利用。<em class='similar'>机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率论、</em><em class='similar'>统计学、</em><em class='similar'>近似理论以及复杂算法等知识,</em>具有精确、自动化、迅速、可自定义以及规模化等特点,"},{"profession":false,"keywords":[],"year":"","docid":"9000198244714311","author":"","university":"","source":"网页","title":"科学家探索AI“选择性失忆”问题 - 今日头条 - 电子发烧友网","url":"http://www.elecfans.com/news/1694549.html","reference":false,"similarScore":200.90659,"teacher":"","textWithDynamicClass":"实现,那么这一概念将帮助人们很好地控制数据。据音圈模组获悉,<em class='similar 72S151I5' onmouseover=\"highlightSetter('72S151I5',false)\" onmouseout=\"highlightSetter('72S151I5',true)\">机器学习宗旨是使用计算机作为工具并致力于真实、</em><em class='similar 72S151I6' onmouseover=\"highlightSetter('72S151I6',false)\" onmouseout=\"highlightSetter('72S151I6',true)\">实时的模拟人类学习方式,</em><em class='similar 72S151I7' onmouseover=\"highlightSetter('72S151I7',false)\" onmouseout=\"highlightSetter('72S151I7',true)\">其可以将现有内容进行知识结构划分,</em>再广泛应用于解决工程应用和科学领域的复杂问题。现在","datatype":"webpage","clcs":[],"similarityPercentage":"41.0%","self":false,"text":"实现,那么这一概念将帮助人们很好地控制数据。据音圈模组获悉,<em class='similar'>机器学习宗旨是使用计算机作为工具并致力于真实、</em><em class='similar'>实时的模拟人类学习方式,</em><em class='similar'>其可以将现有内容进行知识结构划分,</em>再广泛应用于解决工程应用和科学领域的复杂问题。现在"},{"profession":false,"keywords":[],"year":"2015","docid":"2200000686724111","author":"梁洲","university":"","source":"大学生论文联合库","title":"模式分类与仿真","url":"","reference":false,"similarScore":140,"teacher":"","textWithDynamicClass":"术。面对着大数据时代信息知识的挑战,因此诞生了数据挖掘技术。<em class='similar 72S153I4' onmouseover=\"highlightSetter('72S153I4',false)\" onmouseout=\"highlightSetter('72S153I4',true)\">数据挖掘技术是一门多学科的交叉领域。</em><em class='similar 72S153I5' onmouseover=\"highlightSetter('72S153I5',false)\" onmouseout=\"highlightSetter('72S153I5',true)\">它涉及机器学习,</em>大数据处理、模式分类等多个领域的理论和技术。多年来","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.3%","self":false,"text":"术。面对着大数据时代信息知识的挑战,因此诞生了数据挖掘技术。<em class='similar'>数据挖掘技术是一门多学科的交叉领域。</em><em class='similar'>它涉及机器学习,</em>大数据处理、模式分类等多个领域的理论和技术。多年来"}],"textWithDynamicClass":"<em class='similar T71I0' onmouseover=\"highlightSetter('T71I0',false)\" onmouseout=\"highlightSetter('T71I0',true)\">机器学习是一门多学科交叉领域,</em><em class='similar T71I1' onmouseover=\"highlightSetter('T71I1',false)\" onmouseout=\"highlightSetter('T71I1',true)\">其涵盖概率论,</em><em class='similar T71I2' onmouseover=\"highlightSetter('T71I2',false)\" onmouseout=\"highlightSetter('T71I2',true)\">统计学,</em><em class='similar T71I3' onmouseover=\"highlightSetter('T71I3',false)\" onmouseout=\"highlightSetter('T71I3',true)\">近似理论和复杂算法等知识,</em><em class='similar T71I4' onmouseover=\"highlightSetter('T71I4',false)\" onmouseout=\"highlightSetter('T71I4',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar T71I5' onmouseover=\"highlightSetter('T71I5',false)\" onmouseout=\"highlightSetter('T71I5',true)\">并将现有内容进行对应知识体系划分来有效提高学习效率的方法</em>[3]。","replaceMap":{},"similar_word_count":94,"text":"<em class='similar'>机器学习是一门多学科交叉领域,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行对应知识体系划分来有效提高学习效率的方法</em>[3]。","suggest":{"synonyms":[{"synonyms":["尽力"],"keyword":"致力"},{"synonyms":["及时"],"keyword":"实时"}],"keyword":["机器学习","一门","多学科","交叉领域","涵盖","概率论","统计学","近似理论","复杂算法","致力","实时","学习方式","体系划分","有效提高","学习效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"1900023720243711","author":"刘凡平编著","university":"","source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":"","reference":false,"similarScore":325.01495,"teacher":"","textWithDynamicClass":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar 74S158I3' onmouseover=\"highlightSetter('74S158I3',false)\" onmouseout=\"highlightSetter('74S158I3',true)\">8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em><em class='similar 74S158I4' onmouseover=\"highlightSetter('74S158I4',false)\" onmouseout=\"highlightSetter('74S158I4',true)\">随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em><em class='similar 74S158I5' onmouseover=\"highlightSetter('74S158I5',false)\" onmouseout=\"highlightSetter('74S158I5',true)\">随机森林,</em>顾名思义就是用随机的方式建立一个森林,森林里面由很","datatype":"book","clcs":[],"similarityPercentage":"55.1%","self":false,"text":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar'>8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em><em class='similar'>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em><em class='similar'>随机森林,</em>顾名思义就是用随机的方式建立一个森林,森林里面由很"},{"profession":false,"keywords":[],"year":"","docid":"9000133817217811","author":"","university":"","source":"网页","title":"随机森林 - 道客巴巴","url":"https://www.doc88.com/p%2D6873249826968.html","reference":false,"similarScore":318.11093,"teacher":"","textWithDynamicClass":"每一棵树只投一票给它认为最合适的类。<em class='similar 74S156I1' onmouseover=\"highlightSetter('74S156I1',false)\" onmouseout=\"highlightSetter('74S156I1',true)\">在机器学习中,</em><em class='similar 74S156I2' onmouseover=\"highlightSetter('74S156I2',false)\" onmouseout=\"highlightSetter('74S156I2',true)\">随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定,<em class='similar 74S156I4' onmouseover=\"highlightSetter('74S156I4',false)\" onmouseout=\"highlightSetter('74S156I4',true)\">构成随机森林的基础分类器称为决策树。</em><em class='similar 74S156I5' onmouseover=\"highlightSetter('74S156I5',false)\" onmouseout=\"highlightSetter('74S156I5',true)\"> Leo Breiman 和 Adele Cutler 发展出推论出随机森林的算法。</em>这个术语是1995年由贝尔实验室的 Tin Kam","datatype":"webpage","clcs":[],"similarityPercentage":"53.9%","self":false,"text":"每一棵树只投一票给它认为最合适的类。<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定,<em class='similar'>构成随机森林的基础分类器称为决策树。</em><em class='similar'> Leo Breiman 和 Adele Cutler 发展出推论出随机森林的算法。</em>这个术语是1995年由贝尔实验室的 Tin Kam"},{"profession":false,"keywords":[],"year":"","docid":"9000014844308311","author":"","university":"","source":"网页","title":"集成学习(Ensemble Learning)综述 - JohnSon - CSDN博客","url":"https://blog.csdn.net/John_xyz/article/details/79602365","reference":false,"similarScore":208.45573,"teacher":"","textWithDynamicClass":"就是说,对于若干和弱学习器的输出进行平均得到最终的预测输出。<em class='similar 74S157I3' onmouseover=\"highlightSetter('74S157I3',false)\" onmouseout=\"highlightSetter('74S157I3',true)\">1.1随机森林随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar 74S157I5' onmouseover=\"highlightSetter('74S157I5',false)\" onmouseout=\"highlightSetter('74S157I5',true)\"> Leo Breiman和Adele Cutler发展出推论出随机森林的算法算法思想:</em>用N N来表示训练用例(样本)的个数,M M表示特","datatype":"webpage","clcs":[],"similarityPercentage":"46.3%","self":false,"text":"就是说,对于若干和弱学习器的输出进行平均得到最终的预测输出。<em class='similar'>1.1随机森林随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar'> Leo Breiman和Adele Cutler发展出推论出随机森林的算法算法思想:</em>用N N来表示训练用例(样本)的个数,M M表示特"},{"profession":false,"keywords":[],"year":"2019","docid":"1000031673706911","author":"","university":"","source":"人文杂志","title":"领投人特征对股权众筹融资绩效影响的实证研究","url":"","reference":false,"similarScore":166.89655,"teacher":"","textWithDynamicClass":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar 74S160I1' onmouseover=\"highlightSetter('74S160I1',false)\" onmouseout=\"highlightSetter('74S160I1',true)\">随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar 74S160I2' onmouseover=\"highlightSetter('74S160I2',false)\" onmouseout=\"highlightSetter('74S160I2',true)\">通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文","datatype":"journal","clcs":[],"similarityPercentage":"37.9%","self":false,"text":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar'>随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar'>通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023653559711","author":"何海群著","university":"","source":"","title":"零起点  Python足彩大数据与机器学习实盘分析","url":"","reference":false,"similarScore":73.47826,"teacher":"","textWithDynamicClass":"Random Decision Forests)发展而来的。<em class='similar 74S159I7' onmouseover=\"highlightSetter('74S159I7',false)\" onmouseout=\"highlightSetter('74S159I7',true)\">Leo Breiman和AdeleCutler推论出了随机森林的算法,</em>并注册了Random Forests商标。⋯胡阵.","datatype":"book","clcs":[],"similarityPercentage":"49.0%","self":false,"text":"Random Decision Forests)发展而来的。<em class='similar'>Leo Breiman和AdeleCutler推论出了随机森林的算法,</em>并注册了Random Forests商标。⋯胡阵."}],"textWithDynamicClass":"<em class='similar T73I0' onmouseover=\"highlightSetter('T73I0',false)\" onmouseout=\"highlightSetter('T73I0',true)\">在机器学习中,</em><em class='similar T73I1' onmouseover=\"highlightSetter('T73I1',false)\" onmouseout=\"highlightSetter('T73I1',true)\">随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar T73I2' onmouseover=\"highlightSetter('T73I2',false)\" onmouseout=\"highlightSetter('T73I2',true)\">随机森林是Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em><em class='similar T73I3' onmouseover=\"highlightSetter('T73I3',false)\" onmouseout=\"highlightSetter('T73I3',true)\">这个算法是多学习集成学习的典型模型。</em>","replaceMap":{},"similar_word_count":96,"text":"<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em><em class='similar'>这个算法是多学习集成学习的典型模型。</em>","suggest":{"synonyms":[{"synonyms":["推行"],"keyword":"推论"}],"keyword":["机器学习","随机森林","决策树","学习器","leo","breiman","adele","cutler","推论","集成学习","典型模型"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":394.32455,"teacher":"","textWithDynamicClass":"<em class='similar 75S162I0' onmouseover=\"highlightSetter('75S162I0',false)\" onmouseout=\"highlightSetter('75S162I0',true)\">g是并行式集成学习方法最著名的代表。</em>从名字即可看出,<em class='similar 75S162I2' onmouseover=\"highlightSetter('75S162I2',false)\" onmouseout=\"highlightSetter('75S162I2',true)\">它是直接基于自助采样法</em>((bootstrapsampling)的。<em class='similar 75S162I6' onmouseover=\"highlightSetter('75S162I6',false)\" onmouseout=\"highlightSetter('75S162I6',true)\">给定包含m个样本的数据集,</em><em class='similar 75S162I7' onmouseover=\"highlightSetter('75S162I7',false)\" onmouseout=\"highlightSetter('75S162I7',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S162I8' onmouseover=\"highlightSetter('75S162I8',false)\" onmouseout=\"highlightSetter('75S162I8',true)\">再把该样本放回初始数据集,</em><em class='similar 75S162I9' onmouseover=\"highlightSetter('75S162I9',false)\" onmouseout=\"highlightSetter('75S162I9',true)\">使得下次采样时该样本仍有可能被选中,</em>这样,经过m次随机采样操作,我们得到含。个样本的采","datatype":"webpage","clcs":[],"similarityPercentage":"45.9%","self":false,"text":"<em class='similar'>g是并行式集成学习方法最著名的代表。</em>从名字即可看出,<em class='similar'>它是直接基于自助采样法</em>((bootstrapsampling)的。<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下次采样时该样本仍有可能被选中,</em>这样,经过m次随机采样操作,我们得到含。个样本的采"},{"profession":false,"keywords":[],"year":"","docid":"9000017012081811","author":"","university":"","source":"网页","title":"集成学习（Boosting,Bagging和随机森林） - u014665416的博客 - CSDN博客","url":"https://blog.csdn.net/u014665416/article/details/51557318","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"器数目达到事先指定的值T,最终将这T个基学习器进行加权结合。<em class='similar 75S161I5' onmouseover=\"highlightSetter('75S161I5',false)\" onmouseout=\"highlightSetter('75S161I5',true)\"> Bagging是并行式集成学习代表方法。</em><em class='similar 75S161I6' onmouseover=\"highlightSetter('75S161I6',false)\" onmouseout=\"highlightSetter('75S161I6',true)\">基于&quot;自助采样法&quot;</em>(bootstrap sampling)。自助采样法机制:<em class='similar 75S161I9' onmouseover=\"highlightSetter('75S161I9',false)\" onmouseout=\"highlightSetter('75S161I9',true)\">给定包含m个样本的数据集,</em><em class='similar 75S161I10' onmouseover=\"highlightSetter('75S161I10',false)\" onmouseout=\"highlightSetter('75S161I10',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S161I11' onmouseover=\"highlightSetter('75S161I11',false)\" onmouseout=\"highlightSetter('75S161I11',true)\">再把该样本放回初始数据集,</em><em class='similar 75S161I12' onmouseover=\"highlightSetter('75S161I12',false)\" onmouseout=\"highlightSetter('75S161I12',true)\">使得下一次采样时该样本还会被采到。</em>这样,经过m次样本采集,","datatype":"webpage","clcs":[],"similarityPercentage":"47.7%","self":false,"text":"器数目达到事先指定的值T,最终将这T个基学习器进行加权结合。<em class='similar'> Bagging是并行式集成学习代表方法。</em><em class='similar'>基于&quot;自助采样法&quot;</em>(bootstrap sampling)。自助采样法机制:<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下一次采样时该样本还会被采到。</em>这样,经过m次样本采集,"},{"profession":false,"keywords":[],"year":"","docid":"9000059541096411","author":"","university":"","source":"网页","title":"基于hadoop的数据采样集合训练","url":"http://blog.csdn.net/code_caq/article/details/69936176","reference":false,"similarScore":367.57455,"teacher":"","textWithDynamicClass":"的方法统计所有分类器的分类结果,结果最高的类别即为最终标签。<em class='similar 75S163I3' onmouseover=\"highlightSetter('75S163I3',false)\" onmouseout=\"highlightSetter('75S163I3',true)\">bagging是并行式集成学习代表方法。</em><em class='similar 75S163I4' onmouseover=\"highlightSetter('75S163I4',false)\" onmouseout=\"highlightSetter('75S163I4',true)\">基于&quot;自助采样法&quot;</em>(bootstrapsampling)。自助采样法机制:<em class='similar 75S163I7' onmouseover=\"highlightSetter('75S163I7',false)\" onmouseout=\"highlightSetter('75S163I7',true)\">给定包含m个样本的数据集,</em><em class='similar 75S163I8' onmouseover=\"highlightSetter('75S163I8',false)\" onmouseout=\"highlightSetter('75S163I8',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S163I9' onmouseover=\"highlightSetter('75S163I9',false)\" onmouseout=\"highlightSetter('75S163I9',true)\">再把该样本放回初始数据集,</em><em class='similar 75S163I10' onmouseover=\"highlightSetter('75S163I10',false)\" onmouseout=\"highlightSetter('75S163I10',true)\">使得下一次采样时该样本还会被采到。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"47.7%","self":false,"text":"的方法统计所有分类器的分类结果,结果最高的类别即为最终标签。<em class='similar'>bagging是并行式集成学习代表方法。</em><em class='similar'>基于&quot;自助采样法&quot;</em>(bootstrapsampling)。自助采样法机制:<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下一次采样时该样本还会被采到。</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":274.38013,"teacher":"","textWithDynamicClass":"ing采用自助采样法(bootstrap sampling)<em class='similar 75S164I2' onmouseover=\"highlightSetter('75S164I2',false)\" onmouseout=\"highlightSetter('75S164I2',true)\">采样数据。</em><em class='similar 75S164I3' onmouseover=\"highlightSetter('75S164I3',false)\" onmouseout=\"highlightSetter('75S164I3',true)\">给定包含m个样本的数据集,</em><em class='similar 75S164I4' onmouseover=\"highlightSetter('75S164I4',false)\" onmouseout=\"highlightSetter('75S164I4',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 75S164I5' onmouseover=\"highlightSetter('75S164I5',false)\" onmouseout=\"highlightSetter('75S164I5',true)\">再把该样本放回初始数据集,</em><em class='similar 75S164I6' onmouseover=\"highlightSetter('75S164I6',false)\" onmouseout=\"highlightSetter('75S164I6',true)\">使得下次采样时,</em><em class='similar 75S164I7' onmouseover=\"highlightSetter('75S164I7',false)\" onmouseout=\"highlightSetter('75S164I7',true)\">样本仍可能被选中,</em>这样,经过m次随机采样操作,我们得到包含m个样本的","datatype":"webpage","clcs":[],"similarityPercentage":"45.7%","self":false,"text":"ing采用自助采样法(bootstrap sampling)<em class='similar'>采样数据。</em><em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下次采样时,</em><em class='similar'>样本仍可能被选中,</em>这样,经过m次随机采样操作,我们得到包含m个样本的"},{"profession":false,"keywords":[],"year":"","docid":"9000167184938611","author":"","university":"","source":"网页","title":"机器学习-模型评估与选择 - 西伯利亚大尾巴狼的个人空间 - OSCHINA - 中文开源技术交流社区","url":"https://my.oschina.net/u/3128043/blog/1613611","reference":false,"similarScore":125.138916,"teacher":"","textWithDynamicClass":"ping)\\n每次从D中随机复制一个样本到D1中,重复m次,<em class='similar 75S165I9' onmouseover=\"highlightSetter('75S165I9',false)\" onmouseout=\"highlightSetter('75S165I9',true)\">会得到一个拥有m个数据样本的D1数据集</em><em class='similar 75S165I10' onmouseover=\"highlightSetter('75S165I10',false)\" onmouseout=\"highlightSetter('75S165I10',true)\">(自主采样法:</em>可重复采样或又放回采样)。显然,D中的一部分数据会","datatype":"webpage","clcs":[],"similarityPercentage":"54.4%","self":false,"text":"ping)\\n每次从D中随机复制一个样本到D1中,重复m次,<em class='similar'>会得到一个拥有m个数据样本的D1数据集</em><em class='similar'>(自主采样法:</em>可重复采样或又放回采样)。显然,D中的一部分数据会"},{"profession":false,"keywords":[],"year":"","docid":"9000132962564111","author":"","university":"","source":"网页","title":"基于集成学习约束能量最小化的高光谱目标检测算法研究...","url":"http://www.doc88.com/p%2D6953893775176.html","reference":false,"similarScore":106.250015,"teacher":"","textWithDynamicClass":"g的主要思想,并加以改进,以适应高光谱目标检测这一特殊问题。<em class='similar 75S166I13' onmouseover=\"highlightSetter('75S166I13',false)\" onmouseout=\"highlightSetter('75S166I13',true)\">Bagging基于自主采样法,</em>它的基本流程是:<em class='similar 75S166I15' onmouseover=\"highlightSetter('75S166I15',false)\" onmouseout=\"highlightSetter('75S166I15',true)\">给定包含m个样本的数据集,</em>从中有放回抽取m个样本,重复以上操作T次,得到T轮","datatype":"webpage","clcs":[],"similarityPercentage":"53.1%","self":false,"text":"g的主要思想,并加以改进,以适应高光谱目标检测这一特殊问题。<em class='similar'>Bagging基于自主采样法,</em>它的基本流程是:<em class='similar'>给定包含m个样本的数据集,</em>从中有放回抽取m个样本,重复以上操作T次,得到T轮"}],"textWithDynamicClass":"<em class='similar T74I0' onmouseover=\"highlightSetter('T74I0',false)\" onmouseout=\"highlightSetter('T74I0',true)\">Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em><em class='similar T74I1' onmouseover=\"highlightSetter('T74I1',false)\" onmouseout=\"highlightSetter('T74I1',true)\">它基于自主采样法,</em><em class='similar T74I2' onmouseover=\"highlightSetter('T74I2',false)\" onmouseout=\"highlightSetter('T74I2',true)\">即给定一个数据集拥有固定m个数据样本,</em><em class='similar T74I3' onmouseover=\"highlightSetter('T74I3',false)\" onmouseout=\"highlightSetter('T74I3',true)\">学习算法先随机拿出一个样本放入采样集中,</em><em class='similar T74I4' onmouseover=\"highlightSetter('T74I4',false)\" onmouseout=\"highlightSetter('T74I4',true)\">再通过将该出去的样本放回数据集,</em><em class='similar T74I5' onmouseover=\"highlightSetter('T74I5',false)\" onmouseout=\"highlightSetter('T74I5',true)\">使得在每一次采样时均有可能取到之前的样本,</em>这样经过覆盖所有样本的次数的随机采样,我们可以获得包含m个数据的采样机,","replaceMap":{},"similar_word_count":116,"text":"<em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em><em class='similar'>它基于自主采样法,</em><em class='similar'>即给定一个数据集拥有固定m个数据样本,</em><em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em><em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em>这样经过覆盖所有样本的次数的随机采样,我们可以获得包含m个数据的采样机,","suggest":{"synonyms":[{"synonyms":["自助"],"keyword":"自主"}],"keyword":["bagging","并行式","集成学习","代表性","机器学习方法","自主","采样法","给定","数据集","数据样本","学习算法","采样","放回"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015681295811","author":"","university":"","source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990","reference":false,"similarScore":489.15878,"teacher":"","textWithDynamicClass":"把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中,<em class='similar 76S167I3' onmouseover=\"highlightSetter('76S167I3',false)\" onmouseout=\"highlightSetter('76S167I3',true)\">这样经过m次随机采样操作,</em><em class='similar 76S167I4' onmouseover=\"highlightSetter('76S167I4',false)\" onmouseout=\"highlightSetter('76S167I4',true)\">我们得到含m个样本的采样集,</em><em class='similar 76S167I5' onmouseover=\"highlightSetter('76S167I5',false)\" onmouseout=\"highlightSetter('76S167I5',true)\">初始训练集中有的样本在采样集中多次出现,</em><em class='similar 76S167I6' onmouseover=\"highlightSetter('76S167I6',false)\" onmouseout=\"highlightSetter('76S167I6',true)\">有的从未出现。</em><em class='similar 76S167I7' onmouseover=\"highlightSetter('76S167I7',false)\" onmouseout=\"highlightSetter('76S167I7',true)\">初始训练集中约有63.2%的样本会出现在采样集中。</em>���这样可以构建T个含m个训练样本的采样集,然后基于","datatype":"webpage","clcs":[],"similarityPercentage":"69.9%","self":false,"text":"把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中,<em class='similar'>这样经过m次随机采样操作,</em><em class='similar'>我们得到含m个样本的采样集,</em><em class='similar'>初始训练集中有的样本在采样集中多次出现,</em><em class='similar'>有的从未出现。</em><em class='similar'>初始训练集中约有63.2%的样本会出现在采样集中。</em>照这样可以构建T个含m个训练样本的采样集,然后基于"},{"profession":false,"keywords":[],"year":"","docid":"9000178176625511","author":"","university":"","source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516","reference":false,"similarScore":385.13153,"teacher":"","textWithDynamicClass":"到一个含n个样本实例的采样集,<em class='similar 76S170I1' onmouseover=\"highlightSetter('76S170I1',false)\" onmouseout=\"highlightSetter('76S170I1',true)\">初始训练集中有的样本在采样集里多次出现,</em><em class='similar 76S170I2' onmouseover=\"highlightSetter('76S170I2',false)\" onmouseout=\"highlightSetter('76S170I2',true)\">有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。</em>11lim10.368nenn(2-12)<em class='similar 76S170I5' onmouseover=\"highlightSetter('76S170I5',false)\" onmouseout=\"highlightSetter('76S170I5',true)\">如此我们可以得到T个含n个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,之后将这些基","datatype":"webpage","clcs":[],"similarityPercentage":"50.7%","self":false,"text":"到一个含n个样本实例的采样集,<em class='similar'>初始训练集中有的样本在采样集里多次出现,</em><em class='similar'>有的则从未出现由下式2-12可知初始训练集中约有63.2%的样本实例会出现在采样集中。</em>11lim10.368nenn(2-12)<em class='similar'>如此我们可以得到T个含n个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,之后将这些基"},{"profession":false,"keywords":[],"year":"","docid":"9000016981477111","author":"","university":"","source":"网页","title":"Bagging与随机森林 - 浅梦的博客 - CSDN博客","url":"https://blog.csdn.net/u012151283/article/details/78104678","reference":false,"similarScore":357.73022,"teacher":"","textWithDynamicClass":"sampling)<em class='similar 76S168I1' onmouseover=\"highlightSetter('76S168I1',false)\" onmouseout=\"highlightSetter('76S168I1',true)\">。给定包含m个样本的数据集,</em>先随机取出一个样本放入采样集中,再把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中。<em class='similar 76S168I5' onmouseover=\"highlightSetter('76S168I5',false)\" onmouseout=\"highlightSetter('76S168I5',true)\">这样,</em><em class='similar 76S168I6' onmouseover=\"highlightSetter('76S168I6',false)\" onmouseout=\"highlightSetter('76S168I6',true)\">经过m次随机采样操作,</em><em class='similar 76S168I7' onmouseover=\"highlightSetter('76S168I7',false)\" onmouseout=\"highlightSetter('76S168I7',true)\">我们得到含m个样本的采样集,</em><em class='similar 76S168I8' onmouseover=\"highlightSetter('76S168I8',false)\" onmouseout=\"highlightSetter('76S168I8',true)\">初始训练集中有的样本再采样集里多次出现,</em><em class='similar 76S168I9' onmouseover=\"highlightSetter('76S168I9',false)\" onmouseout=\"highlightSetter('76S168I9',true)\">有的则从未出现。</em>采样出T个含有m个训练样本的采样集,然后基于每个采","datatype":"webpage","clcs":[],"similarityPercentage":"56.8%","self":false,"text":"sampling)<em class='similar'>。给定包含m个样本的数据集,</em>先随机取出一个样本放入采样集中,再把该样本放回初始数据集,使得下次采样时该样本仍有可能被选中。<em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到含m个样本的采样集,</em><em class='similar'>初始训练集中有的样本再采样集里多次出现,</em><em class='similar'>有的则从未出现。</em>采样出T个含有m个训练样本的采样集,然后基于每个采"},{"profession":false,"keywords":[],"year":"","docid":"9000120026804811","author":"","university":"","source":"网页","title":"二战周志华《机器学习》--集成学习 - 简书","url":"https://www.jianshu.com/p/7a5cecef3cc8","reference":false,"similarScore":348.12497,"teacher":"","textWithDynamicClass":"把这个样本放回到初始数据集,使得下次采样时该样本仍可能被选,<em class='similar 76S169I3' onmouseover=\"highlightSetter('76S169I3',false)\" onmouseout=\"highlightSetter('76S169I3',true)\">这样,</em><em class='similar 76S169I4' onmouseover=\"highlightSetter('76S169I4',false)\" onmouseout=\"highlightSetter('76S169I4',true)\">经过m次随机采样操作,</em><em class='similar 76S169I5' onmouseover=\"highlightSetter('76S169I5',false)\" onmouseout=\"highlightSetter('76S169I5',true)\">我们得到含有m个样本的采样集,</em><em class='similar 76S169I6' onmouseover=\"highlightSetter('76S169I6',false)\" onmouseout=\"highlightSetter('76S169I6',true)\">初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,<em class='similar 76S169I11' onmouseover=\"highlightSetter('76S169I11',false)\" onmouseout=\"highlightSetter('76S169I11',true)\">我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,再将这些学习","datatype":"webpage","clcs":[],"similarityPercentage":"53.6%","self":false,"text":"把这个样本放回到初始数据集,使得下次采样时该样本仍可能被选,<em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到含有m个样本的采样集,</em><em class='similar'>初始训练集中有的样本在采样集中多次出现,</em>有的没有出现,我们之前计算过这个比例,大概有63.2%的样本会出现在采样集中。照这样,<em class='similar'>我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基学习器,再将这些学习"},{"profession":false,"keywords":[],"year":"","docid":"9000128075291811","author":"","university":"","source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505","reference":false,"similarScore":152.10526,"teacher":"","textWithDynamicClass":"行集成学习代表:Bagging。采用了前面提过的自助采样法。<em class='similar 76S171I6' onmouseover=\"highlightSetter('76S171I6',false)\" onmouseout=\"highlightSetter('76S171I6',true)\">(初始训练集中约有63.2%的样本有出现在采样集中)</em>。对预测输出结合是,分类任务简单投票;回归任务采用","datatype":"webpage","clcs":[],"similarityPercentage":"76.1%","self":false,"text":"行集成学习代表:Bagging。采用了前面提过的自助采样法。<em class='similar'>(初始训练集中约有63.2%的样本有出现在采样集中)</em>。对预测输出结合是,分类任务简单投票;回归任务采用"}],"textWithDynamicClass":"再通过将该出去的样本放回数据集,使得在每一次采样时均有可能取到之前的样本,<em class='similar T75I0' onmouseover=\"highlightSetter('T75I0',false)\" onmouseout=\"highlightSetter('T75I0',true)\">这样经过覆盖所有样本的次数的随机采样,</em><em class='similar T75I1' onmouseover=\"highlightSetter('T75I1',false)\" onmouseout=\"highlightSetter('T75I1',true)\">我们可以获得包含m个数据的采样机,</em><em class='similar T75I2' onmouseover=\"highlightSetter('T75I2',false)\" onmouseout=\"highlightSetter('T75I2',true)\">初始训练集中有的样本在采样集中多次出现,</em><em class='similar T75I3' onmouseover=\"highlightSetter('T75I3',false)\" onmouseout=\"highlightSetter('T75I3',true)\">有的则从未出现。</em>由式(2-1)<em class='similar T75I6' onmouseover=\"highlightSetter('T75I6',false)\" onmouseout=\"highlightSetter('T75I6',true)\">可知采样集中将会出现训练集中约三分之二的数据。</em>","replaceMap":{},"similar_word_count":87,"text":"再通过将该出去的样本放回数据集,使得在每一次采样时均有可能取到之前的样本,<em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样机,</em><em class='similar'>初始训练集中有的样本在采样集中多次出现,</em><em class='similar'>有的则从未出现。</em>由式(2-1)<em class='similar'>可知采样集中将会出现训练集中约三分之二的数据。</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["随机采样","采样机","训练","采样","三分"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000181730880511","author":"","university":"","source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html","reference":false,"similarScore":272.43323,"teacher":"","textWithDynamicClass":"quot;(out-of-bag estimate)。这样,<em class='similar 77S172I4' onmouseover=\"highlightSetter('77S172I4',false)\" onmouseout=\"highlightSetter('77S172I4',true)\">就可以采样出 T 个含有 m 个训练样本的采样集,</em><em class='similar 77S172I5' onmouseover=\"highlightSetter('77S172I5',false)\" onmouseout=\"highlightSetter('77S172I5',true)\">然后基于每个采样集训练出一个基学习器,</em><em class='similar 77S172I6' onmouseover=\"highlightSetter('77S172I6',false)\" onmouseout=\"highlightSetter('77S172I6',true)\">再将这些基学习器进行结合,</em>这就是 Bagging的基本流程。在对预测输出进行","datatype":"webpage","clcs":[],"similarityPercentage":"54.5%","self":false,"text":"quot;(out-of-bag estimate)。这样,<em class='similar'>就可以采样出 T 个含有 m 个训练样本的采样集,</em><em class='similar'>然后基于每个采样集训练出一个基学习器,</em><em class='similar'>再将这些基学习器进行结合,</em>这就是 Bagging的基本流程。在对预测输出进行"},{"profession":false,"keywords":[],"year":"","docid":"9000017085073411","author":"","university":"","source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404","reference":false,"similarScore":272.43323,"teacher":"","textWithDynamicClass":"样本出现在采样集中,详细见《西瓜书》第二章式2.1)。这样,<em class='similar 77S175I6' onmouseover=\"highlightSetter('77S175I6',false)\" onmouseout=\"highlightSetter('77S175I6',true)\">我们可以采样出T个含m个训练样本的采样集,</em><em class='similar 77S175I7' onmouseover=\"highlightSetter('77S175I7',false)\" onmouseout=\"highlightSetter('77S175I7',true)\">然后基于每个采样集训练出一个学习器,</em><em class='similar 77S175I8' onmouseover=\"highlightSetter('77S175I8',false)\" onmouseout=\"highlightSetter('77S175I8',true)\">再将这些基学习器进行结合。</em>这就是bagging的基本流程。分类介绍2.2——","datatype":"webpage","clcs":[],"similarityPercentage":"55.6%","self":false,"text":"样本出现在采样集中,详细见《西瓜书》第二章式2.1)。这样,<em class='similar'>我们可以采样出T个含m个训练样本的采样集,</em><em class='similar'>然后基于每个采样集训练出一个学习器,</em><em class='similar'>再将这些基学习器进行结合。</em>这就是bagging的基本流程。分类介绍2.2——"},{"profession":false,"keywords":[],"year":"","docid":"9000178809845011","author":"","university":"","source":"网页","title":"集成学习在短文本分类中的应用研究","url":"http://www.doc88.com/p%2D48247304537541.html","reference":false,"similarScore":207.43324,"teacher":"","textWithDynamicClass":"采用有放回的随机抽取,<em class='similar 77S173I1' onmouseover=\"highlightSetter('77S173I1',false)\" onmouseout=\"highlightSetter('77S173I1',true)\">抽取出 T个含有 m 个样本的训练集,</em>初始训练集中样本在整个迭代过程中可能出现多次,也可能不出现,每轮迭代用于训练的样本之间互相独立。<em class='similar 77S173I5' onmouseover=\"highlightSetter('77S173I5',false)\" onmouseout=\"highlightSetter('77S173I5',true)\">然后基于每个采样集训练出一个基学习器,</em><em class='similar 77S173I6' onmouseover=\"highlightSetter('77S173I6',false)\" onmouseout=\"highlightSetter('77S173I6',true)\">再将这些基学习器进行结合。</em>一般而言,在基学习器性能相差较大时宜采用加权平均法","datatype":"webpage","clcs":[],"similarityPercentage":"46.1%","self":false,"text":"采用有放回的随机抽取,<em class='similar'>抽取出 T个含有 m 个样本的训练集,</em>初始训练集中样本在整个迭代过程中可能出现多次,也可能不出现,每轮迭代用于训练的样本之间互相独立。<em class='similar'>然后基于每个采样集训练出一个基学习器,</em><em class='similar'>再将这些基学习器进行结合。</em>一般而言,在基学习器性能相差较大时宜采用加权平均法"},{"profession":false,"keywords":[],"year":"2019","docid":"1000029007087911","author":"杨景朝；蒋秀明；董九志；陈云军；梅宝龙","university":"天津工业大学机械工程学院;天津工业大学天津市现代机电装备技术重点实验室;天津工业大学电气工程与自动化学院;","source":"纺织学报","title":"基于机器学习的整体穿刺加压参数预测方法","url":"","reference":false,"similarScore":195.61398,"teacher":"","textWithDynamicClass":"(Bagging)算法适用于强模型,方差较大偏差较小的情况。<em class='similar 77S174I7' onmouseover=\"highlightSetter('77S174I7',false)\" onmouseout=\"highlightSetter('77S174I7',true)\">Bagging算法采样出T个含m个训练样本的采样集,</em><em class='similar 77S174I8' onmouseover=\"highlightSetter('77S174I8',false)\" onmouseout=\"highlightSetter('77S174I8',true)\">对每个采样集训练出1个基学习器,</em>回归预测中采用平均T个基学习器预测结果的方法。使用","datatype":"journal","clcs":["TS174"],"similarityPercentage":"57.5%","self":false,"text":"(Bagging)算法适用于强模型,方差较大偏差较小的情况。<em class='similar'>Bagging算法采样出T个含m个训练样本的采样集,</em><em class='similar'>对每个采样集训练出1个基学习器,</em>回归预测中采用平均T个基学习器预测结果的方法。使用"}],"textWithDynamicClass":"<em class='similar T76I0' onmouseover=\"highlightSetter('T76I0',false)\" onmouseout=\"highlightSetter('T76I0',true)\">通过上述算法可以采样出个含个训练样本的采样数据集,</em><em class='similar T76I1' onmouseover=\"highlightSetter('T76I1',false)\" onmouseout=\"highlightSetter('T76I1',true)\">随后基于每个采样集训练出对应的弱学习器,</em><em class='similar T76I2' onmouseover=\"highlightSetter('T76I2',false)\" onmouseout=\"highlightSetter('T76I2',true)\">再通过将这些基学习器的学习结果进行进一步的结合。</em>从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,若基学习器的计算复杂度为,则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,","replaceMap":{"通过上述算法可以采样出个含个训练样本的采样数据集,":"通过上述算法可以采样出 个含 个训练样本的采样数据集,"},"similar_word_count":69,"text":"<em class='similar'>通过上述算法可以采样出个含个训练样本的采样数据集,</em><em class='similar'>随后基于每个采样集训练出对应的弱学习器,</em><em class='similar'>再通过将这些基学习器的学习结果进行进一步的结合。</em>从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,若基学习器的计算复杂度为,则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,","suggest":{"synonyms":[],"keyword":["采样","训练样本","数据集","集训","练出","学习器","学习结果","bagging","算法复杂度","学习效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000128720481111","author":"","university":"","source":"网页","title":"西瓜书学习笔记——第八章：集成学习_Andrewings-CSDN博客","url":"https://blog.csdn.net/shichensuyu/article/details/93312974","reference":false,"similarScore":120,"teacher":"","textWithDynamicClass":"单平均法Bagging的优点由Bagging算法的过程可见,<em class='similar 78S176I4' onmouseover=\"highlightSetter('78S176I4',false)\" onmouseout=\"highlightSetter('78S176I4',true)\">若基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)","datatype":"webpage","clcs":[],"similarityPercentage":"92.3%","self":false,"text":"单平均法Bagging的优点由Bagging算法的过程可见,<em class='similar'>若基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)"}],"textWithDynamicClass":"随后基于每个采样集训练出对应的弱学习器,再通过将这些基学习器的学习结果进行进一步的结合。从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar T77I0' onmouseover=\"highlightSetter('T77I0',false)\" onmouseout=\"highlightSetter('T77I0',true)\">若基学习器的计算复杂度为,</em>则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,而通常是较大样本数据而言是一个较小的常数,因此,训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,从而证明Bagging是具有较低时间复杂度、较高学习效率的集成学习算法。","replaceMap":{"则通过上述方法可知该算法的复杂度约为,":"则通过上述方法可知该算法的复杂度约为 ,","考虑到采样与决策时的时间复杂度很小,":"考虑到采样与决策时的时间复杂度 很小,","若基学习器的计算复杂度为,":"若基学习器的计算复杂度为 ,"},"similar_word_count":13,"text":"随后基于每个采样集训练出对应的弱学习器,再通过将这些基学习器的学习结果进行进一步的结合。从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的计算复杂度为,</em>则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,而通常是较大样本数据而言是一个较小的常数,因此,训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,从而证明Bagging是具有较低时间复杂度、较高学习效率的集成学习算法。","suggest":{"synonyms":[],"keyword":["若基","学习器","计算复杂度","复杂度","采样","时间复杂度","很小"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":326.63126,"teacher":"","textWithDynamicClass":"m)+O(,)),考虑到采样与投票/平均过程的复杂度O(,)<em class='similar 79S178I8' onmouseover=\"highlightSetter('79S178I8',false)\" onmouseout=\"highlightSetter('79S178I8',true)\">很小,</em><em class='similar 79S178I9' onmouseover=\"highlightSetter('79S178I9',false)\" onmouseout=\"highlightSetter('79S178I9',true)\">而T通常是一个不太大的常数,</em><em class='similar 79S178I10' onmouseover=\"highlightSetter('79S178I10',false)\" onmouseout=\"highlightSetter('79S178I10',true)\">因此,</em><em class='similar 79S178I11' onmouseover=\"highlightSetter('79S178I11',false)\" onmouseout=\"highlightSetter('79S178I11',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em><em class='similar 79S178I12' onmouseover=\"highlightSetter('79S178I12',false)\" onmouseout=\"highlightSetter('79S178I12',true)\">这说明Bagging是一个很高效的集成学习算法。</em>另外,与标准AdaBoost只适用于二分类任务不同","datatype":"book","clcs":["TP181"],"similarityPercentage":"51.0%","self":false,"text":"m)+O(,)),考虑到采样与投票/平均过程的复杂度O(,)<em class='similar'>很小,</em><em class='similar'>而T通常是一个不太大的常数,</em><em class='similar'>因此,</em><em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em><em class='similar'>这说明Bagging是一个很高效的集成学习算法。</em>另外,与标准AdaBoost只适用于二分类任务不同"},{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":306.63123,"teacher":"","textWithDynamicClass":"<em class='similar 79S177I0' onmouseover=\"highlightSetter('79S177I0',false)\" onmouseout=\"highlightSetter('79S177I0',true)\">非常高效的集成学习算法,</em>算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar 79S177I11' onmouseover=\"highlightSetter('79S177I11',false)\" onmouseout=\"highlightSetter('79S177I11',true)\">的复杂度较小,</em><em class='similar 79S177I12' onmouseover=\"highlightSetter('79S177I12',false)\" onmouseout=\"highlightSetter('79S177I12',true)\">?也是一个不太大的常数,</em><em class='similar 79S177I13' onmouseover=\"highlightSetter('79S177I13',false)\" onmouseout=\"highlightSetter('79S177I13',true)\">因此,</em><em class='similar 79S177I14' onmouseover=\"highlightSetter('79S177I14',false)\" onmouseout=\"highlightSetter('79S177I14',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等","datatype":"webpage","clcs":[],"similarityPercentage":"52.0%","self":false,"text":"<em class='similar'>非常高效的集成学习算法,</em>算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar'>的复杂度较小,</em><em class='similar'>?也是一个不太大的常数,</em><em class='similar'>因此,</em><em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等"},{"profession":false,"keywords":[],"year":"","docid":"9000016188337811","author":"","university":"","source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449","reference":false,"similarScore":214.41183,"teacher":"","textWithDynamicClass":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar 79S181I6' onmouseover=\"highlightSetter('79S181I6',false)\" onmouseout=\"highlightSetter('79S181I6',true)\"> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由","datatype":"webpage","clcs":[],"similarityPercentage":"41.2%","self":false,"text":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar'> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由"},{"profession":false,"keywords":[],"year":"","docid":"9000130331965511","author":"","university":"","source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610","reference":false,"similarScore":155.58823,"teacher":"","textWithDynamicClass":"过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar 79S180I12' onmouseover=\"highlightSetter('79S180I12',false)\" onmouseout=\"highlightSetter('79S180I12',true)\">训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任","datatype":"webpage","clcs":[],"similarityPercentage":"55.6%","self":false,"text":"过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar'>训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任"}],"textWithDynamicClass":"则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,<em class='similar T78I0' onmouseover=\"highlightSetter('T78I0',false)\" onmouseout=\"highlightSetter('T78I0',true)\">而通常是较大样本数据而言是一个较小的常数,</em><em class='similar T78I1' onmouseover=\"highlightSetter('T78I1',false)\" onmouseout=\"highlightSetter('T78I1',true)\">因此,</em><em class='similar T78I2' onmouseover=\"highlightSetter('T78I2',false)\" onmouseout=\"highlightSetter('T78I2',true)\">训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、<em class='similar T78I4' onmouseover=\"highlightSetter('T78I4',false)\" onmouseout=\"highlightSetter('T78I4',true)\">较高学习效率的集成学习算法。</em>","replaceMap":{"而通常是较大样本数据而言是一个较小的常数,":"而 通常是较大样本数据而言是一个较小的常数,"},"similar_word_count":79,"text":"则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,<em class='similar'>而通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em><em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、<em class='similar'>较高学习效率的集成学习算法。</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["大样本数据","常数","训练","bagging","学习器","学习算法","训练所","时间复杂度","同阶","学习效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000178176625511","author":"","university":"","source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516","reference":false,"similarScore":265.2664,"teacher":"","textWithDynamicClass":"即刻画了数据扰动所造成的影响,模型过拟合时会出现较大的方差,<em class='similar 80S182I5' onmouseover=\"highlightSetter('80S182I5',false)\" onmouseout=\"highlightSetter('80S182I5',true)\">从偏差和方差的角度来看,</em><em class='similar 80S182I6' onmouseover=\"highlightSetter('80S182I6',false)\" onmouseout=\"highlightSetter('80S182I6',true)\">Bagging算法主要关注如何降低方差,</em><em class='similar 80S182I7' onmouseover=\"highlightSetter('80S182I7',false)\" onmouseout=\"highlightSetter('80S182I7',true)\">因此它在不剪枝决策树、</em><em class='similar 80S182I8' onmouseover=\"highlightSetter('80S182I8',false)\" onmouseout=\"highlightSetter('80S182I8',true)\">神经网络等容易受到样本实例扰动的学习器上效果更为明显。</em>而Bagging是对多个弱学习器求平均,这样能减少","datatype":"webpage","clcs":[],"similarityPercentage":"44.2%","self":false,"text":"即刻画了数据扰动所造成的影响,模型过拟合时会出现较大的方差,<em class='similar'>从偏差和方差的角度来看,</em><em class='similar'>Bagging算法主要关注如何降低方差,</em><em class='similar'>因此它在不剪枝决策树、</em><em class='similar'>神经网络等容易受到样本实例扰动的学习器上效果更为明显。</em>而Bagging是对多个弱学习器求平均,这样能减少"},{"profession":false,"keywords":[],"year":"","docid":"9000187535336511","author":"","university":"","source":"网页","title":"基于集成学习的高分辨率遥感影像地表水体信息提取","url":"http://www.doc88.com/p%2D94859467392978.html","reference":false,"similarScore":154.11255,"teacher":"","textWithDynamicClass":"有可能继续被采集到。Bagging 对于个体学习器没有限制,<em class='similar 80S183I4' onmouseover=\"highlightSetter('80S183I4',false)\" onmouseout=\"highlightSetter('80S183I4',true)\">从偏差和方差的角度看,</em><em class='similar 80S183I5' onmouseover=\"highlightSetter('80S183I5',false)\" onmouseout=\"highlightSetter('80S183I5',true)\">Bagging 主要的关注点在于降低方差。</em>图3.2为Bagging 原理示意图。万方数据第3","datatype":"webpage","clcs":[],"similarityPercentage":"67.0%","self":false,"text":"有可能继续被采集到。Bagging 对于个体学习器没有限制,<em class='similar'>从偏差和方差的角度看,</em><em class='similar'>Bagging 主要的关注点在于降低方差。</em>图3.2为Bagging 原理示意图。万方数据第3"}],"textWithDynamicClass":"<em class='similar T79I0' onmouseover=\"highlightSetter('T79I0',false)\" onmouseout=\"highlightSetter('T79I0',true)\">从偏差-方差分解的角度看,</em><em class='similar T79I1' onmouseover=\"highlightSetter('T79I1',false)\" onmouseout=\"highlightSetter('T79I1',true)\">由于Bagging学习算法的主要关注点在于如何降低方差,</em><em class='similar T79I2' onmouseover=\"highlightSetter('T79I2',false)\" onmouseout=\"highlightSetter('T79I2',true)\">因此它在受样本的干扰较大的学习器上的优秀表现更为明显。</em>Bagging的算法伪代码如图2.22所示。","replaceMap":{},"similar_word_count":68,"text":"<em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>由于Bagging学习算法的主要关注点在于如何降低方差,</em><em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显。</em>Bagging的算法伪代码如图2.22所示。","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["偏差","方差分解","bagging","学习算法","关注点","如何降低","方差","学习器","伪代码","2.22所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015763116111","author":"","university":"","source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848","reference":false,"similarScore":474.7611,"teacher":"","textWithDynamicClass":"样本全集,从根节点到每个叶节点的路径对应了一个判断测试序列。<em class='similar 81S184I3' onmouseover=\"highlightSetter('81S184I3',false)\" onmouseout=\"highlightSetter('81S184I3',true)\">决策树学习的目的是为了产生一棵泛化能力强,</em><em class='similar 81S184I4' onmouseover=\"highlightSetter('81S184I4',false)\" onmouseout=\"highlightSetter('81S184I4',true)\">即处理未见示例能力强的决策树,</em><em class='similar 81S184I5' onmouseover=\"highlightSetter('81S184I5',false)\" onmouseout=\"highlightSetter('81S184I5',true)\">其基本流程遵循简单且直观的分而治之策略。</em><em class='similar 81S184I6' onmouseover=\"highlightSetter('81S184I6',false)\" onmouseout=\"highlightSetter('81S184I6',true)\">决策树基本算法如图所示:</em>决策树的生成是一个递归过程,在决策树基本算法中,有","datatype":"webpage","clcs":[],"similarityPercentage":"74.2%","self":false,"text":"样本全集,从根节点到每个叶节点的路径对应了一个判断测试序列。<em class='similar'>决策树学习的目的是为了产生一棵泛化能力强,</em><em class='similar'>即处理未见示例能力强的决策树,</em><em class='similar'>其基本流程遵循简单且直观的分而治之策略。</em><em class='similar'>决策树基本算法如图所示:</em>决策树的生成是一个递归过程,在决策树基本算法中,有"},{"profession":false,"keywords":[],"year":"","docid":"9000082045499811","author":"","university":"","source":"网页","title":"机器学习——首阅笔记（持续更新）","url":"https://blog.csdn.net/wangyuxi__/article/details/81037836","reference":false,"similarScore":441.0769,"teacher":"","textWithDynamicClass":"三类做法:第一类欠采样,第二类过采样,第三类,阈值移动,即。<em class='similar 81S186I8' onmouseover=\"highlightSetter('81S186I8',false)\" onmouseout=\"highlightSetter('81S186I8',true)\">第四章决策树决策树学习的目的是为了产生一颗泛化能力强,</em><em class='similar 81S186I9' onmouseover=\"highlightSetter('81S186I9',false)\" onmouseout=\"highlightSetter('81S186I9',true)\">即处理未见示例能力强的决策树,</em><em class='similar 81S186I10' onmouseover=\"highlightSetter('81S186I10',false)\" onmouseout=\"highlightSetter('81S186I10',true)\">其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em><em class='similar 81S186I11' onmouseover=\"highlightSetter('81S186I11',false)\" onmouseout=\"highlightSetter('81S186I11',true)\">决策树</em>是一个递归的过程。决策树最关键的是选择最优划分属性","datatype":"webpage","clcs":[],"similarityPercentage":"63.0%","self":false,"text":"三类做法:第一类欠采样,第二类过采样,第三类,阈值移动,即。<em class='similar'>第四章决策树决策树学习的目的是为了产生一颗泛化能力强,</em><em class='similar'>即处理未见示例能力强的决策树,</em><em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em><em class='similar'>决策树</em>是一个递归的过程。决策树最关键的是选择最优划分属性"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000575029411","author":"连政","university":"","source":"大学生论文联合库","title":"体育新闻数据预处理方法研究","url":"","reference":false,"similarScore":424.92303,"teacher":"","textWithDynamicClass":"样本全集。从根结点到每个叶结点的路经对应了一个判断测试序列。<em class='similar 81S185I3' onmouseover=\"highlightSetter('81S185I3',false)\" onmouseout=\"highlightSetter('81S185I3',true)\">决策树学习的目的是为了产生一棵泛化能力强,</em><em class='similar 81S185I4' onmouseover=\"highlightSetter('81S185I4',false)\" onmouseout=\"highlightSetter('81S185I4',true)\">即处理未见示例能力强的决策时,</em><em class='similar 81S185I5' onmouseover=\"highlightSetter('81S185I5',false)\" onmouseout=\"highlightSetter('81S185I5',true)\">其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em><em class='similar 81S185I6' onmouseover=\"highlightSetter('81S185I6',false)\" onmouseout=\"highlightSetter('81S185I6',true)\">决策树</em>的生成是一个递归过程。在决策树基本算法中,有三种情","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"64.4%","self":false,"text":"样本全集。从根结点到每个叶结点的路经对应了一个判断测试序列。<em class='similar'>决策树学习的目的是为了产生一棵泛化能力强,</em><em class='similar'>即处理未见示例能力强的决策时,</em><em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略。</em><em class='similar'>决策树</em>的生成是一个递归过程。在决策树基本算法中,有三种情"},{"profession":false,"keywords":[],"year":"","docid":"9000151805555011","author":"","university":"","source":"网页","title":"经典机器学习系列之【决策树详解】 &amp;#8211; Python量化投资","url":"https://www.lizenghai.com/archives/46935.html","reference":false,"similarScore":271.9699,"teacher":"","textWithDynamicClass":"策结界。  从根结点到每个叶子结点的路径对应了一条决策规则。<em class='similar 81S187I6' onmouseover=\"highlightSetter('81S187I6',false)\" onmouseout=\"highlightSetter('81S187I6',true)\">决策树学习的基本算法  决策树学习的目的是为了构造一颗泛化能力强,</em>即在测试样本上就有很好表现的决策树。<em class='similar 81S187I8' onmouseover=\"highlightSetter('81S187I8',false)\" onmouseout=\"highlightSetter('81S187I8',true)\">基本算法遵循自顶向下、</em><em class='similar 81S187I9' onmouseover=\"highlightSetter('81S187I9',false)\" onmouseout=\"highlightSetter('81S187I9',true)\">分而治之的策略,</em>具体步骤有以下几点:选择最好的属性作为测试属性并创","datatype":"webpage","clcs":[],"similarityPercentage":"57.9%","self":false,"text":"策结界。  从根结点到每个叶子结点的路径对应了一条决策规则。<em class='similar'>决策树学习的基本算法  决策树学习的目的是为了构造一颗泛化能力强,</em>即在测试样本上就有很好表现的决策树。<em class='similar'>基本算法遵循自顶向下、</em><em class='similar'>分而治之的策略,</em>具体步骤有以下几点:选择最好的属性作为测试属性并创"},{"profession":false,"keywords":[],"year":"","docid":"9000201574312911","author":"","university":"","source":"网页","title":"第6章：决策树学习-莲山文库","url":"https://www.5ykj.com/wenku/d-1080206-6.html","reference":false,"similarScore":266.0681,"teacher":"","textWithDynamicClass":"样本。从根结点到每个叶子结点的路径对应了一条决策规则。一、<em class='similar 81S188I4' onmouseover=\"highlightSetter('81S188I4',false)\" onmouseout=\"highlightSetter('81S188I4',true)\">决策树学习基础知识决策树学习的目的就是为了构造一棵泛化能力强,</em><em class='similar 81S188I5' onmouseover=\"highlightSetter('81S188I5',false)\" onmouseout=\"highlightSetter('81S188I5',true)\">即处理待测样本能力强的决策树,</em><em class='similar 81S188I6' onmouseover=\"highlightSetter('81S188I6',false)\" onmouseout=\"highlightSetter('81S188I6',true)\">基本算法遵循自顶向下、</em><em class='similar 81S188I7' onmouseover=\"highlightSetter('81S188I7',false)\" onmouseout=\"highlightSetter('81S188I7',true)\">分而治之的策略,</em>具体步骤如下:1.选择最好的属性作为测试属性并创建","datatype":"webpage","clcs":[],"similarityPercentage":"43.6%","self":false,"text":"样本。从根结点到每个叶子结点的路径对应了一条决策规则。一、<em class='similar'>决策树学习基础知识决策树学习的目的就是为了构造一棵泛化能力强,</em><em class='similar'>即处理待测样本能力强的决策树,</em><em class='similar'>基本算法遵循自顶向下、</em><em class='similar'>分而治之的策略,</em>具体步骤如下:1.选择最好的属性作为测试属性并创建"},{"profession":false,"keywords":[],"year":"","docid":"9000142513180911","author":"","university":"","source":"网页","title":"吟游诗人——吟唱生命的不朽__吟游诗人_CSDN博客-奇葩问题集合,机器学习,python领域博主","url":"https://blog.csdn.net/qq_32623363","reference":false,"similarScore":191.07693,"teacher":"","textWithDynamicClass":"叶节点。叶节点对应于决策结果,其他节点则对应于一个属性测试。<em class='similar 81S189I6' onmouseover=\"highlightSetter('81S189I6',false)\" onmouseout=\"highlightSetter('81S189I6',true)\">决策树学习的目的是产生一颗泛化能力强,</em><em class='similar 81S189I7' onmouseover=\"highlightSetter('81S189I7',false)\" onmouseout=\"highlightSetter('81S189I7',true)\">即处理未见示例能力强的决策树。</em>2020-12-2018:31:4341原创pyt","datatype":"webpage","clcs":[],"similarityPercentage":"59.7%","self":false,"text":"叶节点。叶节点对应于决策结果,其他节点则对应于一个属性测试。<em class='similar'>决策树学习的目的是产生一颗泛化能力强,</em><em class='similar'>即处理未见示例能力强的决策树。</em>2020-12-2018:31:4341原创pyt"}],"textWithDynamicClass":"<em class='similar T80I0' onmouseover=\"highlightSetter('T80I0',false)\" onmouseout=\"highlightSetter('T80I0',true)\">决策树是一种常见的机器学习算法,</em><em class='similar T80I1' onmouseover=\"highlightSetter('T80I1',false)\" onmouseout=\"highlightSetter('T80I1',true)\">决策树学习的目的是为了构造具有泛化能力强,</em><em class='similar T80I2' onmouseover=\"highlightSetter('T80I2',false)\" onmouseout=\"highlightSetter('T80I2',true)\">处理未见示例能力强的二叉树,</em><em class='similar T80I3' onmouseover=\"highlightSetter('T80I3',false)\" onmouseout=\"highlightSetter('T80I3',true)\">该树能够对泛化样本进行正确且合理的决策,</em><em class='similar T80I4' onmouseover=\"highlightSetter('T80I4',false)\" onmouseout=\"highlightSetter('T80I4',true)\">其基本流程遵循简单且直观的&quot;分而治之&quot;策略,</em><em class='similar T80I5' onmouseover=\"highlightSetter('T80I5',false)\" onmouseout=\"highlightSetter('T80I5',true)\">决策树学习基本算法伪代码实现如图2.23所示。</em>","replaceMap":{},"similar_word_count":116,"text":"<em class='similar'>决策树是一种常见的机器学习算法,</em><em class='similar'>决策树学习的目的是为了构造具有泛化能力强,</em><em class='similar'>处理未见示例能力强的二叉树,</em><em class='similar'>该树能够对泛化样本进行正确且合理的决策,</em><em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略,</em><em class='similar'>决策树学习基本算法伪代码实现如图2.23所示。</em>","suggest":{"synonyms":[{"synonyms":["直觉"],"keyword":"直观"}],"keyword":["决策树","机器学习算法","学习的目的","泛化能力","未见","示例","二叉树","泛化","基本流程","直观","分而治之","决策树学习","基本算法","代码实现","2.23所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000178050844211","author":"","university":"","source":"网页","title":"2019年03月_X_dmword的博客_CSDN博客","url":"https://blog.csdn.net/x_dmword/article/month/2019/03","reference":false,"similarScore":160.27776,"teacher":"","textWithDynamicClass":"9-03-1815:32:49781原创决策树划分与剪枝1、<em class='similar 82S190I3' onmouseover=\"highlightSetter('82S190I3',false)\" onmouseout=\"highlightSetter('82S190I3',true)\">决策树划分选择决策树学习的关键——如何选择最优划分属性。</em>我们所期望的是,随着划分过程的不断进行,希望决策树的分支结点所包含的的样本尽可能属于同一类别,<em class='similar 82S190I7' onmouseover=\"highlightSetter('82S190I7',false)\" onmouseout=\"highlightSetter('82S190I7',true)\">即结点的&quot;纯度&quot;要尽可能的高。</em>1.1信息增益要说信息增益,","datatype":"webpage","clcs":[],"similarityPercentage":"43.3%","self":false,"text":"9-03-1815:32:49781原创决策树划分与剪枝1、<em class='similar'>决策树划分选择决策树学习的关键——如何选择最优划分属性。</em>我们所期望的是,随着划分过程的不断进行,希望决策树的分支结点所包含的的样本尽可能属于同一类别,<em class='similar'>即结点的&quot;纯度&quot;要尽可能的高。</em>1.1信息增益要说信息增益,"},{"profession":false,"keywords":[],"year":"","docid":"9000195491314411","author":"","university":"","source":"网页","title":"基于特征工程概率估计方法的研究","url":"https://blog.51cto.com/u_15310950/3173426","reference":false,"similarScore":136.92308,"teacher":"","textWithDynamicClass":":最优划分属性,结点的&quot;纯度&quot;越来越高。<em class='similar 82S191I7' onmouseover=\"highlightSetter('82S191I7',false)\" onmouseout=\"highlightSetter('82S191I7',true)\">即如何选择最优划分属性,</em>一般而言,随着划分过程不断进行,我们希望决策树的分支节点所包含的样本尽可能属于同一类别,<em class='similar 82S191I11' onmouseover=\"highlightSetter('82S191I11',false)\" onmouseout=\"highlightSetter('82S191I11',true)\">即结点的&quot;纯度&quot;越来越高。</em>支持向量机(SVM)是支持(或支撑)平面上把两类类","datatype":"webpage","clcs":[],"similarityPercentage":"65.2%","self":false,"text":":最优划分属性,结点的&quot;纯度&quot;越来越高。<em class='similar'>即如何选择最优划分属性,</em>一般而言,随着划分过程不断进行,我们希望决策树的分支节点所包含的样本尽可能属于同一类别,<em class='similar'>即结点的&quot;纯度&quot;越来越高。</em>支持向量机(SVM)是支持(或支撑)平面上把两类类"}],"textWithDynamicClass":"显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。<em class='similar T81I1' onmouseover=\"highlightSetter('T81I1',false)\" onmouseout=\"highlightSetter('T81I1',true)\">在决策树的决策过程中我们更关心的肯定是如何划分,</em><em class='similar T81I2' onmouseover=\"highlightSetter('T81I2',false)\" onmouseout=\"highlightSetter('T81I2',true)\">或者说如何选择最优划分属性,</em><em class='similar T81I3' onmouseover=\"highlightSetter('T81I3',false)\" onmouseout=\"highlightSetter('T81I3',true)\">即结点的&quot;纯度&quot;,</em>决策树中衡量一个结点的纯度的高低有以下几类指标:","replaceMap":{},"similar_word_count":47,"text":"显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。<em class='similar'>在决策树的决策过程中我们更关心的肯定是如何划分,</em><em class='similar'>或者说如何选择最优划分属性,</em><em class='similar'>即结点的&quot;纯度&quot;,</em>决策树中衡量一个结点的纯度的高低有以下几类指标:","suggest":{"synonyms":[{"synonyms":["返来"],"keyword":"归来"}],"keyword":["基于图","2.23","伪代码","决策树","归来","决策过程","如何选择","最优划分","结点","纯度","几类"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082132296211","author":"","university":"","source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463","reference":false,"similarScore":229.30557,"teacher":"","textWithDynamicClass":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar 83S194I8' onmouseover=\"highlightSetter('83S194I8',false)\" onmouseout=\"highlightSetter('83S194I8',true)\">其在以决策树作为基学习器构建Bagging集成的基础上,</em><em class='similar 83S194I9' onmouseover=\"highlightSetter('83S194I9',false)\" onmouseout=\"highlightSetter('83S194I9',true)\">进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的","datatype":"webpage","clcs":[],"similarityPercentage":"53.3%","self":false,"text":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar'>其在以决策树作为基学习器构建Bagging集成的基础上,</em><em class='similar'>进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的"},{"profession":false,"keywords":[],"year":"","docid":"9000157307953211","author":"","university":"","source":"网页","title":"模型集成－三个“臭皮匠”顶一个“诸葛亮” | MXQ","url":"http://activepony.com/shen-du-xue-xi/ji-chu-zhi-shi/mo-xing-ji-cheng/","reference":false,"similarScore":215.55554,"teacher":"","textWithDynamicClass":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar 83S196I6' onmouseover=\"highlightSetter('83S196I6',false)\" onmouseout=\"highlightSetter('83S196I6',true)\">随机森林在以决策树为基学习器构建Bagging的基础上,</em><em class='similar 83S196I7' onmouseover=\"highlightSetter('83S196I7',false)\" onmouseout=\"highlightSetter('83S196I7',true)\">进一步在决策树的训练过程中引入随机属性选择。</em>\\n具体来说,传统决策树在选择划分属性时是在当前节","datatype":"webpage","clcs":[],"similarityPercentage":"51.3%","self":false,"text":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar'>随机森林在以决策树为基学习器构建Bagging的基础上,</em><em class='similar'>进一步在决策树的训练过程中引入随机属性选择。</em>\\n具体来说,传统决策树在选择划分属性时是在当前节"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":200.55554,"teacher":"","textWithDynamicClass":"Breiman ,2001)是Bagging的一个扩展变体。<em class='similar 83S197I8' onmouseover=\"highlightSetter('83S197I8',false)\" onmouseout=\"highlightSetter('83S197I8',true)\">RF在以决策树为基学习器构建Bagging集成的基础上,</em><em class='similar 83S197I9' onmouseover=\"highlightSetter('83S197I9',false)\" onmouseout=\"highlightSetter('83S197I9',true)\">进一步在决策树的训练过程中引人了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前节点的","datatype":"book","clcs":["TP181"],"similarityPercentage":"47.8%","self":false,"text":"Breiman ,2001)是Bagging的一个扩展变体。<em class='similar'>RF在以决策树为基学习器构建Bagging集成的基础上,</em><em class='similar'>进一步在决策树的训练过程中引人了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前节点的"},{"profession":false,"keywords":[],"year":"2020","docid":"1000029360914111","author":"冯静达；焦学军；李启杰；郭娅美；杨涵钧；楚洪祚","university":"中国航天员科研训练中心；中国人民解放军航天工程大学；","source":"航天医学与医学工程","title":"基于心率和呼吸特征结合的睡眠分期研究","url":"","reference":false,"similarScore":168.88892,"teacher":"","textWithDynamicClass":"ndom forest,RF)是另外一种集成学习的典型算法。<em class='similar 83S198I7' onmouseover=\"highlightSetter('83S198I7',false)\" onmouseout=\"highlightSetter('83S198I7',true)\">RF以决策树为基学习器构建Bagging集成学习器,</em><em class='similar 83S198I8' onmouseover=\"highlightSetter('83S198I8',false)\" onmouseout=\"highlightSetter('83S198I8',true)\">并进一步在决策树的训练过程中引入随机属性选择。</em>传统决策树划分属性时在当前结点中择优,RF中,对决","datatype":"journal","clcs":["TN911.6;R740"],"similarityPercentage":"42.2%","self":false,"text":"ndom forest,RF)是另外一种集成学习的典型算法。<em class='similar'>RF以决策树为基学习器构建Bagging集成学习器,</em><em class='similar'>并进一步在决策树的训练过程中引入随机属性选择。</em>传统决策树划分属性时在当前结点中择优,RF中,对决"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000503259011","author":"","university":"","source":"大学生论文联合库","title":"贝叶斯分类器的性能比较","url":"","reference":false,"similarScore":139.23076,"teacher":"","textWithDynamicClass":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar 83S199I6' onmouseover=\"highlightSetter('83S199I6',false)\" onmouseout=\"highlightSetter('83S199I6',true)\">这就是Bagging算法的基本思路。</em><em class='similar 83S199I7' onmouseover=\"highlightSetter('83S199I7',false)\" onmouseout=\"highlightSetter('83S199I7',true)\">随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.0%","self":false,"text":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar'>这就是Bagging算法的基本思路。</em><em class='similar'>随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森"}],"textWithDynamicClass":"<em class='similar T82I0' onmouseover=\"highlightSetter('T82I0',false)\" onmouseout=\"highlightSetter('T82I0',true)\">随机森林是Bagging的变体,</em><em class='similar T82I1' onmouseover=\"highlightSetter('T82I1',false)\" onmouseout=\"highlightSetter('T82I1',true)\">是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器(决策树)所集成的强学习器。<em class='similar T82I5' onmouseover=\"highlightSetter('T82I5',false)\" onmouseout=\"highlightSetter('T82I5',true)\">RF在通过在训练过程中引入随机属性选择,</em><em class='similar T82I6' onmouseover=\"highlightSetter('T82I6',false)\" onmouseout=\"highlightSetter('T82I6',true)\">并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>具体来说,传统决策树在选择划分属性时是在当前树节点的特征集合(假定有个特征)中选择一个最优属性;","replaceMap":{},"similar_word_count":87,"text":"<em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器(决策树)所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入随机属性选择,</em><em class='similar'>并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>具体来说,传统决策树在选择划分属性时是在当前树节点的特征集合(假定有个特征)中选择一个最优属性;","suggest":{"synonyms":[],"keyword":["随机森林","bagging","变体","学习器","决策树","rf","训练过程","属性选择","得来"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar 84S200I1' onmouseover=\"highlightSetter('84S200I1',false)\" onmouseout=\"highlightSetter('84S200I1',true)\">具体来说,</em><em class='similar 84S200I2' onmouseover=\"highlightSetter('84S200I2',false)\" onmouseout=\"highlightSetter('84S200I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar 84S200I4' onmouseover=\"highlightSetter('84S200I4',false)\" onmouseout=\"highlightSetter('84S200I4',true)\">中选择一个最优属性,</em><em class='similar 84S200I5' onmouseover=\"highlightSetter('84S200I5',false)\" onmouseout=\"highlightSetter('84S200I5',true)\">,而在RF中,</em><em class='similar 84S200I6' onmouseover=\"highlightSetter('84S200I6',false)\" onmouseout=\"highlightSetter('84S200I6',true)\">对基决策树的每个结点,</em><em class='similar 84S200I7' onmouseover=\"highlightSetter('84S200I7',false)\" onmouseout=\"highlightSetter('84S200I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S200I8' onmouseover=\"highlightSetter('84S200I8',false)\" onmouseout=\"highlightSetter('84S200I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"91.5%","self":false,"text":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar'>中选择一个最优属性,</em><em class='similar'>,而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":896.7846,"teacher":"","textWithDynamicClass":"过程中引入了随机属性选择。<em class='similar 84S202I1' onmouseover=\"highlightSetter('84S202I1',false)\" onmouseout=\"highlightSetter('84S202I1',true)\">具体来说,</em><em class='similar 84S202I2' onmouseover=\"highlightSetter('84S202I2',false)\" onmouseout=\"highlightSetter('84S202I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar 84S202I4' onmouseover=\"highlightSetter('84S202I4',false)\" onmouseout=\"highlightSetter('84S202I4',true)\">中选择一个最优属性;</em><em class='similar 84S202I5' onmouseover=\"highlightSetter('84S202I5',false)\" onmouseout=\"highlightSetter('84S202I5',true)\">而在RF中,</em><em class='similar 84S202I6' onmouseover=\"highlightSetter('84S202I6',false)\" onmouseout=\"highlightSetter('84S202I6',true)\">对基决策树的每个结点,</em><em class='similar 84S202I7' onmouseover=\"highlightSetter('84S202I7',false)\" onmouseout=\"highlightSetter('84S202I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S202I8' onmouseover=\"highlightSetter('84S202I8',false)\" onmouseout=\"highlightSetter('84S202I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、","datatype":"webpage","clcs":[],"similarityPercentage":"91.5%","self":false,"text":"过程中引入了随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、"},{"profession":false,"keywords":[],"year":"2018","docid":"1000027943830211","author":"钟海燕；李玲；麦雄发；王雨","university":"广西师范学院数学与统计科学学院；广西师范学院北部湾环境演变与资源利用教育部重点实验室；","source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":"","reference":false,"similarScore":875.8894,"teacher":"","textWithDynamicClass":"树的训练过程中引入了随机属性选择。<em class='similar 84S201I1' onmouseover=\"highlightSetter('84S201I1',false)\" onmouseout=\"highlightSetter('84S201I1',true)\">具体来说,</em><em class='similar 84S201I2' onmouseover=\"highlightSetter('84S201I2',false)\" onmouseout=\"highlightSetter('84S201I2',true)\">传统决策树在选择划分属性时是在当前节点的属性集合</em>(假定有d个属性)<em class='similar 84S201I4' onmouseover=\"highlightSetter('84S201I4',false)\" onmouseout=\"highlightSetter('84S201I4',true)\">中选择一个最优属性;</em><em class='similar 84S201I5' onmouseover=\"highlightSetter('84S201I5',false)\" onmouseout=\"highlightSetter('84S201I5',true)\">而在RF中,</em><em class='similar 84S201I6' onmouseover=\"highlightSetter('84S201I6',false)\" onmouseout=\"highlightSetter('84S201I6',true)\">对基决策树的每个结点,</em><em class='similar 84S201I7' onmouseover=\"highlightSetter('84S201I7',false)\" onmouseout=\"highlightSetter('84S201I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S201I8' onmouseover=\"highlightSetter('84S201I8',false)\" onmouseout=\"highlightSetter('84S201I8',true)\">然后再从这个子集中选择一个最优属性划分。</em>根据文献[5]可知参数k的推荐值是k=log2d。","datatype":"journal","clcs":["P457.6"],"similarityPercentage":"91.2%","self":false,"text":"树的训练过程中引入了随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前节点的属性集合</em>(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性划分。</em>根据文献[5]可知参数k的推荐值是k=log2d。"},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":806.7846,"teacher":"","textWithDynamicClass":"属性集合也引入了随机属性选择.<em class='similar 84S203I1' onmouseover=\"highlightSetter('84S203I1',false)\" onmouseout=\"highlightSetter('84S203I1',true)\">具体来说,</em><em class='similar 84S203I2' onmouseover=\"highlightSetter('84S203I2',false)\" onmouseout=\"highlightSetter('84S203I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em><em class='similar 84S203I3' onmouseover=\"highlightSetter('84S203I3',false)\" onmouseout=\"highlightSetter('84S203I3',true)\">而在RF中,</em><em class='similar 84S203I4' onmouseover=\"highlightSetter('84S203I4',false)\" onmouseout=\"highlightSetter('84S203I4',true)\">对基决策树的每个结点,</em><em class='similar 84S203I5' onmouseover=\"highlightSetter('84S203I5',false)\" onmouseout=\"highlightSetter('84S203I5',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 84S203I6' onmouseover=\"highlightSetter('84S203I6',false)\" onmouseout=\"highlightSetter('84S203I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>    随机森林简单、容易实现、计算开销小.效果能","datatype":"webpage","clcs":[],"similarityPercentage":"72.0%","self":false,"text":"属性集合也引入了随机属性选择.<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择���分属性时是在当前结点的属性集合中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>    随机森林简单、容易实现、计算开销小.效果能"},{"profession":false,"keywords":[],"year":"","docid":"9000178628566211","author":"","university":"","source":"网页","title":"T1.随机森林算法梳理_qq_42271047的博客-CSDN博客","url":"https://blog.csdn.net/qq_42271047/article/details/88343431#insertcode","reference":false,"similarScore":728.7846,"teacher":"","textWithDynamicClass":"<em class='similar 84S205I0' onmouseover=\"highlightSetter('84S205I0',false)\" onmouseout=\"highlightSetter('84S205I0',true)\">性时是在当前结点的属性集合</em>(假定有 d 个属性)<em class='similar 84S205I2' onmouseover=\"highlightSetter('84S205I2',false)\" onmouseout=\"highlightSetter('84S205I2',true)\">中选择一个最优属性;</em><em class='similar 84S205I3' onmouseover=\"highlightSetter('84S205I3',false)\" onmouseout=\"highlightSetter('84S205I3',true)\">而在 RF 中,</em><em class='similar 84S205I4' onmouseover=\"highlightSetter('84S205I4',false)\" onmouseout=\"highlightSetter('84S205I4',true)\">对基决策树的每个结点,</em><em class='similar 84S205I5' onmouseover=\"highlightSetter('84S205I5',false)\" onmouseout=\"highlightSetter('84S205I5',true)\">先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar 84S205I6' onmouseover=\"highlightSetter('84S205I6',false)\" onmouseout=\"highlightSetter('84S205I6',true)\">然后再从这个子集中选择一个最优属性用于划分。</em>这里的参数 k 控制了随机性的引入程度。6.随机森","datatype":"webpage","clcs":[],"similarityPercentage":"87.8%","self":false,"text":"<em class='similar'>性时是在当前结点的属性集合</em>(假定有 d 个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在 RF 中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分。</em>这里的参数 k 控制了随机性的引入程度。6.随机森"},{"profession":false,"keywords":[],"year":"2019","docid":"1000029331339811","author":"刘博；卢婷婷；陈国磊；赵璐","university":"中国民航大学空中交通管理学院；","source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":"","reference":false,"similarScore":644.9099,"teacher":"","textWithDynamicClass":"实现的决策树群体模型.随机森林在实现上不仅使用训练集的子集,<em class='similar 84S204I5' onmouseover=\"highlightSetter('84S204I5',false)\" onmouseout=\"highlightSetter('84S204I5',true)\">同时在决策树建立树节点时只在特征集的子集中挑选.</em><em class='similar 84S204I6' onmouseover=\"highlightSetter('84S204I6',false)\" onmouseout=\"highlightSetter('84S204I6',true)\">传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在随机森林中,<em class='similar 84S204I8' onmouseover=\"highlightSetter('84S204I8',false)\" onmouseout=\"highlightSetter('84S204I8',true)\">对基决策树的每个结点,</em><em class='similar 84S204I9' onmouseover=\"highlightSetter('84S204I9',false)\" onmouseout=\"highlightSetter('84S204I9',true)\">先从该结点属性集合中随机选择一个包含K个属性的子集,</em><em class='similar 84S204I10' onmouseover=\"highlightSetter('84S204I10',false)\" onmouseout=\"highlightSetter('84S204I10',true)\">然后再从这个子集汇总选择一个</em>","datatype":"journal","clcs":["TP181"],"similarityPercentage":"61.4%","self":false,"text":"实现的决策树群体模型.随机森林在实现上不仅使用训练集的子集,<em class='similar'>同时在决策树建立树节点时只在特征集的子集中挑选.</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在随机森林中,<em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点属性集合中随机选择一个包含K个属性的子集,</em><em class='similar'>然后再从这个子集汇总选择一个</em>"}],"textWithDynamicClass":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar T83I0' onmouseover=\"highlightSetter('T83I0',false)\" onmouseout=\"highlightSetter('T83I0',true)\">具体来说,</em><em class='similar T83I1' onmouseover=\"highlightSetter('T83I1',false)\" onmouseout=\"highlightSetter('T83I1',true)\">传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar T83I3' onmouseover=\"highlightSetter('T83I3',false)\" onmouseout=\"highlightSetter('T83I3',true)\">中选择一个最优属性;</em><em class='similar T83I4' onmouseover=\"highlightSetter('T83I4',false)\" onmouseout=\"highlightSetter('T83I4',true)\">而在RF中,</em><em class='similar T83I5' onmouseover=\"highlightSetter('T83I5',false)\" onmouseout=\"highlightSetter('T83I5',true)\">对基决策树的每个结点,</em><em class='similar T83I6' onmouseover=\"highlightSetter('T83I6',false)\" onmouseout=\"highlightSetter('T83I6',true)\">先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar T83I7' onmouseover=\"highlightSetter('T83I7',false)\" onmouseout=\"highlightSetter('T83I7',true)\">然后再从这个子集中选择一个最优属性用于划分</em>[30]。","replaceMap":{"先从该结点的属性的集合中随机选择一个包含个属性的子集,":"先从该结点的属性的集合中随机选择一个包含 个属性的子集,","(假定有个特征)":"(假定有 个特征)"},"similar_word_count":105,"text":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分</em>[30]。","suggest":{"synonyms":[{"synonyms":["假设"],"keyword":"假定"}],"keyword":["决策树","树节点","假定","最优","rf","结点","随机选择","子集","30"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000016047965011","author":"","university":"","source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685","reference":false,"similarScore":667.96704,"teacher":"","textWithDynamicClass":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。<em class='similar 85S206I4' onmouseover=\"highlightSetter('85S206I4',false)\" onmouseout=\"highlightSetter('85S206I4',true)\">随机森林对Bagging做了小改动:</em><em class='similar 85S206I5' onmouseover=\"highlightSetter('85S206I5',false)\" onmouseout=\"highlightSetter('85S206I5',true)\"> Bagging中基学习器的&quot;多样性&quot;来自于样本扰动。</em><em class='similar 85S206I6' onmouseover=\"highlightSetter('85S206I6',false)\" onmouseout=\"highlightSetter('85S206I6',true)\">样本扰动来自于对初始训练集的随机采样。</em><em class='similar 85S206I7' onmouseover=\"highlightSetter('85S206I7',false)\" onmouseout=\"highlightSetter('85S206I7',true)\">随机森林中的基学习器的多样性不仅来自样本扰动,</em><em class='similar 85S206I8' onmouseover=\"highlightSetter('85S206I8',false)\" onmouseout=\"highlightSetter('85S206I8',true)\">还来自属性扰动。</em><em class='similar 85S206I9' onmouseover=\"highlightSetter('85S206I9',false)\" onmouseout=\"highlightSetter('85S206I9',true)\">这就是使得最终集成的泛化性能可以通过个体学习器之间差异度的增加而进一步提升</em>","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"上了特征的随机选择,其基本思想没有脱离bagging的范畴。<em class='similar'>随机森林对Bagging做了小改动:</em><em class='similar'> Bagging中基学习器的&quot;多样性&quot;来自于样本扰动。</em><em class='similar'>样本扰动来自于对初始训练集的随机采样。</em><em class='similar'>随机森林中的基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动。</em><em class='similar'>这就是使得最终集成的泛化性能可以通过个体学习器之间差异度的增加而进一步提升</em>"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"&quot;代表集成学习技术水平的方法&quot;可以看出,<em class='similar 85S207I1' onmouseover=\"highlightSetter('85S207I1',false)\" onmouseout=\"highlightSetter('85S207I1',true)\">随机森林对Bagging只做了小改动,</em><em class='similar 85S207I2' onmouseover=\"highlightSetter('85S207I2',false)\" onmouseout=\"highlightSetter('85S207I2',true)\">但是与Bagging中基学习器的’‘多样性&quot;仅通过样本扰动</em>(通过对初始训练集采样)而来不同,<em class='similar 85S207I5' onmouseover=\"highlightSetter('85S207I5',false)\" onmouseout=\"highlightSetter('85S207I5',true)\">随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar 85S207I6' onmouseover=\"highlightSetter('85S207I6',false)\" onmouseout=\"highlightSetter('85S207I6',true)\">还来自属性扰动,</em><em class='similar 85S207I7' onmouseover=\"highlightSetter('85S207I7',false)\" onmouseout=\"highlightSetter('85S207I7',true)\">这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>随机森林的收敛性与Bagging相似。随机森林的起","datatype":"book","clcs":["TP181"],"similarityPercentage":"60.7%","self":false,"text":"&quot;代表集成学习技术水平的方法&quot;可以看出,<em class='similar'>随机森林对Bagging只做了小改动,</em><em class='similar'>但是与Bagging中基学习器的’‘多样性&quot;仅通过样本扰动</em>(通过对初始训练集采样)而来不同,<em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em><em class='similar'>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>随机森林的收敛性与Bagging相似。随机森林的起"},{"profession":false,"keywords":[],"year":"","docid":"9000141550370811","author":"","university":"","source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614","reference":false,"similarScore":576.8283,"teacher":"","textWithDynamicClass":"<em class='similar 85S208I0' onmouseover=\"highlightSetter('85S208I0',false)\" onmouseout=\"highlightSetter('85S208I0',true)\">随机森林对Bagging做了小改动,</em><em class='similar 85S208I1' onmouseover=\"highlightSetter('85S208I1',false)\" onmouseout=\"highlightSetter('85S208I1',true)\">Bagging中基学习器的&quot;多样性&quot;仅通过样本扰动</em>(对初始训练集采样)而来不同,<em class='similar 85S208I4' onmouseover=\"highlightSetter('85S208I4',false)\" onmouseout=\"highlightSetter('85S208I4',true)\">随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar 85S208I5' onmouseover=\"highlightSetter('85S208I5',false)\" onmouseout=\"highlightSetter('85S208I5',true)\">还来自属性扰动,</em><em class='similar 85S208I6' onmouseover=\"highlightSetter('85S208I6',false)\" onmouseout=\"highlightSetter('85S208I6',true)\">这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"63.4%","self":false,"text":"<em class='similar'>随机森林对Bagging做了小改动,</em><em class='similar'>Bagging中基学习器的&quot;多样性&quot;仅通过样本扰动</em>(对初始训练集采样)而来不同,<em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em><em class='similar'>这就使得最终集成的泛化性能可通过个体学习器之间差异度的增加而进一步提升。</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000138770563211","author":"","university":"","source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html","reference":false,"similarScore":436.9565,"teacher":"","textWithDynamicClass":",被誉为&quot;代表集成学习技术水平的方法&quot;。<em class='similar 85S209I3' onmouseover=\"highlightSetter('85S209I3',false)\" onmouseout=\"highlightSetter('85S209I3',true)\">随机森林中基学习器的多样性不仅仅来自于 Bagging 中的样本扰动,</em><em class='similar 85S209I4' onmouseover=\"highlightSetter('85S209I4',false)\" onmouseout=\"highlightSetter('85S209I4',true)\">还来自于属性扰动,</em><em class='similar 85S209I5' onmouseover=\"highlightSetter('85S209I5',false)\" onmouseout=\"highlightSetter('85S209I5',true)\">这样就使得最终集成的泛化性能通过基学习器的差异性增加而进一步提升。</em>2.2.4结合策略本节主要介绍一下集成学习中个体学","datatype":"webpage","clcs":[],"similarityPercentage":"66.2%","self":false,"text":",被誉为&quot;代表集成学习技术水平的方法&quot;。<em class='similar'>随机森林中基学习器的多样性不仅仅来自于 Bagging 中的样本扰动,</em><em class='similar'>还来自于属性扰动,</em><em class='similar'>这样就使得最终集成的泛化性能通过基学习器的差异性增加而进一步提升。</em>2.2.4结合策略本节主要介绍一下集成学习中个体学"},{"profession":false,"keywords":[],"year":"","docid":"9000079748404511","author":"","university":"","source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486","reference":false,"similarScore":392.14285,"teacher":"","textWithDynamicClass":"在生成基学习器的过程中,使用包外样本提高基学习器的泛化能力。<em class='similar 85S211I3' onmouseover=\"highlightSetter('85S211I3',false)\" onmouseout=\"highlightSetter('85S211I3',true)\">随机森林的多样性  随机森林的多样性不仅来自于样本扰动,</em><em class='similar 85S211I4' onmouseover=\"highlightSetter('85S211I4',false)\" onmouseout=\"highlightSetter('85S211I4',true)\">还来自于属性扰动,</em><em class='similar 85S211I5' onmouseover=\"highlightSetter('85S211I5',false)\" onmouseout=\"highlightSetter('85S211I5',true)\">这就使得最终的集成学习器的泛化性能可通过基学习器之间独立性的增加而提升。</em>随机森林的特点  随机森林的起始性能往往比","datatype":"webpage","clcs":[],"similarityPercentage":"57.7%","self":false,"text":"在生成基学习器的过程中,使用包外样本提高基学习器的泛化能力。<em class='similar'>随机森林的多样性  随机森林的多样性不仅来自于样本扰动,</em><em class='similar'>还来自于属性扰动,</em><em class='similar'>这就使得最终的集成学习器的泛化性能可通过基学习器之间独立性的增加而提升。</em>随机森林的特点  随机森林的起始性能��往比"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000524795711","author":"-","university":"","source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":"","reference":false,"similarScore":363.80957,"teacher":"","textWithDynamicClass":"容易实现、计算开销少,同时由于其本身相较于Bagging法,<em class='similar 85S210I5' onmouseover=\"highlightSetter('85S210I5',false)\" onmouseout=\"highlightSetter('85S210I5',true)\">其子学习器的多样性不仅来自样本扰动,</em><em class='similar 85S210I6' onmouseover=\"highlightSetter('85S210I6',false)\" onmouseout=\"highlightSetter('85S210I6',true)\">还来自于属性扰动,</em><em class='similar 85S210I7' onmouseover=\"highlightSetter('85S210I7',false)\" onmouseout=\"highlightSetter('85S210I7',true)\">这就使的最终集成的泛化性能通过子学习器之间的差异度的增加而进一步提升。</em>随机森林是一种基于Bagging集成学习方法的扩展","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"61.7%","self":false,"text":"容易实现、计算开销少,同时由于其本身相较于Bagging法,<em class='similar'>其子学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自于属性扰动,</em><em class='similar'>这就使的最终集成的泛化性能通过子学习器之间的差异度的增加而进一步提升。</em>随机森林是一种基于Bagging集成学习方法的扩展"}],"textWithDynamicClass":"随机森林在多种多样的决策与回归任务中展现了超乎预期的强大的性能,<em class='similar T84I1' onmouseover=\"highlightSetter('T84I1',false)\" onmouseout=\"highlightSetter('T84I1',true)\">随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,</em><em class='similar T84I2' onmouseover=\"highlightSetter('T84I2',false)\" onmouseout=\"highlightSetter('T84I2',true)\">但继承了Bagging中所具有的学习多样性,</em><em class='similar T84I3' onmouseover=\"highlightSetter('T84I3',false)\" onmouseout=\"highlightSetter('T84I3',true)\">随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar T84I4' onmouseover=\"highlightSetter('T84I4',false)\" onmouseout=\"highlightSetter('T84I4',true)\">还来自属性扰动,</em><em class='similar T84I5' onmouseover=\"highlightSetter('T84I5',false)\" onmouseout=\"highlightSetter('T84I5',true)\">这就使得最终集成后的强学习器的泛化性能上的提升,</em><em class='similar T84I6' onmouseover=\"highlightSetter('T84I6',false)\" onmouseout=\"highlightSetter('T84I6',true)\">其可通过弱学习器之间差异度的互补来增强。</em>","replaceMap":{},"similar_word_count":129,"text":"随机森林在多种多样的决策与回归任务中展现了超乎预期的强大的性能,<em class='similar'>随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,</em><em class='similar'>但继承了Bagging中所具有的学习多样性,</em><em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em><em class='similar'>这就使得最终集成后的强学习器的泛化性能上的提升,</em><em class='similar'>其可通过弱学习器之间差异度的互补来增强。</em>","suggest":{"synonyms":[{"synonyms":["五花八门"],"keyword":"多种多样"},{"synonyms":["弱小"],"keyword":"微小"},{"synonyms":["窜改"],"keyword":"改动"},{"synonyms":["承担"],"keyword":"继承"}],"keyword":["随机森林","多种多样","回归","超乎","bagging","微小","改动","继承","多样性","中基","学习器","扰动","属性扰动","泛化性能","差异度","互补"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000456857311","author":"张宇","university":"","source":"大学生论文联合库","title":"遥感影像在地球覆盖分类中的应用","url":"","reference":false,"similarScore":184.43591,"teacher":"老师","textWithDynamicClass":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar 86S212I6' onmouseover=\"highlightSetter('86S212I6',false)\" onmouseout=\"highlightSetter('86S212I6',true)\">泛化能力好,</em><em class='similar 86S212I7' onmouseover=\"highlightSetter('86S212I7',false)\" onmouseout=\"highlightSetter('86S212I7',true)\">鲁棒性强,</em><em class='similar 86S212I8' onmouseover=\"highlightSetter('86S212I8',false)\" onmouseout=\"highlightSetter('86S212I8',true)\">(Cutler等,</em>2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar 86S212I12' onmouseover=\"highlightSetter('86S212I12',false)\" onmouseout=\"highlightSetter('86S212I12',true)\">研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar 86S212I13' onmouseover=\"highlightSetter('86S212I13',false)\" onmouseout=\"highlightSetter('86S212I13',true)\">并通过对该方法检测的云影区块进行形态学变换、</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"33.5%","self":false,"text":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar'>泛化能力好,</em><em class='similar'>鲁棒性强,</em><em class='similar'>(Cutler等,</em>2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar'>研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar'>并通过对该方法检测的云影区块进行形态学变换、</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000131811984111","author":"","university":"","source":"网页","title":"            模型说明_文本分类_详细教程_NLP自学习平台_自然语言处理-阿里云    ","url":"https://help.aliyun.com/document_detail/162446.html","reference":false,"similarScore":57.600002,"teacher":"","textWithDynamicClass":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar 86S214I8' onmouseover=\"highlightSetter('86S214I8',false)\" onmouseout=\"highlightSetter('86S214I8',true)\">随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院","datatype":"webpage","clcs":[],"similarityPercentage":"44.3%","self":false,"text":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar'>随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院"}],"textWithDynamicClass":"<em class='similar T85I0' onmouseover=\"highlightSetter('T85I0',false)\" onmouseout=\"highlightSetter('T85I0',true)\">通过对随机森林算法进行研究,</em><em class='similar T85I1' onmouseover=\"highlightSetter('T85I1',false)\" onmouseout=\"highlightSetter('T85I1',true)\">发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar T85I3' onmouseover=\"highlightSetter('T85I3',false)\" onmouseout=\"highlightSetter('T85I3',true)\">泛化能力强、</em><em class='similar T85I4' onmouseover=\"highlightSetter('T85I4',false)\" onmouseout=\"highlightSetter('T85I4',true)\">鲁棒性强等优势,</em>可有效避免模型过拟合的现象出现,适用于高维数据的处理。","replaceMap":{},"similar_word_count":54,"text":"<em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar'>泛化能力强、</em><em class='similar'>鲁棒性强等优势,</em>可有效避免模型过拟合的现象出现,适用于高维数据的处理。","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["随机森林算法","随机森林","机器学习模型","训练","速度快","效果好","泛化能力","鲁棒性强","有效避免","过拟合","高维","数据的处理"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000560676611","author":"-","university":"","source":"大学生论文联合库","title":"《数据挖掘》杂志稿件","url":"","reference":false,"similarScore":142.85716,"teacher":"","textWithDynamicClass":"益最大的特征决策树完全生长输出:1.随机森林中决策树集合2.<em class='similar 87S216I5' onmouseover=\"highlightSetter('87S216I5',false)\" onmouseout=\"highlightSetter('87S216I5',true)\">决策树对测试样本的预测结果为随机森林回归,</em><em class='similar 87S216I6' onmouseover=\"highlightSetter('87S216I6',false)\" onmouseout=\"highlightSetter('87S216I6',true)\">结果取均值:</em>随机深林分类,结果均匀投票:神经网络NN 神经网络","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"57.1%","self":false,"text":"益最大的特征决策树完全生长输出:1.随机森林中决策树集合2.<em class='similar'>决策树对测试样本的预测结果为随机森林回归,</em><em class='similar'>结果取均值:</em>随机深林分类,结果均匀投票:神经网络NN 神经网络"},{"profession":false,"keywords":[],"year":"","docid":"9000203166781311","author":"","university":"","source":"网页","title":"一种主成分分析协同随机森林的热连轧带钢宽度预测方法与流程","url":"http://www.xjishu.com/zhuanli/55/202110285167.html","reference":false,"similarScore":142.85715,"teacher":"","textWithDynamicClass":"4.5、最后,在测试集上应用训练得到的随机森林宽度预测模型,<em class='similar 87S215I7' onmouseover=\"highlightSetter('87S215I7',false)\" onmouseout=\"highlightSetter('87S215I7',true)\">取所有决策树预测结果的均值作为随机森林宽度预测模型最终的预测结果,</em>即得到热连轧带钢宽度的预测结果;步骤5、对随机森林","datatype":"webpage","clcs":[],"similarityPercentage":"44.6%","self":false,"text":"4.5、最后,在测试集上应用训练得到的随机森林宽度预测模型,<em class='similar'>取所有决策树预测结果的均值作为随机森林宽度预测模型最终的预测结果,</em>即得到热连轧带钢宽度的预测结果;步骤5、对随机森林"}],"textWithDynamicClass":"<em class='similar T86I0' onmouseover=\"highlightSetter('T86I0',false)\" onmouseout=\"highlightSetter('T86I0',true)\">随机森林的回归预测结果是棵决策树的预测结果取均值而得到的,</em>它满足以下定理:","replaceMap":{"随机森林的回归预测结果是棵决策树的预测结果取均值而得到的,":"随机森林的回归预测结果是 棵决策树的预测结果 取均值而得到的,"},"similar_word_count":29,"text":"<em class='similar'>随机森林的回归预测结果是棵决策树的预测结果取均值而得到的,</em>它满足以下定理:","suggest":{"synonyms":[],"keyword":["随机森林","回归","预测结果","决策树","均值","定理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000106062608311","author":"","university":"","source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html","reference":false,"similarScore":118.05556,"teacher":"","textWithDynamicClass":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar 88S217I11' onmouseover=\"highlightSetter('88S217I11',false)\" onmouseout=\"highlightSetter('88S217I11',true)\">�5�3即随机森林的泛化误差.</em><em class='similar 88S217I12' onmouseover=\"highlightSetter('88S217I12',false)\" onmouseout=\"highlightSetter('88S217I12',true)\">每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�","datatype":"webpage","clcs":[],"similarityPercentage":"43.7%","self":false,"text":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar'>�5�3即随机森林的泛化误差.</em><em class='similar'>每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�"}],"textWithDynamicClass":"<em class='similar T87I0' onmouseover=\"highlightSetter('T87I0',false)\" onmouseout=\"highlightSetter('T87I0',true)\">式(2-5)</em><em class='similar T87I1' onmouseover=\"highlightSetter('T87I1',false)\" onmouseout=\"highlightSetter('T87I1',true)\">右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar T87I3' onmouseover=\"highlightSetter('T87I3',false)\" onmouseout=\"highlightSetter('T87I3',true)\">则表示一课决策树的平均泛化误差即</em>(2-6)","replaceMap":{"则表示一课决策树的平均泛化误差即":" 则表示一课决策树的平均泛化误差即","将其记为。":"将其记为 。","▲(2-6)":"\n\t  \t(2-6)"},"similar_word_count":38,"text":"<em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar'>则表示一课决策树的平均泛化误差即</em>(2-6)","suggest":{"synonyms":[],"keyword":["右侧","随机森林","泛化误差","决策树"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200005292737611","author":"张冰","university":"","source":"大学生论文联合库","title":"基于bp神经网络的短期负荷预测方法","url":"","reference":false,"similarScore":121.83334,"teacher":"","textWithDynamicClass":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar 89S219I13' onmouseover=\"highlightSetter('89S219I13',false)\" onmouseout=\"highlightSetter('89S219I13',true)\">;是残差与之间的加权相关系数,</em><em class='similar 89S219I14' onmouseover=\"highlightSetter('89S219I14',false)\" onmouseout=\"highlightSetter('89S219I14',true)\">与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"60.9%","self":false,"text":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar'>;是残差与之间的加权相关系数,</em><em class='similar'>与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低"}],"textWithDynamicClass":"式(2-7)<em class='similar T88I1' onmouseover=\"highlightSetter('T88I1',false)\" onmouseout=\"highlightSetter('T88I1',true)\">中是在与相互独立的情况下,</em><em class='similar T88I2' onmouseover=\"highlightSetter('T88I2',false)\" onmouseout=\"highlightSetter('T88I2',true)\">残差和的加权相关系数。</em>","replaceMap":{"残差和的加权相关系数。":"残差 和 的加权相关系数。","中是在与相互独立的情况下,":"中 是在 与 相互独立的情况下,"},"similar_word_count":24,"text":"式(2-7)<em class='similar'>中是在与相互独立的情况下,</em><em class='similar'>残差和的加权相关系数。</em>","suggest":{"synonyms":[],"keyword":["相互独立","残差","加权","相关系数"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar 90S220I15' onmouseover=\"highlightSetter('90S220I15',false)\" onmouseout=\"highlightSetter('90S220I15',true)\">定理2给出了精确回归森林的条件:</em><em class='similar 90S220I16' onmouseover=\"highlightSetter('90S220I16',false)\" onmouseout=\"highlightSetter('90S220I16',true)\">残差间的低相关性和低的错误决策树。</em><em class='similar 90S220I17' onmouseover=\"highlightSetter('90S220I17',false)\" onmouseout=\"highlightSetter('90S220I17',true)\">随机森林通过加权相关系数?</em><em class='similar 90S220I18' onmouseover=\"highlightSetter('90S220I18',false)\" onmouseout=\"highlightSetter('90S220I18',true)\">降低决策树的平均误差。</em><em class='similar 90S220I19' onmouseover=\"highlightSetter('90S220I19',false)\" onmouseout=\"highlightSetter('90S220I19',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"38.3%","self":false,"text":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar'>定理2给出了精确回归森林的条件:</em><em class='similar'>残差间的低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数?</em><em class='similar'>降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"},{"profession":false,"keywords":[],"year":"","docid":"9000179731028611","author":"","university":"","source":"网页","title":"随机森林回归模型及其在污水排放量预测中的应用","url":"https://www.docin.com/p%2D1408710266.html","reference":false,"similarScore":213.83331,"teacher":"","textWithDynamicClass":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar 90S222I4' onmouseover=\"highlightSetter('90S222I4',false)\" onmouseout=\"highlightSetter('90S222I4',true)\">定理低相关性和低的错误决策树。</em><em class='similar 90S222I5' onmouseover=\"highlightSetter('90S222I5',false)\" onmouseout=\"highlightSetter('90S222I5',true)\">随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar 90S222I6' onmouseover=\"highlightSetter('90S222I6',false)\" onmouseout=\"highlightSetter('90S222I6',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"webpage","clcs":[],"similarityPercentage":"35.1%","self":false,"text":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar'>定理低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"},{"profession":false,"keywords":[],"year":"","docid":"9000113620987811","author":"csdn","university":"","source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770","reference":false,"similarScore":112.499985,"teacher":"","textWithDynamicClass":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar 90S221I15' onmouseover=\"highlightSetter('90S221I15',false)\" onmouseout=\"highlightSetter('90S221I15',true)\">指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{","datatype":"webpage","clcs":[],"similarityPercentage":"37.5%","self":false,"text":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar'>指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{"}],"textWithDynamicClass":"<em class='similar T89I0' onmouseover=\"highlightSetter('T89I0',false)\" onmouseout=\"highlightSetter('T89I0',true)\">上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar T89I1' onmouseover=\"highlightSetter('T89I1',false)\" onmouseout=\"highlightSetter('T89I1',true)\">残差间的相关系数低以及错误决策树数目较少。</em><em class='similar T89I2' onmouseover=\"highlightSetter('T89I2',false)\" onmouseout=\"highlightSetter('T89I2',true)\">为降低决策树的平均误差,</em><em class='similar T89I3' onmouseover=\"highlightSetter('T89I3',false)\" onmouseout=\"highlightSetter('T89I3',true)\">随机森林回归选择对相关系数进行加权处理。</em><em class='similar T89I4' onmouseover=\"highlightSetter('T89I4',false)\" onmouseout=\"highlightSetter('T89I4',true)\">随机森林</em>的具体算法步骤伪代码可概括为下图2.24所示。","replaceMap":{"随机森林回归选择对相关系数进行加权处理。":"随机森林回归选择对相关系数 进行加权处理。"},"similar_word_count":104,"text":"<em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em><em class='similar'>随机森林回归选择对相关系数进行加权处理。</em><em class='similar'>随机森林</em>的具体算法步骤伪代码可概括为下图2.24所示。","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"},{"synonyms":["数量"],"keyword":"数目"},{"synonyms":["归纳"],"keyword":"概括"}],"keyword":["定理","和定理","给定","随机森林","精确","残差","相关系数","决策树","数目","平均误差","回归","加权处理","算法步骤","伪代码","概括","下图","2.24所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":607.6923,"teacher":"","textWithDynamicClass":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar 91S223I7' onmouseover=\"highlightSetter('91S223I7',false)\" onmouseout=\"highlightSetter('91S223I7',true)\">人工神经网络是深度学习的核心。</em>它们用途广泛,<em class='similar 91S223I9' onmouseover=\"highlightSetter('91S223I9',false)\" onmouseout=\"highlightSetter('91S223I9',true)\">功能强大且可扩展,</em><em class='similar 91S223I10' onmouseover=\"highlightSetter('91S223I10',false)\" onmouseout=\"highlightSetter('91S223I10',true)\">使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar 91S223I11' onmouseover=\"highlightSetter('91S223I11',false)\" onmouseout=\"highlightSetter('91S223I11',true)\">例如对数十亿张图像进行分类</em>(例如GoogleImages)<em class='similar 91S223I13' onmouseover=\"highlightSetter('91S223I13',false)\" onmouseout=\"highlightSetter('91S223I13',true)\">,为语音识别服务</em>(例如Apple的Siri)提供支持,每天向成千上","datatype":"webpage","clcs":[],"similarityPercentage":"95.0%","self":false,"text":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar'>人工神经网络是深度学习的核心。</em>它们用途广泛,<em class='similar'>功能强大且可扩展,</em><em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar'>例如对数十亿张图像进行分类</em>(例如GoogleImages)<em class='similar'>,为语音识别服务</em>(例如Apple的Siri)提供支持,每天向成千上"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":355.83038,"teacher":"","textWithDynamicClass":"s&quot;),以免我们把我们的创造力限制在生物学系统上。<em class='similar 91S224I5' onmouseover=\"highlightSetter('91S224I5',false)\" onmouseout=\"highlightSetter('91S224I5',true)\">人工神经网络是深度学习的核心。</em>它们具有通用性、<em class='similar 91S224I7' onmouseover=\"highlightSetter('91S224I7',false)\" onmouseout=\"highlightSetter('91S224I7',true)\">强大性和可扩展性,</em><em class='similar 91S224I8' onmouseover=\"highlightSetter('91S224I8',false)\" onmouseout=\"highlightSetter('91S224I8',true)\">使得它们能够很好地解决大型和高度复杂的机器学习任务,</em><em class='similar 91S224I9' onmouseover=\"highlightSetter('91S224I9',false)\" onmouseout=\"highlightSetter('91S224I9',true)\">例如分类数十亿图像</em>(<em class='similar 91S224I10' onmouseover=\"highlightSetter('91S224I10',false)\" onmouseout=\"highlightSetter('91S224I10',true)\">例如</em>,谷歌图像),强大的语音识别服务(例如,苹果的Si","datatype":"webpage","clcs":[],"similarityPercentage":"61.4%","self":false,"text":"s&quot;),以免我们把我们的创造力限制在生物学系统上。<em class='similar'>人工神经网络是深度学习的核心。</em>它们具有通用性、<em class='similar'>强大性和可扩展性,</em><em class='similar'>使得它们能够很好地解决大型和高度复杂的机器学习任务,</em><em class='similar'>例如分类数十亿图像</em>(<em class='similar'>例如</em>,谷歌图像),强大的语音识别服务(例如,苹果的Si"}],"textWithDynamicClass":"<em class='similar T90I0' onmouseover=\"highlightSetter('T90I0',false)\" onmouseout=\"highlightSetter('T90I0',true)\">人工神经网络是深度学习的核心。</em>其在当代用途广泛、<em class='similar T90I2' onmouseover=\"highlightSetter('T90I2',false)\" onmouseout=\"highlightSetter('T90I2',true)\">功能强大且可扩展,</em><em class='similar T90I3' onmouseover=\"highlightSetter('T90I3',false)\" onmouseout=\"highlightSetter('T90I3',true)\">使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar T90I4' onmouseover=\"highlightSetter('T90I4',false)\" onmouseout=\"highlightSetter('T90I4',true)\">例如对数十亿张图像进行分类,</em><em class='similar T90I5' onmouseover=\"highlightSetter('T90I5',false)\" onmouseout=\"highlightSetter('T90I5',true)\">例如</em>Googal的Images,<em class='similar T90I6' onmouseover=\"highlightSetter('T90I6',false)\" onmouseout=\"highlightSetter('T90I6',true)\">或者为语音识别服务提供支持</em>[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。","replaceMap":{},"similar_word_count":90,"text":"<em class='similar'>人工神经网络是深度学习的核心。</em>其在当代用途广泛、<em class='similar'>功能强大且可扩展,</em><em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar'>例如对数十亿张图像进行分类,</em><em class='similar'>例如</em>Googal的Images,<em class='similar'>或者为语音识别服务提供支持</em>[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。","suggest":{"synonyms":[{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["用处"],"keyword":"用途"},{"synonyms":["机械"],"keyword":"机器"}],"keyword":["人工神经网络","深度学习","当代","用途","功能强大","可扩展","机器","学习任务","数十亿张","googal","images","语音识别","服务提供","44","感知器","计算原理","多层感知机"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":132.57143,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。<em class='similar 92S226I1' onmouseover=\"highlightSetter('92S226I1',false)\" onmouseout=\"highlightSetter('92S226I1',true)\">03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar 92S226I5' onmouseover=\"highlightSetter('92S226I5',false)\" onmouseout=\"highlightSetter('92S226I5',true)\">,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入","datatype":"webpage","clcs":[],"similarityPercentage":"53.0%","self":false,"text":"起来以计算复杂的逻辑表达式。<em class='similar'>03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar'>,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入"}],"textWithDynamicClass":"<em class='similar T91I0' onmouseover=\"highlightSetter('T91I0',false)\" onmouseout=\"highlightSetter('T91I0',true)\">感知器架构是最为简单的神经网络基础架构之一。</em>结构如图2.25所示,<em class='similar T91I2' onmouseover=\"highlightSetter('T91I2',false)\" onmouseout=\"highlightSetter('T91I2',true)\">图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar T91I4' onmouseover=\"highlightSetter('T91I4',false)\" onmouseout=\"highlightSetter('T91I4',true)\">也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,而不是二进制的0/1值,并且每个输入连接都有对应的相关联的权重值[44]。TLU来计算输入的加权和,","replaceMap":{},"similar_word_count":49,"text":"<em class='similar'>感知器架构是最为简单的神经网络基础架构之一。</em>结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar'>也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,而不是二进制的0/1值,并且每个输入连接都有对应的相关联的权重值[44]。TLU来计算输入的加权和,","suggest":{"synonyms":[],"keyword":["感知器","架构","神经网络","基础架构","2.25所","神经元结构","阈值","逻辑单元","tlu","逻辑值","ltu","神经元","io","数字信号"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":355.6842,"teacher":"","textWithDynamicClass":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar 93S227I8' onmouseover=\"highlightSetter('93S227I8',false)\" onmouseout=\"highlightSetter('93S227I8',true)\">(而不是二进制开/关值)</em><em class='similar 93S227I9' onmouseover=\"highlightSetter('93S227I9',false)\" onmouseout=\"highlightSetter('93S227I9',true)\">,并且每个输入连接都与权重相关联。</em><em class='similar 93S227I10' onmouseover=\"highlightSetter('93S227I10',false)\" onmouseout=\"highlightSetter('93S227I10',true)\">TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar 93S227I12' onmouseover=\"highlightSetter('93S227I12',false)\" onmouseout=\"highlightSetter('93S227I12',true)\">,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar 93S227I20' onmouseover=\"highlightSetter('93S227I20',false)\" onmouseout=\"highlightSetter('93S227I20',true)\">计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav","datatype":"webpage","clcs":[],"similarityPercentage":"58.3%","self":false,"text":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar'>(而不是二进制开/关值)</em><em class='similar'>,并且每个输入连接都与权重相关联。</em><em class='similar'>TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar'>,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar'>计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav"}],"textWithDynamicClass":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar T92I0' onmouseover=\"highlightSetter('T92I0',false)\" onmouseout=\"highlightSetter('T92I0',true)\">而不是二进制的0/1值,</em><em class='similar T92I1' onmouseover=\"highlightSetter('T92I1',false)\" onmouseout=\"highlightSetter('T92I1',true)\">并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar T92I3' onmouseover=\"highlightSetter('T92I3',false)\" onmouseout=\"highlightSetter('T92I3',true)\">TLU来计算输入的加权和,</em><em class='similar T92I4' onmouseover=\"highlightSetter('T92I4',false)\" onmouseout=\"highlightSetter('T92I4',true)\">其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。","replaceMap":{},"similar_word_count":65,"text":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。","suggest":{"synonyms":[],"keyword":["二进制","相关联","权重值","44","tlu","加权和","阶跃函数","学习结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":414.4,"teacher":"","textWithDynamicClass":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar 95S229I8' onmouseover=\"highlightSetter('95S229I8',false)\" onmouseout=\"highlightSetter('95S229I8',true)\">当一层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,<em class='similar 95S229I11' onmouseover=\"highlightSetter('95S229I11',false)\" onmouseout=\"highlightSetter('95S229I11',true)\">该层称为全连接层或密集层。</em>感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar 95S229I14' onmouseover=\"highlightSetter('95S229I14',false)\" onmouseout=\"highlightSetter('95S229I14',true)\">所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通","datatype":"webpage","clcs":[],"similarityPercentage":"86.3%","self":false,"text":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,<em class='similar'>该层称为全连接层或密集层。</em>感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar'>所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":310.93332,"teacher":"","textWithDynamicClass":"。感知器简单地由一层TLUs组成,每个TLU连接到所有输入。<em class='similar 95S230I5' onmouseover=\"highlightSetter('95S230I5',false)\" onmouseout=\"highlightSetter('95S230I5',true)\">当一层中的所有神经元都连接到前一层的每个神经元,</em><em class='similar 95S230I6' onmouseover=\"highlightSetter('95S230I6',false)\" onmouseout=\"highlightSetter('95S230I6',true)\">该层就称为全连接层,</em><em class='similar 95S230I7' onmouseover=\"highlightSetter('95S230I7',false)\" onmouseout=\"highlightSetter('95S230I7',true)\">或稠密层。</em><em class='similar 95S230I8' onmouseover=\"highlightSetter('95S230I8',false)\" onmouseout=\"highlightSetter('95S230I8',true)\">感知器的输入被送到输入神经元:</em>它们的输出等于输入。此外,通常添加额外的偏置特征(","datatype":"webpage","clcs":[],"similarityPercentage":"62.2%","self":false,"text":"。感知器简单地由一层TLUs组成,每个TLU连接到所有输入。<em class='similar'>当一层中的所有神经元都连接到前一层的每个神经元,</em><em class='similar'>该层就称为全连接层,</em><em class='similar'>或稠密层。</em><em class='similar'>感知器的输入被送到输入神经元:</em>它们的输出等于输入。此外,通常添加额外的偏置特征("},{"profession":false,"keywords":[],"year":"","docid":"9000108185583711","author":"csdn","university":"","source":"网页","title":"零基础入门深度学习(4) - 卷积神经网络_weixin_34357928的博客-CSDN博客","url":"https://blog.csdn.net/weixin_34357928/article/details/90586497","reference":false,"similarScore":166.79999,"teacher":"","textWithDynamicClass":"小的FeatureMap。图1所示网络的最后两层是全连接层。<em class='similar 95S232I6' onmouseover=\"highlightSetter('95S232I6',false)\" onmouseout=\"highlightSetter('95S232I6',true)\">第一个全连接层的每个神经元,</em><em class='similar 95S232I7' onmouseover=\"highlightSetter('95S232I7',false)\" onmouseout=\"highlightSetter('95S232I7',true)\">和上一层5个FeatureMap中的每个神经元相连,</em>第二个全连接层(也就是输出层)<em class='similar 95S232I10' onmouseover=\"highlightSetter('95S232I10',false)\" onmouseout=\"highlightSetter('95S232I10',true)\">的每个神经元,</em><em class='similar 95S232I11' onmouseover=\"highlightSetter('95S232I11',false)\" onmouseout=\"highlightSetter('95S232I11',true)\">则和第一个全连接层的每个神经元相连,</em>这样得到了整个网络的输出。至此,我们对卷积神经网络","datatype":"webpage","clcs":[],"similarityPercentage":"32.1%","self":false,"text":"小的FeatureMap。图1所示网络的最后两层是全连接层。<em class='similar'>第一个全连接层的每个神经元,</em><em class='similar'>和上一层5个FeatureMap中的每个神经元相连,</em>第二个全连接层(也就是输出层)<em class='similar'>的每个神经元,</em><em class='similar'>则和第一个全连接层的每个神经元相连,</em>这样得到了整个网络的输出。至此,我们对卷积神经网络"},{"profession":false,"keywords":[],"year":"","docid":"9000139098839511","author":"","university":"","source":"网页","title":"基于卷积神经网络的目标检测研究综述 - 道客巴巴","url":"http://www.doc88.com/p%2D7734946759179.html","reference":false,"similarScore":129.59998,"teacher":"","textWithDynamicClass":"图个数一致,即 Nl+1=N l。全连接层位于特征提取之后,<em class='similar 95S233I8' onmouseover=\"highlightSetter('95S233I8',false)\" onmouseout=\"highlightSetter('95S233I8',true)\">将前一层的所有神经元与当前层的每个神经元相连接。</em>全连接层会根据输出层的具体任务,有针对性地对高层特","datatype":"webpage","clcs":[],"similarityPercentage":"56.3%","self":false,"text":"图个数一致,即 Nl+1=N l。全连接层位于特征提取之后,<em class='similar'>将前一层的所有神经元与当前层的每个神经元相连接。</em>全连接层会根据输出层的具体任务,有针对性地对高层特"},{"profession":false,"keywords":[],"year":"","docid":"9000121121254211","author":"","university":"","source":"网页","title":"基于神经网络实现光网络OSNR估计及链路软故障定位 - 道客巴巴","url":"http://www.doc88.com/p-19729069278233.html","reference":false,"similarScore":102.40001,"teacher":"","textWithDynamicClass":"一结构进行了抽象,也称&quot;阈值逻辑单元&quot;,<em class='similar 95S231I3' onmouseover=\"highlightSetter('95S231I3',false)\" onmouseout=\"highlightSetter('95S231I3',true)\">每个神经元与上一层和下一层神经元均有连接,</em>每个连接都有一个权重值,也称为连接权,上一层的神经","datatype":"webpage","clcs":[],"similarityPercentage":"51.2%","self":false,"text":"一结构进行了抽象,也称&quot;阈值逻辑单元&quot;,<em class='similar'>每个神经元与上一层和下一层神经元均有连接,</em>每个连接都有一个权重值,也称为连接权,上一层的神经"}],"textWithDynamicClass":"感知器是一层阈值逻辑单元单元所构成的,每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar T94I2' onmouseover=\"highlightSetter('T94I2',false)\" onmouseout=\"highlightSetter('T94I2',true)\">当一层中的所有神经元都连接到上一层中的每个神经元时,</em><em class='similar T94I3' onmouseover=\"highlightSetter('T94I3',false)\" onmouseout=\"highlightSetter('T94I3',true)\">该层通常称为全连接层。</em><em class='similar T94I4' onmouseover=\"highlightSetter('T94I4',false)\" onmouseout=\"highlightSetter('T94I4',true)\">所有输入神经元形成输入层,</em>用以与感知器的输入数据互联。同时,每一个神经元会特别增加一个额外的偏置特征,并通过偏置神经元(","replaceMap":{},"similar_word_count":50,"text":"感知器是一层阈值逻辑单元单元所构成的,每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元时,</em><em class='similar'>该层通常称为全连接层。</em><em class='similar'>所有输入神经元形成输入层,</em>用以与感知器的输入数据互联。同时,每一个神经元会特别增加一个额外的偏置特征,并通过偏置神经元(","suggest":{"synonyms":[],"keyword":["感知器","一层","阈值","逻辑单元","input","神经元","连接层","输入层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":427.7545,"teacher":"","textWithDynamicClass":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,<em class='similar 96S234I8' onmouseover=\"highlightSetter('96S234I8',false)\" onmouseout=\"highlightSetter('96S234I8',true)\">通常会添加一个额外的偏置特征</em>(x0=1)<em class='similar 96S234I10' onmouseover=\"highlightSetter('96S234I10',false)\" onmouseout=\"highlightSetter('96S234I10',true)\">:通常使用一种称为&quot;偏置神经元&quot;的特殊类型的神经元来表示该特征,</em>该神经元始终输出1。<em class='similar 96S234I12' onmouseover=\"highlightSetter('96S234I12',false)\" onmouseout=\"highlightSetter('96S234I12',true)\">具有两个输入和三个输出的感知器如图5所示。</em><em class='similar 96S234I13' onmouseover=\"highlightSetter('96S234I13',false)\" onmouseout=\"highlightSetter('96S234I13',true)\">该感知器可以将实例同时分为三个不同的二进制类,</em>这使其成为多输出分类器。图5.具有两个输入神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"50.9%","self":false,"text":":它们输出被送入的任何输入。所有输入神经元形成输入层。此外,<em class='similar'>通常会添加一个额外的偏置特征</em>(x0=1)<em class='similar'>:通常使用一种称为&quot;偏置神经元&quot;的特殊类型的神经元来表示该特征,</em>该神经元始终输出1。<em class='similar'>具有两个输入和三个输出的感知器如图5所示。</em><em class='similar'>该感知器可以将实例同时分为三个不同的二进制类,</em>这使其成为多输出分类器。图5.具有两个输入神经元,"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":337.92114,"teacher":"","textWithDynamicClass":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)<em class='similar 96S235I7' onmouseover=\"highlightSetter('96S235I7',false)\" onmouseout=\"highlightSetter('96S235I7',true)\">。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,</em>它总是输出1。<em class='similar 96S235I9' onmouseover=\"highlightSetter('96S235I9',false)\" onmouseout=\"highlightSetter('96S235I9',true)\">下图表示具有两个输入和三个输出的感知器。</em><em class='similar 96S235I10' onmouseover=\"highlightSetter('96S235I10',false)\" onmouseout=\"highlightSetter('96S235I10',true)\">该感知器可以将实例同时分类为三个不同的二进制类,</em>这使得它是一个多输出分类器。由于线性代数的魔力,下","datatype":"webpage","clcs":[],"similarityPercentage":"46.9%","self":false,"text":"它们的输出等于输入。此外,通常添加额外的偏置特征(X0=1)<em class='similar'>。这种偏置特性通常用一种称为偏置神经元的特殊类型的神经元来表示,</em>它总是输出1。<em class='similar'>下图表示具有两个输入和三个输出的感知器。</em><em class='similar'>该感知器可以将实例同时分类为三个不同的二进制类,</em>这使得它是一个多输出分类器。由于线性代数的魔力,下"}],"textWithDynamicClass":"该层通常称为全连接层。所有输入神经元形成输入层,用以与感知器的输入数据互联。同时,<em class='similar T95I2' onmouseover=\"highlightSetter('T95I2',false)\" onmouseout=\"highlightSetter('T95I2',true)\">每一个神经元会特别增加一个额外的偏置特征,</em><em class='similar T95I3' onmouseover=\"highlightSetter('T95I3',false)\" onmouseout=\"highlightSetter('T95I3',true)\">并通过偏置神经元</em><em class='similar T95I4' onmouseover=\"highlightSetter('T95I4',false)\" onmouseout=\"highlightSetter('T95I4',true)\">(一种特殊类型的神经元)</em><em class='similar T95I5' onmouseover=\"highlightSetter('T95I5',false)\" onmouseout=\"highlightSetter('T95I5',true)\">来保证其输出始终为1。</em><em class='similar T95I6' onmouseover=\"highlightSetter('T95I6',false)\" onmouseout=\"highlightSetter('T95I6',true)\">具有,</em><em class='similar T95I7' onmouseover=\"highlightSetter('T95I7',false)\" onmouseout=\"highlightSetter('T95I7',true)\">作为输入的感知器如图2.26所示。</em><em class='similar T95I8' onmouseover=\"highlightSetter('T95I8',false)\" onmouseout=\"highlightSetter('T95I8',true)\">该感知器可以将输入的数据同时借由输入层来分为三个不同的二进制类,</em>并作为输出。","replaceMap":{"具有,":"具有 ,","作为输入的感知器如图2.26所示。":" 作为输入的感知器如图2.26所示。","每一个神经元会特别增加一个额外的偏置特征,":"每一个神经元会特别增加一个额外的偏置特征 ,"},"similar_word_count":104,"text":"该层通常称为全连接层。所有输入神经元形成输入层,用以与感知器的输入数据互联。同时,<em class='similar'>每一个神经元会特别增加一个额外的偏置特征,</em><em class='similar'>并通过偏置神经元</em><em class='similar'>(一种特殊类型的神经元)</em><em class='similar'>来保证其输出始终为1。</em><em class='similar'>具有,</em><em class='similar'>作为输入的感知器如图2.26所示。</em><em class='similar'>该感知器可以将输入的数据同时借由输入层来分为三个不同的二进制类,</em>并作为输出。","suggest":{"synonyms":[{"synonyms":["分外"],"keyword":"额外"}],"keyword":["用以","感知器","数据互联","神经元","额外","偏置","特殊类型","2.26所","输入层","二进制"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015758038411","author":"","university":"","source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f","reference":false,"similarScore":290.44885,"teacher":"","textWithDynamicClass":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar 97S238I4' onmouseover=\"highlightSetter('97S238I4',false)\" onmouseout=\"highlightSetter('97S238I4',true)\">Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar 97S238I8' onmouseover=\"highlightSetter('97S238I8',false)\" onmouseout=\"highlightSetter('97S238I8',true)\">这两个神经元之间的联系就会变得更强。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"64.5%","self":false,"text":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar'>Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar'>这两个神经元之间的联系就会变得更强。</em>"}],"textWithDynamicClass":"<em class='similar T96I0' onmouseover=\"highlightSetter('T96I0',false)\" onmouseout=\"highlightSetter('T96I0',true)\">关于感知器的训练算法,</em><em class='similar T96I1' onmouseover=\"highlightSetter('T96I1',false)\" onmouseout=\"highlightSetter('T96I1',true)\">其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar T96I3' onmouseover=\"highlightSetter('T96I3',false)\" onmouseout=\"highlightSetter('T96I3',true)\">这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。","replaceMap":{"其很大程度上受到规则的启发,":"其很大程度上受到 规则的启发,"},"similar_word_count":45,"text":"<em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。","suggest":{"synonyms":[{"synonyms":["引导"],"keyword":"启发"}],"keyword":["感知器","训练算法","启发","神经元","交互","互联关系","激活","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":145.20587,"teacher":"","textWithDynamicClass":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar 98S239I6' onmouseover=\"highlightSetter('98S239I6',false)\" onmouseout=\"highlightSetter('98S239I6',true)\">感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。<em class='similar 98S239I8' onmouseover=\"highlightSetter('98S239I8',false)\" onmouseout=\"highlightSetter('98S239I8',true)\">对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的","datatype":"webpage","clcs":[],"similarityPercentage":"48.4%","self":false,"text":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar'>感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。<em class='similar'>对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的"}],"textWithDynamicClass":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,<em class='similar T97I0' onmouseover=\"highlightSetter('T97I0',false)\" onmouseout=\"highlightSetter('T97I0',true)\">感知器每一次训练被送入一个训练样本,</em>同时每个训练样本进行预测。<em class='similar T97I2' onmouseover=\"highlightSetter('T97I2',false)\" onmouseout=\"highlightSetter('T97I2',true)\">从而对产生错误预测的神经元的权重进行调整,</em>如增大,从而增强来自输入的连接权重,这些神经元权重将有助于正确的预测,具体如公式(2-11)所示。","replaceMap":{},"similar_word_count":39,"text":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em>同时每个训练样本进行预测。<em class='similar'>从而对产生错误预测的神经元的权重进行调整,</em>如增大,从而增强来自输入的连接权重,这些神经元权重将有助于正确的预测,具体如公式(2-11)所示。","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["感知器","训练","送入","训练样本","错误预测","神经元","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":198.70192,"teacher":"","textWithDynamicClass":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar 99S240I6' onmouseover=\"highlightSetter('99S240I6',false)\" onmouseout=\"highlightSetter('99S240I6',true)\">它会增强来自输入的连接权重,</em><em class='similar 99S240I7' onmouseover=\"highlightSetter('99S240I7',false)\" onmouseout=\"highlightSetter('99S240I7',true)\">这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更","datatype":"webpage","clcs":[],"similarityPercentage":"76.4%","self":false,"text":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar'>它会增强来自输入的连接权重,</em><em class='similar'>这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更"}],"textWithDynamicClass":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,如增大,<em class='similar T98I0' onmouseover=\"highlightSetter('T98I0',false)\" onmouseout=\"highlightSetter('T98I0',true)\">从而增强来自输入的连接权重,</em><em class='similar T98I1' onmouseover=\"highlightSetter('T98I1',false)\" onmouseout=\"highlightSetter('T98I1',true)\">这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。","replaceMap":{},"similar_word_count":31,"text":"也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,如增大,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。","suggest":{"synonyms":[],"keyword":["权重","神经元","11"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":630.46234,"teacher":"","textWithDynamicClass":"<em class='similar 100S243I0' onmouseover=\"highlightSetter('100S243I0',false)\" onmouseout=\"highlightSetter('100S243I0',true)\">一个或多个称为隐藏层的TLU和一个称为输出层的TLU组成。</em><em class='similar 100S243I1' onmouseover=\"highlightSetter('100S243I1',false)\" onmouseout=\"highlightSetter('100S243I1',true)\">靠近输入层的隐含层通常称为下层,</em><em class='similar 100S243I2' onmouseover=\"highlightSetter('100S243I2',false)\" onmouseout=\"highlightSetter('100S243I2',true)\">靠近输出层的隐含层通常称为上层。</em><em class='similar 100S243I3' onmouseover=\"highlightSetter('100S243I3',false)\" onmouseout=\"highlightSetter('100S243I3',true)\">除输出层外,</em><em class='similar 100S243I4' onmouseover=\"highlightSetter('100S243I4',false)\" onmouseout=\"highlightSetter('100S243I4',true)\">每一层都包括偏置神经元,</em><em class='similar 100S243I5' onmouseover=\"highlightSetter('100S243I5',false)\" onmouseout=\"highlightSetter('100S243I5',true)\">并与下一层完全相连。</em><em class='similar 100S243I6' onmouseover=\"highlightSetter('100S243I6',false)\" onmouseout=\"highlightSetter('100S243I6',true)\">除了输出层之外的每一层都包括一个偏置神经元,</em><em class='similar 100S243I7' onmouseover=\"highlightSetter('100S243I7',false)\" onmouseout=\"highlightSetter('100S243I7',true)\">并且全连接到下一层。</em>信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。<em class='similar 100S243I13' onmouseover=\"highlightSetter('100S243I13',false)\" onmouseout=\"highlightSetter('100S243I13',true)\">当人工神经网络有两个或多个隐含层时,</em><em class='similar 100S243I14' onmouseover=\"highlightSetter('100S243I14',false)\" onmouseout=\"highlightSetter('100S243I14',true)\">称为深度神经网络</em>(DNN)。","datatype":"webpage","clcs":[],"similarityPercentage":"47.0%","self":false,"text":"<em class='similar'>一个或多个称为隐藏层的TLU和一个称为输出层的TLU组成。</em><em class='similar'>靠近输入层的隐含层通常称为下层,</em><em class='similar'>靠近输出层的隐含层通常称为上层。</em><em class='similar'>除输出层外,</em><em class='similar'>每一层都包括偏置神经元,</em><em class='similar'>并与下一层完全相连。</em><em class='similar'>除了输出层之外的每一层都包括一个偏置神经元,</em><em class='similar'>并且全连接到下一层。</em>信号只向一个方向流动(从输入到输出),因此这个架构是一个前馈神经网络(FNN)的一个例子。<em class='similar'>当人工神经网络有两个或多个隐含层时,</em><em class='similar'>称为深度神经网络</em>(DNN)。"},{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":454.8743,"teacher":"","textWithDynamicClass":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar 100S241I11' onmouseover=\"highlightSetter('100S241I11',false)\" onmouseout=\"highlightSetter('100S241I11',true)\">输入层,</em>一层或多层TLU<em class='similar 100S241I13' onmouseover=\"highlightSetter('100S241I13',false)\" onmouseout=\"highlightSetter('100S241I13',true)\">(称为隐藏层)</em><em class='similar 100S241I14' onmouseover=\"highlightSetter('100S241I14',false)\" onmouseout=\"highlightSetter('100S241I14',true)\">和一个TLU的最后一层</em><em class='similar 100S241I15' onmouseover=\"highlightSetter('100S241I15',false)\" onmouseout=\"highlightSetter('100S241I15',true)\">(称为输出层)</em>组成(请参见图7)<em class='similar 100S241I18' onmouseover=\"highlightSetter('100S241I18',false)\" onmouseout=\"highlightSetter('100S241I18',true)\">。靠近输入层的层通常称为较低层,</em><em class='similar 100S241I19' onmouseover=\"highlightSetter('100S241I19',false)\" onmouseout=\"highlightSetter('100S241I19',true)\">靠近输出层的层通常称为较高层。</em><em class='similar 100S241I20' onmouseover=\"highlightSetter('100S241I20',false)\" onmouseout=\"highlightSetter('100S241I20',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 100S241I21' onmouseover=\"highlightSetter('100S241I21',false)\" onmouseout=\"highlightSetter('100S241I21',true)\">并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层","datatype":"webpage","clcs":[],"similarityPercentage":"58.3%","self":false,"text":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar'>输入层,</em>一层或多层TLU<em class='similar'>(称为隐藏层)</em><em class='similar'>和一个TLU的最后一层</em><em class='similar'>(称为输出层)</em>组成(请参见图7)<em class='similar'>。靠近输入层的层通常称为较低层,</em><em class='similar'>靠近输出层的层通常称为较高层。</em><em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层"},{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":437.08557,"teacher":"","textWithDynamicClass":"-&gt;多层感知器多层感知器(MLP)<em class='similar 100S242I2' onmouseover=\"highlightSetter('100S242I2',false)\" onmouseout=\"highlightSetter('100S242I2',true)\">是由一个输入层、</em><em class='similar 100S242I3' onmouseover=\"highlightSetter('100S242I3',false)\" onmouseout=\"highlightSetter('100S242I3',true)\">一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。<em class='similar 100S242I5' onmouseover=\"highlightSetter('100S242I5',false)\" onmouseout=\"highlightSetter('100S242I5',true)\">通常,</em><em class='similar 100S242I6' onmouseover=\"highlightSetter('100S242I6',false)\" onmouseout=\"highlightSetter('100S242I6',true)\">靠近输入层的层称为较低层,</em><em class='similar 100S242I7' onmouseover=\"highlightSetter('100S242I7',false)\" onmouseout=\"highlightSetter('100S242I7',true)\">靠近输出层的层称为外层,</em><em class='similar 100S242I8' onmouseover=\"highlightSetter('100S242I8',false)\" onmouseout=\"highlightSetter('100S242I8',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 100S242I9' onmouseover=\"highlightSetter('100S242I9',false)\" onmouseout=\"highlightSetter('100S242I9',true)\">并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神","datatype":"webpage","clcs":[],"similarityPercentage":"49.1%","self":false,"text":"-&gt;多层感知器多层感知器(MLP)<em class='similar'>是由一个输入层、</em><em class='similar'>一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。<em class='similar'>通常,</em><em class='similar'>靠近输入层的层称为较低层,</em><em class='similar'>靠近输出层的层称为外层,</em><em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神"},{"profession":false,"keywords":[],"year":"","docid":"9000111097854411","author":"csdn","university":"","source":"网页","title":"图层预测","url":"https://blog.csdn.net/x454045816/article/details/92139575","reference":false,"similarScore":221.58383,"teacher":"","textWithDynamicClass":"一个MLP由一个(直通)<em class='similar 100S244I2' onmouseover=\"highlightSetter('100S244I2',false)\" onmouseout=\"highlightSetter('100S244I2',true)\">输入层,</em><em class='similar 100S244I3' onmouseover=\"highlightSetter('100S244I3',false)\" onmouseout=\"highlightSetter('100S244I3',true)\">一个或多个LTU层组成,</em><em class='similar 100S244I4' onmouseover=\"highlightSetter('100S244I4',false)\" onmouseout=\"highlightSetter('100S244I4',true)\">称为隐藏层,</em><em class='similar 100S244I5' onmouseover=\"highlightSetter('100S244I5',false)\" onmouseout=\"highlightSetter('100S244I5',true)\">最后一层LTU称为输出层</em>(如下图所示)<em class='similar 100S244I7' onmouseover=\"highlightSetter('100S244I7',false)\" onmouseout=\"highlightSetter('100S244I7',true)\">。除输出层以外的每一层都包含一个偏置神经元,</em><em class='similar 100S244I8' onmouseover=\"highlightSetter('100S244I8',false)\" onmouseout=\"highlightSetter('100S244I8',true)\">并完全连接到下一层。</em>当ANN具有两个或更多个隐藏层时,它被称为深度神经","datatype":"webpage","clcs":[],"similarityPercentage":"39.6%","self":false,"text":"一个MLP由一个(直通)<em class='similar'>输入层,</em><em class='similar'>一个或多个LTU层组成,</em><em class='similar'>称为隐藏层,</em><em class='similar'>最后一层LTU称为输出层</em>(如下图所示)<em class='similar'>。除输出层以外的每一层都包含一个偏置神经元,</em><em class='similar'>并完全连接到下一层。</em>当ANN具有两个或更多个隐藏层时,它被称为深度神经"},{"profession":false,"keywords":[],"year":"","docid":"9000198071294011","author":"","university":"","source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784","reference":false,"similarScore":117.233345,"teacher":"","textWithDynamicClass":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar 100S245I8' onmouseover=\"highlightSetter('100S245I8',false)\" onmouseout=\"highlightSetter('100S245I8',true)\">MLP 由一个输入层,</em><em class='similar 100S245I9' onmouseover=\"highlightSetter('100S245I9',false)\" onmouseout=\"highlightSetter('100S245I9',true)\">一个或多个 TLU 层</em><em class='similar 100S245I10' onmouseover=\"highlightSetter('100S245I10',false)\" onmouseout=\"highlightSetter('100S245I10',true)\">(称为隐藏层)</em><em class='similar 100S245I11' onmouseover=\"highlightSetter('100S245I11',false)\" onmouseout=\"highlightSetter('100S245I11',true)\">和一个最后一层</em><em class='similar 100S245I12' onmouseover=\"highlightSetter('100S245I12',false)\" onmouseout=\"highlightSetter('100S245I12',true)\">(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神","datatype":"webpage","clcs":[],"similarityPercentage":"37.8%","self":false,"text":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar'>MLP 由一个输入层,</em><em class='similar'>一个或多个 TLU 层</em><em class='similar'>(称为隐藏层)</em><em class='similar'>和一个最后一层</em><em class='similar'>(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神"}],"textWithDynamicClass":"<em class='similar T99I0' onmouseover=\"highlightSetter('T99I0',false)\" onmouseout=\"highlightSetter('T99I0',true)\">多层感知器也称深度人工神经网络,</em>则是在上述感知器的基础上,<em class='similar T99I2' onmouseover=\"highlightSetter('T99I2',false)\" onmouseout=\"highlightSetter('T99I2',true)\">由一层输入层、</em><em class='similar T99I3' onmouseover=\"highlightSetter('T99I3',false)\" onmouseout=\"highlightSetter('T99I3',true)\">一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。</em><em class='similar T99I4' onmouseover=\"highlightSetter('T99I4',false)\" onmouseout=\"highlightSetter('T99I4',true)\">靠近输入层级常称为较低层,</em><em class='similar T99I5' onmouseover=\"highlightSetter('T99I5',false)\" onmouseout=\"highlightSetter('T99I5',true)\">靠近输出的层通常为较高层。</em><em class='similar T99I6' onmouseover=\"highlightSetter('T99I6',false)\" onmouseout=\"highlightSetter('T99I6',true)\">每一层都拥有一个偏置神经元并全连接下一层神经元,</em><em class='similar T99I7' onmouseover=\"highlightSetter('T99I7',false)\" onmouseout=\"highlightSetter('T99I7',true)\">除输出层外。</em>","replaceMap":{},"similar_word_count":109,"text":"<em class='similar'>多层感知器也称深度人工神经网络,</em>则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。</em><em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em><em class='similar'>每一层都拥有一个偏置神经元并全连接下一层神经元,</em><em class='similar'>除输出层外。</em>","suggest":{"synonyms":[{"synonyms":["靠拢"],"keyword":"靠近"}],"keyword":["多层感知器","人工神经网络","感知器","一层","输入层","多层","tlu","隐藏层","输出层","靠近","层级","低层","高层","偏置","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":681.94183,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。<em class='similar 101S246I1' onmouseover=\"highlightSetter('101S246I1',false)\" onmouseout=\"highlightSetter('101S246I1',true)\">常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar 101S246I2' onmouseover=\"highlightSetter('101S246I2',false)\" onmouseout=\"highlightSetter('101S246I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar 101S246I3' onmouseover=\"highlightSetter('101S246I3',false)\" onmouseout=\"highlightSetter('101S246I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 101S246I4' onmouseover=\"highlightSetter('101S246I4',false)\" onmouseout=\"highlightSetter('101S246I4',true)\">也不存在跨层相互连接。</em><em class='similar 101S246I5' onmouseover=\"highlightSetter('101S246I5',false)\" onmouseout=\"highlightSetter('101S246I5',true)\">这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar 101S246I6' onmouseover=\"highlightSetter('101S246I6',false)\" onmouseout=\"highlightSetter('101S246I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 101S246I7' onmouseover=\"highlightSetter('101S246I7',false)\" onmouseout=\"highlightSetter('101S246I7',true)\">隐层与输出层神经元对信号进行加工,</em><em class='similar 101S246I8' onmouseover=\"highlightSetter('101S246I8',false)\" onmouseout=\"highlightSetter('101S246I8',true)\">最终结果由输出层神经元输出,</em>也就是,<em class='similar 101S246I10' onmouseover=\"highlightSetter('101S246I10',false)\" onmouseout=\"highlightSetter('101S246I10',true)\">输入层神经元只负责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"45.5%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。<em class='similar'>常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em><em class='similar'>这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em><em class='similar'>最终结果由输出层神经元输出,</em>也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"},{"profession":false,"keywords":[],"year":"","docid":"9000059137910911","author":"","university":"","source":"网页","title":"从零开始-Machine Learning学习笔记(5)-神经网络 - CSDN博客","url":"http://blog.csdn.net/kabuto_hui/article/details/79885017","reference":false,"similarScore":430.516,"teacher":"","textWithDynamicClass":"要解决非线性可分的问题时,就需要考虑使用多层功能神经元。3.<em class='similar 101S248I5' onmouseover=\"highlightSetter('101S248I5',false)\" onmouseout=\"highlightSetter('101S248I5',true)\">多层前馈神经网络​常见的多层神经网络结构如下图所示:</em><em class='similar 101S248I6' onmouseover=\"highlightSetter('101S248I6',false)\" onmouseout=\"highlightSetter('101S248I6',true)\">​这种层级结构中,</em><em class='similar 101S248I7' onmouseover=\"highlightSetter('101S248I7',false)\" onmouseout=\"highlightSetter('101S248I7',true)\">每层的神经元与下一层神经元完全互联,</em>但是同层不存在连接,<em class='similar 101S248I9' onmouseover=\"highlightSetter('101S248I9',false)\" onmouseout=\"highlightSetter('101S248I9',true)\">也不存在跨层连接。</em><em class='similar 101S248I10' onmouseover=\"highlightSetter('101S248I10',false)\" onmouseout=\"highlightSetter('101S248I10',true)\">这样的神经网络结构通常称为&quot;多层前馈神经网络&quot;。</em>所谓前馈是指网络拓扑结构中不存在回路或环路,而不是","datatype":"webpage","clcs":[],"similarityPercentage":"55.9%","self":false,"text":"要解决非线性可分的问题时,就需要考虑使用多层功能神经元。3.<em class='similar'>多层前馈神经网络​常见的多层神经网络结构如下图所示:</em><em class='similar'>​这种层级结构中,</em><em class='similar'>每层的神经元与下一层神经元完全互联,</em>但是同层不存在连接,<em class='similar'>也不存在跨层连接。</em><em class='similar'>这样的神经网络结构通常称为&quot;多层前馈神经网络&quot;。</em>所谓前馈是指网络拓扑结构中不存在回路或环路,而不是"},{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":320.39774,"teacher":"","textWithDynamicClass":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar 101S247I6' onmouseover=\"highlightSetter('101S247I6',false)\" onmouseout=\"highlightSetter('101S247I6',true)\">常见的一种是每层神经元与下一层神经元全互连,</em><em class='similar 101S247I7' onmouseover=\"highlightSetter('101S247I7',false)\" onmouseout=\"highlightSetter('101S247I7',true)\">神经元之间不存在同层连接,</em><em class='similar 101S247I8' onmouseover=\"highlightSetter('101S247I8',false)\" onmouseout=\"highlightSetter('101S247I8',true)\">也不存在跨层链接,</em><em class='similar 101S247I9' onmouseover=\"highlightSetter('101S247I9',false)\" onmouseout=\"highlightSetter('101S247I9',true)\">这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而","datatype":"webpage","clcs":[],"similarityPercentage":"55.2%","self":false,"text":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar'>常见的一种是每层神经元与下一层神经元全互连,</em><em class='similar'>神经元之间不存在同层连接,</em><em class='similar'>也不存在跨层链接,</em><em class='similar'>这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而"},{"profession":false,"keywords":[],"year":"","docid":"9000104784138911","author":"","university":"","source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html","reference":false,"similarScore":293.0064,"teacher":"","textWithDynamicClass":"输出中观察到隐藏层的信息,隐层只有一层,所以称为单隐层网络。<em class='similar 101S249I3' onmouseover=\"highlightSetter('101S249I3',false)\" onmouseout=\"highlightSetter('101S249I3',true)\">常见的神经网络形如图3-3所示,</em><em class='similar 101S249I4' onmouseover=\"highlightSetter('101S249I4',false)\" onmouseout=\"highlightSetter('101S249I4',true)\">层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar 101S249I5' onmouseover=\"highlightSetter('101S249I5',false)\" onmouseout=\"highlightSetter('101S249I5',true)\">同层的神经元之间不存在连接,</em><em class='similar 101S249I6' onmouseover=\"highlightSetter('101S249I6',false)\" onmouseout=\"highlightSetter('101S249I6',true)\">不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏","datatype":"webpage","clcs":[],"similarityPercentage":"43.7%","self":false,"text":"输出中观察到隐藏层的信息,隐层只有一层,所以称为单隐层网络。<em class='similar'>常见的神经网络形如图3-3所示,</em><em class='similar'>层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar'>同层的神经元之间不存在连接,</em><em class='similar'>不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏"},{"profession":false,"keywords":[],"year":"","docid":"9000207992963011","author":"","university":"","source":"网页","title":"基于BP神经网络的煤矿配电网故障测距研究","url":"http://wenku.baidu.com/view/0057c0e0667d27284b73f242336c1eb91b3733f6.html","reference":false,"similarScore":45.000004,"teacher":"","textWithDynamicClass":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar 101S251I8' onmouseover=\"highlightSetter('101S251I8',false)\" onmouseout=\"highlightSetter('101S251I8',true)\">是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。","datatype":"webpage","clcs":[],"similarityPercentage":"40.9%","self":false,"text":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar'>是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。"}],"textWithDynamicClass":"<em class='similar T100I0' onmouseover=\"highlightSetter('T100I0',false)\" onmouseout=\"highlightSetter('T100I0',true)\">常见的人工神经网络结构是如图2.27所示的多层级结构,</em><em class='similar T100I1' onmouseover=\"highlightSetter('T100I1',false)\" onmouseout=\"highlightSetter('T100I1',true)\">每层的单个神经元与下一层神经元之间实现全连接,</em><em class='similar T100I2' onmouseover=\"highlightSetter('T100I2',false)\" onmouseout=\"highlightSetter('T100I2',true)\">同层的神经元��也不会出现相互之间的连接,</em><em class='similar T100I3' onmouseover=\"highlightSetter('T100I3',false)\" onmouseout=\"highlightSetter('T100I3',true)\">跨层的神将元之间也不存在连接关系。</em><em class='similar T100I4' onmouseover=\"highlightSetter('T100I4',false)\" onmouseout=\"highlightSetter('T100I4',true)\">这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar T100I6' onmouseover=\"highlightSetter('T100I6',false)\" onmouseout=\"highlightSetter('T100I6',true)\">其中输入层神经元用以输入外部输入,</em><em class='similar T100I7' onmouseover=\"highlightSetter('T100I7',false)\" onmouseout=\"highlightSetter('T100I7',true)\">隐藏层和输出层用以处理神经信号,</em><em class='similar T100I8' onmouseover=\"highlightSetter('T100I8',false)\" onmouseout=\"highlightSetter('T100I8',true)\">最终结果由输出层输出预测结果;</em>换句话说,输入层只接受输入而不对输入样本进行任何处理,隐藏层和输出层包含函数神经元。","replaceMap":{},"similar_word_count":156,"text":"<em class='similar'>常见的人工神经网络结构是如图2.27所示的多层级结构,</em><em class='similar'>每层的单个神经元与下一层神经元之间实现全连接,</em><em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em><em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em><em class='similar'>最终结果由输出层输出预测结果;</em>换句话说,输入层只接受输入而不对输入样本进行任何处理,隐藏层和输出层包含函数神经元。","suggest":{"synonyms":[{"synonyms":["酬劳"],"keyword":"人工"}],"keyword":["人工","神经网络结构","2.27所","层级结构","单个","神经元","一层","同层","相互之间","跨层","连接关系","网络结构","多层前馈神经网络","多层感知器","输入层","用以","外部输入","隐藏层","输出层","神经信号","预测结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203096006811","author":"","university":"","source":"网页","title":"BP神经网络原理及实践_IMWTJ123的博客-CSDN博客","url":"https://blog.csdn.net/imwtj123/article/details/88634384","reference":false,"similarScore":478.4915,"teacher":"","textWithDynamicClass":";这样的神经元称为&quot;多层前馈神经网络&quot;。<em class='similar 102S252I2' onmouseover=\"highlightSetter('102S252I2',false)\" onmouseout=\"highlightSetter('102S252I2',true)\">输入层只接受输入不处理函数，</em><em class='similar 102S252I3' onmouseover=\"highlightSetter('102S252I3',false)\" onmouseout=\"highlightSetter('102S252I3',true)\">隐含层和输出层包含功能函数。</em><em class='similar 102S252I4' onmouseover=\"highlightSetter('102S252I4',false)\" onmouseout=\"highlightSetter('102S252I4',true)\">神经网络的学习过程就是训练数据来调整神经元之间的&quot;连接权&quot;以及每个功能神经元的阈值，</em><em class='similar 102S252I5' onmouseover=\"highlightSetter('102S252I5',false)\" onmouseout=\"highlightSetter('102S252I5',true)\">即神经网络的学习蕴含在连接权和阈值中。</em>三、BP算法迄今最成功的神经网络学习算法是误差逆传","datatype":"webpage","clcs":[],"similarityPercentage":"57.6%","self":false,"text":";这样的神经元称为&quot;多层前馈神经网络&quot;。<em class='similar'>输入层只接受输入不处理函数，</em><em class='similar'>隐含层和输出层包含功能函数。</em><em class='similar'>神经网络的学习过程就是训练数据来调整神经元之间的&quot;连接权&quot;以及每个功能神经元的阈值，</em><em class='similar'>即神经网络的学习蕴含在连接权和阈值中。</em>三、BP算法迄今最成功的神经网络学习算法是误差逆传"},{"profession":false,"keywords":[],"year":"","docid":"9000134130400211","author":"","university":"","source":"网页","title":"深度学习入门整理学习（二）_joker-smart的博客-CSDN博客","url":"https://blog.csdn.net/qq_42746595/article/details/104074152","reference":false,"similarScore":240.96346,"teacher":"","textWithDynamicClass":"接,但无跨层连接。输入层只负责接收信号输入,无数据处理功能,<em class='similar 102S253I8' onmouseover=\"highlightSetter('102S253I8',false)\" onmouseout=\"highlightSetter('102S253I8',true)\">隐藏层和输出层是由具有信号处理功能的神经元组成。</em><em class='similar 102S253I9' onmouseover=\"highlightSetter('102S253I9',false)\" onmouseout=\"highlightSetter('102S253I9',true)\">神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们","datatype":"webpage","clcs":[],"similarityPercentage":"40.8%","self":false,"text":"接,但无跨层连接。输入层只负责接收信号输入,无数据处理功能,<em class='similar'>隐藏层和输出层是由具有信号处理功能的神经元组成。</em><em class='similar'>神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们"},{"profession":false,"keywords":[],"year":"","docid":"9000103955678411","author":"","university":"","source":"网页","title":"第!&quot;卷!第#!","url":"","reference":false,"similarScore":227.3685,"teacher":"","textWithDynamicClass":"好的性质#如图#所示!神经网络是由若干神经元组成的多层结构!<em class='similar 102S254I3' onmouseover=\"highlightSetter('102S254I3',false)\" onmouseout=\"highlightSetter('102S254I3',true)\">包含输入层&quot;隐藏层和输出层#神经网络的学习过程就是通过不断调整各神经元之间的权重以使得输出结果的误差满足预设的区间#其优势在于自适应性和非线性映射能力!</em>它不需要对非线性系统有较多的信息就可以通过改变内部","datatype":"webpage","clcs":[],"similarityPercentage":"31.6%","self":false,"text":"好的性质#如图#所示!神经网络是由若干神经元组成的多层结构!<em class='similar'>包含输入层&quot;隐藏层和输出层#神经网络的学习过程就是通过不断调整各神经元之间的权重以使得输出结果的误差满足预设的区间#其优势在于自适应性和非线性映射能力!</em>它不需要对非线性系统有较多的信息就可以通过改变内部"}],"textWithDynamicClass":"其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,<em class='similar T101I1' onmouseover=\"highlightSetter('T101I1',false)\" onmouseout=\"highlightSetter('T101I1',true)\">输入层只接受输入而不对输入样本进行任何处理,</em><em class='similar T101I2' onmouseover=\"highlightSetter('T101I2',false)\" onmouseout=\"highlightSetter('T101I2',true)\">隐藏层和输出层包含函数神经元。</em><em class='similar T101I3' onmouseover=\"highlightSetter('T101I3',false)\" onmouseout=\"highlightSetter('T101I3',true)\">神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em><em class='similar T101I4' onmouseover=\"highlightSetter('T101I4',false)\" onmouseout=\"highlightSetter('T101I4',true)\">神经网络所学习的主要内容包含在连接权重和阈值中。</em>","replaceMap":{},"similar_word_count":105,"text":"其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,<em class='similar'>输入层只接受输入而不对输入样本进行任何处理,</em><em class='similar'>隐藏层和输出层包含函数神经元。</em><em class='similar'>神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em><em class='similar'>神经网络所学习的主要内容包含在连接权重和阈值中。</em>","suggest":{"synonyms":[],"keyword":["输入层","输入样本","隐藏层","输出层","神经元","神经网络","学习过程","训练样本","权重值","阈值","主要内容","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":531.69135,"teacher":"","textWithDynamicClass":"法,该算法至今仍在使用。简而言之,<em class='similar 103S257I3' onmouseover=\"highlightSetter('103S257I3',false)\" onmouseout=\"highlightSetter('103S257I3',true)\">它是使用有效的技术自动计算梯度下降:</em>在仅两次通过网络的过程中(一次前向,一次反向)<em class='similar 103S257I7' onmouseover=\"highlightSetter('103S257I7',false)\" onmouseout=\"highlightSetter('103S257I7',true)\">,反向传播算法能够针对每个模型参数计算网络误差的梯度。</em><em class='similar 103S257I8' onmouseover=\"highlightSetter('103S257I8',false)\" onmouseout=\"highlightSetter('103S257I8',true)\">换句话说,</em><em class='similar 103S257I9' onmouseover=\"highlightSetter('103S257I9',false)\" onmouseout=\"highlightSetter('103S257I9',true)\">它可以找出应如何调整每个连接权重和每个偏置项以减少误差。</em>一旦获得了这些梯度,<em class='similar 103S257I11' onmouseover=\"highlightSetter('103S257I11',false)\" onmouseout=\"highlightSetter('103S257I11',true)\">它便会执行常规的梯度下降步骤,</em><em class='similar 103S257I12' onmouseover=\"highlightSetter('103S257I12',false)\" onmouseout=\"highlightSetter('103S257I12',true)\">然后重复整个过程,</em>直到网络收敛到有解。自动计算梯度称为自动微分,或者","datatype":"webpage","clcs":[],"similarityPercentage":"56.0%","self":false,"text":"法,该算法至今仍在使用。简而言之,<em class='similar'>它是使用有效的技术自动计算梯度下降:</em>在仅两次通过网络的过程中(一次前向,一次反向)<em class='similar'>,反向传播算法能够针对每个模型参数计算网络误差的梯度。</em><em class='similar'>换句话说,</em><em class='similar'>它可以找出应如何调整每个连接权重和每个偏置项以减少误差。</em>一旦获得了这些梯度,<em class='similar'>它便会执行常规的梯度下降步骤,</em><em class='similar'>然后重复整个过程,</em>直到网络收敛到有解。自动计算梯度称为自动微分,或者"},{"profession":false,"keywords":[],"year":"","docid":"9000183209387311","author":"","university":"","source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1","reference":false,"similarScore":398.4796,"teacher":"","textWithDynamicClass":"梯度的梯度下降算法:反向传播算法只需通过网络两次(一次前向,<em class='similar 103S256I5' onmouseover=\"highlightSetter('103S256I5',false)\" onmouseout=\"highlightSetter('103S256I5',true)\">一次后向)</em><em class='similar 103S256I6' onmouseover=\"highlightSetter('103S256I6',false)\" onmouseout=\"highlightSetter('103S256I6',true)\">,就能计算出网络误差关于每个模型参数的梯度。</em><em class='similar 103S256I7' onmouseover=\"highlightSetter('103S256I7',false)\" onmouseout=\"highlightSetter('103S256I7',true)\">换句话说,</em><em class='similar 103S256I8' onmouseover=\"highlightSetter('103S256I8',false)\" onmouseout=\"highlightSetter('103S256I8',true)\">它可以找出每个连接权重和每个偏置项应该如何调整,</em><em class='similar 103S256I9' onmouseover=\"highlightSetter('103S256I9',false)\" onmouseout=\"highlightSetter('103S256I9',true)\">以减少误差。</em>一旦有了这些梯度,<em class='similar 103S256I11' onmouseover=\"highlightSetter('103S256I11',false)\" onmouseout=\"highlightSetter('103S256I11',true)\">它只执行一个常规的梯度下降步骤,</em><em class='similar 103S256I12' onmouseover=\"highlightSetter('103S256I12',false)\" onmouseout=\"highlightSetter('103S256I12',true)\">然后重复整个过程,</em>直到网络收敛。自动计算梯度被称为自动微分。","datatype":"webpage","clcs":[],"similarityPercentage":"50.4%","self":false,"text":"梯度的梯度下降算法:反向传播算法只需通过网络两次(一次前向,<em class='similar'>一次后向)</em><em class='similar'>,就能计算出网络误差关于每个模型参数的梯度。</em><em class='similar'>换句话说,</em><em class='similar'>它可以找出每个连接权重和每个偏置项应该如何调整,</em><em class='similar'>以减少误差。</em>一旦有了这些梯度,<em class='similar'>它只执行一个常规的梯度下降步骤,</em><em class='similar'>然后重复整个过程,</em>直到网络收敛。自动计算梯度被称为自动微分。"}],"textWithDynamicClass":"当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,分为前向传播和后向传播。反向传播是目前使用的学习算法。<em class='similar T102I6' onmouseover=\"highlightSetter('T102I6',false)\" onmouseout=\"highlightSetter('T102I6',true)\">使用有效的技术自动计算此级别。</em>只穿越电平两次,<em class='similar T102I8' onmouseover=\"highlightSetter('T102I8',false)\" onmouseout=\"highlightSetter('T102I8',true)\">即一前一后传播算法可以计算每个模型参数的网络误差梯度。</em><em class='similar T102I9' onmouseover=\"highlightSetter('T102I9',false)\" onmouseout=\"highlightSetter('T102I9',true)\">换句话说,</em><em class='similar T102I10' onmouseover=\"highlightSetter('T102I10',false)\" onmouseout=\"highlightSetter('T102I10',true)\">可以用以学习如何修复每个连接权重和每个偏移项错误。</em>当找到这些梯度时,<em class='similar T102I12' onmouseover=\"highlightSetter('T102I12',false)\" onmouseout=\"highlightSetter('T102I12',true)\">常规梯度会执行下降步骤,</em>直到梯度难以拟合,<em class='similar T102I14' onmouseover=\"highlightSetter('T102I14',false)\" onmouseout=\"highlightSetter('T102I14',true)\">然后它会更新整个过程。</em>常见的DNN网络超参数与典型值如表2.1所示,后续基于机器学习建立快速资源估算模型会进一步对超参数进行调整及介绍。","replaceMap":{"只穿越电平两次,":" 只穿越电平两次,"},"similar_word_count":95,"text":"当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,分为前向传播和后向传播。反向传播是目前使用的学习算法。<em class='similar'>使用有效的技术自动计算此级别。</em>只穿越电平两次,<em class='similar'>即一前一后传播算法可以计算每个模型参数的网络误差梯度。</em><em class='similar'>换句话说,</em><em class='similar'>可以用以学习如何修复每个连接权重和每个偏移项错误。</em>当找到这些梯度时,<em class='similar'>常规梯度会执行下降步骤,</em>直到梯度难以拟合,<em class='similar'>然后它会更新整个过程。</em>常见的DNN网络超参数与典型值如表2.1所示,后续基于机器学习建立快速资源估算模型会进一步对超参数进行调整及介绍。","suggest":{"synonyms":[{"synonyms":["穿梭"],"keyword":"穿越"}],"keyword":["ann","隐藏层","神经","dnn","前向","后向传播","反向传播","学习算法","自动计算","级别","穿越","电平","传播算法","模型参数","误差梯度","修复","权重","偏移","梯度","拟合","超参数","典型值","2."]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000696980311","author":"张甜甜","university":"","source":"大学生论文联合库","title":"无偏估计量的定义","url":"","reference":false,"similarScore":201.66663,"teacher":"","textWithDynamicClass":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar 104S259I8' onmouseover=\"highlightSetter('104S259I8',false)\" onmouseout=\"highlightSetter('104S259I8',true)\">均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此时用均方误差评价点估计与用","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"91.7%","self":false,"text":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar'>均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此时用均方误差评价点估计与用"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023576188911","author":"赵喜林，李德宜，龚谊承主编","university":"","source":"","title":"应用数理统计","url":"","reference":false,"similarScore":183.74998,"teacher":"","textWithDynamicClass":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar 104S260I17' onmouseover=\"highlightSetter('104S260I17',false)\" onmouseout=\"highlightSetter('104S260I17',true)\">均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误","datatype":"book","clcs":[],"similarityPercentage":"87.5%","self":false,"text":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar'>均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误"}],"textWithDynamicClass":"式(2-11)说明,<em class='similar T103I2' onmouseover=\"highlightSetter('T103I2',false)\" onmouseout=\"highlightSetter('T103I2',true)\">均方误差由点估计的方差与偏差的和的平方两部分组成。</em>","replaceMap":{"均方误差由点估计的方差与偏差的和的平方两部分组成。":"均方误差 由点估计的方差 与偏差 的和的平方两部分组成。"},"similar_word_count":25,"text":"式(2-11)说明,<em class='similar'>均方误差由点估计的方差与偏差的和的平方两部分组成。</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["11","均方误差","点估计","方差","偏差","平方"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000784098911","author":"隋文洋","university":"","source":"大学生论文联合库","title":"时间序列预测研究","url":"","reference":false,"similarScore":560,"teacher":"","textWithDynamicClass":"预测值,是测试样本数。(2)<em class='similar 105S262I3' onmouseover=\"highlightSetter('105S262I3',false)\" onmouseout=\"highlightSetter('105S262I3',true)\">均方根误差亦称标准误差,</em><em class='similar 105S262I4' onmouseover=\"highlightSetter('105S262I4',false)\" onmouseout=\"highlightSetter('105S262I4',true)\">它是观测值与真值偏差的平方和观测次数比值的平方根,</em><em class='similar 105S262I5' onmouseover=\"highlightSetter('105S262I5',false)\" onmouseout=\"highlightSetter('105S262I5',true)\">在实际测量中,</em><em class='similar 105S262I6' onmouseover=\"highlightSetter('105S262I6',false)\" onmouseout=\"highlightSetter('105S262I6',true)\">观测次数总是有限的,</em><em class='similar 105S262I7' onmouseover=\"highlightSetter('105S262I7',false)\" onmouseout=\"highlightSetter('105S262I7',true)\">真值只能用最可信赖</em><em class='similar 105S262I8' onmouseover=\"highlightSetter('105S262I8',false)\" onmouseout=\"highlightSetter('105S262I8',true)\">(最佳)</em><em class='similar 105S262I9' onmouseover=\"highlightSetter('105S262I9',false)\" onmouseout=\"highlightSetter('105S262I9',true)\">值来代替。</em><em class='similar 105S262I10' onmouseover=\"highlightSetter('105S262I10',false)\" onmouseout=\"highlightSetter('105S262I10',true)\">均方根误差是用来衡量观测值同真值之间的偏差,</em>定义式为:(3-4)其中、分别为实际值、预测值,是","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"65.1%","self":false,"text":"预测值,是测试样本数。(2)<em class='similar'>均方根误差亦称标准误差,</em><em class='similar'>它是观测值与真值偏差的平方和观测次数比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>均方根误差是用来衡量观测值同真值之间的偏差,</em>定义式为:(3-4)其中、分别为实际值、预测值,是"},{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":493.19043,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar 105S261I1' onmouseover=\"highlightSetter('105S261I1',false)\" onmouseout=\"highlightSetter('105S261I1',true)\">标准误差</em><em class='similar 105S261I2' onmouseover=\"highlightSetter('105S261I2',false)\" onmouseout=\"highlightSetter('105S261I2',true)\">(又称均方根误差)</em><em class='similar 105S261I3' onmouseover=\"highlightSetter('105S261I3',false)\" onmouseout=\"highlightSetter('105S261I3',true)\">它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em><em class='similar 105S261I4' onmouseover=\"highlightSetter('105S261I4',false)\" onmouseout=\"highlightSetter('105S261I4',true)\">在实际测量中,</em><em class='similar 105S261I5' onmouseover=\"highlightSetter('105S261I5',false)\" onmouseout=\"highlightSetter('105S261I5',true)\">观测次数 n 总是有限的,</em><em class='similar 105S261I6' onmouseover=\"highlightSetter('105S261I6',false)\" onmouseout=\"highlightSetter('105S261I6',true)\">真值只能用最可信赖</em><em class='similar 105S261I7' onmouseover=\"highlightSetter('105S261I7',false)\" onmouseout=\"highlightSetter('105S261I7',true)\">(最佳)</em><em class='similar 105S261I8' onmouseover=\"highlightSetter('105S261I8',false)\" onmouseout=\"highlightSetter('105S261I8',true)\">值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,","datatype":"webpage","clcs":[],"similarityPercentage":"73.6%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar'>标准误差</em><em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数 n 总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,"},{"profession":false,"keywords":[],"year":"","docid":"9000186521686911","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html","reference":false,"similarScore":480.85712,"teacher":"","textWithDynamicClass":"<em class='similar 105S263I0' onmouseover=\"highlightSetter('105S263I0',false)\" onmouseout=\"highlightSetter('105S263I0',true)\">?标准误差</em><em class='similar 105S263I1' onmouseover=\"highlightSetter('105S263I1',false)\" onmouseout=\"highlightSetter('105S263I1',true)\">(又称均方根误差)</em><em class='similar 105S263I2' onmouseover=\"highlightSetter('105S263I2',false)\" onmouseout=\"highlightSetter('105S263I2',true)\">它是观测值与真值偏差的平方和观测次数n 值的平方根,</em><em class='similar 105S263I3' onmouseover=\"highlightSetter('105S263I3',false)\" onmouseout=\"highlightSetter('105S263I3',true)\">在实际测量中,</em><em class='similar 105S263I4' onmouseover=\"highlightSetter('105S263I4',false)\" onmouseout=\"highlightSetter('105S263I4',true)\">观测次数n总是有限的,</em><em class='similar 105S263I5' onmouseover=\"highlightSetter('105S263I5',false)\" onmouseout=\"highlightSetter('105S263I5',true)\">真值只能用最可信赖</em><em class='similar 105S263I6' onmouseover=\"highlightSetter('105S263I6',false)\" onmouseout=\"highlightSetter('105S263I6',true)\">(最佳)</em><em class='similar 105S263I7' onmouseover=\"highlightSetter('105S263I7',false)\" onmouseout=\"highlightSetter('105S263I7',true)\">值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,","datatype":"webpage","clcs":[],"similarityPercentage":"72.9%","self":false,"text":"<em class='similar'>?标准误差</em><em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数n 值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数n总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,"}],"textWithDynamicClass":"<em class='similar T104I0' onmouseover=\"highlightSetter('T104I0',false)\" onmouseout=\"highlightSetter('T104I0',true)\">均方根误差,</em><em class='similar T104I1' onmouseover=\"highlightSetter('T104I1',false)\" onmouseout=\"highlightSetter('T104I1',true)\">也称做标准误差,</em><em class='similar T104I2' onmouseover=\"highlightSetter('T104I2',false)\" onmouseout=\"highlightSetter('T104I2',true)\">均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar T104I3' onmouseover=\"highlightSetter('T104I3',false)\" onmouseout=\"highlightSetter('T104I3',true)\">在实际测量中,</em><em class='similar T104I4' onmouseover=\"highlightSetter('T104I4',false)\" onmouseout=\"highlightSetter('T104I4',true)\">观测次数总是有限的,</em><em class='similar T104I5' onmouseover=\"highlightSetter('T104I5',false)\" onmouseout=\"highlightSetter('T104I5',true)\">真值只能用最可信赖</em><em class='similar T104I6' onmouseover=\"highlightSetter('T104I6',false)\" onmouseout=\"highlightSetter('T104I6',true)\">(最佳)</em><em class='similar T104I7' onmouseover=\"highlightSetter('T104I7',false)\" onmouseout=\"highlightSetter('T104I7',true)\">值来代替。</em>标准误差对一组测量中的特大或特小误差反映非常敏感,所以,标准误差能够很好地反映出机器学习的精密度。","replaceMap":{"观测次数总是有限的,":"观测次数 总是有限的,","均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,":"均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,"},"similar_word_count":80,"text":"<em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em>标准误差对一组测量中的特大或特小误差反映非常敏感,所以,标准误差能够很好地反映出机器学习的精密度。","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"},{"synonyms":["视察"],"keyword":"观测"},{"synonyms":["信任"],"keyword":"信赖"}],"keyword":["均方根误差","标准误差","预测值","真实值","偏差","平方","采样次数","比值","平方根","实际测量","观测","有限的","真值","信赖"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000941227311","author":"","university":"","source":"大学生论文联合库","title":"光学计算机程序设计","url":"","reference":false,"similarScore":482.81482,"teacher":"","textWithDynamicClass":"次数n是很有限的,所以真实值只能用最可信赖(最佳)值来代替,<em class='similar 106S264I6' onmouseover=\"highlightSetter('106S264I6',false)\" onmouseout=\"highlightSetter('106S264I6',true)\">标准误差对一组测量中的特大或者特小误差反映非常敏感,</em><em class='similar 106S264I7' onmouseover=\"highlightSetter('106S264I7',false)\" onmouseout=\"highlightSetter('106S264I7',true)\">所以,</em><em class='similar 106S264I8' onmouseover=\"highlightSetter('106S264I8',false)\" onmouseout=\"highlightSetter('106S264I8',true)\">标准误差就能够很好地反映出测量的精密度。</em><em class='similar 106S264I9' onmouseover=\"highlightSetter('106S264I9',false)\" onmouseout=\"highlightSetter('106S264I9',true)\">这也正是标准误差在工程测量中可以得到广泛使用的原因</em>[19]。本文计算均方根误差用下式来完成:其中n是","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"68.0%","self":false,"text":"次数n是很有限的,所以真实值只能用最可信赖(最佳)值来代替,<em class='similar'>标准误差对一组测量中的特大或者特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差就能够很好地反映出测量的精密度。</em><em class='similar'>这也正是标准误差在工程测量中可以得到广泛使用的原因</em>[19]。本文计算均方根误差用下式来完成:其中n是"},{"profession":false,"keywords":[],"year":"","docid":"9000184235326811","author":"","university":"","source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html","reference":false,"similarScore":481.74997,"teacher":"","textWithDynamicClass":"测量中,观测次数n 总是有限的,真值只能用最可信赖(最代替.<em class='similar 106S266I5' onmouseover=\"highlightSetter('106S266I5',false)\" onmouseout=\"highlightSetter('106S266I5',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar 106S266I6' onmouseover=\"highlightSetter('106S266I6',false)\" onmouseout=\"highlightSetter('106S266I6',true)\">所以,</em><em class='similar 106S266I7' onmouseover=\"highlightSetter('106S266I7',false)\" onmouseout=\"highlightSetter('106S266I7',true)\">标准误差能够很好地反映出测量的精密度。</em><em class='similar 106S266I8' onmouseover=\"highlightSetter('106S266I8',false)\" onmouseout=\"highlightSetter('106S266I8',true)\">这正是标准误差在工程测量中广泛被采用的原因在相同测量条</em>件下进行的测量称为等精度测量,例如在同样的条同一个","datatype":"webpage","clcs":[],"similarityPercentage":"56.7%","self":false,"text":"测量中,观测次数n 总是有限的,真值只能用最可信赖(最代替.<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出测量的精密度。</em><em class='similar'>这正是标准误差在工程测量中广泛被采用的原因在相同测量条</em>件下进行的测量称为等精度测量,例如在同样的条同一个"},{"profession":false,"keywords":[],"year":"","docid":"9000120314096811","author":"","university":"","source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html","reference":false,"similarScore":465.45374,"teacher":"","textWithDynamicClass":"数 n 总是有限的,真值为由原始数据集中读入的实际用户评分。<em class='similar 106S265I4' onmouseover=\"highlightSetter('106S265I4',false)\" onmouseout=\"highlightSetter('106S265I4',true)\">均方根误差对一组预测中的特大或特小误差反映非常敏感,</em><em class='similar 106S265I5' onmouseover=\"highlightSetter('106S265I5',false)\" onmouseout=\"highlightSetter('106S265I5',true)\">所以,</em><em class='similar 106S265I6' onmouseover=\"highlightSetter('106S265I6',false)\" onmouseout=\"highlightSetter('106S265I6',true)\">标准误差能够很好地反映出测量的精密度</em>[8]。<em class='similar 106S265I8' onmouseover=\"highlightSetter('106S265I8',false)\" onmouseout=\"highlightSetter('106S265I8',true)\">这正是均方根误差在工程测量和预测评估中广泛被采用的原因。</em>计算出均方根误差(Root mean square","datatype":"webpage","clcs":[],"similarityPercentage":"64.6%","self":false,"text":"数 n 总是有限的,真值为由原始数据集中读入的实际用户评分。<em class='similar'>均方根误差对一组预测中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出测量的精密度</em>[8]。<em class='similar'>这正是均方根误差在工程测量和预测评估中广泛被采用的原因。</em>计算出均方根误差(Root mean square"},{"profession":false,"keywords":[],"year":"2015","docid":"2200008014602311","author":"","university":"","source":"大学生论文联合库","title":"消费者行为分析与预测","url":"","reference":false,"similarScore":367.99997,"teacher":"","textWithDynamicClass":",观测次数n总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar 106S267I6' onmouseover=\"highlightSetter('106S267I6',false)\" onmouseout=\"highlightSetter('106S267I6',true)\">均方根误差对一组测量中的特大或特小的误差反映特别敏感,</em><em class='similar 106S267I7' onmouseover=\"highlightSetter('106S267I7',false)\" onmouseout=\"highlightSetter('106S267I7',true)\">所以,</em><em class='similar 106S267I8' onmouseover=\"highlightSetter('106S267I8',false)\" onmouseout=\"highlightSetter('106S267I8',true)\">均方根误差能够很好地反映出测量的精密度,</em><em class='similar 106S267I9' onmouseover=\"highlightSetter('106S267I9',false)\" onmouseout=\"highlightSetter('106S267I9',true)\">这正是标准误差在工程测量中广泛被采用的原因。</em> Hyndman和Koehler 2006年提出的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"54.1%","self":false,"text":",观测次数n总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar'>均方根误差对一组测量中的特大或特小的误差反映特别敏感,</em><em class='similar'>所以,</em><em class='similar'>均方根误差能够很好地反映出测量的精密度,</em><em class='similar'>这正是标准误差在工程测量中广泛被采用的原因。</em> Hyndman和Koehler 2006年提出的"}],"textWithDynamicClass":"在实际测量中,观测次数总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar T105I0' onmouseover=\"highlightSetter('T105I0',false)\" onmouseout=\"highlightSetter('T105I0',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar T105I1' onmouseover=\"highlightSetter('T105I1',false)\" onmouseout=\"highlightSetter('T105I1',true)\">所以,</em><em class='similar T105I2' onmouseover=\"highlightSetter('T105I2',false)\" onmouseout=\"highlightSetter('T105I2',true)\">标准误差能够很好地反映出机器学习的精密度。</em><em class='similar T105I3' onmouseover=\"highlightSetter('T105I3',false)\" onmouseout=\"highlightSetter('T105I3',true)\">这也是均方根误差在工程领域被广泛使用作为评估指标的原因。</em>因此,均方根误差是常用来度量预测值同真实值之间的偏差,其计算过程公式如(2-13)所示。","replaceMap":{},"similar_word_count":77,"text":"在实际测量中,观测次数总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习的精密度。</em><em class='similar'>这也是均方根误差在工程领域被广泛使用作为评估指标的原因。</em>因此,均方根误差是常用来度量预测值同真实值之间的偏差,其计算过程公式如(2-13)所示。","suggest":{"synonyms":[{"synonyms":["器量"],"keyword":"度量"},{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["标准误差","特大","机器学习","精密度","均方根误差","工程领域","广泛使用","评估指标","度量","预测值","真实值","偏差","计算过程","13"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000143210933511","author":"","university":"","source":"网页","title":"基于ASIC的功耗评估与优化设计","url":"https://wenku.baidu.com/view/0a644043332b3169a45177232f60ddccda38e69e","reference":false,"similarScore":108.80344,"teacher":"","textWithDynamicClass":"还能以较低的电压来驱动系统。(3)逻辑优化与资源共享:<em class='similar 109S270I3' onmouseover=\"highlightSetter('109S270I3',false)\" onmouseout=\"highlightSetter('109S270I3',true)\">RTL级代码设计时可进行逻辑优化,</em><em class='similar 109S270I4' onmouseover=\"highlightSetter('109S270I4',false)\" onmouseout=\"highlightSetter('109S270I4',true)\">减少硬件资源消耗。</em>使用良好的编码风2.2功耗评估流程在实际大规模的集","datatype":"webpage","clcs":[],"similarityPercentage":"49.5%","self":false,"text":"还能以较低的电压来驱动系统。(3)逻辑优化与资源共享:<em class='similar'>RTL级代码设计时可进行逻辑优化,</em><em class='similar'>减少硬件资源消耗。</em>使用良好的编码风2.2功耗评估流程在实际大规模的集"}],"textWithDynamicClass":"通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、<em class='similar T108I3' onmouseover=\"highlightSetter('T108I3',false)\" onmouseout=\"highlightSetter('T108I3',true)\">减少硬件资源消耗等,</em>所以在快速资源估算模型中也需加入相关优化项,<em class='similar T108I5' onmouseover=\"highlightSetter('T108I5',false)\" onmouseout=\"highlightSetter('T108I5',true)\">来对RTL设计进行进一步的优化,</em>从而使得资源估算模型的结果更加的精确。","replaceMap":{},"similar_word_count":26,"text":"通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、<em class='similar'>减少硬件资源消耗等,</em>所以在快速资源估算模型中也需加入相关优化项,<em class='similar'>来对RTL设计进行进一步的优化,</em>从而使得资源估算模型的结果更加的精确。","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"}],"keyword":["第二章","逻辑","综合过程","优化步骤","综合开发环境","rtl","硬件","资源消耗","估算模型","精确"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":329,"teacher":"","textWithDynamicClass":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar 111S273I4' onmouseover=\"highlightSetter('111S273I4',false)\" onmouseout=\"highlightSetter('111S273I4',true)\">相同运算符,</em><em class='similar 111S273I5' onmouseover=\"highlightSetter('111S273I5',false)\" onmouseout=\"highlightSetter('111S273I5',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。.不同的运算符,相同的操作数,<em class='similar 111S273I12' onmouseover=\"highlightSetter('111S273I12',false)\" onmouseout=\"highlightSetter('111S273I12',true)\">可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar 111S273I16' onmouseover=\"highlightSetter('111S273I16',false)\" onmouseout=\"highlightSetter('111S273I16',true)\">.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar 111S273I19' onmouseover=\"highlightSetter('111S273I19',false)\" onmouseout=\"highlightSetter('111S273I19',true)\">可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar 111S273I23' onmouseover=\"highlightSetter('111S273I23',false)\" onmouseout=\"highlightSetter('111S273I23',true)\">不同运算符,</em><em class='similar 111S273I24' onmouseover=\"highlightSetter('111S273I24',false)\" onmouseout=\"highlightSetter('111S273I24',true)\">不同的操作数,</em>通过引入两个多路开关,","datatype":"book","clcs":[],"similarityPercentage":"76.5%","self":false,"text":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。.不同的运算符,相同的操作数,<em class='similar'>可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar'>可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em>通过引入两个多路开关,"}],"textWithDynamicClass":"<em class='similar T110I0' onmouseover=\"highlightSetter('T110I0',false)\" onmouseout=\"highlightSetter('T110I0',true)\">相同运算符,</em><em class='similar T110I1' onmouseover=\"highlightSetter('T110I1',false)\" onmouseout=\"highlightSetter('T110I1',true)\">完全不同的操作数,</em><em class='similar T110I2' onmouseover=\"highlightSetter('T110I2',false)\" onmouseout=\"highlightSetter('T110I2',true)\">可以共享逻辑单元</em>[16]。","replaceMap":{},"similar_word_count":23,"text":"<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em><em class='similar'>可以共享逻辑单元</em>[16]。","suggest":{"synonyms":[],"keyword":["运算符","操作数","共享","逻辑单元","16"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":334.99994,"teacher":"","textWithDynamicClass":"路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar 112S274I10' onmouseover=\"highlightSetter('112S274I10',false)\" onmouseout=\"highlightSetter('112S274I10',true)\">.不同的运算符,</em><em class='similar 112S274I11' onmouseover=\"highlightSetter('112S274I11',false)\" onmouseout=\"highlightSetter('112S274I11',true)\">相同的操作数,</em><em class='similar 112S274I12' onmouseover=\"highlightSetter('112S274I12',false)\" onmouseout=\"highlightSetter('112S274I12',true)\">可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar 112S274I16' onmouseover=\"highlightSetter('112S274I16',false)\" onmouseout=\"highlightSetter('112S274I16',true)\">.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar 112S274I19' onmouseover=\"highlightSetter('112S274I19',false)\" onmouseout=\"highlightSetter('112S274I19',true)\">可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar 112S274I23' onmouseover=\"highlightSetter('112S274I23',false)\" onmouseout=\"highlightSetter('112S274I23',true)\">不同运算符,</em><em class='similar 112S274I24' onmouseover=\"highlightSetter('112S274I24',false)\" onmouseout=\"highlightSetter('112S274I24',true)\">不同的操作数,</em>通过引入两个多路开关,","datatype":"book","clcs":[],"similarityPercentage":"60.9%","self":false,"text":"路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar'>.不同的运算符,</em><em class='similar'>相同的操作数,</em><em class='similar'>可以共享ALu单元。</em>例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,通过引入多路开关,<em class='similar'>可以共享ALU单元。</em>例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em>通过引入两个多路开关,"}],"textWithDynamicClass":"<em class='similar T111I0' onmouseover=\"highlightSetter('T111I0',false)\" onmouseout=\"highlightSetter('T111I0',true)\">不同的运算符,</em><em class='similar T111I1' onmouseover=\"highlightSetter('T111I1',false)\" onmouseout=\"highlightSetter('T111I1',true)\">相同的操作数,</em><em class='similar T111I2' onmouseover=\"highlightSetter('T111I2',false)\" onmouseout=\"highlightSetter('T111I2',true)\">可以共享逻辑单元。</em>","replaceMap":{},"similar_word_count":23,"text":"<em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em><em class='similar'>可以共享逻辑单元。</em>","suggest":{"synonyms":[],"keyword":["运算符","操作数","共享","逻辑单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":495.2121,"teacher":"","textWithDynamicClass":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar 113S275I7' onmouseover=\"highlightSetter('113S275I7',false)\" onmouseout=\"highlightSetter('113S275I7',true)\">相同运算符,</em><em class='similar 113S275I8' onmouseover=\"highlightSetter('113S275I8',false)\" onmouseout=\"highlightSetter('113S275I8',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar 113S275I13' onmouseover=\"highlightSetter('113S275I13',false)\" onmouseout=\"highlightSetter('113S275I13',true)\">.不同的运算符,</em><em class='similar 113S275I14' onmouseover=\"highlightSetter('113S275I14',false)\" onmouseout=\"highlightSetter('113S275I14',true)\">相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar 113S275I19' onmouseover=\"highlightSetter('113S275I19',false)\" onmouseout=\"highlightSetter('113S275I19',true)\">.不同运算符,</em>仅有一个公共操作数,<em class='similar 113S275I21' onmouseover=\"highlightSetter('113S275I21',false)\" onmouseout=\"highlightSetter('113S275I21',true)\">通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar 113S275I26' onmouseover=\"highlightSetter('113S275I26',false)\" onmouseout=\"highlightSetter('113S275I26',true)\">不同运算符,</em><em class='similar 113S275I27' onmouseover=\"highlightSetter('113S275I27',false)\" onmouseout=\"highlightSetter('113S275I27',true)\">不同的操作数,</em><em class='similar 113S275I28' onmouseover=\"highlightSetter('113S275I28',false)\" onmouseout=\"highlightSetter('113S275I28',true)\">通过引入两个多路开关,</em><em class='similar 113S275I29' onmouseover=\"highlightSetter('113S275I29',false)\" onmouseout=\"highlightSetter('113S275I29',true)\">可以实现ALU单元的共享。</em>例如:a+b , c一do 7.2公共子表达式使用","datatype":"book","clcs":[],"similarityPercentage":"41.6%","self":false,"text":"多路开关可以实现共享ALU单元。例如:a+b , a+。。.<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar'>.不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em><em class='similar'>可以实��ALU单元的共享。</em>例如:a+b , c一do 7.2公共子表达式使用"},{"profession":false,"keywords":[],"year":"","docid":"9000136703132111","author":"","university":"","source":"网页","title":"Verilog HDL代码优化技巧_Guchen666的博客-CSDN博客","url":"https://blog.csdn.net/Guchen666/article/details/106386201","reference":false,"similarScore":495.2121,"teacher":"","textWithDynamicClass":"a + c。<em class='similar 113S276I1' onmouseover=\"highlightSetter('113S276I1',false)\" onmouseout=\"highlightSetter('113S276I1',true)\">相同运算符,</em><em class='similar 113S276I2' onmouseover=\"highlightSetter('113S276I2',false)\" onmouseout=\"highlightSetter('113S276I2',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar 113S276I7' onmouseover=\"highlightSetter('113S276I7',false)\" onmouseout=\"highlightSetter('113S276I7',true)\">不同的运算符,</em><em class='similar 113S276I8' onmouseover=\"highlightSetter('113S276I8',false)\" onmouseout=\"highlightSetter('113S276I8',true)\">相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar 113S276I13' onmouseover=\"highlightSetter('113S276I13',false)\" onmouseout=\"highlightSetter('113S276I13',true)\">不同运算符,</em>仅有一个公共操作数,<em class='similar 113S276I15' onmouseover=\"highlightSetter('113S276I15',false)\" onmouseout=\"highlightSetter('113S276I15',true)\">通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar 113S276I20' onmouseover=\"highlightSetter('113S276I20',false)\" onmouseout=\"highlightSetter('113S276I20',true)\">不同运算符,</em><em class='similar 113S276I21' onmouseover=\"highlightSetter('113S276I21',false)\" onmouseout=\"highlightSetter('113S276I21',true)\">不同的操作数,</em><em class='similar 113S276I22' onmouseover=\"highlightSetter('113S276I22',false)\" onmouseout=\"highlightSetter('113S276I22',true)\">通过引入两个多路开关,</em><em class='similar 113S276I23' onmouseover=\"highlightSetter('113S276I23',false)\" onmouseout=\"highlightSetter('113S276I23',true)\">可以实现ALU单元的共享。</em>例如: a+ b,c-d。2、公共子表达式使用公共","datatype":"webpage","clcs":[],"similarityPercentage":"53.8%","self":false,"text":"a + c。<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar'>不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em><em class='similar'>可以实现ALU单元的共享。</em>例如: a+ b,c-d。2、公共子表达式使用公共"}],"textWithDynamicClass":"<em class='similar T112I0' onmouseover=\"highlightSetter('T112I0',false)\" onmouseout=\"highlightSetter('T112I0',true)\">不同运算符、</em><em class='similar T112I1' onmouseover=\"highlightSetter('T112I1',false)\" onmouseout=\"highlightSetter('T112I1',true)\">不同操作数,</em><em class='similar T112I2' onmouseover=\"highlightSetter('T112I2',false)\" onmouseout=\"highlightSetter('T112I2',true)\">可以通过引入两个多路开关,</em><em class='similar T112I3' onmouseover=\"highlightSetter('T112I3',false)\" onmouseout=\"highlightSetter('T112I3',true)\">从而实现逻辑单元的共享。</em>","replaceMap":{},"similar_word_count":37,"text":"<em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em><em class='similar'>从而实现逻辑单元的共享。</em>","suggest":{"synonyms":[],"keyword":["运算符","操作数","多路开关","逻辑单元","共享"]}},{"sources":[{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":218,"teacher":"","textWithDynamicClass":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar 115S278I11' onmouseover=\"highlightSetter('115S278I11',false)\" onmouseout=\"highlightSetter('115S278I11',true)\">运算符:</em><em class='similar 115S278I12' onmouseover=\"highlightSetter('115S278I12',false)\" onmouseout=\"highlightSetter('115S278I12',true)\">包括算术运算符、</em><em class='similar 115S278I13' onmouseover=\"highlightSetter('115S278I13',false)\" onmouseout=\"highlightSetter('115S278I13',true)\">逻辑运算符、</em><em class='similar 115S278I14' onmouseover=\"highlightSetter('115S278I14',false)\" onmouseout=\"highlightSetter('115S278I14',true)\">关系运算符、</em><em class='similar 115S278I15' onmouseover=\"highlightSetter('115S278I15',false)\" onmouseout=\"highlightSetter('115S278I15',true)\">相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、","datatype":"book","clcs":[],"similarityPercentage":"80.7%","self":false,"text":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar'>运算符:</em><em class='similar'>包括算术运算符、</em><em class='similar'>逻辑运算符、</em><em class='similar'>关系运算符、</em><em class='similar'>相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、"}],"textWithDynamicClass":"<em class='similar T114I0' onmouseover=\"highlightSetter('T114I0',false)\" onmouseout=\"highlightSetter('T114I0',true)\">逻辑运算符、</em><em class='similar T114I1' onmouseover=\"highlightSetter('T114I1',false)\" onmouseout=\"highlightSetter('T114I1',true)\">算术运算符、</em><em class='similar T114I2' onmouseover=\"highlightSetter('T114I2',false)\" onmouseout=\"highlightSetter('T114I2',true)\">关系运算符+-*/^|&amp;</em>","replaceMap":{"关系运算符+-*/^|&amp;":"关系运算符\t+ - * / ^ | &amp;"},"similar_word_count":24,"text":"<em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符+-*/^|&amp;</em>","suggest":{"synonyms":[],"keyword":["逻辑运算符","算术运算符","运算符"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":204.63199,"teacher":"","textWithDynamicClass":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar 116S281I7' onmouseover=\"highlightSetter('116S281I7',false)\" onmouseout=\"highlightSetter('116S281I7',true)\">通过运算得到一个结果;</em><em class='similar 116S281I8' onmouseover=\"highlightSetter('116S281I8',false)\" onmouseout=\"highlightSetter('116S281I8',true)\">从语义上说,</em><em class='similar 116S281I9' onmouseover=\"highlightSetter('116S281I9',false)\" onmouseout=\"highlightSetter('116S281I9',true)\">这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,","datatype":"book","clcs":[],"similarityPercentage":"31.5%","self":false,"text":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar'>通过运算得到一个结果;</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,"},{"profession":false,"keywords":[],"year":"","docid":"9000108417201011","author":"","university":"","source":"网页","title":"3.verilog hdl语言基础 - 道客巴巴","url":"http://www.doc88.com/p-1048585004872.html","reference":false,"similarScore":57.857147,"teacher":"","textWithDynamicClass":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar 116S282I3' onmouseover=\"highlightSetter('116S282I3',false)\" onmouseout=\"highlightSetter('116S282I3',true)\">通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog","datatype":"webpage","clcs":[],"similarityPercentage":"48.2%","self":false,"text":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar'>通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog"}],"textWithDynamicClass":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar T115I2' onmouseover=\"highlightSetter('T115I2',false)\" onmouseout=\"highlightSetter('T115I2',true)\">通过运算符或操作符进行联结运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar T115I4' onmouseover=\"highlightSetter('T115I4',false)\" onmouseout=\"highlightSetter('T115I4',true)\">即通过运算符运算得到一个结果,</em><em class='similar T115I5' onmouseover=\"highlightSetter('T115I5',false)\" onmouseout=\"highlightSetter('T115I5',true)\">从语义上说,</em><em class='similar T115I6' onmouseover=\"highlightSetter('T115I6',false)\" onmouseout=\"highlightSetter('T115I6',true)\">这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。","replaceMap":{},"similar_word_count":58,"text":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行联结运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。","suggest":{"synonyms":[{"synonyms":["结合"],"keyword":"联结"}],"keyword":["verilog","hdl","语法","表达式","操作变量","运算符","操作符","联结","运算","语言结构","可理解","语义","函数值","4.2所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":124.09375,"teacher":"","textWithDynamicClass":"两个always过程块将并行执行,并贯穿整个仿真运行的始末。<em class='similar 118S285I5' onmouseover=\"highlightSetter('118S285I5',false)\" onmouseout=\"highlightSetter('118S285I5',true)\">3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句(包括过程赋值语句和","datatype":"book","clcs":[],"similarityPercentage":"37.6%","self":false,"text":"两个always过程块将并行执行,并贯穿整个仿真运行的始末。<em class='similar'>3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句(包括过程赋值语句和"}],"textWithDynamicClass":"<em class='similar T117I0' onmouseover=\"highlightSetter('T117I0',false)\" onmouseout=\"highlightSetter('T117I0',true)\">Verilog HDL语法中的过程机构体,</em><em class='similar T117I1' onmouseover=\"highlightSetter('T117I1',false)\" onmouseout=\"highlightSetter('T117I1',true)\">都是由关键字initial或always和其块内内容语句所组成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,always语句块中的内容块主要由赋值语句和高级程序语句(","replaceMap":{},"similar_word_count":53,"text":"<em class='similar'>Verilog HDL语法中的过程机构体,</em><em class='similar'>都是由关键字initial或always和其块内内容语句所组成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,always语句块中的内容块主要由赋值语句和高级程序语句(","suggest":{"synonyms":[],"keyword":["verilog","hdl","语法","关键字","initial","语句","提取方案","中不"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139313011911","author":"","university":"","source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html","reference":false,"similarScore":365.65213,"teacher":"","textWithDynamicClass":"initial或always)&quot;和块语句所组成的,<em class='similar 119S288I4' onmouseover=\"highlightSetter('119S288I4',false)\" onmouseout=\"highlightSetter('119S288I4',true)\">而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar 119S288I5' onmouseover=\"highlightSetter('119S288I5',false)\" onmouseout=\"highlightSetter('119S288I5',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar 119S288I6' onmouseover=\"highlightSetter('119S288I6',false)\" onmouseout=\"highlightSetter('119S288I6',true)\">这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变","datatype":"webpage","clcs":[],"similarityPercentage":"63.0%","self":false,"text":"initial或always)&quot;和块语句所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar'>这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":351.30432,"teacher":"","textWithDynamicClass":"块每个过程块是由过程语句(initial 或 always)<em class='similar 119S286I5' onmouseover=\"highlightSetter('119S286I5',false)\" onmouseout=\"highlightSetter('119S286I5',true)\">和语句块所组成的,</em><em class='similar 119S286I6' onmouseover=\"highlightSetter('119S286I6',false)\" onmouseout=\"highlightSetter('119S286I6',true)\">而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar 119S286I9' onmouseover=\"highlightSetter('119S286I9',false)\" onmouseout=\"highlightSetter('119S286I9',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar 119S286I10' onmouseover=\"highlightSetter('119S286I10',false)\" onmouseout=\"highlightSetter('119S286I10',true)\">这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个","datatype":"book","clcs":[],"similarityPercentage":"73.2%","self":false,"text":"块每个过程块是由过程语句(initial 或 always)<em class='similar'>和语句块所组成的,</em><em class='similar'>而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个"},{"profession":false,"keywords":[],"year":"2018","docid":"1900023759582811","author":"丁磊主编；张海笑，冯永晋，江志文编著","university":"","source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":"","reference":false,"similarScore":313.971,"teacher":"","textWithDynamicClass":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar 119S290I7' onmouseover=\"highlightSetter('119S290I7',false)\" onmouseout=\"highlightSetter('119S290I7',true)\">分支语句过程块主要是由过程性赋值语句及高���程序语句</em><em class='similar 119S290I8' onmouseover=\"highlightSetter('119S290I8',false)\" onmouseout=\"highlightSetter('119S290I8',true)\">(包括分支语句和循环控制语句)</em><em class='similar 119S290I9' onmouseover=\"highlightSetter('119S290I9',false)\" onmouseout=\"highlightSetter('119S290I9',true)\">这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入","datatype":"book","clcs":[],"similarityPercentage":"66.8%","self":false,"text":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar'>分支语句过程块主要是由过程性赋值语句及高级程序语句</em><em class='similar'>(包括分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入"},{"profession":false,"keywords":[],"year":"","docid":"1900023885801611","author":"杨全胜主编","university":"","source":"","title":"计算机系统综合课程设计","url":"","reference":false,"similarScore":165.27534,"teacher":"","textWithDynamicClass":"过程模块都从属于always和initial这两种过程语句,<em class='similar 119S291I3' onmouseover=\"highlightSetter('119S291I3',false)\" onmouseout=\"highlightSetter('119S291I3',true)\">而语句块主要是由过程赋值语句、</em><em class='similar 119S291I4' onmouseover=\"highlightSetter('119S291I4',false)\" onmouseout=\"highlightSetter('119S291I4',true)\">条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway","datatype":"book","clcs":[],"similarityPercentage":"57.0%","self":false,"text":"过程模块都从属于always和initial这两种过程语句,<em class='similar'>而语句块主要是由过程赋值语句、</em><em class='similar'>条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway"}],"textWithDynamicClass":"由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar T118I1' onmouseover=\"highlightSetter('T118I1',false)\" onmouseout=\"highlightSetter('T118I1',true)\">always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar T118I2' onmouseover=\"highlightSetter('T118I2',false)\" onmouseout=\"highlightSetter('T118I2',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar T118I3' onmouseover=\"highlightSetter('T118I3',false)\" onmouseout=\"highlightSetter('T118I3',true)\">这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。","replaceMap":{},"similar_word_count":54,"text":"由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。","suggest":{"synonyms":[],"keyword":["语法分析","语句","内容块","赋值语句","程序语句","分支语句","控制语句","16","语法格式","4.6所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135249839711","author":"","university":"","source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html","reference":false,"similarScore":419.82077,"teacher":"","textWithDynamicClass":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 121S295I5' onmouseover=\"highlightSetter('121S295I5',false)\" onmouseout=\"highlightSetter('121S295I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 121S295I6' onmouseover=\"highlightSetter('121S295I6',false)\" onmouseout=\"highlightSetter('121S295I6',true)\">值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar 121S295I7' onmouseover=\"highlightSetter('121S295I7',false)\" onmouseout=\"highlightSetter('121S295I7',true)\">它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar 121S295I10' onmouseover=\"highlightSetter('121S295I10',false)\" onmouseout=\"highlightSetter('121S295I10',true)\">时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整型 integer、实型real","datatype":"webpage","clcs":[],"similarityPercentage":"50.0%","self":false,"text":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar'>时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整型 integer、实型real"},{"profession":false,"keywords":[],"year":"","docid":"9000179218349411","author":"","university":"","source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html","reference":false,"similarScore":329.03796,"teacher":"","textWithDynamicClass":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 121S296I5' onmouseover=\"highlightSetter('121S296I5',false)\" onmouseout=\"highlightSetter('121S296I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 121S296I6' onmouseover=\"highlightSetter('121S296I6',false)\" onmouseout=\"highlightSetter('121S296I6',true)\">其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em><em class='similar 121S296I7' onmouseover=\"highlightSetter('121S296I7',false)\" onmouseout=\"highlightSetter('121S296I7',true)\">他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar 121S296I9' onmouseover=\"highlightSetter('121S296I9',false)\" onmouseout=\"highlightSetter('121S296I9',true)\">过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、","datatype":"webpage","clcs":[],"similarityPercentage":"52.2%","self":false,"text":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em><em class='similar'>他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar'>过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":152.54807,"teacher":"","textWithDynamicClass":"0@(posedgeenable)flag2=~flag2;<em class='similar 121S297I6' onmouseover=\"highlightSetter('121S297I6',false)\" onmouseout=\"highlightSetter('121S297I6',true)\">endendmodule赋值语句过程赋值语句过程赋值语句的语法格式为:</em>&lt;被赋值变量&gt;&lt;赋值操作符&gt;&lt;赋值表达式&gt;;<em class='similar 121S297I8' onmouseover=\"highlightSetter('121S297I8',false)\" onmouseout=\"highlightSetter('121S297I8',true)\">其中,</em><em class='similar 121S297I9' onmouseover=\"highlightSetter('121S297I9',false)\" onmouseout=\"highlightSetter('121S297I9',true)\">&lt;赋值操作符&gt;可以是&quot;=&quot;</em>(阻塞型)或&quot;&lt;=&quot;(非","datatype":"webpage","clcs":[],"similarityPercentage":"46.2%","self":false,"text":"0@(posedgeenable)flag2=~flag2;<em class='similar'>endendmodule赋值语句过程赋值语句过程赋值语句的语法格式为:</em>&lt;被赋值变量&gt;&lt;赋值操作符&gt;&lt;赋值表达式&gt;;<em class='similar'>其中,</em><em class='similar'>&lt;赋值操作符&gt;可以是&quot;=&quot;</em>(阻塞型)或&quot;&lt;=&quot;(非"},{"profession":false,"keywords":[],"year":"","docid":"9000183507262511","author":"","university":"","source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10","reference":false,"similarScore":124.80769,"teacher":"","textWithDynamicClass":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar 121S298I4' onmouseover=\"highlightSetter('121S298I4',false)\" onmouseout=\"highlightSetter('121S298I4',true)\">过程赋值语句语法格式:</em><em class='similar 121S298I5' onmouseover=\"highlightSetter('121S298I5',false)\" onmouseout=\"highlightSetter('121S298I5',true)\">赋值操作符:</em><em class='similar 121S298I6' onmouseover=\"highlightSetter('121S298I6',false)\" onmouseout=\"highlightSetter('121S298I6',true)\">可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)","datatype":"webpage","clcs":[],"similarityPercentage":"56.7%","self":false,"text":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar'>过程赋值语句语法格式:</em><em class='similar'>赋值操作符:</em><em class='similar'>可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)"}],"textWithDynamicClass":"<em class='similar T120I0' onmouseover=\"highlightSetter('T120I0',false)\" onmouseout=\"highlightSetter('T120I0',true)\">过程赋值语句的语法格式如图4.7所示,</em><em class='similar T120I1' onmouseover=\"highlightSetter('T120I1',false)\" onmouseout=\"highlightSetter('T120I1',true)\">其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar T120I2' onmouseover=\"highlightSetter('T120I2',false)\" onmouseout=\"highlightSetter('T120I2',true)\">它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar T120I3' onmouseover=\"highlightSetter('T120I3',false)\" onmouseout=\"highlightSetter('T120I3',true)\">过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,由于过程赋值语句中的赋值表达式可以使任何合法的表达式,","replaceMap":{},"similar_word_count":83,"text":"<em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,由于过程赋值语句中的赋值表达式可以使任何合法的表达式,","suggest":{"synonyms":[],"keyword":["赋值语句","语法格式","4.7所","赋值","操作符","阻塞型","赋值操作","第二章","逻辑综合","右侧","表达式","逻辑表达","逻辑资源"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":203.46156,"teacher":"","textWithDynamicClass":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar 122S300I4' onmouseover=\"highlightSetter('122S300I4',false)\" onmouseout=\"highlightSetter('122S300I4',true)\">二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中","datatype":"book","clcs":[],"similarityPercentage":"45.2%","self":false,"text":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar'>二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中"},{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar 122S299I5' onmouseover=\"highlightSetter('122S299I5',false)\" onmouseout=\"highlightSetter('122S299I5',true)\">刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&amp;(由);所给","datatype":"book","clcs":[],"similarityPercentage":"41.4%","self":false,"text":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar'>刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&amp;(由);所给"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar 122S301I3' onmouseover=\"highlightSetter('122S301I3',false)\" onmouseout=\"highlightSetter('122S301I3',true)\"> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&amp;(~b","datatype":"book","clcs":[],"similarityPercentage":"39.6%","self":false,"text":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar'> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&amp;(~b"}],"textWithDynamicClass":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar T121I1' onmouseover=\"highlightSetter('T121I1',false)\" onmouseout=\"highlightSetter('T121I1',true)\">由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、","replaceMap":{},"similar_word_count":27,"text":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、","suggest":{"synonyms":[{"synonyms":["类型"],"keyword":"类别"}],"keyword":["赋值语句","特征信息提取","赋值","表达式","合法的","符号表达式","递归","提取方法","特征提取","提取特征","类别","阻塞型","blockassign","左右位","blockassignrightwidth"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar 123S302I4' onmouseover=\"highlightSetter('123S302I4',false)\" onmouseout=\"highlightSetter('123S302I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 123S302I5' onmouseover=\"highlightSetter('123S302I5',false)\" onmouseout=\"highlightSetter('123S302I5',true)\">及高级程序语句</em><em class='similar 123S302I6' onmouseover=\"highlightSetter('123S302I6',false)\" onmouseout=\"highlightSetter('123S302I6',true)\">(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了","datatype":"book","clcs":[],"similarityPercentage":"42.4%","self":false,"text":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>及高级程序语句</em><em class='similar'>(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar 123S303I4' onmouseover=\"highlightSetter('123S303I4',false)\" onmouseout=\"highlightSetter('123S303I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 123S303I5' onmouseover=\"highlightSetter('123S303I5',false)\" onmouseout=\"highlightSetter('123S303I5',true)\">和高级程序语句</em><em class='similar 123S303I6' onmouseover=\"highlightSetter('123S303I6',false)\" onmouseout=\"highlightSetter('123S303I6',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关","datatype":"book","clcs":[],"similarityPercentage":"37.7%","self":false,"text":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":144.5,"teacher":"","textWithDynamicClass":"/deassign 或 force/release 语句组)<em class='similar 123S307I7' onmouseover=\"highlightSetter('123S307I7',false)\" onmouseout=\"highlightSetter('123S307I7',true)\">141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for","datatype":"book","clcs":[],"similarityPercentage":"68.8%","self":false,"text":"/deassign 或 force/release 语句组)<em class='similar'>141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)&quot;语句块所组成的,<em class='similar 123S304I5' onmouseover=\"highlightSetter('123S304I5',false)\" onmouseout=\"highlightSetter('123S304I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar 123S304I6' onmouseover=\"highlightSetter('123S304I6',false)\" onmouseout=\"highlightSetter('123S304I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过","datatype":"webpage","clcs":[],"similarityPercentage":"37.6%","self":false,"text":"(initial或always)&quot;语句块所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar 123S305I2' onmouseover=\"highlightSetter('123S305I2',false)\" onmouseout=\"highlightSetter('123S305I2',true)\">(包括过程赋值语句和过程连续赋值语句)</em><em class='similar 123S305I3' onmouseover=\"highlightSetter('123S305I3',false)\" onmouseout=\"highlightSetter('123S305I3',true)\">和高级程序语句</em><em class='similar 123S305I4' onmouseover=\"highlightSetter('123S305I4',false)\" onmouseout=\"highlightSetter('123S305I4',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块","datatype":"webpage","clcs":[],"similarityPercentage":"34.7%","self":false,"text":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar'>(包括过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar 123S306I8' onmouseover=\"highlightSetter('123S306I8',false)\" onmouseout=\"highlightSetter('123S306I8',true)\">(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar 123S306I9' onmouseover=\"highlightSetter('123S306I9',false)\" onmouseout=\"highlightSetter('123S306I9',true)\">和高级程序语句</em><em class='similar 123S306I10' onmouseover=\"highlightSetter('123S306I10',false)\" onmouseout=\"highlightSetter('123S306I10',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的","datatype":"webpage","clcs":[],"similarityPercentage":"34.7%","self":false,"text":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar'>(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar'>和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的"}],"textWithDynamicClass":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar T122I2' onmouseover=\"highlightSetter('T122I2',false)\" onmouseout=\"highlightSetter('T122I2',true)\">图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar T122I3' onmouseover=\"highlightSetter('T122I3',false)\" onmouseout=\"highlightSetter('T122I3',true)\">高级程序语句就包含分支语句和循环控制语句,</em><em class='similar T122I4' onmouseover=\"highlightSetter('T122I4',false)\" onmouseout=\"highlightSetter('T122I4',true)\">分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。","replaceMap":{},"similar_word_count":79,"text":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em><em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"},{"synonyms":["末节"],"keyword":"小节"}],"keyword":["语句","verilog","语法","中高级","blcok","4.5","提及","赋值语句","程序语句","分支语句","控制语句","case","条件控制语句","小节","特征提取"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":222.60867,"teacher":"","textWithDynamicClass":"其他与assign语句类似。<em class='similar 124S309I1' onmouseover=\"highlightSetter('124S309I1',false)\" onmouseout=\"highlightSetter('124S309I1',true)\">分支语句If-else条件分支语句If-else条件分支语句的作用是根据指定的判断条件是否满足来确定下一步要执行的操作。</em>它在使用时采用如下三种形式:1、使用形式1If(&","datatype":"webpage","clcs":[],"similarityPercentage":"45.4%","self":false,"text":"其他与assign语句类似。<em class='similar'>分支语句If-else条件分支语句If-else条件分支语句的作用是根据指定的判断条件是否满足来确定下一步要执行的操作。</em>它在使用时采用如下三种形式:1、使用形式1If(&"}],"textWithDynamicClass":"通过Verilog HDL语法可知,<em class='similar T123I1' onmouseover=\"highlightSetter('T123I1',false)\" onmouseout=\"highlightSetter('T123I1',true)\">if-else条件分支语句的作用是复选,</em><em class='similar T123I2' onmouseover=\"highlightSetter('T123I2',false)\" onmouseout=\"highlightSetter('T123I2',true)\">即通过是否满足给定的判断条件来判断下一步电路需要执行的操作或逻辑。</em>其主要语法形式如图4.8所示。","replaceMap":{},"similar_word_count":53,"text":"通过Verilog HDL语法可知,<em class='similar'>if-else条件分支语句的作用是复选,</em><em class='similar'>即通过是否满足给定的判断条件来判断下一步电路需要执行的操作或逻辑。</em>其主要语法形式如图4.8所示。","suggest":{"synonyms":[],"keyword":["verilog","hdl","语法","分支语句","复选","给定","判断条件","或逻辑","语法形式","4.8所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar 126S311I4' onmouseover=\"highlightSetter('126S311I4',false)\" onmouseout=\"highlightSetter('126S311I4',true)\">&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar 126S311I5' onmouseover=\"highlightSetter('126S311I5',false)\" onmouseout=\"highlightSetter('126S311I5',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar 126S311I7' onmouseover=\"highlightSetter('126S311I7',false)\" onmouseout=\"highlightSetter('126S311I7',true)\">Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar 126S311I13' onmouseover=\"highlightSetter('126S311I13',false)\" onmouseout=\"highlightSetter('126S311I13',true)\">3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f","datatype":"book","clcs":[],"similarityPercentage":"46.7%","self":false,"text":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar'>&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar'>3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar 126S312I5' onmouseover=\"highlightSetter('126S312I5',false)\" onmouseout=\"highlightSetter('126S312I5',true)\">6.4循环控制语句与条件分支语句一样,</em><em class='similar 126S312I6' onmouseover=\"highlightSetter('126S312I6',false)\" onmouseout=\"highlightSetter('126S312I6',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 126S312I8' onmouseover=\"highlightSetter('126S312I8',false)\" onmouseout=\"highlightSetter('126S312I8',true)\">Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar 126S312I19' onmouseover=\"highlightSetter('126S312I19',false)\" onmouseout=\"highlightSetter('126S312I19',true)\"> forever循环语句 forever 循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。","datatype":"book","clcs":[],"similarityPercentage":"46.7%","self":false,"text":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar'>6.4循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar'> forever循环语句 forever 循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar 126S313I4' onmouseover=\"highlightSetter('126S313I4',false)\" onmouseout=\"highlightSetter('126S313I4',true)\">与条件分支语句一样,</em><em class='similar 126S313I5' onmouseover=\"highlightSetter('126S313I5',false)\" onmouseout=\"highlightSetter('126S313I5',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 126S313I7' onmouseover=\"highlightSetter('126S313I7',false)\" onmouseout=\"highlightSetter('126S313I7',true)\">Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar 126S313I9' onmouseover=\"highlightSetter('126S313I9',false)\" onmouseout=\"highlightSetter('126S313I9',true)\"> forever循环语句:</em><em class='similar 126S313I10' onmouseover=\"highlightSetter('126S313I10',false)\" onmouseout=\"highlightSetter('126S313I10',true)\">无限连续执行的语句,</em>","datatype":"book","clcs":[],"similarityPercentage":"50.2%","self":false,"text":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar'>与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar'> forever循环语句:</em><em class='similar'>无限连续执行的语句,</em>"},{"profession":false,"keywords":[],"year":"2012","docid":"1900023738091111","author":"张晓飞，秦刚刚，杨阳等编著","university":"","source":"","title":"FPGA技术入门与典型项目开发实例","url":"","reference":false,"similarScore":192.91864,"teacher":"","textWithDynamicClass":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar 126S314I2' onmouseover=\"highlightSetter('126S314I2',false)\" onmouseout=\"highlightSetter('126S314I2',true)\">说明语句与条件分支语句一样</em>,<em class='similar 126S314I3' onmouseover=\"highlightSetter('126S314I3',false)\" onmouseout=\"highlightSetter('126S314I3',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另","datatype":"book","clcs":[],"similarityPercentage":"47.1%","self":false,"text":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar'>说明语句与条件分支语句一样</em>,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另"},{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":183.9676,"teacher":"","textWithDynamicClass":"t;时,执行第四个分支项对应的语句&quot;out钊~b)<em class='similar 126S315I7' onmouseover=\"highlightSetter('126S315I7',false)\" onmouseout=\"highlightSetter('126S315I7',true)\">+l ;&quot;。7.2循环控制语句与条件分支语句一样,</em><em class='similar 126S315I8' onmouseover=\"highlightSetter('126S315I8',false)\" onmouseout=\"highlightSetter('126S315I8',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。v","datatype":"book","clcs":[],"similarityPercentage":"55.7%","self":false,"text":"t;时,执行第四个分支项对应的语句&quot;out钊~b)<em class='similar'>+l ;&quot;。7.2循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。v"},{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar 126S316I11' onmouseover=\"highlightSetter('126S316I11',false)\" onmouseout=\"highlightSetter('126S316I11',true)\">循环语句:</em><em class='similar 126S316I12' onmouseover=\"highlightSetter('126S316I12',false)\" onmouseout=\"highlightSetter('126S316I12',true)\">verilog中有四种循环语句:</em><em class='similar 126S316I13' onmouseover=\"highlightSetter('126S316I13',false)\" onmouseout=\"highlightSetter('126S316I13',true)\">while、</em>for、<em class='similar 126S316I15' onmouseover=\"highlightSetter('126S316I15',false)\" onmouseout=\"highlightSetter('126S316I15',true)\">repeat和forever,</em><em class='similar 126S316I16' onmouseover=\"highlightSetter('126S316I16',false)\" onmouseout=\"highlightSetter('126S316I16',true)\">其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar 126S316I22' onmouseover=\"highlightSetter('126S316I22',false)\" onmouseout=\"highlightSetter('126S316I22',true)\">while</em>(条件表达式)begin各行为语句end;(b)f","datatype":"webpage","clcs":[],"similarityPercentage":"30.1%","self":false,"text":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar'>循环语句:</em><em class='similar'>verilog中有四种循环语句:</em><em class='similar'>while、</em>for、<em class='similar'>repeat和forever,</em><em class='similar'>其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar'>while</em>(条件表达式)begin各行为语句end;(b)f"}],"textWithDynamicClass":"<em class='similar T125I0' onmouseover=\"highlightSetter('T125I0',false)\" onmouseout=\"highlightSetter('T125I0',true)\">与条件分支语句表达含义一致,</em><em class='similar T125I1' onmouseover=\"highlightSetter('T125I1',false)\" onmouseout=\"highlightSetter('T125I1',true)\">循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar T125I2' onmouseover=\"highlightSetter('T125I2',false)\" onmouseout=\"highlightSetter('T125I2',true)\">Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar T125I4' onmouseover=\"highlightSetter('T125I4',false)\" onmouseout=\"highlightSetter('T125I4',true)\">while、</em>for四种,<em class='similar T125I6' onmouseover=\"highlightSetter('T125I6',false)\" onmouseout=\"highlightSetter('T125I6',true)\">其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。","replaceMap":{},"similar_word_count":101,"text":"<em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar'>while、</em>for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。","suggest":{"synonyms":[{"synonyms":["寄义"],"keyword":"含义"},{"synonyms":["无尽"],"keyword":"无限"}],"keyword":["条件分支","语句表达","含义","控制语句","verilog","hdl","程序语句","关键字","forever","repeat","四种","语句","无限","循环语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar 129S323I9' onmouseover=\"highlightSetter('129S323I9',false)\" onmouseout=\"highlightSetter('129S323I9',true)\">函数</em><em class='similar 129S323I10' onmouseover=\"highlightSetter('129S323I10',false)\" onmouseout=\"highlightSetter('129S323I10',true)\">(function)</em><em class='similar 129S323I11' onmouseover=\"highlightSetter('129S323I11',false)\" onmouseout=\"highlightSetter('129S323I11',true)\">函数</em>(functinn)<em class='similar 129S323I13' onmouseover=\"highlightSetter('129S323I13',false)\" onmouseout=\"highlightSetter('129S323I13',true)\">类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用","datatype":"book","clcs":[],"similarityPercentage":"65.2%","self":false,"text":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(functinn)<em class='similar'>类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":",这个持续时间将是tic time个时钟周期长度。6.5.2<em class='similar 129S324I6' onmouseover=\"highlightSetter('129S324I6',false)\" onmouseout=\"highlightSetter('129S324I6',true)\">函数</em><em class='similar 129S324I7' onmouseover=\"highlightSetter('129S324I7',false)\" onmouseout=\"highlightSetter('129S324I7',true)\">(function)</em><em class='similar 129S324I8' onmouseover=\"highlightSetter('129S324I8',false)\" onmouseout=\"highlightSetter('129S324I8',true)\">函数</em>(funcion)<em class='similar 129S324I10' onmouseover=\"highlightSetter('129S324I10',false)\" onmouseout=\"highlightSetter('129S324I10',true)\">类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL语言中的函数使用","datatype":"book","clcs":[],"similarityPercentage":"65.2%","self":false,"text":",这个持续时间将是tic time个时钟周期长度。6.5.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(funcion)<em class='similar'>类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL语言中的函数使用"},{"profession":false,"keywords":[],"year":"","docid":"9000181939983411","author":"","university":"","source":"网页","title":"verilog任务和函数ppt课件","url":"https://www.docin.com/p%2D2480211351.html","reference":false,"similarScore":70.35714,"teacher":"","textWithDynamicClass":"14 Verilog Verilog function 函数<em class='similar 129S325I4' onmouseover=\"highlightSetter('129S325I4',false)\" onmouseout=\"highlightSetter('129S325I4',true)\">(function)</em><em class='similar 129S325I5' onmouseover=\"highlightSetter('129S325I5',false)\" onmouseout=\"highlightSetter('129S325I5',true)\">类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用","datatype":"webpage","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"14 Verilog Verilog function 函数<em class='similar'>(function)</em><em class='similar'>类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用"}],"textWithDynamicClass":"<em class='similar T128I0' onmouseover=\"highlightSetter('T128I0',false)\" onmouseout=\"highlightSetter('T128I0',true)\">Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar T128I1' onmouseover=\"highlightSetter('T128I1',false)\" onmouseout=\"highlightSetter('T128I1',true)\">函数</em><em class='similar T128I2' onmouseover=\"highlightSetter('T128I2',false)\" onmouseout=\"highlightSetter('T128I2',true)\">(Function)</em>的语法形式如下,如图4.14所示。","replaceMap":{},"similar_word_count":49,"text":"<em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>的语法形式如下,如图4.14所示。","suggest":{"synonyms":[],"keyword":["verilog","hdl","编程语言","函数概念","语法","function","语法形式","4.14所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 130S326I4' onmouseover=\"highlightSetter('130S326I4',false)\" onmouseout=\"highlightSetter('130S326I4',true)\">5.16函数的综合在Verilog HDL语句中,</em><em class='similar 130S326I5' onmouseover=\"highlightSetter('130S326I5',false)\" onmouseout=\"highlightSetter('130S326I5',true)\">函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar 130S326I10' onmouseover=\"highlightSetter('130S326I10',false)\" onmouseout=\"highlightSetter('130S326I10',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar 130S326I11' onmouseover=\"highlightSetter('130S326I11',false)\" onmouseout=\"highlightSetter('130S326I11',true)\">仅被综合成导线。</em>例5一42给出了一个函数的实例,","datatype":"book","clcs":[],"similarityPercentage":"57.4%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar'>仅被综合成导线。</em>例5一42给出了一个函数的实例,"}],"textWithDynamicClass":"<em class='similar T129I0' onmouseover=\"highlightSetter('T129I0',false)\" onmouseout=\"highlightSetter('T129I0',true)\">在Verilog HDL语句中,</em><em class='similar T129I1' onmouseover=\"highlightSetter('T129I1',false)\" onmouseout=\"highlightSetter('T129I1',true)\">函数代表了纯组合逻辑。</em><em class='similar T129I2' onmouseover=\"highlightSetter('T129I2',false)\" onmouseout=\"highlightSetter('T129I2',true)\">在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar T129I3' onmouseover=\"highlightSetter('T129I3',false)\" onmouseout=\"highlightSetter('T129I3',true)\">仅被综合映射为成片上导线</em>[16]。<em class='similar T129I5' onmouseover=\"highlightSetter('T129I5',false)\" onmouseout=\"highlightSetter('T129I5',true)\">由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;","replaceMap":{},"similar_word_count":88,"text":"<em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em><em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"},{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["移用"],"keyword":"调用"}],"keyword":["verilog","hdl","语句","组合逻辑","函数语句","临时","映射","成片","导线","16","function","逻辑","表达及","端口","调用","分析及"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000108431821311","author":"","university":"","source":"网页","title":"数据分析的准备工作：从问题分析到数据清洗","url":"http://m.toutiao.com/i6643684078983840264/","reference":false,"similarScore":613.7815,"teacher":"","textWithDynamicClass":"<em class='similar 132S328I0' onmouseover=\"highlightSetter('132S328I0',false)\" onmouseout=\"highlightSetter('132S328I0',true)\">是对客观事物的逻辑归纳,</em><em class='similar 132S328I1' onmouseover=\"highlightSetter('132S328I1',false)\" onmouseout=\"highlightSetter('132S328I1',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar 132S328I11' onmouseover=\"highlightSetter('132S328I11',false)\" onmouseout=\"highlightSetter('132S328I11',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 132S328I12' onmouseover=\"highlightSetter('132S328I12',false)\" onmouseout=\"highlightSetter('132S328I12',true)\">如正相关,</em><em class='similar 132S328I13' onmouseover=\"highlightSetter('132S328I13',false)\" onmouseout=\"highlightSetter('132S328I13',true)\">负相关。</em><em class='similar 132S328I14' onmouseover=\"highlightSetter('132S328I14',false)\" onmouseout=\"highlightSetter('132S328I14',true)\">数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发","datatype":"webpage","clcs":[],"similarityPercentage":"85.2%","self":false,"text":"<em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em><em class='similar'>数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发"},{"profession":false,"keywords":[],"year":"","docid":"9000188274078611","author":"","university":"","source":"网页","title":"数据标签生成、模型训练、事件识别方法和装置","url":"http://www.doc88.com/p%2D99729934791774.html","reference":false,"similarScore":240,"teacher":"","textWithDynamicClass":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar 132S332I3' onmouseover=\"highlightSetter('132S332I3',false)\" onmouseout=\"highlightSetter('132S332I3',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 132S332I4' onmouseover=\"highlightSetter('132S332I4',false)\" onmouseout=\"highlightSetter('132S332I4',true)\">如正相关,</em><em class='similar 132S332I5' onmouseover=\"highlightSetter('132S332I5',false)\" onmouseout=\"highlightSetter('132S332I5',true)\">负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。","datatype":"webpage","clcs":[],"similarityPercentage":"96.0%","self":false,"text":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。"},{"profession":false,"keywords":[],"year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编；黄涛，吴强副主编；王社，魏郧华，胡凯，蔡振参编","university":"","source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":"","reference":false,"similarScore":237.46571,"teacher":"","textWithDynamicClass":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar 132S329I8' onmouseover=\"highlightSetter('132S329I8',false)\" onmouseout=\"highlightSetter('132S329I8',true)\">是事实或观察的结果,</em><em class='similar 132S329I9' onmouseover=\"highlightSetter('132S329I9',false)\" onmouseout=\"highlightSetter('132S329I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 132S329I10' onmouseover=\"highlightSetter('132S329I10',false)\" onmouseout=\"highlightSetter('132S329I10',true)\">是用于表示客观事物的未经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字","datatype":"book","clcs":["TP311.138"],"similarityPercentage":"60.9%","self":false,"text":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字"},{"profession":false,"keywords":[],"year":"","docid":"9000118062415311","author":"","university":"","source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search","reference":false,"similarScore":237.4657,"teacher":"","textWithDynamicClass":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar 132S330I8' onmouseover=\"highlightSetter('132S330I8',false)\" onmouseout=\"highlightSetter('132S330I8',true)\">是事实或观察的结果,</em><em class='similar 132S330I9' onmouseover=\"highlightSetter('132S330I9',false)\" onmouseout=\"highlightSetter('132S330I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 132S330I10' onmouseover=\"highlightSetter('132S330I10',false)\" onmouseout=\"highlightSetter('132S330I10',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"59.4%","self":false,"text":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"},{"profession":false,"keywords":[],"year":"","docid":"9000131828806911","author":"","university":"","source":"网页","title":"浅谈Java中的数据_Hybeyond_的博客-CSDN博客","url":"https://blog.csdn.net/Hybeyond_/article/details/100088851","reference":false,"similarScore":201.72269,"teacher":"","textWithDynamicClass":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar 132S331I5' onmouseover=\"highlightSetter('132S331I5',false)\" onmouseout=\"highlightSetter('132S331I5',true)\">广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar 132S331I6' onmouseover=\"highlightSetter('132S331I6',false)\" onmouseout=\"highlightSetter('132S331I6',true)\">是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"63.0%","self":false,"text":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar'>广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"}],"textWithDynamicClass":"<em class='similar T131I0' onmouseover=\"highlightSetter('T131I0',false)\" onmouseout=\"highlightSetter('T131I0',true)\">数据是对事实进行观察后产生的结果的描述,</em><em class='similar T131I1' onmouseover=\"highlightSetter('T131I1',false)\" onmouseout=\"highlightSetter('T131I1',true)\">是对客观事物一种数学逻辑归纳,</em><em class='similar T131I2' onmouseover=\"highlightSetter('T131I2',false)\" onmouseout=\"highlightSetter('T131I2',true)\">是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar T131I4' onmouseover=\"highlightSetter('T131I4',false)\" onmouseout=\"highlightSetter('T131I4',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar T131I5' onmouseover=\"highlightSetter('T131I5',false)\" onmouseout=\"highlightSetter('T131I5',true)\">如正相关,</em><em class='similar T131I6' onmouseover=\"highlightSetter('T131I6',false)\" onmouseout=\"highlightSetter('T131I6',true)\">负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.","replaceMap":{},"similar_word_count":79,"text":"<em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.","suggest":{"synonyms":[{"synonyms":["事例"],"keyword":"事实"},{"synonyms":["总结"],"keyword":"归纳"}],"keyword":["事实","客观事物","数学逻辑","归纳","原始素材","数据相关性","指数","正相关","负相关","样本数据","相关性分析","分析特征","预测值","重要程度","相关系数","皮尔逊","使用错误"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000187461126911","author":"","university":"","source":"网页","title":"油藏经营管理","url":"https://www.docin.com/p%2D920724272.html","reference":false,"similarScore":104,"teacher":"","textWithDynamicClass":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar 133S334I4' onmouseover=\"highlightSetter('133S334I4',false)\" onmouseout=\"highlightSetter('133S334I4',true)\">量纲一般也不同,</em><em class='similar 133S334I5' onmouseover=\"highlightSetter('133S334I5',false)\" onmouseout=\"highlightSetter('133S334I5',true)\">数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或","datatype":"webpage","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar'>量纲一般也不同,</em><em class='similar'>数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或"}],"textWithDynamicClass":"本研究共计提取了67项特征,<em class='similar T132I1' onmouseover=\"highlightSetter('T132I1',false)\" onmouseout=\"highlightSetter('T132I1',true)\">这些特征的数据取值范围差别很大,</em><em class='similar T132I2' onmouseover=\"highlightSetter('T132I2',false)\" onmouseout=\"highlightSetter('T132I2',true)\">量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。","replaceMap":{},"similar_word_count":22,"text":"本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。","suggest":{"synonyms":[{"synonyms":["合计"],"keyword":"共计"},{"synonyms":["广大"],"keyword":"宽大"},{"synonyms":["机械"],"keyword":"机器"}],"keyword":["共计","67项","取值范围","量纲","端口","宽大","数量级","预处理","机器","学习环境","特征工程","流水线","复用","数据集","快速处理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117476774611","author":"csdn","university":"","source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596","reference":false,"similarScore":320.97223,"teacher":"","textWithDynamicClass":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar 134S336I2' onmouseover=\"highlightSetter('134S336I2',false)\" onmouseout=\"highlightSetter('134S336I2',true)\">最重要也最需要应用到数据上的转换器,</em><em class='similar 134S336I3' onmouseover=\"highlightSetter('134S336I3',false)\" onmouseout=\"highlightSetter('134S336I3',true)\">就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,<em class='similar 134S336I5' onmouseover=\"highlightSetter('134S336I5',false)\" onmouseout=\"highlightSetter('134S336I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 134S336I6' onmouseover=\"highlightSetter('134S336I6',false)\" onmouseout=\"highlightSetter('134S336I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39","datatype":"webpage","clcs":[],"similarityPercentage":"65.5%","self":false,"text":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar'>最重要也最需要应用到数据上的转换器,</em><em class='similar'>就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,<em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39"},{"profession":false,"keywords":[],"year":"","docid":"9000143881533411","author":"","university":"","source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments","reference":false,"similarScore":311.05557,"teacher":"","textWithDynamicClass":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar 134S335I3' onmouseover=\"highlightSetter('134S335I3',false)\" onmouseout=\"highlightSetter('134S335I3',true)\">特征缩放,</em><em class='similar 134S335I4' onmouseover=\"highlightSetter('134S335I4',false)\" onmouseout=\"highlightSetter('134S335I4',true)\">如果输入的数值属性具有非常大的比例差异,</em><em class='similar 134S335I5' onmouseover=\"highlightSetter('134S335I5',false)\" onmouseout=\"highlightSetter('134S335I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 134S335I6' onmouseover=\"highlightSetter('134S335I6',false)\" onmouseout=\"highlightSetter('134S335I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393","datatype":"webpage","clcs":[],"similarityPercentage":"63.5%","self":false,"text":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar'>特征缩放,</em><em class='similar'>如果输入的数值属性具有非常大的比例差异,</em><em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393"}],"textWithDynamicClass":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar T133I2' onmouseover=\"highlightSetter('T133I2',false)\" onmouseout=\"highlightSetter('T133I2',true)\">所以需要对特征数据进行的一项重要操作就��特征缩放。</em><em class='similar T133I3' onmouseover=\"highlightSetter('T133I3',false)\" onmouseout=\"highlightSetter('T133I3',true)\">若输入的样本的特征数据存在较大的数值差异,</em><em class='similar T133I4' onmouseover=\"highlightSetter('T133I4',false)\" onmouseout=\"highlightSetter('T133I4',true)\">往往会导致机器学习算法的性能表现不佳,</em><em class='similar T133I5' onmouseover=\"highlightSetter('T133I5',false)\" onmouseout=\"highlightSetter('T133I5',true)\">当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。","replaceMap":{},"similar_word_count":75,"text":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em><em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em><em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。","suggest":{"synonyms":[],"keyword":["差异性","数据差异","敏感度","特征数据","特征缩放","机器学习算法","性能表现","特例","提取特征","端口","位宽","数量级"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110791518511","author":"csdn","university":"","source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516","reference":false,"similarScore":80.35715,"teacher":"","textWithDynamicClass":"ng)和标准化(standardization)转换流水线:<em class='similar 135S337I13' onmouseover=\"highlightSetter('135S337I13',false)\" onmouseout=\"highlightSetter('135S337I13',true)\">利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们","datatype":"webpage","clcs":[],"similarityPercentage":"38.3%","self":false,"text":"ng)和标准化(standardization)转换流水线:<em class='similar'>利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们"}],"textWithDynamicClass":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar T134I1' onmouseover=\"highlightSetter('T134I1',false)\" onmouseout=\"highlightSetter('T134I1',true)\">所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。","replaceMap":{},"similar_word_count":46,"text":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。","suggest":{"synonyms":[],"keyword":["预处理","scikit","learn","pipeline","流水线","转换器","4.18所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000123319620811","author":"","university":"","source":"网页","title":"基于神经网络的磁瓦表面缺陷检测识别_刘畅 - 道客巴巴","url":"https://www.doc88.com/p%2D6129946121758.html","reference":false,"similarScore":62.592594,"teacher":"","textWithDynamicClass":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar 138S340I8' onmouseover=\"highlightSetter('138S340I8',false)\" onmouseout=\"highlightSetter('138S340I8',true)\">使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中","datatype":"webpage","clcs":[],"similarityPercentage":"41.7%","self":false,"text":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar'>使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中"}],"textWithDynamicClass":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar T137I0' onmouseover=\"highlightSetter('T137I0',false)\" onmouseout=\"highlightSetter('T137I0',true)\">,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。","replaceMap":{},"similar_word_count":28,"text":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。","suggest":{"synonyms":[],"keyword":["5折","交叉验证","29","采用标准","参数对","lut","预测结果","4.20所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000206973298911","author":"","university":"","source":"网页","title":"一种高空抛物的检测方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011159027.html","reference":false,"similarScore":92.5641,"teacher":"","textWithDynamicClass":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar 139S342I4' onmouseover=\"highlightSetter('139S342I4',false)\" onmouseout=\"highlightSetter('139S342I4',true)\">重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar 139S342I5' onmouseover=\"highlightSetter('139S342I5',false)\" onmouseout=\"highlightSetter('139S342I5',true)\">达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可","datatype":"webpage","clcs":[],"similarityPercentage":"28.9%","self":false,"text":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar'>重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar'>达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可"},{"profession":false,"keywords":[],"year":"","docid":"9000120755765111","author":"","university":"","source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search","reference":false,"similarScore":75.73964,"teacher":"","textWithDynamicClass":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar 139S341I9' onmouseover=\"highlightSetter('139S341I9',false)\" onmouseout=\"highlightSetter('139S341I9',true)\">模型训练,</em><em class='similar 139S341I10' onmouseover=\"highlightSetter('139S341I10',false)\" onmouseout=\"highlightSetter('139S341I10',true)\">输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar 139S341I11' onmouseover=\"highlightSetter('139S341I11',false)\" onmouseout=\"highlightSetter('139S341I11',true)\">训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心","datatype":"webpage","clcs":[],"similarityPercentage":"25.2%","self":false,"text":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar'>模型训练,</em><em class='similar'>输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar'>训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心"}],"textWithDynamicClass":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar T138I4' onmouseover=\"highlightSetter('T138I4',false)\" onmouseout=\"highlightSetter('T138I4',true)\">所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","replaceMap":{},"similar_word_count":40,"text":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","suggest":{"synonyms":[{"synonyms":["注意"],"keyword":"着重"}],"keyword":["特征提取","样本集","线性回归","决策树","模型预测","较差","随机森林","mlp","标准参数","预测性能","着重","神经网络","模型训练","参数调整"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000189710959511","author":"","university":"","source":"网页","title":"GitHub - panbin/panbin-python: python开源项目","url":"https://github.com/panbin/panbin-python#%E6%A0%91%E8%8E%93%E6%B4%BE","reference":false,"similarScore":120.75099,"teacher":"","textWithDynamicClass":"夹内。sinaweibopy-新浪微博Python SDK。<em class='similar 140S343I3' onmouseover=\"highlightSetter('140S343I3',false)\" onmouseout=\"highlightSetter('140S343I3',true)\">keras- Keras是一个高度模块化的神经网络库,</em>用Python语言编写,<em class='similar 140S343I5' onmouseover=\"highlightSetter('140S343I5',false)\" onmouseout=\"highlightSetter('140S343I5',true)\">可以基于TensorFlow或Theano框架运行。</em>yapf- yapf是一个Python文件代码格式","datatype":"webpage","clcs":[],"similarityPercentage":"41.6%","self":false,"text":"夹内。sinaweibopy-新浪微博Python SDK。<em class='similar'>keras- Keras是一个高度模块化的神经网络库,</em>用Python语言编写,<em class='similar'>可以基于TensorFlow或Theano框架运行。</em>yapf- yapf是一个Python文件代码格式"},{"profession":false,"keywords":[],"year":"","docid":"9000145996722811","author":"","university":"","source":"网页","title":"2015年出现的十大流行 Python 库 | 《Linux就该这么学》","url":"https://www.linuxprobe.com/top-ten-popular-python-library-2015.html#SOHUCS","reference":false,"similarScore":93.33333,"teacher":"","textWithDynamicClass":"我将给大家介绍2015年新出现的十大 Python 开发库:<em class='similar 140S344I4' onmouseover=\"highlightSetter('140S344I4',false)\" onmouseout=\"highlightSetter('140S344I4',true)\">Keras:</em><em class='similar 140S344I5' onmouseover=\"highlightSetter('140S344I5',false)\" onmouseout=\"highlightSetter('140S344I5',true)\">是一个基于python编写的高度模块化的神经网络库,</em>注重支持快速实验可以极大地缩短从想法到实现之间的时","datatype":"webpage","clcs":[],"similarityPercentage":"40.6%","self":false,"text":"我将给大家介绍2015年新出现的十大 Python 开发库:<em class='similar'>Keras:</em><em class='similar'>是一个基于python编写的高度模块化的神经网络库,</em>注重支持快速实验可以极大地缩短从想法到实现之间的时"}],"textWithDynamicClass":"<em class='similar T139I0' onmouseover=\"highlightSetter('T139I0',false)\" onmouseout=\"highlightSetter('T139I0',true)\">Keras是具有高度模块化且提供易用API的库的神经网络库。</em><em class='similar T139I1' onmouseover=\"highlightSetter('T139I1',false)\" onmouseout=\"highlightSetter('T139I1',true)\">基于Python语言,</em><em class='similar T139I2' onmouseover=\"highlightSetter('T139I2',false)\" onmouseout=\"highlightSetter('T139I2',true)\">能以TensorFlow 或Theano等为后端运行。</em>","replaceMap":{},"similar_word_count":67,"text":"<em class='similar'>Keras是具有高度模块化且提供易用API的库的神经网络库。</em><em class='similar'>基于Python语言,</em><em class='similar'>能以TensorFlow 或Theano等为后端运行。</em>","suggest":{"synonyms":[],"keyword":["keras","模块化","易用","api","神经","网络库","python","tensorflow","theano","后端"]}}],"word_count":39476,"similarity":0.192,"similarity_copy":0.192,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"总结与展望","word_similar_count":0,"word_ref_count":0,"sources":[],"similarity_pro":0,"word_copy_count":0,"word_self_count":0,"similar_paragraphs":[],"word_count":1545,"similarity":0,"similarity_copy":0,"similarity_self":0}],"similarity_custom":0,"similarity_pro":0,"last_part_similar_count":6214,"word_copy_count":7896,"chapter_similar_count":2,"chapter_min_similar_word_count":302,"front_part_similar_count":1682,"chapter_max_similar_word_count":7594,"word_self_count":0,"TSetForS_Str":"{◑77S172I5◑:[◑T76I1◑],◑72S150I9◑:[◑T71I2◑],◑77S172I4◑:[◑T76I0◑],◑101S251I8◑:[◑T100I4◑],◑77S172I6◑:[◑T76I2◑],◑72S150I8◑:[◑T71I1◑],◑8S19I11◑:[◑T7I0◑],◑19S41I6◑:[◑T18I4◑,◑T18I5◑],◑8S19I12◑:[◑T7I0◑],◑17S38I5◑:[◑T16I0◑],◑19S41I5◑:[◑T18I2◑,◑T18I3◑],◑49S95I3◑:[◑T48I2◑],◑49S95I4◑:[◑T48I3◑],◑49S95I6◑:[◑T48I3◑,◑T48I5◑],◑9S21I9◑:[◑T8I0◑],◑9S21I8◑:[◑T8I0◑],◑132S330I10◑:[◑T131I2◑],◑49S95I2◑:[◑T48I0◑],◑49S95I8◑:[◑T48I3◑,◑T48I5◑],◑140S343I5◑:[◑T139I1◑,◑T139I2◑],◑76S167I7◑:[◑T75I2◑,◑T75I6◑],◑17S38I8◑:[◑T16I1◑],◑76S167I6◑:[◑T75I3◑],◑17S38I7◑:[◑T16I1◑],◑76S167I5◑:[◑T75I2◑,◑T75I6◑],◑76S167I4◑:[◑T75I1◑],◑17S38I9◑:[◑T16I2◑],◑76S167I3◑:[◑T75I0◑],◑123S303I5◑:[◑T122I2◑],◑8S20I10◑:[◑T7I0◑],◑123S303I4◑:[◑T122I2◑],◑123S303I6◑:[◑T122I3◑,◑T122I4◑],◑140S343I3◑:[◑T139I0◑],◑134S335I5◑:[◑T133I4◑],◑134S335I6◑:[◑T133I5◑],◑54S104I14◑:[◑T53I1◑,◑T53I3◑,◑T53I4◑,◑T53I5◑],◑132S332I3◑:[◑T131I4◑],◑132S332I5◑:[◑T131I6◑],◑54S104I11◑:[◑T53I4◑,◑T53I5◑],◑132S332I4◑:[◑T131I5◑],◑119S286I6◑:[◑T118I1◑],◑119S286I5◑:[◑T118I1◑],◑119S286I9◑:[◑T118I2◑],◑22S45I12◑:[◑T21I6◑],◑22S45I10◑:[◑T21I4◑],◑22S45I11◑:[◑T21I5◑],◑62S129I2◑:[◑T61I2◑],◑85S208I1◑:[◑T84I2◑,◑T84I3◑],◑62S129I1◑:[◑T61I1◑],◑85S208I4◑:[◑T84I3◑],◑62S129I7◑:[◑T61I5◑],◑62S129I6◑:[◑T61I4◑],◑62S129I5◑:[◑T61I3◑],◑85S208I0◑:[◑T84I1◑],◑85S208I6◑:[◑T84I6◑,◑T84I5◑],◑85S208I5◑:[◑T84I4◑],◑72S152I8◑:[◑T71I3◑],◑113S276I15◑:[◑T112I2◑],◑72S152I7◑:[◑T71I2◑],◑72S152I6◑:[◑T71I1◑],◑113S276I13◑:[◑T112I0◑],◑72S152I5◑:[◑T71I0◑],◑14S33I7◑:[◑T13I0◑],◑103S256I8◑:[◑T102I10◑],◑14S33I8◑:[◑T13I0◑],◑103S256I7◑:[◑T102I9◑],◑103S256I6◑:[◑T102I8◑],◑103S256I5◑:[◑T102I8◑],◑103S256I9◑:[◑T102I10◑],◑88S217I11◑:[◑T87I0◑,◑T87I1◑],◑88S217I12◑:[◑T87I3◑],◑26S49I0◑:[◑T25I2◑,◑T25I0◑],◑54S105I4◑:[◑T53I5◑],◑54S105I3◑:[◑T53I4◑],◑26S49I9◑:[◑T25I3◑],◑49S97I4◑:[◑T48I0◑],◑26S49I8◑:[◑T25I2◑],◑113S276I22◑:[◑T112I2◑],◑113S276I23◑:[◑T112I3◑],◑26S49I6◑:[◑T25I2◑,◑T25I0◑],◑54S105I2◑:[◑T53I3◑],◑9S23I5◑:[◑T8I0◑],◑83S195I9◑:[◑T82I5◑],◑113S276I20◑:[◑T112I0◑],◑9S23I4◑:[◑T8I0◑],◑83S195I8◑:[◑T82I6◑],◑113S276I21◑:[◑T112I1◑],◑49S97I5◑:[◑T48I0◑],◑49S97I6◑:[◑T48I0◑],◑49S97I7◑:[◑T48I1◑],◑71S147I9◑:[◑T70I2◑],◑71S147I8◑:[◑T70I1◑],◑71S147I6◑:[◑T70I4◑],◑59S123I8◑:[◑T58I0◑,◑T58I1◑],◑38S68I1◑:[◑T37I1◑],◑38S68I3◑:[◑T37I0◑],◑132S330I9◑:[◑T131I1◑],◑132S330I8◑:[◑T131I0◑],◑119S288I4◑:[◑T118I1◑],◑57S118I18◑:[◑T56I4◑,◑T56I6◑],◑122S299I5◑:[◑T121I1◑],◑119S288I6◑:[◑T118I3◑],◑79S180I12◑:[◑T78I2◑],◑119S288I5◑:[◑T118I2◑],◑57S118I11◑:[◑T56I4◑,◑T56I6◑],◑56S110I12◑:[◑T55I3◑,◑T55I4◑],◑57S118I10◑:[◑T56I4◑,◑T56I6◑],◑66S139I13◑:[◑T65I5◑,◑T65I4◑],◑66S139I12◑:[◑T65I2◑],◑96S236I8◑:[◑T95I8◑],◑96S236I7◑:[◑T95I7◑,◑T95I6◑],◑96S236I5◑:[◑T95I3◑,◑T95I4◑,◑T95I2◑],◑23S46I5◑:[◑T22I0◑],◑75S166I13◑:[◑T74I1◑],◑85S206I4◑:[◑T84I1◑],◑23S46I6◑:[◑T22I1◑],◑85S206I6◑:[◑T84I3◑],◑85S206I5◑:[◑T84I2◑,◑T84I3◑],◑56S109I13◑:[◑T55I0◑],◑36S65I9◑:[◑T35I1◑],◑85S206I8◑:[◑T84I4◑],◑85S206I7◑:[◑T84I3◑],◑75S166I15◑:[◑T74I2◑],◑85S206I9◑:[◑T84I6◑,◑T84I5◑],◑100S242I2◑:[◑T99I2◑],◑95S233I8◑:[◑T94I2◑],◑72S150I12◑:[◑T71I5◑],◑72S150I11◑:[◑T71I4◑],◑72S150I10◑:[◑T71I3◑],◑100S242I9◑:[◑T99I6◑],◑100S242I8◑:[◑T99I7◑,◑T99I6◑],◑15S35I8◑:[◑T14I5◑],◑100S242I7◑:[◑T99I4◑,◑T99I5◑],◑74S160I2◑:[◑T73I1◑],◑100S242I6◑:[◑T99I4◑,◑T99I5◑],◑100S242I5◑:[◑T99I4◑],◑57S115I4◑:[◑T56I4◑],◑74S160I1◑:[◑T73I2◑,◑T73I1◑,◑T73I3◑],◑100S242I3◑:[◑T99I3◑],◑75S162I9◑:[◑T74I5◑],◑57S115I7◑:[◑T56I0◑],◑57S115I8◑:[◑T56I0◑],◑57S115I9◑:[◑T56I1◑,◑T56I2◑],◑43S78I4◑:[◑T42I4◑],◑79S179I1◑:[◑T78I1◑],◑75S162I2◑:[◑T74I1◑],◑75S162I6◑:[◑T74I2◑],◑79S179I6◑:[◑T78I2◑],◑75S162I7◑:[◑T74I3◑],◑75S162I8◑:[◑T74I4◑],◑84S204I10◑:[◑T83I7◑],◑75S162I0◑:[◑T74I0◑],◑43S78I2◑:[◑T42I2◑],◑83S197I9◑:[◑T82I5◑],◑43S78I3◑:[◑T42I3◑],◑83S197I8◑:[◑T82I6◑],◑43S78I0◑:[◑T42I0◑],◑43S78I1◑:[◑T42I1◑],◑71S147I10◑:[◑T70I6◑],◑103S256I12◑:[◑T102I14◑],◑103S256I11◑:[◑T102I12◑],◑58S120I10◑:[◑T57I1◑],◑44S85I4◑:[◑T43I3◑],◑15S35I7◑:[◑T14I4◑],◑15S35I6◑:[◑T14I5◑],◑44S85I7◑:[◑T43I6◑],◑44S85I6◑:[◑T43I5◑],◑104S259I8◑:[◑T103I2◑],◑15S35I4◑:[◑T14I0◑,◑T14I1◑],◑123S307I7◑:[◑T122I3◑,◑T122I4◑],◑56S113I8◑:[◑T55I4◑],◑56S113I7◑:[◑T55I3◑],◑56S113I4◑:[◑T55I2◑],◑30S53I10◑:[◑T29I0◑],◑30S53I11◑:[◑T29I1◑],◑64S137I6◑:[◑T63I0◑],◑139S341I10◑:[◑T138I4◑],◑139S341I11◑:[◑T138I4◑],◑96S234I8◑:[◑T95I2◑],◑21S43I12◑:[◑T20I5◑],◑21S43I11◑:[◑T20I7◑],◑130S326I11◑:[◑T129I3◑],◑130S326I10◑:[◑T129I2◑],◑100S244I2◑:[◑T99I2◑],◑81S185I5◑:[◑T80I4◑],◑100S244I3◑:[◑T99I3◑],◑81S185I6◑:[◑T80I5◑],◑100S244I4◑:[◑T99I3◑],◑100S244I5◑:[◑T99I3◑],◑100S244I7◑:[◑T99I7◑,◑T99I5◑,◑T99I6◑],◑111S273I23◑:[◑T110I0◑],◑100S244I8◑:[◑T99I6◑],◑111S273I24◑:[◑T110I1◑],◑91S224I10◑:[◑T90I5◑],◑95S231I3◑:[◑T94I2◑],◑77S174I7◑:[◑T76I0◑],◑77S174I8◑:[◑T76I1◑],◑79S177I12◑:[◑T78I0◑],◑57S117I4◑:[◑T56I3◑],◑79S177I13◑:[◑T78I1◑],◑57S117I5◑:[◑T56I4◑,◑T56I6◑],◑57S117I6◑:[◑T56I5◑,◑T56I7◑],◑79S177I11◑:[◑T78I0◑],◑57S117I7◑:[◑T56I4◑,◑T56I6◑],◑57S117I8◑:[◑T56I5◑,◑T56I7◑],◑79S177I0◑:[◑T78I4◑],◑79S177I14◑:[◑T78I2◑],◑111S273I16◑:[◑T110I0◑],◑101S246I8◑:[◑T100I8◑],◑111S273I19◑:[◑T110I2◑],◑56S112I11◑:[◑T55I4◑],◑101S246I6◑:[◑T100I6◑],◑56S112I10◑:[◑T55I3◑],◑101S246I7◑:[◑T100I7◑],◑139S342I5◑:[◑T138I4◑],◑139S342I4◑:[◑T138I4◑],◑80S183I5◑:[◑T79I1◑],◑80S183I4◑:[◑T79I0◑],◑83S199I7◑:[◑T82I0◑],◑83S199I6◑:[◑T82I1◑],◑27S50I10◑:[◑T26I7◑],◑52S102I7◑:[◑T51I0◑],◑44S83I8◑:[◑T43I3◑],◑44S83I7◑:[◑T43I1◑,◑T43I2◑],◑123S305I3◑:[◑T122I2◑],◑123S305I2◑:[◑T122I2◑],◑123S305I4◑:[◑T122I3◑,◑T122I4◑],◑109S270I4◑:[◑T108I3◑],◑109S270I3◑:[◑T108I5◑],◑60S126I3◑:[◑T59I1◑],◑60S126I4◑:[◑T59I1◑],◑126S313I10◑:[◑T125I6◑],◑27S50I11◑:[◑T26I8◑],◑105S262I10◑:[◑T104I2◑],◑60S126I5◑:[◑T59I1◑],◑47S90I7◑:[◑T46I2◑],◑101S246I4◑:[◑T100I3◑],◑101S246I5◑:[◑T100I4◑],◑101S246I2◑:[◑T100I1◑],◑101S246I3◑:[◑T100I2◑,◑T100I3◑],◑101S246I1◑:[◑T100I0◑,◑T100I4◑],◑111S273I12◑:[◑T110I2◑],◑86S212I13◑:[◑T85I0◑],◑86S212I12◑:[◑T85I0◑],◑101S248I10◑:[◑T100I4◑],◑81S185I3◑:[◑T80I1◑],◑81S185I4◑:[◑T80I2◑],◑16S37I11◑:[◑T15I5◑],◑16S37I10◑:[◑T15I4◑],◑16S37I13◑:[◑T15I7◑],◑16S37I12◑:[◑T15I6◑],◑16S37I14◑:[◑T15I8◑],◑19S40I10◑:[◑T18I5◑],◑56S110I9◑:[◑T55I2◑],◑57S119I5◑:[◑T56I0◑],◑57S119I6◑:[◑T56I1◑,◑T56I2◑,◑T56I3◑],◑39S70I8◑:[◑T38I2◑],◑39S70I7◑:[◑T38I1◑],◑76S171I6◑:[◑T75I2◑,◑T75I6◑],◑101S248I9◑:[◑T100I3◑],◑101S248I6◑:[◑T100I0◑],◑102S252I2◑:[◑T101I1◑],◑101S248I7◑:[◑T100I1◑],◑102S252I3◑:[◑T101I2◑],◑102S252I4◑:[◑T101I3◑],◑101S248I5◑:[◑T100I0◑,◑T100I4◑],◑102S252I5◑:[◑T101I4◑],◑119S286I10◑:[◑T118I3◑],◑132S328I0◑:[◑T131I1◑],◑132S328I1◑:[◑T131I2◑],◑39S69I10◑:[◑T38I1◑],◑82S192I1◑:[◑T81I1◑,◑T81I2◑],◑61S127I9◑:[◑T60I4◑],◑61S127I3◑:[◑T60I0◑],◑82S192I5◑:[◑T81I3◑],◑61S127I5◑:[◑T60I1◑,◑T60I2◑],◑129S324I10◑:[◑T128I0◑],◑21S44I4◑:[◑T20I2◑],◑81S188I4◑:[◑T80I0◑,◑T80I1◑],◑105S261I1◑:[◑T104I1◑],◑81S188I5◑:[◑T80I2◑,◑T80I3◑],◑105S261I2◑:[◑T104I0◑],◑46S87I0◑:[◑T45I0◑],◑85S211I4◑:[◑T84I4◑],◑105S261I3◑:[◑T104I2◑],◑85S211I3◑:[◑T84I3◑],◑105S261I4◑:[◑T104I3◑],◑105S261I5◑:[◑T104I4◑],◑105S261I6◑:[◑T104I5◑],◑81S188I6◑:[◑T80I4◑],◑105S261I7◑:[◑T104I6◑],◑81S188I7◑:[◑T80I4◑],◑105S261I8◑:[◑T104I7◑],◑48S92I7◑:[◑T47I2◑],◑48S92I6◑:[◑T47I1◑],◑48S92I5◑:[◑T47I0◑],◑60S125I12◑:[◑T59I2◑],◑85S211I5◑:[◑T84I6◑,◑T84I5◑],◑46S87I4◑:[◑T45I3◑],◑60S125I13◑:[◑T59I1◑],◑64S133I3◑:[◑T63I0◑],◑64S133I4◑:[◑T63I0◑],◑64S133I6◑:[◑T63I1◑],◑64S133I7◑:[◑T63I2◑],◑116S281I6◑:[◑T115I3◑],◑116S281I7◑:[◑T115I4◑],◑116S281I8◑:[◑T115I5◑],◑116S281I9◑:[◑T115I6◑],◑32S57I22◑:[◑T31I2◑],◑32S57I23◑:[◑T31I3◑],◑32S57I24◑:[◑T31I4◑],◑96S235I10◑:[◑T95I8◑],◑121S296I7◑:[◑T120I2◑],◑121S296I5◑:[◑T120I0◑],◑121S296I6◑:[◑T120I1◑],◑121S296I9◑:[◑T120I3◑],◑97S238I8◑:[◑T96I3◑],◑99S240I7◑:[◑T98I1◑],◑99S240I6◑:[◑T98I0◑],◑119S290I9◑:[◑T118I3◑],◑113S275I9◑:[◑T112I2◑],◑119S290I8◑:[◑T118I2◑],◑119S290I7◑:[◑T118I1◑],◑56S112I7◑:[◑T55I2◑],◑100S241I14◑:[◑T99I3◑],◑97S238I4◑:[◑T96I0◑,◑T96I1◑],◑100S241I13◑:[◑T99I3◑],◑100S241I11◑:[◑T99I2◑],◑102S254I3◑:[◑T101I2◑,◑T101I3◑],◑63S130I13◑:[◑T62I7◑],◑63S130I11◑:[◑T62I6◑],◑63S130I10◑:[◑T62I6◑],◑100S241I19◑:[◑T99I4◑,◑T99I5◑],◑100S241I18◑:[◑T99I4◑,◑T99I5◑],◑100S241I15◑:[◑T99I3◑],◑67S140I9◑:[◑T66I0◑],◑67S140I8◑:[◑T66I0◑],◑84S204I9◑:[◑T83I6◑],◑84S204I8◑:[◑T83I5◑],◑84S204I6◑:[◑T83I1◑],◑18S39I5◑:[◑T17I0◑],◑84S204I5◑:[◑T83I1◑],◑18S39I6◑:[◑T17I2◑],◑21S44I9◑:[◑T20I6◑],◑21S44I8◑:[◑T20I5◑,◑T20I4◑],◑100S241I21◑:[◑T99I6◑],◑100S241I20◑:[◑T99I7◑,◑T99I6◑],◑21S44I5◑:[◑T20I3◑],◑101S246I10◑:[◑T100I6◑],◑76S169I11◑:[◑T75I1◑],◑112S274I11◑:[◑T111I1◑],◑112S274I10◑:[◑T111I0◑],◑112S274I12◑:[◑T111I2◑],◑55S106I9◑:[◑T54I0◑],◑75S165I9◑:[◑T74I2◑],◑75S161I10◑:[◑T74I3◑],◑75S161I12◑:[◑T74I5◑],◑75S161I11◑:[◑T74I4◑],◑55S106I4◑:[◑T54I6◑],◑55S106I3◑:[◑T54I0◑],◑64S135I8◑:[◑T63I0◑],◑55S106I2◑:[◑T54I6◑],◑89S219I13◑:[◑T88I2◑],◑89S219I14◑:[◑T88I1◑],◑8S19I6◑:[◑T7I0◑],◑72S149I8◑:[◑T71I5◑],◑72S149I7◑:[◑T71I4◑],◑72S149I9◑:[◑T71I5◑],◑41S74I17◑:[◑T40I8◑],◑72S149I4◑:[◑T71I2◑,◑T71I1◑],◑72S149I3◑:[◑T71I0◑],◑72S149I6◑:[◑T71I4◑],◑72S149I5◑:[◑T71I3◑],◑122S301I3◑:[◑T121I1◑],◑130S326I4◑:[◑T129I0◑],◑130S326I5◑:[◑T129I5◑,◑T129I1◑],◑8S19I5◑:[◑T7I0◑],◑121S298I5◑:[◑T120I1◑],◑121S298I6◑:[◑T120I1◑],◑121S298I4◑:[◑T120I0◑],◑126S314I2◑:[◑T125I0◑],◑126S314I3◑:[◑T125I1◑,◑T125I6◑],◑93S227I9◑:[◑T92I1◑],◑93S227I8◑:[◑T92I0◑],◑90S220I18◑:[◑T89I2◑],◑90S220I19◑:[◑T89I4◑],◑49S98I10◑:[◑T48I1◑],◑90S220I15◑:[◑T89I0◑],◑90S220I16◑:[◑T89I1◑],◑90S220I17◑:[◑T89I3◑],◑112S274I24◑:[◑T111I1◑],◑112S274I23◑:[◑T111I0◑],◑84S202I8◑:[◑T83I7◑],◑84S202I7◑:[◑T83I6◑],◑84S202I6◑:[◑T83I5◑],◑84S202I5◑:[◑T83I4◑],◑95S229I8◑:[◑T94I2◑],◑84S202I4◑:[◑T83I3◑,◑T83I7◑],◑111S273I4◑:[◑T110I0◑],◑111S273I5◑:[◑T110I1◑],◑84S202I2◑:[◑T83I1◑],◑112S274I16◑:[◑T111I0◑],◑84S202I1◑:[◑T83I0◑],◑112S274I19◑:[◑T111I2◑],◑43S82I0◑:[◑T42I3◑],◑55S108I3◑:[◑T54I6◑],◑91S223I9◑:[◑T90I2◑],◑18S39I9◑:[◑T17I5◑],◑91S223I7◑:[◑T90I0◑],◑18S39I7◑:[◑T17I3◑],◑18S39I8◑:[◑T17I4◑],◑58S121I5◑:[◑T57I1◑],◑43S82I6◑:[◑T42I2◑],◑58S121I4◑:[◑T57I0◑],◑43S82I5◑:[◑T42I1◑],◑58S121I3◑:[◑T57I0◑],◑43S82I4◑:[◑T42I0◑],◑100S243I13◑:[◑T99I0◑],◑74S156I4◑:[◑T73I1◑],◑100S243I14◑:[◑T99I0◑],◑74S156I1◑:[◑T73I0◑],◑129S323I9◑:[◑T128I1◑],◑74S156I2◑:[◑T73I1◑],◑106S267I8◑:[◑T105I2◑],◑106S267I9◑:[◑T105I3◑],◑74S156I5◑:[◑T73I2◑],◑106S267I6◑:[◑T105I0◑],◑106S267I7◑:[◑T105I1◑],◑55S108I2◑:[◑T54I5◑],◑49S98I0◑:[◑T48I0◑],◑49S98I1◑:[◑T48I0◑],◑49S98I2◑:[◑T48I0◑,◑T48I1◑],◑49S98I3◑:[◑T48I1◑],◑49S98I8◑:[◑T48I1◑],◑49S98I4◑:[◑T48I0◑],◑49S98I5◑:[◑T48I0◑],◑49S98I6◑:[◑T48I1◑],◑12S30I9◑:[◑T11I0◑],◑113S275I8◑:[◑T112I1◑],◑12S30I8◑:[◑T11I0◑],◑113S275I7◑:[◑T112I0◑],◑15S35I12◑:[◑T14I9◑],◑15S35I11◑:[◑T14I8◑],◑113S275I1◑:[◑T112I0◑],◑15S35I13◑:[◑T14I10◑],◑113S275I3◑:[◑T112I2◑],◑15S35I10◑:[◑T14I7◑],◑45S86I10◑:[◑T44I7◑],◑45S86I11◑:[◑T44I4◑,◑T44I8◑],◑87S215I7◑:[◑T86I0◑],◑126S312I8◑:[◑T125I2◑],◑32S57I14◑:[◑T31I4◑],◑32S57I12◑:[◑T31I2◑],◑126S312I5◑:[◑T125I0◑,◑T125I1◑],◑32S57I13◑:[◑T31I3◑],◑126S312I6◑:[◑T125I1◑,◑T125I6◑],◑36S65I10◑:[◑T35I2◑],◑36S65I11◑:[◑T35I4◑],◑36S65I12◑:[◑T35I4◑],◑49S96I13◑:[◑T48I3◑,◑T48I5◑],◑29S52I6◑:[◑T28I5◑],◑57S115I14◑:[◑T56I4◑,◑T56I6◑],◑82S190I3◑:[◑T81I1◑,◑T81I2◑],◑57S115I17◑:[◑T56I4◑,◑T56I6◑],◑76S169I6◑:[◑T75I2◑,◑T75I6◑],◑29S52I5◑:[◑T28I4◑],◑76S169I5◑:[◑T75I1◑],◑29S52I2◑:[◑T28I0◑],◑76S169I4◑:[◑T75I0◑],◑57S115I18◑:[◑T56I5◑,◑T56I7◑],◑76S169I3◑:[◑T75I0◑],◑82S190I7◑:[◑T81I3◑],◑84S200I8◑:[◑T83I7◑],◑84S200I7◑:[◑T83I6◑],◑84S200I6◑:[◑T83I5◑],◑84S200I5◑:[◑T83I4◑],◑105S263I7◑:[◑T104I7◑],◑84S200I4◑:[◑T83I3◑,◑T83I7◑],◑84S200I2◑:[◑T83I1◑],◑57S115I11◑:[◑T56I2◑],◑84S200I1◑:[◑T83I0◑],◑134S335I3◑:[◑T133I3◑],◑57S115I10◑:[◑T56I2◑],◑134S335I4◑:[◑T133I3◑],◑57S115I13◑:[◑T56I3◑],◑57S115I12◑:[◑T56I1◑],◑105S263I0◑:[◑T104I1◑],◑105S263I1◑:[◑T104I0◑],◑132S329I10◑:[◑T131I2◑],◑43S80I1◑:[◑T42I3◑],◑105S263I2◑:[◑T104I2◑],◑105S263I3◑:[◑T104I3◑],◑105S263I4◑:[◑T104I4◑],◑91S225I7◑:[◑T90I5◑],◑105S263I5◑:[◑T104I5◑],◑105S263I6◑:[◑T104I6◑],◑91S225I5◑:[◑T90I3◑],◑91S225I6◑:[◑T90I4◑],◑91S225I4◑:[◑T90I2◑],◑43S80I7◑:[◑T42I2◑],◑91S225I2◑:[◑T90I0◑],◑43S80I6◑:[◑T42I1◑],◑74S158I5◑:[◑T73I2◑],◑129S325I5◑:[◑T128I0◑],◑129S325I4◑:[◑T128I2◑],◑74S158I3◑:[◑T73I1◑],◑106S265I8◑:[◑T105I3◑],◑74S158I4◑:[◑T73I2◑],◑106S265I6◑:[◑T105I2◑],◑106S265I4◑:[◑T105I0◑],◑106S265I5◑:[◑T105I1◑],◑49S96I12◑:[◑T48I5◑],◑40S73I0◑:[◑T39I3◑],◑49S96I10◑:[◑T48I3◑],◑40S73I2◑:[◑T39I4◑,◑T39I3◑],◑62S128I10◑:[◑T61I5◑],◑63S131I6◑:[◑T62I0◑],◑42S76I2◑:[◑T41I0◑],◑123S302I4◑:[◑T122I2◑],◑44S83I10◑:[◑T43I5◑],◑44S83I11◑:[◑T43I6◑],◑44S83I12◑:[◑T43I6◑],◑44S83I13◑:[◑T43I6◑],◑132S331I6◑:[◑T131I2◑],◑132S331I5◑:[◑T131I1◑],◑100S245I12◑:[◑T99I3◑],◑100S245I11◑:[◑T99I3◑],◑60S125I8◑:[◑T59I1◑],◑60S125I6◑:[◑T59I1◑],◑100S245I10◑:[◑T99I3◑],◑60S125I7◑:[◑T59I1◑],◑113S275I13◑:[◑T112I0◑],◑57S119I20◑:[◑T56I6◑],◑113S275I14◑:[◑T112I1◑],◑62S128I4◑:[◑T61I1◑],◑82S191I11◑:[◑T81I3◑],◑85S207I2◑:[◑T84I2◑,◑T84I3◑],◑85S207I5◑:[◑T84I3◑],◑7S17I6◑:[◑T6I0◑],◑41S74I6◑:[◑T40I12◑,◑T40I2◑,◑T40I13◑,◑T40I7◑],◑62S128I8◑:[◑T61I3◑],◑41S74I7◑:[◑T40I8◑],◑41S74I8◑:[◑T40I9◑],◑85S207I1◑:[◑T84I1◑],◑41S74I9◑:[◑T40I10◑],◑62S128I5◑:[◑T61I2◑],◑36S64I7◑:[◑T35I1◑],◑79S178I12◑:[◑T78I4◑],◑7S17I7◑:[◑T6I0◑],◑62S128I9◑:[◑T61I4◑],◑79S178I11◑:[◑T78I2◑],◑85S207I7◑:[◑T84I6◑,◑T84I5◑],◑85S207I6◑:[◑T84I4◑],◑79S178I10◑:[◑T78I1◑],◑57S119I14◑:[◑T56I7◑],◑77S173I6◑:[◑T76I2◑],◑77S173I5◑:[◑T76I1◑],◑113S275I21◑:[◑T112I2◑],◑72S151I5◑:[◑T71I4◑],◑113S275I28◑:[◑T112I2◑],◑113S275I27◑:[◑T112I1◑],◑72S151I7◑:[◑T71I5◑],◑113S275I26◑:[◑T112I0◑],◑72S151I6◑:[◑T71I4◑],◑77S173I1◑:[◑T76I0◑],◑95S230I5◑:[◑T94I2◑],◑95S230I6◑:[◑T94I3◑],◑95S230I7◑:[◑T94I4◑],◑95S230I8◑:[◑T94I4◑],◑95S232I11◑:[◑T94I2◑],◑95S232I10◑:[◑T94I2◑],◑113S275I19◑:[◑T112I0◑],◑45S86I9◑:[◑T44I5◑],◑49S94I4◑:[◑T48I2◑],◑86S212I7◑:[◑T85I4◑],◑49S94I5◑:[◑T48I3◑],◑86S212I8◑:[◑T85I4◑],◑49S94I7◑:[◑T48I5◑],◑49S94I0◑:[◑T48I0◑],◑49S94I1◑:[◑T48I2◑],◑49S94I2◑:[◑T48I3◑],◑49S94I3◑:[◑T48I0◑],◑86S212I6◑:[◑T85I3◑],◑49S94I8◑:[◑T48I3◑,◑T48I5◑],◑76S168I9◑:[◑T75I3◑],◑76S168I8◑:[◑T75I2◑],◑76S168I7◑:[◑T75I1◑],◑76S168I6◑:[◑T75I0◑],◑76S168I5◑:[◑T75I0◑],◑76S168I1◑:[◑T75I1◑],◑123S304I6◑:[◑T122I3◑,◑T122I4◑],◑113S275I29◑:[◑T112I3◑],◑123S304I5◑:[◑T122I3◑,◑T122I2◑],◑56S111I11◑:[◑T55I4◑],◑54S104I8◑:[◑T53I1◑,◑T53I3◑,◑T53I4◑,◑T53I5◑],◑56S111I10◑:[◑T55I3◑],◑31S56I8◑:[◑T30I4◑],◑31S56I7◑:[◑T30I3◑],◑31S56I9◑:[◑T30I6◑,◑T30I5◑],◑31S56I6◑:[◑T30I2◑],◑31S56I5◑:[◑T30I1◑],◑126S316I22◑:[◑T125I4◑],◑36S66I9◑:[◑T35I1◑],◑119S287I5◑:[◑T118I3◑],◑119S287I4◑:[◑T118I2◑],◑45S86I5◑:[◑T44I0◑],◑45S86I6◑:[◑T44I1◑],◑45S86I7◑:[◑T44I3◑],◑45S86I8◑:[◑T44I4◑],◑96S237I7◑:[◑T95I3◑,◑T95I4◑,◑T95I2◑],◑95S229I14◑:[◑T94I4◑],◑2S4I7◑:[◑T1I0◑],◑2S4I6◑:[◑T1I0◑],◑95S229I11◑:[◑T94I3◑],◑126S316I11◑:[◑T125I1◑,◑T125I6◑],◑119S287I1◑:[◑T118I1◑],◑126S316I16◑:[◑T125I6◑],◑36S66I8◑:[◑T35I0◑],◑126S316I12◑:[◑T125I1◑,◑T125I6◑],◑126S316I13◑:[◑T125I4◑],◑14S34I9◑:[◑T13I0◑],◑47S89I5◑:[◑T46I2◑],◑126S316I15◑:[◑T125I6◑],◑37S67I10◑:[◑T36I1◑],◑68S142I4◑:[◑T67I1◑,◑T67I0◑],◑68S142I3◑:[◑T67I1◑],◑68S142I6◑:[◑T67I1◑],◑68S142I5���:[◑T67I1◑],◑121S295I10◑:[◑T120I3◑],◑72S153I5◑:[◑T71I0◑],◑72S153I4◑:[◑T71I0◑],◑115S278I15◑:[◑T114I2◑],◑14S34I6◑:[◑T13I0◑],◑115S278I14◑:[◑T114I2◑],◑14S34I7◑:[◑T13I0◑],◑115S278I13◑:[◑T114I0◑],◑115S278I12◑:[◑T114I1◑],◑115S278I11◑:[◑T114I0◑,◑T114I1◑,◑T114I2◑],◑20S42I5◑:[◑T19I0◑],◑20S42I8◑:[◑T19I3◑,◑T19I4◑],◑12S29I6◑:[◑T11I0◑],◑12S29I7◑:[◑T11I0◑],◑20S42I7◑:[◑T19I2◑],◑83S194I9◑:[◑T82I5◑],◑83S194I8◑:[◑T82I6◑],◑25S48I4◑:[◑T24I1◑,◑T24I0◑],◑49S96I8◑:[◑T48I0◑],◑49S96I9◑:[◑T48I2◑],◑14S34I10◑:[◑T13I0◑],◑39S69I6◑:[◑T38I2◑],◑39S69I8◑:[◑T38I3◑],◑140S344I4◑:[◑T139I0◑],◑140S344I5◑:[◑T139I1◑,◑T139I0◑],◑39S69I4◑:[◑T38I0◑],◑123S302I6◑:[◑T122I3◑,◑T122I4◑],◑59S124I9◑:[◑T58I1◑],◑123S302I5◑:[◑T122I2◑],◑59S124I8◑:[◑T58I0◑,◑T58I3◑],◑59S124I7◑:[◑T58I0◑,◑T58I3◑],◑22S45I8◑:[◑T21I2◑],◑22S45I7◑:[◑T21I1◑],◑22S45I6◑:[◑T21I0◑],◑25S48I5◑:[◑T24I1◑,◑T24I0◑],◑25S48I6◑:[◑T24I2◑],◑56S114I5◑:[◑T55I3◑],◑56S114I6◑:[◑T55I4◑],◑56S114I3◑:[◑T55I3◑],◑22S45I9◑:[◑T21I3◑],◑56S114I4◑:[◑T55I4◑],◑47S91I4◑:[◑T46I2◑],◑32S58I3◑:[◑T31I4◑,◑T31I3◑,◑T31I2◑],◑47S91I5◑:[◑T46I2◑],◑47S91I6◑:[◑T46I2◑],◑96S235I9◑:[◑T95I7◑,◑T95I6◑],◑96S235I7◑:[◑T95I3◑,◑T95I4◑,◑T95I2◑],◑126S312I19◑:[◑T125I6◑],◑100S243I2◑:[◑T99I4◑,◑T99I5◑],◑100S243I3◑:[◑T99I7◑],◑79S178I8◑:[◑T78I0◑],◑81S184I6◑:[◑T80I5◑],◑100S243I4◑:[◑T99I6◑],◑79S178I9◑:[◑T78I0◑],◑100S243I5◑:[◑T99I6◑],◑100S243I6◑:[◑T99I6◑],◑100S243I7◑:[◑T99I6◑],◑103S257I7◑:[◑T102I8◑],◑75S165I10◑:[◑T74I1◑],◑100S243I0◑:[◑T99I3◑],◑103S257I9◑:[◑T102I10◑],◑103S257I12◑:[◑T102I14◑],◑100S243I1◑:[◑T99I4◑,◑T99I5◑],◑103S257I8◑:[◑T102I9◑],◑103S257I11◑:[◑T102I12◑],◑75S163I8◑:[◑T74I3◑],◑81S186I10◑:[◑T80I4◑],◑8S20I9◑:[◑T7I0◑],◑75S163I9◑:[◑T74I4◑],◑43S79I5◑:[◑T42I4◑],◑43S79I3◑:[◑T42I2◑],◑43S79I4◑:[◑T42I3◑],◑81S186I11◑:[◑T80I5◑],◑8S20I3◑:[◑T7I0◑],◑75S163I3◑:[◑T74I0◑],◑124S309I1◑:[◑T123I2◑,◑T123I1◑],◑75S163I4◑:[◑T74I1◑],◑75S163I7◑:[◑T74I2◑],◑80S182I8◑:[◑T79I2◑],◑80S182I7◑:[◑T79I2◑],◑139S341I9◑:[◑T138I4◑],◑80S182I6◑:[◑T79I1◑],◑80S182I5◑:[◑T79I0◑],◑43S79I1◑:[◑T42I0◑],◑43S79I2◑:[◑T42I1◑],◑83S196I7◑:[◑T82I5◑],◑83S196I6◑:[◑T82I6◑],◑44S84I5◑:[◑T43I5◑],◑44S84I3◑:[◑T43I3◑],◑18S39I10◑:[◑T17I6◑],◑103S257I3◑:[◑T102I6◑],◑91S223I13◑:[◑T90I6◑],◑91S223I10◑:[◑T90I3◑],◑44S84I6◑:[◑T43I6◑],◑91S223I11◑:[◑T90I4◑],◑65S138I5◑:[◑T64I5◑],◑65S138I3◑:[◑T64I3◑],◑138S340I8◑:[◑T137I0◑],◑65S138I4◑:[◑T64I4◑],◑75S163I10◑:[◑T74I5◑],◑66S139I5◑:[◑T65I0◑],◑66S139I6◑:[◑T65I1◑],◑50S100I5◑:[◑T49I6◑],◑50S100I6◑:[◑T49I6◑],◑50S100I0◑:[◑T49I1◑,◑T49I2◑],◑116S282I3◑:[◑T115I2◑,◑T115I4◑,◑T115I6◑],◑50S100I8◑:[◑T49I8◑,◑T49I9◑],◑78S176I4◑:[◑T77I0◑],◑85S209I3◑:[◑T84I3◑],◑118S285I5◑:[◑T117I0◑,◑T117I1◑],◑85S209I5◑:[◑T84I5◑],◑85S209I4◑:[◑T84I4◑],◑121S295I5◑:[◑T120I0◑],◑100S245I8◑:[◑T99I2◑],◑100S245I9◑:[◑T99I3◑],◑121S295I6◑:[◑T120I1◑],◑121S295I7◑:[◑T120I2◑],◑81S184I4◑:[◑T80I2◑],◑81S184I5◑:[◑T80I4◑],◑51S101I3◑:[◑T50I0◑],◑81S184I3◑:[◑T80I1◑],◑95S232I7◑:[◑T94I2◑],◑28S51I3◑:[◑T27I1◑],◑28S51I2◑:[◑T27I0◑],◑28S51I4◑:[◑T27I2◑],◑28S51I7◑:[◑T27I6◑],◑81S186I8◑:[◑T80I1◑],◑28S51I6◑:[◑T27I5◑],◑81S186I9◑:[◑T80I2◑],◑77S175I6◑:[◑T76I0◑],◑77S175I8◑:[◑T76I2◑],◑77S175I7◑:[◑T76I1◑],◑95S232I6◑:[◑T94I2◑],◑57S116I4◑:[◑T56I0◑],◑57S116I6◑:[◑T56I0◑],◑57S116I8◑:[◑T56I2◑],◑57S116I9◑:[◑T56I1◑],◑43S77I5◑:[◑T42I3◑],◑43S77I6◑:[◑T42I4◑],◑101S247I9◑:[◑T100I0◑,◑T100I4◑],◑75S161I5◑:[◑T74I0◑],◑75S161I6◑:[◑T74I1◑],◑101S247I7◑:[◑T100I2◑,◑T100I3◑],◑101S247I8◑:[◑T100I3◑],◑75S161I9◑:[◑T74I2◑],◑101S247I6◑:[◑T100I1◑],◑1S2I7◑:[◑T0I0◑],◑1S2I8◑:[◑T0I0◑],◑43S77I3◑:[◑T42I1◑],◑83S198I8◑:[◑T82I5◑],◑43S77I4◑:[◑T42I2◑],◑83S198I7◑:[◑T82I6◑],◑43S77I2◑:[◑T42I0◑],◑123S306I9◑:[◑T122I2◑],◑123S306I8◑:[◑T122I2◑],◑81S187I6◑:[◑T80I0◑,◑T80I1◑],◑85S210I5◑:[◑T84I3◑],◑123S306I10◑:[◑T122I3◑,◑T122I4◑],◑81S187I9◑:[◑T80I4◑],◑81S187I8◑:[◑T80I4◑],◑46S88I4◑:[◑T45I3◑],◑85S210I7◑:[◑T84I6◑,◑T84I5◑],◑46S88I0◑:[◑T45I0◑],◑85S210I6◑:[◑T84I4◑],◑96S234I10◑:[◑T95I3◑,◑T95I4◑,◑T95I5◑],◑96S234I13◑:[◑T95I8◑],◑96S234I12◑:[◑T95I7◑,◑T95I6◑],◑64S134I4◑:[◑T63I0◑],◑64S134I5◑:[◑T63I0◑],◑37S67I8◑:[◑T36I0◑],◑37S67I7◑:[◑T36I0◑],◑64S134I9◑:[◑T63I1◑],◑76S170I2◑:[◑T75I2◑,◑T75I6◑],◑76S170I1◑:[◑T75I2◑],◑32S58I13◑:[◑T31I4◑,◑T31I3◑],◑122S300I4◑:[◑T121I1◑],◑121S297I6◑:[◑T120I0◑],◑36S66I10◑:[◑T35I1◑],◑69S145I9◑:[◑T68I1◑],◑69S145I8◑:[◑T68I0◑],◑121S297I8◑:[◑T120I1◑],◑69S145I7◑:[◑T68I0◑],◑121S297I9◑:[◑T120I1◑],◑53S103I9◑:[◑T52I2◑],◑53S103I8◑:[◑T52I1◑],◑53S103I7◑:[◑T52I0◑],◑132S329I9◑:[◑T131I1◑],◑132S329I8◑:[◑T131I0◑],◑57S118I9◑:[◑T56I1◑,◑T56I2◑,◑T56I3◑],◑40S72I7◑:[◑T39I4◑,◑T39I3◑],◑40S72I8◑:[◑T39I5◑],◑102S253I8◑:[◑T101I2◑],◑101S249I5◑:[◑T100I1◑,◑T100I2◑,◑T100I3◑],◑101S249I6◑:[◑T100I2◑,◑T100I3◑],◑101S249I3◑:[◑T100I0◑],◑101S249I4◑:[◑T100I1◑],◑35S62I10◑:[◑T34I8◑],◑102S253I9◑:[◑T101I3◑],◑35S62I11◑:[◑T34I8◑],◑82S191I7◑:[◑T81I2◑],◑105S262I8◑:[◑T104I6◑],◑105S262I9◑:[◑T104I7◑],◑21S43I5◑:[◑T20I3◑],◑21S43I4◑:[◑T20I2◑],◑21S43I3◑:[◑T20I1◑],◑81S189I7◑:[◑T80I2◑],◑35S62I8◑:[◑T34I7◑],◑81S189I6◑:[◑T80I1◑],◑48S93I4◑:[◑T47I2◑],◑48S93I3◑:[◑T47I1◑],◑35S62I0◑:[◑T34I8◑],◑48S93I2◑:[◑T47I0◑],◑75S164I7◑:[◑T74I5◑],◑11S27I7◑:[◑T10I0◑],◑11S27I6◑:[◑T10I0◑],◑126S311I13◑:[◑T125I6◑],◑49S99I20◑:[◑T48I2◑],◑49S99I21◑:[◑T48I2◑],◑64S136I4◑:[◑T63I0◑],◑49S99I22◑:[◑T48I3◑],◑64S136I5◑:[◑T63I0◑],◑70S146I3◑:[◑T69I0◑],◑75S164I2◑:[◑T74I2◑],◑55S107I3◑:[◑T54I6◑],◑70S146I4◑:[◑T69I1◑],◑75S164I3◑:[◑T74I2◑],◑55S107I2◑:[◑T54I0◑],◑70S146I5◑:[◑T69I2◑],◑75S164I4◑:[◑T74I3◑],◑49S99I25◑:[◑T48I5◑],◑75S164I5◑:[◑T74I4◑],◑49S99I26◑:[◑T48I3◑,◑T48I5◑],◑70S146I7◑:[◑T69I3◑,◑T69I4◑],◑75S164I6◑:[◑T74I5◑],◑72S148I3◑:[◑T71I0◑],◑69S143I4◑:[◑T68I2◑],◑69S143I3◑:[◑T68I1◑],◑69S143I2◑:[◑T68I0◑],◑69S143I1◑:[◑T68I0◑],◑72S148I8◑:[◑T71I5◑],◑72S148I5◑:[◑T71I2◑],◑72S148I4◑:[◑T71I1◑],◑33S59I3◑:[◑T32I2◑,◑T32I1◑],◑72S148I7◑:[◑T71I4◑],◑72S148I6◑:[◑T71I3◑],◑135S337I13◑:[◑T134I1◑],◑24S47I4◑:[◑T23I1◑],◑24S47I3◑:[◑T23I0◑],◑126S315I8◑:[◑T125I1◑,◑T125I6◑],◑82S193I7◑:[◑T81I2◑],◑119S291I4◑:[◑T118I2◑],◑15S36I9◑:[◑T14I8◑],◑119S291I3◑:[◑T118I1◑],◑15S36I8◑:[◑T14I9◑],◑15S36I7◑:[◑T14I4◑],◑126S315I7◑:[◑T125I0◑,◑T125I1◑],◑56S111I8◑:[◑T55I3◑],◑56S111I9◑:[◑T55I4◑],◑76S170I5◑:[◑T75I1◑],◑16S37I5◑:[◑T15I0◑],◑16S37I6◑:[◑T15I1◑],◑67S141I3◑:[◑T66I2◑,◑T66I1◑],◑67S141I2◑:[◑T66I0◑],◑84S205I6◑:[◑T83I7◑],◑84S205I5◑:[◑T83I6◑],◑15S36I6◑:[◑T14I5◑],◑84S205I4◑:[◑T83I5◑],◑84S205I3◑:[◑T83I4◑],◑84S205I2◑:[◑T83I3◑,◑T83I7◑],◑84S205I0◑:[◑T83I1◑],◑21S43I9◑:[◑T20I5◑],◑21S43I8◑:[◑T20I5◑],◑24S47I5◑:[◑T23I2◑],◑21S43I6◑:[◑T20I4◑],◑43S81I3◑:[◑T42I0◑],◑43S81I2◑:[◑T42I3◑],◑91S224I8◑:[◑T90I3◑],◑91S224I9◑:[◑T90I4◑],◑58S120I9◑:[◑T57I0◑],◑58S120I8◑:[◑T57I0◑],◑91S224I7◑:[◑T90I2◑],◑91S224I5◑:[◑T90I0◑],◑43S81I5◑:[◑T42I2◑],◑43S81I4◑:[◑T42I1◑],◑119S289I7◑:[◑T118I3◑],◑74S157I3◑:[◑T73I1◑],◑119S289I6◑:[◑T118I2◑],◑119S289I5◑:[◑T118I1◑],◑57S116I10◑:[◑T56I1◑],◑106S266I7◑:[◑T105I2◑],◑74S157I5◑:[◑T73I2◑],◑106S266I8◑:[◑T105I3◑],◑106S266I5◑:[◑T105I0◑],◑106S266I6◑:[◑T105I1◑],◑90S222I4◑:[◑T89I1◑],◑90S222I5◑:[◑T89I2◑,◑T89I3◑,◑T89I1◑],◑90S222I6◑:[◑T89I4◑],◑113S276I7◑:[◑T112I0◑],◑113S276I1◑:[◑T112I0◑],◑113S276I3◑:[◑T112I2◑],◑113S276I2◑:[◑T112I1◑],◑87S216I6◑:[◑T86I0◑],◑93S227I20◑:[◑T92I3◑],◑126S313I7◑:[◑T125I2◑],◑126S313I9◑:[◑T125I6◑],◑113S276I8◑:[◑T112I1◑],◑126S313I4◑:[◑T125I0◑],◑126S313I5◑:[◑T125I1◑,◑T125I6◑],◑87S216I5◑:[◑T86I0◑],◑112S274I5◑:[◑T111I1◑],◑112S274I4◑:[◑T111I0◑],◑93S227I10◑:[◑T92I3◑],◑59S122I6◑:[◑T58I0◑],◑59S122I5◑:[◑T58I0◑],◑93S227I12◑:[◑T92I4◑],◑104S260I17◑:[◑T103I2◑],◑56S109I3◑:[◑T55I2◑],◑98S239I8◑:[◑T97I2◑],◑98S239I6◑:[◑T97I0◑],◑56S109I7◑:[◑T55I4◑],◑56S109I5◑:[◑T55I3◑],◑56S109I6◑:[◑T55I3◑],◑79S181I6◑:[◑T78I2◑],◑84S203I6◑:[◑T83I3◑,◑T83I7◑],◑56S109I0◑:[◑T55I3◑,◑T55I4◑],◑84S203I5◑:[◑T83I6◑],◑84S203I4◑:[◑T83I5◑],◑84S203I3◑:[◑T83I4◑],◑84S203I2◑:[◑T83I1◑],◑11S28I12◑:[◑T10I0◑],◑84S203I1◑:[◑T83I0◑],◑11S28I13◑:[◑T10I0◑],◑36S64I10◑:[◑T35I2◑],◑84S203I0◑:[◑T83I6◑],◑36S64I11◑:[◑T35I4◑],◑59S122I8◑:[◑T58I2◑],◑59S122I7◑:[◑T58I1◑],◑134S336I6◑:[◑T133I5◑],◑105S262I3◑:[◑T104I0◑,◑T104I1◑],◑134S336I5◑:[◑T133I4◑],◑105S262I4◑:[◑T104I2◑],◑105S262I5◑:[◑T104I3◑],◑105S262I6◑:[◑T104I4◑],◑105S262I7◑:[◑T104I5◑],◑129S324I8◑:[◑T128I1◑],◑64S132I5◑:[◑T63I0◑],◑129S324I7◑:[◑T128I2◑],◑64S132I6◑:[◑T63I0◑],◑129S324I6◑:[◑T128I1◑],◑64S132I7◑:[◑T63I1◑],◑64S132I8◑:[◑T63I2◑],◑106S264I9◑:[◑T105I3◑],◑106S264I7◑:[◑T105I1◑],◑106S264I8◑:[◑T105I2◑],◑74S159I7◑:[◑T73I2◑],◑106S264I6◑:[◑T105I0◑],◑132S328I11◑:[◑T131I4◑],◑40S72I4◑:[◑T39I3◑],◑132S328I14◑:[◑T131I4◑],◑133S334I5◑:[◑T132I1◑],◑40S72I5◑:[◑T39I3◑],◑132S328I13◑:[◑T131I6◑],◑133S334I4◑:[◑T132I2◑],◑132S328I12◑:[◑T131I5◑],◑63S130I6◑:[◑T62I0◑],◑63S130I8◑:[◑T62I4◑],◑63S130I7◑:[◑T62I4◑],◑42S75I3◑:[◑T41I0◑],◑1S2I10◑:[◑T0I1◑],◑42S75I5◑:[◑T41I0◑],◑1S2I11◑:[◑T0I1◑],◑42S75I4◑:[◑T41I0◑],◑129S323I11◑:[◑T128I1◑],◑129S323I13◑:[◑T128I0◑],◑19S40I9◑:[◑T18I4◑],◑19S40I8◑:[◑T18I3◑],◑19S40I7◑:[◑T18I2◑],◑19S40I6◑:[◑T18I0◑],◑67S140I10◑:[◑T66I2◑,◑T66I1◑],◑126S311I4◑:[◑T125I0◑,◑T125I1◑],◑126S311I5◑:[◑T125I1◑,◑T125I6◑],◑126S311I7◑:[◑T125I2◑],◑64S135I14◑:[◑T63I2◑],◑129S323I10◑:[◑T128I2◑],◑86S214I8◑:[◑T85I1◑],◑27S50I9◑:[◑T26I6◑],◑27S50I5◑:[◑T26I1◑],◑27S50I6◑:[◑T26I2◑],◑27S50I7◑:[◑T26I4◑],◑92S226I1◑:[◑T91I0◑],◑84S201I8◑:[◑T83I7◑],◑84S201I7◑:[◑T83I6◑],◑84S201I6◑:[◑T83I5◑],◑84S201I5◑:[◑T83I4◑],◑84S201I4◑:[◑T83I3◑,◑T83I7◑],◑84S201I2◑:[◑T83I1◑],◑84S201I1◑:[◑T83I0◑],◑90S221I15◑:[◑T89I1◑],◑92S226I5◑:[◑T91I4◑,◑T91I2◑],◑134S336I2◑:[◑T133I2◑],◑134S336I3◑:[◑T133I2◑]}","similarity":0.176,"similarity_copy":0.176,"similarity_self":0,"similarityPercentage":"17.6%","SSetForT_Str":"{◑T1I0◑:[◑2S4I7◑,◑2S4I6◑],◑T90I6◑:[◑91S223I13◑],◑T14I0◑:[◑15S35I4◑],◑T37I0◑:[◑38S68I3◑],◑T90I0◑:[◑91S223I7◑,◑91S224I5◑],◑T14I1◑:[◑15S35I4◑],◑T103I2◑:[◑104S259I8◑,◑104S260I17◑],◑T90I4◑:[◑91S223I11◑,◑91S224I9◑],◑T90I5◑:[◑91S224I10◑],◑T90I2◑:[◑91S223I9◑,◑91S224I7◑],◑T90I3◑:[◑91S223I10◑,◑91S224I8◑],◑T26I8◑:[◑27S50I11◑],◑T49I8◑:[◑50S100I8◑],◑T26I7◑:[◑27S50I10◑],◑T49I9◑:[◑50S100I8◑],◑T26I6◑:[◑27S50I9◑],◑T26I4◑:[◑27S50I7◑],◑T26I2◑:[◑27S50I6◑],◑T26I1◑:[◑27S50I5◑],◑T49I1◑:[◑50S100I0◑],◑T49I2◑:[◑50S100I0◑],◑T49I6◑:[◑50S100I5◑,◑50S100I6◑],◑T115I2◑:[◑116S282I3◑],◑T115I3◑:[◑116S281I6◑],◑T115I4◑:[◑116S282I3◑,◑116S281I7◑],◑T138I4◑:[◑139S341I10◑,◑139S342I5◑,◑139S341I11◑,◑139S342I4◑,◑139S341I9◑],◑T115I5◑:[◑116S281I8◑],◑T115I6◑:[◑116S282I3◑,◑116S281I9◑],◑T15I7◑:[◑16S37I13◑],◑T15I8◑:[◑16S37I14◑],◑T15I5◑:[◑16S37I11◑],◑T15I6◑:[◑16S37I12◑],◑T38I3◑:[◑39S69I8◑],◑T15I4◑:[◑16S37I10◑],◑T38I2◑:[◑39S69I6◑,◑39S70I8◑],◑T15I1◑:[◑16S37I6◑],◑T38I1◑:[◑39S70I7◑,◑39S69I10◑],◑T38I0◑:[◑39S69I4◑],◑T0I1◑:[◑1S2I10◑,◑1S2I11◑],◑T0I0◑:[◑1S2I7◑,◑1S2I8◑],◑T125I0◑:[◑126S315I7◑,◑126S311I4◑,◑126S314I2◑,◑126S312I5◑,◑126S313I4◑],◑T36I1◑:[◑37S67I10◑],◑T125I2◑:[◑126S312I8◑,◑126S313I7◑,◑126S311I7◑],◑T36I0◑:[◑37S67I8◑,◑37S67I7◑],◑T125I1◑:[◑126S315I8◑,◑126S316I12◑,◑126S315I7◑,◑126S316I11◑,◑126S311I4◑,◑126S311I5◑,◑126S312I5◑,◑126S314I3◑,◑126S312I6◑,◑126S313I5◑],◑T125I4◑:[◑126S316I13◑,◑126S316I22◑],◑T13I0◑:[◑14S34I10◑,◑14S34I9◑,◑14S33I7◑,◑14S34I6◑,◑14S33I8◑,◑14S34I7◑],◑T102I6◑:[◑103S257I3◑],◑T125I6◑:[◑126S315I8◑,◑126S313I9◑,◑126S316I11◑,◑126S311I5◑,◑126S314I3◑,◑126S312I6◑,◑126S313I5◑,◑126S316I16◑,◑126S313I10◑,◑126S311I13◑,◑126S316I12◑,◑126S316I15◑,◑126S312I19◑],◑T102I8◑:[◑103S257I7◑,◑103S256I6◑,◑103S256I5◑],◑T102I9◑:[◑103S256I7◑,◑103S257I8◑],◑T25I3◑:[◑26S49I9◑],◑T25I2◑:[◑26S49I8◑,◑26S49I6◑,◑26S49I0◑],◑T48I1◑:[◑49S98I2◑,◑49S98I3◑,◑49S98I8◑,◑49S98I10◑,◑49S98I6◑],◑T48I2◑:[◑49S94I4◑,◑49S95I3◑,◑49S94I1◑,◑49S96I9◑],◑T48I3◑:[◑49S94I5◑,◑49S95I4◑,◑49S96I10◑,◑49S95I6◑,◑49S94I2◑,◑49S94I8◑,◑49S95I8◑,◑49S96I13◑],◑T48I5◑:[◑49S96I12◑,◑49S94I7◑,◑49S95I6◑,◑49S94I8◑,◑49S95I8◑,◑49S96I13◑],◑T48I0◑:[◑49S98I0◑,◑49S98I1◑,◑49S98I2◑,◑49S94I0◑,◑49S94I3◑,◑49S95I2◑,◑49S98I4◑,◑49S98I5◑,◑49S96I8◑],◑T114I0◑:[◑115S278I13◑,◑115S278I11◑],◑T114I1◑:[◑115S278I12◑,◑115S278I11◑],◑T25I0◑:[◑26S49I6◑,◑26S49I0◑],◑T114I2◑:[◑115S278I15◑,◑115S278I14◑,◑115S278I11◑],◑T137I0◑:[◑138S340I8◑],◑T14I8◑:[◑15S35I11◑,◑15S36I9◑],◑T14I9◑:[◑15S35I12◑,◑15S36I8◑],◑T14I7◑:[◑15S35I10◑],◑T14I4◑:[◑15S35I7◑,◑15S36I7◑],◑T14I5◑:[◑15S36I6◑,◑15S35I6◑,◑15S35I8◑],◑T37I1◑:[◑38S68I1◑],◑T92I4◑:[◑93S227I12◑],◑T101I1◑:[◑102S252I2◑],◑T101I2◑:[◑102S253I8◑,◑102S252I3◑,◑102S254I3◑],◑T101I3◑:[◑102S253I9◑,◑102S252I4◑,◑102S254I3◑],◑T101I4◑:[◑102S252I5◑],◑T92I3◑:[◑93S227I10◑,◑93S227I20◑],◑T92I0◑:[◑93S227I8◑],◑T92I1◑:[◑93S227I9◑],◑T28I5◑:[◑29S52I6◑],◑T28I4◑:[◑29S52I5◑],◑T28I0◑:[◑29S52I2◑],◑T81I1◑:[◑82S190I3◑],◑T81I3◑:[◑82S190I7◑,◑82S191I11◑],◑T81I2◑:[◑82S190I3◑,◑82S191I7◑],◑T17I5◑:[◑18S39I9◑],◑T17I6◑:[◑18S39I10◑],◑T17I3◑:[◑18S39I7◑],◑T17I4◑:[◑18S39I8◑],◑T17I2◑:[◑18S39I6◑],◑T17I0◑:[◑18S39I5◑],◑T100I0◑:[◑101S246I1◑,◑101S247I9◑,◑101S248I6◑,◑101S249I3◑,◑101S248I5◑],◑T100I1◑:[◑101S246I2◑,◑101S249I5◑,◑101S248I7◑,◑101S247I6◑,◑101S249I4◑],◑T100I2◑:[◑101S246I3◑,◑101S247I7◑,◑101S249I5◑,◑101S249I6◑],◑T123I2◑:[◑124S309I1◑],◑T100I3◑:[◑101S246I4◑,◑101S246I3◑,◑101S248I9◑,◑101S247I7◑,◑101S249I5◑,◑101S247I8◑,◑101S249I6◑],◑T123I1◑:[◑124S309I1◑],◑T100I4◑:[◑101S246I5◑,◑101S251I8◑,◑101S246I1◑,◑101S248I10◑,◑101S247I9◑,◑101S248I5◑],◑T15I0◑:[◑16S37I5◑],◑T91I0◑:[◑92S226I1◑],◑T100I6◑:[◑101S246I6◑,◑101S246I10◑],◑T100I7◑:[◑101S246I7◑],◑T100I8◑:[◑101S246I8◑],◑T91I4◑:[◑92S226I5◑],◑T91I2◑:[◑92S226I5◑],◑T27I6◑:[◑28S51I7◑],◑T27I5◑:[◑28S51I6◑],◑T27I2◑:[◑28S51I4◑],◑T27I1◑:[◑28S51I3◑],◑T27I0◑:[◑28S51I2◑],◑T80I5◑:[◑81S184I6◑,◑81S185I6◑,◑81S186I11◑],◑T112I0◑:[◑113S275I13◑,◑113S276I7◑,◑113S275I7◑,◑113S276I1◑,◑113S275I1◑,◑113S275I26◑,◑113S276I13◑,◑113S275I19◑,◑113S276I20◑],◑T112I1◑:[◑113S275I8◑,◑113S275I27◑,◑113S275I14◑,◑113S276I2◑,◑113S276I21◑,◑113S276I8◑],◑T112I2◑:[◑113S276I15◑,◑113S275I21◑,◑113S275I28◑,◑113S276I22◑,◑113S276I3◑,◑113S275I3◑,◑113S275I9◑],◑T112I3◑:[◑113S276I23◑,◑113S275I29◑],◑T80I0◑:[◑81S188I4◑,◑81S187I6◑],◑T80I2◑:[◑81S188I5◑,◑81S189I7◑,◑81S186I9◑,◑81S184I4◑,◑81S185I4◑],◑T80I1◑:[◑81S188I4◑,◑81S187I6◑,◑81S186I8◑,◑81S189I6◑,◑81S185I3◑,◑81S184I3◑],◑T80I4◑:[◑81S186I10◑,◑81S185I5◑,◑81S187I9◑,◑81S188I6◑,◑81S187I8◑,◑81S188I7◑,◑81S184I5◑],◑T80I3◑:[◑81S188I5◑],◑T39I5◑:[◑40S72I8◑],◑T39I4◑:[◑40S73I2◑,◑40S72I7◑],◑T39I3◑:[◑40S73I0◑,◑40S73I2◑,◑40S72I4◑,◑40S72I5◑,◑40S72I7◑],◑T16I2◑:[◑17S38I9◑],◑T16I0◑:[◑17S38I5◑],◑T16I1◑:[◑17S38I8◑,◑17S38I7◑],◑T56I0◑:[◑57S116I4◑,◑57S115I7◑,◑57S116I6◑,◑57S115I8◑,◑57S119I5◑],◑T79I0◑:[◑80S182I5◑,◑80S183I4◑],◑T56I1◑:[◑57S115I9◑,◑57S116I9◑,◑57S119I6◑,◑57S118I9◑,◑57S116I10◑,◑57S115I12◑],◑T56I2◑:[◑57S115I9◑,◑57S116I8◑,◑57S119I6◑,◑57S118I9◑,◑57S115I11◑,◑57S115I10◑],◑T79I2◑:[◑80S182I8◑,◑80S182I7◑],◑T122I3◑:[◑123S306I10◑,◑123S302I6◑,◑123S304I6◑,◑123S303I6◑,◑123S304I5◑,◑123S305I4◑,◑123S307I7◑],◑T56I3◑:[◑57S117I4◑,◑57S119I6◑,◑57S118I9◑,◑57S115I13◑],◑T79I1◑:[◑80S182I6◑,◑80S183I5◑],◑T122I2◑:[◑123S306I9◑,◑123S302I4◑,◑123S303I5◑,◑123S305I3◑,◑123S302I5◑,◑123S303I4◑,◑123S305I2◑,◑123S304I5◑,◑123S306I8◑],◑T122I4◑:[◑123S306I10◑,◑123S302I6◑,◑123S304I6◑,◑123S303I6◑,◑123S305I4◑,◑123S307I7◑],◑T10I0◑:[◑11S27I7◑,◑11S27I6◑,◑11S28I12◑,◑11S28I13◑],◑T45I0◑:[◑46S87I0◑,◑46S88I0◑],◑T68I0◑:[◑69S143I2◑,◑69S143I1◑,◑69S145I8◑,◑69S145I7◑],◑T111I0◑:[◑112S274I10◑,◑112S274I23◑,◑112S274I16◑,◑112S274I4◑],◑T111I1◑:[◑112S274I11◑,◑112S274I24◑,◑112S274I5◑],◑T68I2◑:[◑69S143I4◑],◑T111I2◑:[◑112S274I12◑,◑112S274I19◑],◑T45I3◑:[◑46S88I4◑,◑46S87I4◑],◑T68I1◑:[◑69S143I3◑,◑69S145I9◑],◑T134I1◑:[◑135S337I13◑],◑T22I1◑:[◑23S46I6◑],◑T22I0◑:[◑23S46I5◑],◑T34I8◑:[◑35S62I10◑,◑35S62I11◑,◑35S62I0◑],◑T34I7◑:[◑35S62I8◑],◑T55I0◑:[◑56S109I13◑],◑T78I1◑:[◑79S177I13◑,◑79S178I10◑],◑T55I2◑:[◑56S110I9◑,◑56S113I4◑,◑56S109I3◑],◑T78I0◑:[◑79S177I12◑,◑79S178I8◑,◑79S177I11◑,◑79S178I9◑],◑T121I1◑:[◑122S299I5◑,◑122S300I4◑,◑122S301I3◑],◑T55I3◑:[◑56S114I5◑,◑56S109I0◑,◑56S113I7◑,◑56S114I3◑,◑56S110I12◑,◑56S109I5◑,◑56S109I6◑],◑T55I4◑:[◑56S109I0◑,◑56S114I6◑,◑56S114I4◑,◑56S110I12◑,◑56S113I8◑,◑56S109I7◑],◑T78I2◑:[◑79S178I11◑,◑79S181I6◑,◑79S177I14◑,◑79S180I12◑],◑T32I2◑:[◑33S59I3◑],◑T32I1◑:[◑33S59I3◑],◑T21I6◑:[◑22S45I12◑],◑T44I5◑:[◑45S86I9◑],◑T44I7◑:[◑45S86I10◑],◑T44I8◑:[◑45S86I11◑],◑T44I0◑:[◑45S86I5◑],◑T110I0◑:[◑111S273I23◑,◑111S273I4◑,◑111S273I16◑],◑T44I1◑:[◑45S86I6◑],◑T67I1◑:[◑68S142I4◑,◑68S142I3◑,◑68S142I6◑,◑68S142I5◑],◑T110I1◑:[◑111S273I24◑,◑111S273I5◑],◑T67I0◑:[◑68S142I4◑],◑T110I2◑:[◑111S273I12◑,◑111S273I19◑],◑T44I3◑:[◑45S86I7◑],◑T133I3◑:[◑134S335I3◑,◑134S335I4◑],◑T44I4◑:[◑45S86I11◑,◑45S86I8◑],◑T133I2◑:[◑134S336I2◑,◑134S336I3◑],◑T21I5◑:[◑22S45I11◑],◑T133I5◑:[◑134S336I6◑,◑134S335I6◑],◑T21I4◑:[◑22S45I10◑],◑T133I4◑:[◑134S335I5◑,◑134S336I5◑],◑T21I3◑:[◑22S45I9◑],◑T21I2◑:[◑22S45I8◑],◑T21I1◑:[◑22S45I7◑],◑T21I0◑:[◑22S45I6◑],◑T14I10◑:[◑15S35I13◑],◑T56I4◑:[◑57S115I14◑,◑57S115I17◑,◑57S117I5◑,◑57S118I18◑,◑57S117I7◑,◑57S118I11◑,◑57S118I10◑,◑57S115I4◑],◑T56I5◑:[◑57S117I6◑,◑57S115I18◑,◑57S117I8◑],◑T56I6◑:[◑57S115I14◑,◑57S115I17◑,◑57S117I5◑,◑57S118I18◑,◑57S117I7◑,◑57S119I20◑,◑57S118I11◑,◑57S118I10◑],◑T56I7◑:[◑57S117I6◑,◑57S115I18◑,◑57S117I8◑,◑57S119I14◑],◑T120I1◑:[◑121S298I5◑,◑121S298I6◑,◑121S295I6◑,◑121S296I6◑,◑121S297I8◑,◑121S297I9◑],◑T120I0◑:[◑121S295I5◑,◑121S297I6◑,◑121S296I5◑,◑121S298I4◑],◑T120I3◑:[◑121S295I10◑,◑121S296I9◑],◑T120I2◑:[◑121S296I7◑,◑121S295I7◑],◑T58I0◑:[◑59S122I6◑,◑59S122I5◑,◑59S124I8◑,◑59S123I8◑,◑59S124I7◑],◑T58I1◑:[◑59S124I9◑,◑59S122I7◑,◑59S123I8◑],◑T35I2◑:[◑36S65I10◑,◑36S64I10◑],◑T35I1◑:[◑36S65I9◑,◑36S64I7◑,◑36S66I10◑,◑36S66I9◑],◑T35I0◑:[◑36S66I8◑],◑T47I2◑:[◑48S92I7◑,◑48S93I4◑],◑T132I2◑:[◑133S334I4◑],◑T132I1◑:[◑133S334I5◑],◑T47I0◑:[◑48S92I5◑,◑48S93I2◑],◑T47I1◑:[◑48S92I6◑,◑48S93I3◑],◑T24I2◑:[◑25S48I6◑],◑T24I1◑:[◑25S48I5◑,◑25S48I4◑],◑T24I0◑:[◑25S48I5◑,◑25S48I4◑],◑T59I1◑:[◑60S126I3◑,◑60S126I4◑,◑60S125I13◑,◑60S125I8◑,◑60S125I6◑,◑60S126I5◑,◑60S125I7◑],◑T59I2◑:[◑60S125I12◑],◑T57I0◑:[◑58S120I9◑,◑58S120I8◑,◑58S121I4◑,◑58S121I3◑],◑T57I1◑:[◑58S121I5◑,◑58S120I10◑],◑T11I0◑:[◑12S30I9◑,◑12S30I8◑,◑12S29I6◑,◑12S29I7◑],◑T69I3◑:[◑70S146I7◑],◑T69I2◑:[◑70S146I5◑],◑T69I4◑:[◑70S146I7◑],◑T131I1◑:[◑132S329I9◑,◑132S328I0◑,◑132S330I9◑,◑132S331I5◑],◑T131I0◑:[◑132S329I8◑,◑132S330I8◑],◑T131I2◑:[◑132S329I10◑,◑132S330I10◑,◑132S328I1◑,◑132S331I6◑],◑T69I1◑:[◑70S146I4◑],◑T131I5◑:[◑132S328I12◑,◑132S332I4◑],◑T46I2◑:[◑47S89I5◑,◑47S91I4◑,◑47S91I5◑,◑47S90I7◑,◑47S91I6◑],◑T69I0◑:[◑70S146I3◑],◑T131I4◑:[◑132S328I11◑,◑132S328I14◑,◑132S332I3◑],◑T23I2◑:[◑24S47I5◑],◑T131I6◑:[◑132S328I13◑,◑132S332I5◑],◑T23I1◑:[◑24S47I4◑],◑T23I0◑:[◑24S47I3◑],◑T35I4◑:[◑36S65I11◑,◑36S64I11◑,◑36S65I12◑],◑T58I2◑:[◑59S122I8◑],◑T58I3◑:[◑59S124I8◑,◑59S124I7◑],◑T52I0◑:[◑53S103I7◑],◑T75I0◑:[◑76S168I6◑,◑76S168I5◑,◑76S169I4◑,◑76S169I3◑,◑76S167I3◑],◑T98I0◑:[◑99S240I6◑],◑T52I1◑:[◑53S103I8◑],◑T98I1◑:[◑99S240I7◑],◑T52I2◑:[◑53S103I9◑],◑T75I2◑:[◑76S170I2◑,◑76S168I8◑,◑76S170I1◑,◑76S169I6◑,◑76S167I7◑,◑76S167I5◑,◑76S171I6◑],◑T75I1◑:[◑76S169I11◑,◑76S168I7◑,◑76S169I5◑,◑76S167I4◑,◑76S168I1◑,◑76S170I5◑],◑T75I3◑:[◑76S168I9◑,◑76S167I6◑],◑T75I6◑:[◑76S170I2◑,◑76S169I6◑,◑76S167I7◑,◑76S167I5◑,◑76S171I6◑],◑T40I12◑:[◑41S74I6◑],◑T40I13◑:[◑41S74I6◑],◑T40I10◑:[◑41S74I9◑],◑T41I0◑:[◑42S75I3◑,◑42S76I2◑,◑42S75I5◑,◑42S75I4◑],◑T87I0◑:[◑88S217I11◑],◑T87I1◑:[◑88S217I11◑],◑T64I4◑:[◑65S138I4◑],◑T64I3◑:[◑65S138I3◑],◑T64I5◑:[◑65S138I5◑],◑T87I3◑:[◑88S217I12◑],◑T99I7◑:[◑100S243I3◑,◑100S244I7◑,◑100S242I8◑,◑100S241I20◑],◑T99I5◑:[◑100S243I2◑,◑100S241I19◑,◑100S241I18◑,◑100S244I7◑,◑100S242I7◑,◑100S242I6◑,◑100S243I1◑],◑T99I6◑:[◑100S243I4◑,◑100S243I5◑,◑100S243I6◑,◑100S243I7◑,◑100S244I7◑,◑100S244I8◑,◑100S242I9◑,◑100S242I8◑,◑100S241I21◑,◑100S241I20◑],◑T74I1◑:[◑75S166I13◑,◑75S162I2◑,◑75S165I10◑,◑75S161I6◑,◑75S163I4◑],◑T74I0◑:[◑75S162I0◑,◑75S161I5◑,◑75S163I3◑],◑T97I2◑:[◑98S239I8◑],◑T74I3◑:[◑75S163I8◑,◑75S161I10◑,◑75S164I4◑,◑75S162I7◑],◑T74I2◑:[◑75S165I9◑,◑75S166I15◑,◑75S164I2◑,◑75S164I3◑,◑75S162I6◑,◑75S161I9◑,◑75S163I7◑],◑T97I0◑:[◑98S239I6◑],◑T74I5◑:[◑75S162I9◑,◑75S164I7◑,◑75S161I12◑,◑75S163I10◑,◑75S164I6◑],◑T74I4◑:[◑75S163I9◑,◑75S161I11◑,◑75S164I5◑,◑75S162I8◑],◑T8I0◑:[◑9S21I9◑,◑9S21I8◑],◑T51I0◑:[◑52S102I7◑],◑T40I9◑:[◑41S74I8◑],◑T63I1◑:[◑64S132I7◑,◑64S133I6◑,◑64S134I9◑],◑T86I0◑:[◑87S215I7◑,◑87S216I6◑,◑87S216I5◑],◑T40I2◑:[◑41S74I6◑],◑T63I0◑:[◑64S133I3◑,◑64S132I5◑,◑64S133I4◑,◑64S132I6◑,◑64S134I4◑,◑64S134I5◑,◑64S135I8◑],◑T63I2◑:[◑64S135I14◑,◑64S132I8◑,◑64S133I7◑],◑T40I7◑:[◑41S74I6◑],◑T40I8◑:[◑41S74I17◑,◑41S74I7◑],◑T54I0◑:[◑55S106I9◑,◑55S106I3◑,◑55S107I2◑],◑T77I0◑:[◑78S176I4◑],◑T54I5◑:[◑55S108I2◑],◑T31I4◑:[◑32S58I3◑,◑32S57I14◑,◑32S57I24◑,◑32S58I13◑],◑T31I3◑:[◑32S58I3◑,◑32S57I23◑,◑32S57I13◑,◑32S58I13◑],◑T31I2◑:[◑32S57I22◑,◑32S58I3◑,◑32S57I12◑],◑T7I0◑:[◑8S20I9◑,◑8S19I5◑,◑8S19I6◑,◑8S20I10◑,◑8S19I11◑,◑8S19I12◑,◑8S20I3◑],◑T20I7◑:[◑21S43I11◑],◑T43I6◑:[◑44S84I6◑,◑44S83I11◑,◑44S83I12◑,◑44S83I13◑],◑T89I4◑:[◑90S220I19◑,◑90S222I6◑],◑T66I0◑:[◑67S141I2◑,◑67S140I9◑,◑67S140I8◑],◑T43I1◑:[◑44S83I7◑],◑T43I2◑:[◑44S83I7◑],◑T66I2◑:[◑67S141I3◑,◑67S140I10◑],◑T89I2◑:[◑90S220I18◑,◑90S222I5◑],◑T43I3◑:[◑44S84I3◑,◑44S83I8◑],◑T66I1◑:[◑67S141I3◑,◑67S140I10◑],◑T89I3◑:[◑90S222I5◑,◑90S220I17◑],◑T89I0◑:[◑90S220I15◑],◑T43I5◑:[◑44S84I5◑,◑44S83I10◑],◑T89I1◑:[◑90S222I4◑,◑90S222I5◑,◑90S221I15◑,◑90S220I16◑],◑T20I6◑:[◑21S44I9◑],◑T20I5◑:[◑21S43I12◑,◑21S43I9◑,◑21S44I8◑,◑21S43I8◑],◑T20I4◑:[◑21S44I8◑,◑21S43I6◑],◑T20I3◑:[◑21S43I5◑,◑21S44I5◑],◑T20I2◑:[◑21S44I4◑,◑21S43I4◑],◑T20I1◑:[◑21S43I3◑],◑T78I4◑:[◑79S178I12◑,◑79S177I0◑],◑T99I0◑:[◑100S243I13◑,◑100S243I14◑],◑T53I1◑:[◑54S104I14◑,◑54S104I8◑],◑T76I1◑:[◑77S172I5◑,◑77S173I5◑,◑77S174I8◑,◑77S175I7◑],◑T76I0◑:[◑77S172I4◑,◑77S173I1◑,◑77S174I7◑,◑77S175I6◑],◑T53I3◑:[◑54S105I2◑,◑54S104I14◑,◑54S104I8◑],◑T99I3◑:[◑100S245I12◑,◑100S245I11◑,◑100S244I3◑,◑100S244I4◑,◑100S244I5◑,◑100S241I15◑,◑100S241I14◑,◑100S241I13◑,◑100S245I9◑,◑100S243I0◑,◑100S245I10◑,◑100S242I3◑],◑T53I4◑:[◑54S105I3◑,◑54S104I14◑,◑54S104I8◑,◑54S104I11◑],◑T76I2◑:[◑77S173I6◑,◑77S172I6◑,◑77S175I8◑],◑T99I4◑:[◑100S243I2◑,◑100S241I19◑,◑100S241I18◑,◑100S242I7◑,◑100S242I6◑,◑100S242I5◑,◑100S243I1◑],◑T53I5◑:[◑54S105I4◑,◑54S104I14◑,◑54S104I8◑,◑54S104I11◑],◑T99I2◑:[◑100S242I2◑,◑100S244I2◑,◑100S245I8◑,◑100S241I11◑],◑T30I6◑:[◑31S56I9◑],◑T30I5◑:[◑31S56I9◑],◑T30I4◑:[◑31S56I8◑],◑T30I3◑:[◑31S56I7◑],◑T30I2◑:[◑31S56I6◑],◑T6I0◑:[◑7S17I7◑,◑7S17I6◑],◑T30I1◑:[◑31S56I5◑],◑T108I3◑:[◑109S270I4◑],◑T108I5◑:[◑109S270I3◑],◑T42I0◑:[◑43S81I3◑,◑43S79I1◑,◑43S78I0◑,◑43S77I2◑,◑43S82I4◑],◑T42I1◑:[◑43S77I3◑,◑43S79I2◑,◑43S78I1◑,◑43S82I5◑,◑43S80I6◑,◑43S81I4◑],◑T65I1◑:[◑66S139I6◑],◑T42I2◑:[◑43S79I3◑,◑43S78I2◑,◑43S77I4◑,◑43S82I6◑,◑43S80I7◑,◑43S81I5◑],◑T65I0◑:[◑66S139I5◑],◑T42I3◑:[◑43S81I2◑,◑43S82I0◑,◑43S80I1◑,◑43S77I5◑,◑43S79I4◑,◑43S78I3◑],◑T42I4◑:[◑43S79I5◑,◑43S78I4◑,◑43S77I6◑],◑T65I2◑:[◑66S139I12◑],◑T65I5◑:[◑66S139I13◑],◑T88I1◑:[◑89S219I14◑],◑T65I4◑:[◑66S139I13◑],◑T88I2◑:[◑89S219I13◑],◑T54I6◑:[◑55S108I3◑,◑55S106I4◑,◑55S107I3◑,◑55S106I2◑],◑T71I4◑:[◑72S151I5◑,◑72S150I11◑,◑72S151I6◑,◑72S149I7◑,◑72S148I7◑,◑72S149I6◑],◑T94I4◑:[◑95S229I14◑,◑95S230I7◑,◑95S230I8◑],◑T71I3◑:[◑72S152I8◑,◑72S150I10◑,◑72S148I6◑,◑72S149I5◑],◑T94I2◑:[◑95S232I7◑,◑95S233I8◑,◑95S229I8◑,◑95S232I11◑,◑95S232I10◑,◑95S231I3◑,◑95S230I5◑,◑95S232I6◑],◑T71I5◑:[◑72S150I12◑,◑72S151I7◑,◑72S149I8◑,◑72S148I8◑,◑72S149I9◑],◑T94I3◑:[◑95S229I11◑,◑95S230I6◑],◑T71I0◑:[◑72S148I3◑,◑72S153I5◑,◑72S152I5◑,◑72S153I4◑,◑72S149I3◑],◑T71I2◑:[◑72S150I9◑,◑72S152I7◑,◑72S148I5◑,◑72S149I4◑],◑T71I1◑:[◑72S150I8◑,◑72S152I6◑,◑72S149I4◑,◑72S148I4◑],◑T83I3◑:[◑84S203I6◑,◑84S205I2◑,◑84S202I4◑,◑84S201I4◑,◑84S200I4◑],◑T60I4◑:[◑61S127I9◑],◑T83I5◑:[◑84S204I8◑,◑84S205I4◑,◑84S202I6◑,◑84S201I6◑,◑84S203I4◑,◑84S200I6◑],◑T83I4◑:[◑84S205I3◑,◑84S202I5◑,◑84S201I5◑,◑84S203I3◑,◑84S200I5◑],◑T83I7◑:[◑84S205I6◑,◑84S202I8◑,◑84S204I10◑,◑84S201I8◑,◑84S203I6◑,◑84S200I8◑,◑84S205I2◑,◑84S202I4◑,◑84S201I4◑,◑84S200I4◑],◑T83I6◑:[◑84S204I9◑,◑84S205I5◑,◑84S202I7◑,◑84S201I7◑,◑84S203I5◑,◑84S200I7◑,◑84S203I0◑],◑T60I0◑:[◑61S127I3◑],◑T60I1◑:[◑61S127I5◑],◑T83I1◑:[◑84S204I6◑,◑84S204I5◑,◑84S203I2◑,◑84S205I0◑,◑84S202I2◑,◑84S201I2◑,◑84S200I2◑],◑T60I2◑:[◑61S127I5◑],◑T83I0◑:[◑84S203I1◑,◑84S202I1◑,◑84S201I1◑,◑84S200I1◑],◑T19I3◑:[◑20S42I8◑],◑T19I4◑:[◑20S42I8◑],◑T19I2◑:[◑20S42I7◑],◑T19I0◑:[◑20S42I5◑],◑T70I4◑:[◑71S147I6◑],◑T70I6◑:[◑71S147I10◑],◑T102I14◑:[◑103S256I12◑,◑103S257I12◑],◑T129I0◑:[◑130S326I4◑],◑T70I1◑:[◑71S147I8◑],◑T102I10◑:[◑103S256I8◑,◑103S257I9◑,◑103S256I9◑],◑T129I2◑:[◑130S326I10◑],◑T129I1◑:[◑130S326I5◑],◑T102I12◑:[◑103S256I11◑,◑103S257I11◑],◑T70I2◑:[◑71S147I9◑],◑T129I3◑:[◑130S326I11◑],◑T129I5◑:[◑130S326I5◑],◑T29I1◑:[◑30S53I11◑],◑T29I0◑:[◑30S53I10◑],◑T82I6◑:[◑83S197I8◑,◑83S198I7◑,◑83S194I8◑,◑83S196I6◑],◑T82I5◑:[◑83S197I9◑,◑83S198I8◑,◑83S194I9◑,◑83S196I7◑],◑T82I0◑:[◑83S199I7◑],◑T118I1◑:[◑119S286I6◑,◑119S288I4◑,◑119S286I5◑,◑119S291I3◑,◑119S290I7◑],◑T118I2◑:[◑119S286I9◑,◑119S288I5◑,◑119S291I4◑,◑119S290I8◑],◑T118I3◑:[◑119S286I10◑,◑119S288I6◑,◑119S290I9◑],◑T82I1◑:[◑83S199I6◑],◑T18I4◑:[◑19S40I9◑,◑19S41I6◑],◑T18I5◑:[◑19S40I10◑,◑19S41I6◑],◑T18I2◑:[��19S40I7◑,◑19S41I5◑],◑T18I3◑:[◑19S40I8◑,◑19S41I5◑],◑T18I0◑:[◑19S40I6◑],◑T73I2◑:[◑74S158I5◑,◑74S156I5◑,◑74S157I5◑,◑74S158I4◑,◑74S159I7◑,◑74S160I1◑],◑T73I1◑:[◑74S156I4◑,◑74S157I3◑,◑74S156I2◑,◑74S158I3◑,◑74S160I2◑,◑74S160I1◑],◑T96I3◑:[◑97S238I8◑],◑T96I0◑:[◑97S238I4◑],◑T73I3◑:[◑74S160I1◑],◑T96I1◑:[◑97S238I4◑],◑T105I0◑:[◑106S267I6◑,◑106S266I5◑,◑106S265I4◑,◑106S264I6◑],◑T105I1◑:[◑106S267I7◑,◑106S264I7◑,◑106S266I6◑,◑106S265I5◑],◑T128I1◑:[◑129S323I11◑,◑129S323I9◑,◑129S324I8◑,◑129S324I6◑],◑T105I2◑:[◑106S267I8◑,◑106S266I7◑,◑106S265I6◑,◑106S264I8◑],◑T128I0◑:[◑129S323I13◑,◑129S325I5◑,◑129S324I10◑],◑T105I3◑:[◑106S267I9◑,◑106S264I9◑,◑106S265I8◑,◑106S266I8◑],◑T128I2◑:[◑129S324I7◑,◑129S325I4◑,◑129S323I10◑],◑T50I0◑:[◑51S101I3◑],◑T73I0◑:[◑74S156I1◑],◑T85I1◑:[◑86S214I8◑],◑T85I0◑:[◑86S212I13◑,◑86S212I12◑],◑T62I4◑:[◑63S130I8◑,◑63S130I7◑],◑T85I3◑:[◑86S212I6◑],◑T62I6◑:[◑63S130I11◑,◑63S130I10◑],◑T85I4◑:[◑86S212I7◑,◑86S212I8◑],◑T62I7◑:[◑63S130I13◑],◑T117I0◑:[◑118S285I5◑],◑T117I1◑:[◑118S285I5◑],◑T62I0◑:[◑63S130I6◑,◑63S131I6◑],◑T95I3◑:[◑96S234I10◑,◑96S235I7◑],◑T95I4◑:[◑96S234I10◑,◑96S235I7◑],◑T95I2◑:[◑96S234I8◑,◑96S235I7◑],◑T95I7◑:[◑96S235I9◑,◑96S234I12◑],◑T95I8◑:[◑96S235I10◑,◑96S234I13◑],◑T95I5◑:[◑96S234I10◑],◑T95I6◑:[◑96S235I9◑,◑96S234I12◑],◑T104I0◑:[◑105S261I2◑,◑105S263I1◑,◑105S262I3◑],◑T104I1◑:[◑105S261I1◑,◑105S263I0◑,◑105S262I3◑],◑T104I2◑:[◑105S261I3◑,◑105S263I2◑,◑105S262I4◑,◑105S262I10◑],◑T104I3◑:[◑105S261I4◑,◑105S263I3◑,◑105S262I5◑],◑T104I4◑:[◑105S261I5◑,◑105S263I4◑,◑105S262I6◑],◑T104I5◑:[◑105S261I6◑,◑105S263I5◑,◑105S262I7◑],◑T104I6◑:[◑105S261I7◑,◑105S263I6◑,◑105S262I8◑],◑T104I7◑:[◑105S261I8◑,◑105S263I7◑,◑105S262I9◑],◑T61I3◑:[◑62S128I8◑,◑62S129I5◑],◑T84I2◑:[◑85S207I2◑,◑85S208I1◑,◑85S206I5◑],◑T61I2◑:[◑62S129I2◑,◑62S128I5◑],◑T84I1◑:[◑85S206I4◑,◑85S207I1◑,◑85S208I0◑],◑T61I5◑:[◑62S129I7◑,◑62S128I10◑],◑T84I4◑:[◑85S211I4◑,◑85S206I8◑,◑85S207I6◑,◑85S208I5◑,◑85S209I4◑,◑85S210I6◑],◑T61I4◑:[◑62S128I9◑,◑62S129I6◑],◑T84I3◑:[◑85S210I5◑,◑85S211I3◑,◑85S206I7◑,◑85S207I2◑,◑85S208I1◑,◑85S206I6◑,◑85S207I5◑,◑85S208I4◑,◑85S209I3◑,◑85S206I5◑],◑T84I6◑:[◑85S207I7◑,◑85S208I6◑,◑85S206I9◑,◑85S210I7◑,◑85S211I5◑],◑T84I5◑:[◑85S207I7◑,◑85S208I6◑,◑85S209I5◑,◑85S206I9◑,◑85S210I7◑,◑85S211I5◑],◑T139I1◑:[◑140S343I5◑,◑140S344I5◑],◑T139I0◑:[◑140S344I4◑,◑140S344I5◑,◑140S343I3◑],◑T139I2◑:[◑140S343I5◑],◑T61I1◑:[◑62S128I4◑,◑62S129I1◑]}"},"similarity_self":0,"time":"2022-03-03 00:15:50","similarity_remove_ref":0.176,"report_annotation_ref":{"similar_offsets":[{"reference":false,"start":3173,"end":3238},{"reference":false,"start":3238,"end":3278},{"reference":false,"start":3463,"end":3491},{"reference":false,"start":3491,"end":3528},{"reference":false,"start":3528,"end":3564},{"reference":false,"start":3633,"end":3687},{"reference":false,"start":3726,"end":3754},{"reference":false,"start":3782,"end":3814},{"reference":false,"start":3824,"end":3980},{"reference":false,"start":3980,"end":4135},{"reference":false,"start":4135,"end":4212},{"reference":false,"start":4212,"end":4288},{"reference":false,"start":4288,"end":4380},{"reference":false,"start":4380,"end":4506},{"reference":false,"start":4506,"end":4641},{"reference":false,"start":4641,"end":4752},{"reference":false,"start":4752,"end":4783},{"reference":false,"start":4783,"end":4846},{"reference":false,"start":4846,"end":4906},{"reference":false,"start":4906,"end":4995},{"reference":false,"start":4995,"end":5193},{"reference":false,"start":5193,"end":5362},{"reference":false,"start":5392,"end":5487},{"reference":false,"start":6364,"end":6465},{"reference":false,"start":6465,"end":6509},{"reference":false,"start":6698,"end":6883},{"reference":false,"start":8095,"end":8282},{"reference":false,"start":9219,"end":9397},{"reference":false,"start":9598,"end":9701},{"reference":false,"start":9701,"end":9829},{"reference":false,"start":9829,"end":9965},{"reference":false,"start":9975,"end":10133},{"reference":false,"start":10133,"end":10241},{"reference":false,"start":10677,"end":10847},{"reference":false,"start":11106,"end":11169},{"reference":false,"start":11169,"end":11308},{"reference":false,"start":11308,"end":11393},{"reference":false,"start":11393,"end":11563},{"reference":false,"start":11563,"end":11613},{"reference":false,"start":11613,"end":11784},{"reference":false,"start":11967,"end":12035},{"reference":false,"start":12035,"end":12217},{"reference":false,"start":12217,"end":12408},{"reference":false,"start":12408,"end":12567},{"reference":false,"start":12618,"end":12656},{"reference":false,"start":12656,"end":12711},{"reference":false,"start":12774,"end":12909},{"reference":false,"start":13160,"end":13310},{"reference":false,"start":13323,"end":13417},{"reference":false,"start":13417,"end":13583},{"reference":false,"start":13601,"end":13701},{"reference":false,"start":13721,"end":13895},{"reference":false,"start":14331,"end":14414},{"reference":false,"start":14580,"end":14720},{"reference":false,"start":14793,"end":14920},{"reference":false,"start":14920,"end":15083},{"reference":false,"start":15268,"end":15372},{"reference":false,"start":15477,"end":15587},{"reference":false,"start":15597,"end":15699},{"reference":false,"start":15703,"end":15770},{"reference":false,"start":15770,"end":15872},{"reference":false,"start":15872,"end":15959},{"reference":false,"start":15959,"end":16061},{"reference":false,"start":16061,"end":16172},{"reference":false,"start":17002,"end":17100},{"reference":false,"start":17743,"end":17839},{"reference":false,"start":17846,"end":17962},{"reference":false,"start":17962,"end":18056},{"reference":false,"start":18061,"end":18169},{"reference":false,"start":18169,"end":18219},{"reference":false,"start":18219,"end":18320},{"reference":false,"start":18320,"end":18410},{"reference":false,"start":18425,"end":18541},{"reference":false,"start":18550,"end":18654},{"reference":false,"start":18690,"end":18805},{"reference":false,"start":18805,"end":18923},{"reference":false,"start":18923,"end":19084},{"reference":false,"start":19084,"end":19171},{"reference":false,"start":19171,"end":19208},{"reference":false,"start":19219,"end":19267},{"reference":false,"start":19289,"end":19319},{"reference":false,"start":19319,"end":19423},{"reference":false,"start":19440,"end":19573},{"reference":false,"start":19583,"end":19669},{"reference":false,"start":19669,"end":19739},{"reference":false,"start":19831,"end":19925},{"reference":false,"start":19925,"end":20052},{"reference":false,"start":20123,"end":20222},{"reference":false,"start":20222,"end":20278},{"reference":false,"start":20278,"end":20323},{"reference":false,"start":20334,"end":20456},{"reference":false,"start":20465,"end":20628},{"reference":false,"start":20628,"end":20738},{"reference":false,"start":20738,"end":20936},{"reference":false,"start":21281,"end":21316},{"reference":false,"start":21321,"end":21401},{"reference":false,"start":21401,"end":21522},{"reference":false,"start":29006,"end":29132},{"reference":false,"start":29572,"end":29600},{"reference":false,"start":29600,"end":29623},{"reference":false,"start":29672,"end":29709},{"reference":false,"start":31582,"end":31606},{"reference":false,"start":32618,"end":32761},{"reference":false,"start":33883,"end":33980},{"reference":false,"start":33980,"end":34069},{"reference":false,"start":34596,"end":34726},{"reference":false,"start":34726,"end":34882},{"reference":false,"start":35222,"end":35388},{"reference":false,"start":35388,"end":35473},{"reference":false,"start":36421,"end":36535},{"reference":false,"start":37239,"end":37305},{"reference":false,"start":37397,"end":37536},{"reference":false,"start":38419,"end":38581},{"reference":false,"start":38937,"end":39091},{"reference":false,"start":39501,"end":39640},{"reference":false,"start":39912,"end":39997},{"reference":false,"start":40427,"end":40497},{"reference":false,"start":40538,"end":40650},{"reference":false,"start":40658,"end":40725}],"chapter_max_similar_word_count":7594,"word_similar_count":7896,"chapters":[{"chapter":"中英文摘要等","word_count":3814,"word_similar_count":302,"sources":[{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000202562427011","author":"","similarity":0.023,"self":false,"similar_word_count":86,"source":"网页","title":"一种全球移动通信系统GSM数据的通信方法和相关装置与流程","url":"http://www.xjishu.com/zhuanli/62/202010246130.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000142555028611","author":"","similarity":0.016,"self":false,"similar_word_count":61,"source":"网页","title":"微网·微波论坛·ads P21_32-by_bubulong_文档库","url":"http://www.wendangku.net/doc/f7a6c619c5da50e2524d7ffd.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000132163561611","author":"","similarity":0.015,"self":false,"similar_word_count":57,"source":"网页","title":"GBT - 信息安全技术 安全处理器技术规范 - 道客巴巴","url":"http://www.doc88.com/p%2D9866157742471.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.014,"self":false,"similar_word_count":55,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000458370111","author":"","similarity":0.013,"self":false,"similar_word_count":50,"source":"大学生论文联合库","title":"基于遗传算法的汽车电气故障诊断研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203081199911","author":"","similarity":0.012,"self":false,"similar_word_count":47,"source":"网页","title":"一种字典更新方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011335384.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000427064411","author":"周燕美","similarity":0.012,"self":false,"similar_word_count":47,"source":"大学生论文联合库","title":"中药质量控制方法","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000368749211","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"大学生论文联合库","title":"电力系统中的变压器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133380057111","author":"","similarity":0.012,"self":false,"similar_word_count":45,"source":"网页","title":"基于FPGA的人脸识别算法及其实现 - 道客巴巴","url":"http://www.doc88.com/p%2D0032550396430.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000133699744011","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"使用混合式分裂束激光划线处理及等离子体蚀刻的晶圆切割的制作方法","url":"http://www.xjishu.com/zhuanli/59/201280038309.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203132291211","author":"","similarity":0.012,"self":false,"similar_word_count":44,"source":"网页","title":"内窥镜用处理器、程序、信息处理方法和信息处理装置与流程","url":"http://www.xjishu.com/zhuanli/55/202080019466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186245429911","author":"","similarity":0.011,"self":false,"similar_word_count":43,"source":"网页","title":"多重编解码器编码器及多重编解码器编码系统","url":"http://www.doc88.com/p%2D31073366987892.html"},{"reference":false,"teacher":"","datatype":"book","year":"1997","docid":"1900023554017211","author":"胡乾斌等著","similarity":0.01,"self":false,"similar_word_count":39,"source":"武汉：华中理工大学出版社","title":"数字集成电子技术基础","url":""}],"similarity":0.079,"similarityPercentage":"7.9%","text":"<p>摘要</p><p>随着后摩尔时代的到来,在超大规模集成电路设计阶段验证已经逐渐成为困扰各大芯片设计人员的关键问题,虽然可以使用软件仿真、硬件加速仿真等验证方法来加速验证流程,但是随着集成电路设计规模逐渐增大,原先的验证方法在时间成本上已经无法满足��前快速设计迭代的需求,使用FPGA进行芯片设计原型验证已逐渐成为验证阶段主流。但随着设计的规模剧增,单片FPGA已无法满足超大型集成电路设计的验证需求,从而衍生出高密度FPGA原型验证系统与配套EDA软件。而如何将超大型集成电路设计在满足资源约束的前提下合理的划分至高密度FPGA原型验证系统中的每个FPGA中,将成为集成电路验证划分阶段的关键问题,而超大型集成电路设计所需要的FPGA片上资源数量将作为合理划分电路的重要依据。同时随着机器学习的快速发展,将EDA软件与机器学习进行结合从而提升时间性能也逐步成为EDA行业的发展趋势。</p><p>论文主要对高密度FPGA原型验证系统中的划分阶段如何对集成电路进行快速资源估算进行了研究,基于C++语言并结合相关FPGA验证原理,设计了一款RTL级快速资源估算模型,并实际应用于商业软件中,解决了FPGA原型验证RTL划分阶段快速资源估计这一工程问题,为我国自主研发的高密度FPGA原型验证系统及配套EDA工具做出了一定贡献。同时为进一步研究快速的RTL级资源估算方法,将RTL级设计资源预测与机器学习相结合,设计并实现了面向RTL级资源估算机器学习模型,为EDA软件与机器学习的结合论证了可行性。本论文的主要工作与成果如下:</p><p>(1)对原型验证流程中综合及技术映射阶段进行基本研究,并举例简述在逻辑综合的基本原则及技术映射阶段的基本算法,以此为依据使用Parser作为底层软件基础,并使用C++设计了基于传统集成电路流程的快速资源估算模型工具,之后使用来自多个行业的超大规模集成电路进行验证,在未进行优化时,时间性能提升超过100%,对LUT与FF资源平均估算准确度达60%以上。在上述传统快速资源估算模型的基础上设计了为满足于高密度FPGA原型验证系统划分阶段需求的BottomToUp算法,使得对RTL级设计资源估算时间较优化前时间利用率提升达220%以上,同时为进一步提升估算精度,设计了LUT合并、面积约束等优化与约束项算法,使得不考虑特殊器件及工艺的情况下LUT及FF等资源的估算准确率最高可达90.11%,更加完善了快速资源估算模型的性能及易用性。</p><p>(2)研究人工智能与传统EDA工具相结合的可能性,并使用Verific为基础,通过进一步分析逻辑综合与技术映射的原理,分析集成电路RTL级描述语言特征,构建RTL级描述特征提取器,实现提取RTL级描述特征67种。对特征相关性、贡献度进行进一步分析后进行特征工程,并结合线性回归、随机森林、SVM支持向量机、人工神经网络构造适用于RTL级设计FPGA片上资源估算的机器学习模型,并完成超参数调校及训练,实现平均LUT、FF、DSP等资源估算模型确定系数为73.4%的神经网络模型。最后通过对其数据进行分析,进一步验证了机器学习在原型验证划分阶段集成电路快速资源估算领域的可行性。</p><p>关键词:FPGA原型验证,资源估算,特征工程,机器学习</p><p>ABSTRACT</p><p>插图索引</p><p>图1.1高密度FPGA原型验���系统2</p><p>图1.2高密度FPGA原型验证流程3</p><p>图1.32008年Xilinx公司快速资源估算模型[17]5</p><p>图2.1 FPGA基本组成图示9</p><p>图2.2 LUT结构图示10</p><p>图2.3 LUT基本工作原理10</p><p>图2.4 D触发器11</p><p>图2.5 FPGA设计基本流程11</p><p>图2.6 FPGA逻辑综合流程13</p><p>图2.7连续赋值语句综合图示14</p><p>图2.8阻塞赋值语句综合图例15</p><p>图2.9非阻塞赋值语句综合图例15</p><p>图2.10非阻塞赋值语句综合图例16</p><p>图2.11算数运算符综合图例16</p><p>图2.12 if语句综合图例16</p><p>图2.13 case语句综合图例17</p><p>图2.14循环语句综合图例17</p><p>图2.15函数语句综合图例18</p><p>图2.16工艺映射流程图19</p><p>图2.17电设计转化为DAG图20</p><p>图2.18逻辑划分20</p><p>图2.19器件覆盖21</p><p>图2.20 Mapping算法伪代码22</p><p>图2.21机器学习实现RTL级设计资源估算流程23</p><p>图2.22 Bagging算法伪代码24</p><p>图2.23决策树学习基本算法25</p><p>图2.24随机森林模型算法伪代码27</p><p>图2.25神经元计算图示28</p><p>图2.26感知器结构图示29</p><p>图2.27多层感知机结构图示30</p><p>图3.1 VeriTreeNode类视图34</p><p>图3.2 VeriModule类视图35</p><p>图3.3 Verific-Netlist-DataBase数据结构图36<br />图3.4快速资源估算模型文件流37</p><p>图3.5快速资源估算模型流程图示38</p><p>图3.6快速资源估算模型Parse-Design流程39</p><p>图3.7 RTL Elaborate操作图示39</p><p>图3.8 Flatten操作电路图示40</p><p>图3.9 Flatten操作树结构图示40</p><p>图3.10 RTL级基本器件库41</p><p>图3.11快速资源估算模型计算结果41</p><p>图3.12 RTL代码中的Glue Logic和Instance 42</p><p>图3.13 BottomToUp算法数据结构43</p><p>图3.14 RTL设计树结构示意图43</p><p>图3.15 BottomToUp算法伪代码44</p><p>图3.16优化后快速资源估算模型输出45</p><p>图3.17 LUT-5 Base FPGA结构图示46</p><p>图3.184输入查找表真值表47</p><p>图4.1特征提取器结构图52</p><p>图4.2 Verilog操作符图示53</p><p>图4.3运算符特征提取伪代码54</p><p>图4.4连续赋值语句特征提取伪代码55</p><p>图4.5 Verilog Always过程块语法格式55</p><p>图4.6 Always特征提取伪代码|56</p><p>图4.7 Verilog过程赋值语句语法格式56</p><p>图4.8 Verilog If条件语句语法格式57</p><p>图4.9 If条件语句特征提取伪代码58</p><p>图4.10 Verilog Case语句语法格式58</p><p>图4.11 Case条件分支语句特征提取伪代码59</p><p>图4.12 Verilog循环语句语法格式59</p><p>图4.13循环语句特征提取伪代码60</p><p>图4.14 Verilog HDL Function语法结构61</p><p>图4.15 RTL语法特征提取器流程图62</p><p>图4.16特征数据集直方图64</p><p>图4.17特征热力图65</p><p>图4.18特征预处理流水线69</p><p>图4.19模型训练开发流程70</p><p>图4.20各模型尝试预测LUT资源结果71</p><p>图4.21机器学习模型训练及调优流程71</p><p>图4.22随机森林预测LUT模型参数搜索学习曲线72</p><p>图4.23随机森林LUT预测模型学习曲线72</p><p>图4.24随机森林预测FF特征搜索学习曲线73</p><p>图4.25随机森林FF预测模型学习曲线73</p><p>图4.26神经网络学习曲线,左图为超参数调优前学习曲线74</p><p>图4.27神经网络模型结构图75</p><p>图4.28神经网络与LUT模型学习曲线75</p><p>图4.29神经网络模型结构图76</p><p>图4.30神经网络模型预测FF资源学习曲线76</p><p>图4.31机器学习模型验证结果77</p><p>表格索引</p><p>表2.1典型多层感知机架构31</p><p>表3.1快速资源估算模型无优化结果对比48</p><p>表3.2快速资源估算模型增加优化结果对比48</p><p>表4.1 Verilog主要语法类型与关键字51</p><p>表4.2部分基本数据集数据图示63</p><p>表4.3数据集基本概要63</p><p>表4.4 RTL级特征与LUT资源的相关性数据66</p><p>表4.5 RTL级特征与FF资源的相关性数据66</p><p>表4.6 RTL级特征与BUFG资源的相关性数据67</p><p>表4.7 RTL级特征与IO资源的相关性数据67</p><p>表4.8模型评估77</p><p>符号对照表</p><p>符号符号名称</p><p>F 激活函数</p><p>L 损失函数</p><p>I(X,Y)特征权值分数</p><p>H(Y)熵</p><p>D 特征个数</p><p>\\nabla f 梯度</p><p>G 二维高斯函数</p><p>d\\prime 保留的特征个数</p><p>M 正交基向量</p><p>Q 协方差矩阵</p><p>Z 加权和</p><p>缩略语对照表</p><p>���略语英文全称中文对照</p><p><em class='similar'>ASIC Application Specific Integrated Circuit 专用集成电路</em><em class='similar'><br />SoC System on Chip 片上系统</em></p><p><em class='similar'>FPGA Field Programmable Gate Array 现场可编程逻辑门阵列</em></p><p>RTL Register Transfer Level 寄存器传输级别</p><p>LUT Look Up Table 显示查找表</p><p>DSP Digital Signal Processing 数字信号处理单元<br />BRAM Block RAM 块状存储</p><p>HLS High Level Sythesis 高层次综合</p><p>LB Logic Block 逻辑块</p><p>FF Flip-Flop 触发器</p><p>CLB Configurable Logic Block 可配置逻辑块</p><p><em class='similar'>RAM Random Access Memory 随机存取存储器</em></p><p><em class='similar'>SRAM Static Random Access Memory 静态随机存取存储器</em></p><p><em class='similar'>HDL Hardware Description Language 硬件描述语言</em></p><p>API Application Programming Interface 应用程序接口<br />CAD Computer Aided Design 计算机辅助设计</p><p><em class='similar'>EDA Electronic Design Automation 电子设计自动化</em><br />RF Random Forest 随机森林</p><p>LR Linear Regression 线性回归</p><p>DT Decision Tree 决策树</p><p><em class='similar'>SVM Support Vector Machine 支持向量机</em></p><p>MLP Multilayer Perceptron 多层感知机</p><p><em class='similar'>ANN Artificial Neural Network 人工神经网络</em></p><p class='uncheck'>目录</p><p class='uncheck'>摘要 I</p><p class='uncheck'>ABSTRACT III</p><p class='uncheck'>插图索引 V</p><p class='uncheck'>表格索引 IX</p><p class='uncheck'>符号对照表 XI</p><p class='uncheck'>缩略语对照表 XII</p><p class='uncheck'>第一章 绪论 15</p><p class='uncheck'>1.1 研究背景 15</p><p class='uncheck'>1.1.1 论文研究背景 15</p><p class='uncheck'>1.1.2 高密度FPGA原型验证系统及EDA 16</p><p class='uncheck'>1.2 国内外研究现状 18</p><p class='uncheck'>1.3 研究的意义 19</p><p class='uncheck'>1.4 主要内容及组织结构 20</p><p class='uncheck'>第二章 FPGA资源估计方法 23</p><p class='uncheck'>2.1 FPGA基本结构与资源组成 23</p><p class='uncheck'>2.2 FPGA逻辑综合与技术映射 26</p><p class='uncheck'>2.2.1 行为级硬件描述语言 26</p><p class='uncheck'>2.2.2 FPGA逻辑综合 27</p><p class='uncheck'>2.2.1 FPGA技术映射 32</p><p class='uncheck'>2.3 机器学习模型与资源估计方法 36</p><p class='uncheck'>2.3.1 机器学习与EDA结合的可行性 36</p><p class='uncheck'>2.3.2 特征提取方法 37</p><p class='uncheck'>2.3.3 随机森林 37</p><p class='uncheck'>2.3.4 人工神经网络 41</p><p class='uncheck'>2.4 机器学习性能评估指标 45</p><p class='uncheck'>第三章 快速RTL级资源估算模型的设计与实现 47</p><p class='uncheck'>3.1 Verific及相关数据结构 47</p><p class='uncheck'>3.1.1 Verific平台介绍 47</p><p class='uncheck'>3.1.2 Parse-Tree数据结构 47</p><p class='uncheck'>3.1.3 Netlist数据结构 49</p><p class='uncheck'>3.2 资源估算模型流程与构造 51</p><p class='uncheck'>3.2.1 资源估算模型流程设计 51</p><p class='uncheck'>3.2.2 资源估算模型构造实现 52</p><p class='uncheck'>3.3 快速资源估算模型优化 56</p><p class='uncheck'>3.3.1 BottomToUP算法的设计与实现 56</p><p class='uncheck'>3.3.2 冗余逻辑优化及合并 60</p><p class='uncheck'>3.3.3 最小面积优化方法 61</p><p class='uncheck'>3.4 结果分析 63</p><p class='uncheck'>3.5 本章小结 64</p><p class='uncheck'>第四章 基于机器学习的RTL级资源估算 65</p><p class='uncheck'>4.1 Verilog HDL 语法特征分析 65</p><p class='uncheck'>4.2 RTL级设计特征提取方法设计 66</p><p class='uncheck'>4.3 自动化特征提取器的实现 75</p><p class='uncheck'>4.4 数据集分析 76</p><p class='uncheck'>4.4.1 数据集构建 76</p><p class='uncheck'>4.4.2 数据集分析 77</p><p class='uncheck'>4.5 特征工程 82</p><p class='uncheck'>4.5.1 特征预处理 82</p><p class='uncheck'>4.5.2 转换流水线 83</p><p class='uncheck'>4.6 模型框架选择 84</p><p class='uncheck'>4.7 机器学习模型训练 85</p><p class='uncheck'>4.7.1 随机森林 86</p><p class='uncheck'>4.7.2 人工神经网络 88</p><p class='uncheck'>4.8 结果与分析 91</p><p class='uncheck'>4.9 本章小结 92</p><p class='uncheck'>第五章 总结与展望 93</p><p class='uncheck'>5.1 工作总结 93</p><p class='uncheck'>5.2 工作展望 94</p><p class='uncheck'>参考文献 95</p><p class='uncheck'>致谢 99</p><p class='uncheck'>作者简介 101</p>"},{"chapter":"绪论","word_count":39476,"word_similar_count":7594,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.045,"self":false,"similar_word_count":1776,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.031,"self":false,"similar_word_count":1232,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.019,"self":false,"similar_word_count":742,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.013,"self":false,"similar_word_count":497,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.011,"self":false,"similar_word_count":447,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183209387311","author":"","similarity":0.009,"self":false,"similar_word_count":358,"source":"网页","title":"《基于Scikit-Learn、Keras和TensorFlow的机器学习实战》：人工神经网络介绍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621558880&ver=3081&signature=KT3z7W4Niz98L0TYuTtMAlI2K2Hd2Usg5q8tGAg0ZzLRrxTIbR2C-7-8Dbed0*ok5ZltdIa7lFOp19Q0nf*SoJcAyQUdJTcqixmENCEGWbtxZekzxExMBIhYhzTtfyFh&new=1"},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":285,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.007,"self":false,"similar_word_count":278,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.006,"self":false,"similar_word_count":245,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.006,"self":false,"similar_word_count":224,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138838221611","author":"","similarity":0.004,"self":false,"similar_word_count":158,"source":"网页","title":"VerilogHDL入门基础之行为级建模 - 豆丁网","url":"https://www.docin.com/p%2D1551076491.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135414128511","author":"","similarity":0.004,"self":false,"similar_word_count":142,"source":"网页","title":"数学分类","url":"https://blog.csdn.net/qq_30815237/article/details/88739072"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"journal","year":"2018","docid":"1000027943830211","author":"钟海燕;李玲;麦雄发;王雨","similarity":0.003,"self":false,"similar_word_count":136,"source":"广西师范学院学报(自然科学版)","title":"基于随机森林的短时临近降雨预报方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000126492999811","author":"","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"基于LUT的FPGA工艺映射优化 - 道客巴巴","url":"https://www.doc88.com/p%2D9912301646688.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":130,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2011","docid":"1900023633894511","author":"刘睿强，童贞理，尹洪剑编著","similarity":0.003,"self":false,"similar_word_count":128,"source":"","title":"Verilog HDL数字系统设计及实践","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135879019911","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128075291811","author":"","similarity":0.003,"self":false,"similar_word_count":127,"source":"网页","title":"第八章 集成学习_steph_curry的博客-CSDN博客","url":"https://blog.csdn.net/steph_curry/article/details/79139505"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000178176625511","author":"","similarity":0.003,"self":false,"similar_word_count":116,"source":"网页","title":"基于机器学习的H型钢力学性能与成分优化研究","url":"https://wenku.baidu.com/view/e7bf68a850ea551810a6f524ccbff121dc36c516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016047965011","author":"","similarity":0.003,"self":false,"similar_word_count":106,"source":"网页","title":"【机器学习算法总结】RF（随机森林） - yyy430的博客 - CSDN博客","url":"https://blog.csdn.net/yyy430/article/details/85057685"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181730880511","author":"","similarity":0.003,"self":false,"similar_word_count":102,"source":"网页","title":"基于深度信息的人体部位识别","url":"http://www.doc88.com/p%2D3923857507598.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186521686911","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"https://www.docin.com/p%2D361136707.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015763116111","author":"","similarity":0.002,"self":false,"similar_word_count":98,"source":"网页","title":"简单决策树空气质量评价 - u014192796的博客 - CSDN博客","url":"https://blog.csdn.net/u014192796/article/details/79165848"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030621911","author":"","similarity":0.002,"self":false,"similar_word_count":96,"source":"网页","title":"Verilog程序如何优化减少逻辑单元的使用数量","url":"https://blog.csdn.net/u010173859/article/details/17511749"},{"reference":false,"teacher":"","datatype":"wiki","year":"","docid":"9100005028085811","author":"","similarity":0.002,"self":false,"similar_word_count":91,"source":"百科","title":"Verilog HDL","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000181240768511","author":"","similarity":0.002,"self":false,"similar_word_count":88,"source":"网页","title":"FPGA硬件语言","url":"https://www.doc88.com/p%2D7798622386456.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000208370017111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"Verilog综合","url":"https://m.docin.com/p%2D915714227.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000128720481111","author":"","similarity":0.002,"self":false,"similar_word_count":85,"source":"网页","title":"西瓜书学习笔记——第八章：集成学习_Andrewings-CSDN博客","url":"https://blog.csdn.net/shichensuyu/article/details/93312974"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":81,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138505610111","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"随机森林算法梳理_sanpang2288的博客-CSDN博客","url":"https://blog.csdn.net/sanpang2288/article/details/89024781"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000185145501211","author":"","similarity":0.002,"self":false,"similar_word_count":73,"source":"网页","title":"verilog节省逻辑资源","url":"https://wenku.baidu.com/view/57a433610722192e4536f6ff"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191352255511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"硬件描述语言基础教程verilog应用开发第1章","url":"https://www.doc88.com/p%2D7942597613574.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000184235326811","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standarderror均方根误差中误差RMSErootmeansquarederror","url":"https://www.docin.com/p%2D2414922835.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000029360914111","author":"冯静达;焦学军;李启杰;郭娅美;杨涵钧;楚洪祚","similarity":0.002,"self":false,"similar_word_count":72,"source":"航天医学与医学工程","title":"基于心率和呼吸特征结合的睡眠分期研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000141550370811","author":"","similarity":0.002,"self":false,"similar_word_count":71,"source":"网页","title":"方差与偏差和集成学习_李大宝652的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43861721/article/details/105011614"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189446884611","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"EDA与HDL","url":"https://www.docin.com/p%2D1388115837.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000941227311","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"光学计算机程序设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015758038411","author":"","similarity":0.002,"self":false,"similar_word_count":70,"source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2016","docid":"2200000798956911","author":"JXT","similarity":0.002,"self":false,"similar_word_count":70,"source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":""},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000524795711","author":"-","similarity":0.002,"self":false,"similar_word_count":69,"source":"大学生论文联合库","title":"基于支持向量机的生物信息学研究进展","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110384254911","author":"","similarity":0.002,"self":false,"similar_word_count":69,"source":"网页","title":"简指令微处理器(risc)的全流程设计 - 豆丁网","url":"http://cache.baiducontent.com/c?m=9d78d513d9d437ad4f9ee2690c66c0161f43f3672ba6d20208a28449e3732a455012e6af60624e0b89833a2540b8482ff7ed7337721420c0cd95d91181ac925f7ed57829320b863711d11faec84326c1239a4de9d843a1e5ae&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adocin%2Ecom&qid=cb8178880014014e&p1=9"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000017085073411","author":"","similarity":0.002,"self":false,"similar_word_count":68,"source":"网页","title":"集成学习方法 - 一座青山的专栏 - CSDN博客","url":"https://blog.csdn.net/sangyongjia/article/details/83217404"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000207907782911","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"逻辑综合中的工艺映射算法研究","url":"https://www.docin.com/p%2D851853545.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015681295811","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"基于bp神经网络的集成学习","url":"https://blog.csdn.net/weixin_40859436/article/details/82345990"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2015","docid":"2200000669311311","author":"戚薏","similarity":0.002,"self":false,"similar_word_count":65,"source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000180302201811","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"网页","title":"IC设计工具应用中的限制性因素研究（可编辑）","url":"https://www.docin.com/p%2D891033574.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189917812511","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"第1章数字","url":"http://www.doc88.com/p%2D64559433310167.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138770563211","author":"","similarity":0.002,"self":false,"similar_word_count":62,"source":"网页","title":"基于语音的抑郁识别集成学习研究 - 道客巴巴","url":"http://www.doc88.com/p%2D1028474110193.html"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082132296211","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023653559711","author":"何海群著","similarity":0.001,"self":false,"similar_word_count":59,"source":"","title":"零起点  Python足彩大数据与机器学习实盘分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079748404511","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"RandomForest详解（附带详细公式推导）","url":"https://blog.csdn.net/qq_40793975/article/details/80988486"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.001,"self":false,"similar_word_count":59,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146036562311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"选择题   数字系统设计","url":"https://wenku.baidu.com/view/dd29f7e9b8f67c1cfad6b8c1"},{"reference":false,"teacher":"","datatype":"journal","year":"2019","docid":"1000029331339811","author":"刘博;卢婷婷;陈国磊;赵璐","similarity":0.001,"self":false,"similar_word_count":58,"source":"宜宾学院学报","title":"面向非平衡数据集的随机森林算法对学生学业问题的预测分析","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120314096811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于项目Netflix电影协同推荐系统-本科毕业设计论文 - 道客巴巴","url":"http://www.doc88.com/p-9601368915373.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179275463811","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"基于Verilog的8051微控制器中断系统的设计---优秀毕业论文 参考文献 可复..","url":"https://www.docin.com/p%2D827308466.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"}],"similarity":0.192,"similarityPercentage":"19.2%","text":"<p>研究背景</p><p>论文研究背景</p><p><em class='similar'>随着市场环境的逐步升级,</em><em class='similar'>市场需求对与IC的功能愈加严格,</em>IC的复杂度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em>设计,<em class='similar'>这项又称为片上系统SoC</em><em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的集成电路技术在业界已经得到广泛的认可与应用,</em>且当代的SoC设计也不在局限于一块IC上<em class='similar'>一般情况下</em>,<em class='similar'>由于采用ASIC设计具有功耗低、</em>投产成本低、迭代周期快等优势,<em class='similar'>所以ASIC可容纳更为复杂和灵活的逻辑设计。</em><em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em><em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发本的损失,</em>所以,IC正确性验证逐步变为超高复<em class='similar'>杂度IC研发过程中必备且关键的环节。</em><em class='similar'>最新一项统计数据表明在一些项目中芯片的设计团队规模甚至不如验证团队规模,</em><em class='similar'>验证所花费的时间也占到产品研发周期的一半以上,</em><em class='similar'>找到有效可行的验证方法成为验证的关键</em>[4]。<em class='similar'>目前,</em><em class='similar'>最常见的验证方法是软件仿真技术,</em><em class='similar'>但是软件仿真虽然简单易行,</em><em class='similar'>在面对复杂的集成电路设计时,</em><em class='similar'>其验证效率过低,</em><em class='similar'>最终可能影响到产品的及时发布</em>[6]。<em class='similar'>而基于FPGA的原型验证方法,</em><em class='similar'>依靠其可反复擦除、</em><em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>[6]。</p><p><em class='similar'>目前随着高性能ASIC芯片设计复杂度的提升以及体系结构的不断升级换代及创新,</em>SoC设计的规模在快速膨胀,<em class='similar'>研发中的验证阶段已成为高性能芯片研发过程中的关键环节,</em><em class='similar'>因此为保证验证的高效性和准确性,</em><em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证方法。</em>在具有超高复杂与高性能IC验证上,<em class='similar'>主流验证方法分为以下三类:</em><em class='similar'>软件模拟验证、</em><em class='similar'>硬件加速器仿真验证、</em><em class='similar'>FPGA原型验证。</em><em class='similar'>软件模拟验证是验证集成电路设计功能正确性上最常采用的方法,</em><em class='similar'>其具有模拟精确、</em><em class='similar'>方便灵活等优点,</em>因此对于量级较小的IC模块的正确性验证通常会采用EMU的方法。但是,<em class='similar'>当芯片整体复杂度提升,</em><em class='similar'>软件模拟的效率也在不断下降,</em><em class='similar'>同时也将难以覆盖整体IC功能的验证。</em><em class='similar'>实践表明,</em><em class='similar'>不论使用哪种算法去设计EDA工具的仿真方式,</em><em class='similar'>当IC设计所包含的电路门数超过一定数目时,</em><em class='similar'>EDA工具对于系统信号的反应将很难保证,</em><em class='similar'>验证的效率也将会被极大制约,</em><em class='similar'>从而很难高效的实现验证结果</em>[3]。<em class='similar'>针对软件模拟仿真的局限性,</em><em class='similar'>各大EDA厂商与集成电路厂商进而提出通过硬件加速器来实现仿真验证,</em><em class='similar'>其主要思想是通过专门的硬件加速器,</em><em class='similar'>将软件仿真中的一些复杂运算通过使用告诉硬件加速器来计算,</em><em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em><em class='similar'>最终提升整体上的验证效率。</em><em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em>相比于完全使用软件来实现仿真,<em class='similar'>硬件加速器使用了真实的硬件仿真环境,</em><em class='similar'>可以更加真实的反映集成电路设计系统的各种问题,</em>从而可以辅助开发人员有效的发现软件仿真无法捕获的异常,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar'>但是硬件仿真器也存在固有的缺陷,</em>因为其需要针对特定的电路构造特点的硬件加速设备,<em class='similar'>同时还需要EDA软件与硬件加速设备间的通信接口,</em><em class='similar'>而一旦所验证的设计改变,</em><em class='similar'>原有的硬件加速固件将可能无法复用,</em>从而需要重新设计硬件固件及相关接口。从理论上讲,<em class='similar'>本文的所提及的高密度原型验证系统亦可基于硬件仿真器实现,</em><em class='similar'>但硬件仿真器的成本高昂,</em><em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em></p><p>高密度FPGA原型验证系统及EDA</p><p>高密度FPGA原型验证系统</p><p><em class='similar'>近年来,</em>随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,<em class='similar'>仅靠单个FPGA的片上资源已难以ASIC芯片设计的需要,</em><em class='similar'>因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</em></p><p>对于能够使用多FPGA进行正确的验证,则必然需要进行逻辑划分,而为实现正确且合理的逻辑划分,首先要解决的就是设计逻辑综合时间长的问题[4]。一个设计规模达到几亿门甚至数十亿门的大规模SoC设计,若使用整个设计先进行综合,再进行逻辑分割的方式,设计的综合时间会非常的漫长,一次综合流程就有可能花费的时间长达数天甚至数周,若设计的规模特别大,甚至会出现编译软件或服务器崩溃的情况[5]。显然,面对超大规模的SoC设计采用RTL(Register Transfer Level,寄存器传输级别)级分割,将会成为最优的选择,RTL-Partition流程如图1.2所示。</p><p>高密度FPGA原型验证流程</p><p>使用RTL划分通过在RTL阶段将设计划分为个子设计后,便可以有效解决设计逻辑综合时间长的问题,同时实现并行编译、综合、布局布线的流程,从而有效提升FPGA原型验证的效率。但为正确实现RTL级的逻辑划分,则需要解决以下几个关键问题:</p><p>(1)首先,在对超大型SoC设计不进行逻辑综合前提下进行RTL级别分割时,需确定最合理的逻辑划分的边界,满足SoC设计的全局时钟树,同时使得进行逻辑划分后的SoC设计满足整个大型FPGA原型验证系统的互联资源和每个划分后的子设计不超出每个FPGA可综合的资源的数量(为增加FPGA综合及布局布线的成功率,常使用FPGA资源总量的60%-70%);</p><p>(2)其次,由于无法对设计进行整体综合,则无法获得设计在FPGA上所需的准确片上资源数量,则如何对设计在RTL级进行快速资源估算,在不进行逻辑综合为前提下获得设计中每个模块的资源,从而为确认划分的边界提供参考依据将成为关键问题;</p><p>(3)最后,如何通过已经获得的RTL级设计的资源与大型原型FPGA设计平台相结合,能同时满足FPGA间的互联结构、互联资源、片上逻辑资源等条件实现合理的逻辑划分,并且划分结果与原始设计逻辑等价;</p><p>本文将主要讨论上述问题中的(1)(2),即如何对RTL设计进行快速且满足RTL级逻辑划分所需精度的快速逻辑资源估算方法并尝试结合机器学习探究解决该问题的方法。</p><p>国内外研究现状</p><p><em class='similar'>当设计者通过硬件描述语言完成对集成电路寄存器传输级</em><em class='similar'>(Register Transfer Level,</em>RTL)的软件编码设计后,RTL级设计将通过几个基本步骤,最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>逻辑打包、</em><em class='similar'>布局、</em><em class='similar'>布线等。</em></p><p>FPGA的硬件组成结构中包含许多不同类别的片上资源,主要有实现逻辑电路所需要的逻辑资源,用于提供外部输入/输出接口的资源,以及连接并导通前两种资源的布线资源。具体来讲,一般包括触发器(F-F)、数字处理单元(DSP)、查找表(LUT)、块状存储(Block RAM,BRAM)等多种片上起源。其中,LUT和FF等逻辑资源一般存在于逻辑块LB(Logic Block或slice)中。</p><p>由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、<em class='similar'>RTL级设计分割、</em><em class='similar'>逻辑综合、</em><em class='similar'>工艺映射、</em>单个FPGA的布局和布线等,由于高密度FPGA原型验证流程步骤繁多且耗时较长,设计者在编写和修改RTL描述时,无法快速预估待划分电路在FPGA上实现时需要的片上硬件资源数量,这样就可能导致无法完成综合流程或者无法完成FPGA布局布线,或互联关系复杂,无法满足FPGA间组网关系,从而需要多次设计迭代来解决上述问题。另外,在逻辑综合流程中,每一部分RTL级描述所需要的实际FPGA片上资源的数量,也将对RTL到门级网表的转化与优化过程有指导意义。</p><p>综上所述,在RTL级分割阶段如何能够快速且准确的得到RTL级描述所需要的FPGA片上资源使用量,是一个很关键且重要的问题。虽然在国内也有部分针对大型设计提供EDA及FPGA原型验证厂家,但是对于在划分阶段涉及的资源估算问题在我国国内暂时没有可商业使用的较成熟的解决方案。</p><p>随着FPGA设计规模的越来越大,对于片上资源估算这一环节的重要性越发明显,也是必不可少的步骤,使得FPGA资源估算这一问题也逐渐成为学者和EDA厂商的研究重点,随之而来的也是多种多样的估算方法也都各有优劣。</p><p>2008年Xilinx公司Paul Schumacher 和 Pradip Jha提出由于用户在对FPGA设计的开发使用过程中,无法规避对设计进行逻辑综合这一步骤,从而可以通过使用快速逻辑综合生成的网表结构,通过在设计的宏观层面对现有的器件匹配库对原设计进行匹配替换,从而得到初步的资源估算结果,使用该方法可以较快速的得到不计精度的资源粗略估计值[17]。</p><p>2008年Xilinx公司快速资源估算模型[17]</p><p>2011年代尔夫特工业大学Roel Meeuws等人提出可以通过深度学习建立基于统计方法的高级定量硬件预测模型设想,并做出了初步的验证,为人工智能在资源估计这一问题上的实现建立可行性分析[11]。</p><p>2017年法国瓦伦西亚大学Mariem MakniLAMIH发布的论文中提出一种面向异构FPGA的SoC片上资源估算方法,其出发点是通过结合HSL(High Level Sythesis,高层次综合)报告构建模型对布局后FPGA真实面积进行估算[13]。</p><p>2018年Steve Dai,Yuan Zhou等人在IEEE会议上发表的论文中提出了一种通过提取HLS报告相关信息特征对FPGA布局布线后资源及时序进行预测的方法,并且达到了一个较好的预测结果,由于HLS是比RTL级在设计流程上更高层级、更抽象的表述方法,所以该方法的提出进一步为通过RTL级特征预测实际所需FPGA片上资源提供了可行性[12]。</p><p>通过对国内外研究现状的分析,我们可以发现在面向高密度FPGA原型验证系统的RTL级资源估算方面我国还存在较大的待填补的空白。</p><p>研究的意义</p><p>对于高密度FPGA原型验证系统而言,面向的设计都是规模上千万门或设计规模超过亿门,更有甚者规模超过百亿门,需要上百片当代先进FPGA才可容纳下整个设计,但是对于给定的RTL描述,它所需的FPGA片上硬件资源数量一般需要在完成逻辑打包和布线后,才可以全部得到。但对于规模较大的电路设计,从RTL描述到布线的设计综合流程往往需要花费几个小时乃至数十小时。当出现片上资源不足的问题时,设计者需要修改RTL描述并进行耗时较长的设计综合流程迭代。</p><p>若用户的设计超过百亿门时,<em class='similar'>进行一次迭代所耗费的时间成本,</em><em class='similar'>人力成本都是不可预估的,</em>所以若可以在不进行综合、布局布线等流程时快速获得所需要的所需要资源的估计值,将会为缩短开发人员的迭代周期提供帮助。同时由于高密度FPGA原型验证划分阶段需要以设计资源使用情况来划分合理的分割边界,合理的分割边界将会对设计在满足硬件FPGA组网前提下为系统的运行,规划,验证,调试提供良好的帮助,而分割边界的确认需要以RTL设计中的每个层级中每个节点的Instance的各项资源作为依据。</p><p>综上所述不论对于开发人员还是对于高密度FPGA原型系统而言,能够快速且精确的获取到大型设计所需的FPGA片上资源及对应层级所需的资源的估计值将具有巨大的意义。</p><p>主要内容及组织结构</p><p>针对我国需要开发具有自主知识产权的大型FPGA原型验证流程和相应的支持EDA软件,本文首先介绍了FPGA的基本结构及大型FPGA原型验证流程中的逻辑综合、技术映射与机器学习模型的一般方法作了详细描述,最后分别以上述基本流程为基础实现了以传统流程为基础的快速资源估算模型及以机器学习为基础的RTL级资源估算模型。本文的组织结构如下:</p><p>绪论主要介绍了当前集成电路设计阶段中验证阶段的重要性及相关的验证手段,并介绍了高密度FPGA原型验证系统与快速资源估算在RTL划分阶段的重要性、意义与待解决的关键问题,并对论文中的主要工作内容进行简要叙述。</p><p>FPGA资源估算方法介绍了FPGA的基本结构与资源组成,并进一步介绍了FPGA设计与验证流程中的快速逻辑综合与技术映射的相关原理,为第三章资源估算模型的实现打下基础,同时分析了EDA工具与机器学习的可能性,并着重介绍了本文第四章实现所用的特征提取方法与机器学习模型。</p><p>快速RTL级资源估算模型的设计与实习本章主要介绍了基于C++与第三方Parser,结合第二章所述的相关原理与方法,如何设计及实现RTL级设计进行快速资源估算的模型,并再次基础上为进一步提升运算速度与估算准确度并满足高密度FPGA原型验证系统RTLPartition的需求,设计并实现了BottomToUp算法,并论述了模型中增加的优化方法与约束项。</p><p>基于机器学习的RTL级资源估算本章主要结合第二章所述的机器学习模型方法,通过分析进一步RTL语法与综合、技术映射的关系,基于C++实现了面向RTL设计的自动化特征提取器,并通过尝试多种机器学习模型,基于Python构建了面向RTL级设计的机器学习资源估算模型,并使用多个Case进行验证,并对模型的预测结果进行分析。</p><p>总结与展望总体概括了论文的工作,并总结了论文中可改进的方式方法与方向。</p><p>FPGA资源估计方法</p><p>FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。<em class='similar'>在这种时代背景下,</em><em class='similar'>现场可编程门阵列FPGA应运而生。</em>相对于其他相同种类的芯片,由于其可反复擦除的特性,使得基于FPGA进行研发的容错率更好,成本降低。在目前的多数集成电路研发团队的研发过程中,研发团队会先基于一定数量的FPGA芯片对集成电路功能、算法进行实现,并根据实际情况进行修改直到设计达到预期的效果,最后再将达到要求的设计用ASIC实现并最终投入生产。</p><p>FPGA的本质结构是在现场可编程的门阵列芯片。但FPGA实际上并不是仅依靠简单的门级结构所组成。本章将主要介绍FPGA的基本构成资源及高密度FPGA原型验证的基本流程。</p><p>FPGA基本结构与资源组成</p><p>FPGA大致<em class='similar'>由三部分构成</em>:<em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em><em class='similar'>(Logic Block,</em>LB)<em class='similar'>也就是我们常说的基本逻辑单元,</em>可编程逻辑中逻辑块的实现方式有多重,比如最早的乘积项和现在的查找表、数据选择器等<em class='similar'>,但是无论哪种方式都是由可以实现任意逻辑电路的可编程部分触发器即Flip-Flop,</em><em class='similar'>FF等数据存储电路和数据选择器组成</em>[43]。逻辑要素是在FPGA设计开发流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar'>(Configurable Logic Block)</em>,是以LUT来构成的。第二部分则是用以组成信号输入和输出的重要部分即IO块,主要用于与FPGA外部信号进行交互,第三部分是连接FPGA内部互联资源的内部布线资源。</p><p>FPGA基本组成图示</p><p><em class='similar'>上述FPGA三部分主要组成具体包括以下内容:</em><em class='similar'>可编程输入输出及内嵌RAM、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更高的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在以上FPGA的结构中,设计者及其支持软件中最关系、<em class='similar'>最重要的是可编程逻辑单元,</em><em class='similar'>它主要包括触发器和查找表两部分。</em><em class='similar'>查找表</em>在功能实际上等效为一种特殊的静态存储器SRAM。</p><p>可编程逻辑单元中,LUT表示的是一张内存表,其存储的字数或容量实际取决于存储地址的位数。FPGA上LUT的基本存储单元大多使用静态随机存储器实现。LUT单元的具体结构如图2.2所示<br />LUT结构图示</p><p>如图2.2中所示的查找表,它拥有三个输入,则说明其可实现任何逻辑运算函数为三输入。一般输入的LUT由个静态随机存储单元和一个输入的数据复选器组成。</p><p>LUT基本工作原理</p><p>LUT基本工作原理如图2.3所示,上图左侧为电路的实现逻辑及真值表,上图右侧则对应的等效查找表。由图2.3可以知,查找表中的实际内容是将逻辑的输入等效转化为对应的存储地址,对应的输出的则是存储地址中的具体内容。最终的结果是查找表将对应的复杂逻辑运算对等的映射为存储器中的数值,这也是使用FPGA进行验证效率远远高于使用软件模拟的方法的主要因素。所以LUT资源是在对大型集成电路设计使用FPGA进行原型验证时的紧俏资源。此外,当面对的是时序逻辑电路,则FPGA会通过在每个查找表的后侧通过触发器的配置来完成。</p><p>D触发器</p><p>可编程逻辑单元中的另一种重要资源FF(Flip Flop)<em class='similar'>触发器,</em>其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。<em class='similar'>触发器</em><em class='similar'>(flip-flops)</em><em class='similar'>电路之间是相互关联的,</em><em class='similar'>从而形成数字集成电路的逻辑门。</em>在FPGA中存在有多种类型的FF,<em class='similar'>如切换触发器、</em><em class='similar'>重置触发器、</em>JK触发器和D信号触发器等。常见的触发器结构通常包含最多2个输入信号、时钟信号及输出信号。触发器资源通常在大型RTL设计进行高密度FPGA原型验证时也是一种常常面临资源紧俏的情况。</p><p>FPGA逻辑综合与技术映射</p><p>在本文中提到的FPGA原型验证方法流程中的起点如图2.5均为RTL级硬件描述语言代码,故本章我们先对硬件描述语言verilog HDL语法及逻辑进行简略的介绍,同时进一步介绍基于Verilog HDL的逻辑综合及工艺映射基本原理及基本算法,上述内容将为后续我们进一步建立可工程化的快速资源估算模型提供基础。</p><p>行为级硬件描述语言</p><p>FPGA设计基本流程</p><p><em class='similar'>Verilog HDL是用以描述硬件行为级的一种高级硬件描述语言,</em>其通常以文本或字符形式来描述数字逻辑系统的逻辑行为与系统结构。<em class='similar'>通过合理的使用该语言可以表示正确表示逻辑电路图、</em><em class='similar'>逻辑表达式等,</em><em class='similar'>还可以表示数字逻辑系统所完成的逻辑功能。</em><em class='similar'>Verilog HDL是当前世界上最流行的两种硬件描述语言之一,</em><em class='similar'>都是在20世纪80年代中期开发出来的。</em>根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>修改[16]。</p><p><em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>通过使用连续性赋值表达式,<em class='similar'>其中使用的寄存器和线网都用于连续驱动FPGA中的线网结构,</em><em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,<em class='similar'>每个模块都将用于描述该模块对应的功能描述逻辑</em>[16]。这些模块将被开发者进行抽象,<em class='similar'>然后通过线网连接。</em></p><p>而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,<em class='similar'>首选通过使用Verilog HDL等硬件描述语言编写寄存器传输级</em>(RTL)代码来描述电路设计的行为级逻辑即RTL级描述。RTL级描述通过逻辑综合得到电路网表(Netlist),通过对网表进行优化、技术映射、FPGA布局布线等操作后,最后生成FPGA配置数据(bitstream)。其中对于大型原型验证系统最为关注的前端工程就是逻辑综合和技术映射,这个过程是验证Verilog HDL语法正确性和计算该设计所需FPGA片上资源总数的重要过程。其中逻辑综合和技术映射的过程就是将Verilog HDL语言描述的寄存器级代码转换映射至具有工艺概念的逻辑器件的过程,也是本文中结合机器学习人工智能进行FPGA资源估算设计过程中重点关注的过程。</p><p>FPGA逻辑综合</p><p><em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从采用硬件描述语言构造的寄存器传输级</em><em class='similar'>(RTL)</em><em class='similar'>电路抽象级模型构造出对应的门级电路网表的过程。</em></p><p><em class='similar'>综合的过程就是将具有较高层级的对集成电路行为或逻辑的描述经由自动化工具转化为较低层次描述的过程,</em><em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>如HLS综合;<em class='similar'>而逻辑综合是从RTL级描述转换到包含有多级触发的逻辑门级的过程,</em>也是在FPGA片上资源估算过程中最关注的步骤,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。</p><p>综合整个ASIC设计流程的中间步骤,<em class='similar'>综合后生成的网表文件,</em><em class='similar'>其本质是基于导线来进行连接的RTL级功能块</em>(如FF、LB和MUX等)所组成。<em class='similar'>而这里一般就需要使用RTL模块构造器来通过用户所注明或进一步指定的目标工艺元件库中构造或从已有库中获取必须的RTL级功能模块。</em>综合产生网表文件后,<em class='similar'>逻辑优化器会读入网表,</em><em class='similar'>并且会按照用户配置的FPGA片上资源要求和时序约束为目标来对网表进行优化。</em>并且,<em class='similar'>这些资源约束或称为面积约束和时序约束也能够指定模块构造器合理的选取或生成RTL级功能块。</em>既然综合器的目标是能将硬件描述语言转换成为底层的门级网表,那么综合器必定有一种映射的机制,能够实现Verilog代码中的某些变量、组件映射成对应的硬件元件,这种映射机制将是后续我们基于机器学习进行资源映射方法研究所重点关注的对象。</p><p>FPGA逻辑综合流程</p><p>①综合首先需要使用RTL代码构成的电路行为级描述进行编译使其转换为GATE级描述;</p><p><em class='similar'>②RTL模块构造器从用户指定或综合器所携带的工艺库中里提取并生成对应的模块;</em></p><p><em class='similar'>③逻辑优化器读取未优化的门级网表,</em><em class='similar'>并按照用户所期望的布局后面积和系统运行各个信号的时序约束,</em><em class='similar'>进行进一步的优化;</em></p><p>由于本文中主要涉及计算RTL模块构造器从工艺库中提取对应的语法及模块进行Technology Mapping映射后所得到的资源,所以当我们聚焦于本文所述的基于机器学习资源估算模型,<em class='similar'>更加关注于Verilog HDL语句是如何转换成实际硬件器件的,</em>如:<em class='similar'>数据类型是如何映射成硬件的,</em><em class='similar'>常量是如何转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。</p><p>1、储值单元的综合原则</p><p>对于FPGA上的实际硬件主要有三种基本的存储数值的单元分别是:线网、锁存器、触发器,分别对应于Verilog语言中的net和reg类型关键字,其综合的映射原则是对net类型的关键字在综合后将映射为FPGA片上的布线资源,而reg类型关键字综合后将根据行为级描述的逻辑可能被综合为片上布线资源、触发器资源或锁存器资源即存储器资源,当reg在always模块中即时序电路逻辑中以临时变量被使用时其综合结果取决于设计的具体逻辑实现[44]。</p><p>2、连续赋值语句的综合原则</p><p>连续赋值语句综合图示</p><p><em class='similar'>连续赋值语句</em>(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中综合器会将连续赋值语句右侧的表达式逻辑进行提取,用于驱动该语句中左侧的net类型资源,<em class='similar'>连续赋值语句的右侧表达式中逻辑功能实现后</em>,<em class='similar'>赋值表达式中信号的变化随机会被传输至赋值线网型数据的取值上</em>[16]。</p><p>3、过程赋值语句的综合原则</p><p><em class='similar'>过程过程赋值语句</em>(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现是:</em><em class='similar'>从赋值语句也就是‘=’或‘&lt;=’的右边提取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em>但是有个语法前提,<em class='similar'>就是用于驱动赋值语句左边的变量是reg类型,</em><em class='similar'>且只有Always语句块中的过程赋值语句才可以被综合器综合,</em><em class='similar'>若出现在initial语句块中将被仅用于仿真。</em><em class='similar'>过程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(Non-blocking Assignment Statement)</em></p><p>阻塞赋值语句综合</p><p>阻塞赋值语句综合图例</p><p><em class='similar'>阻塞赋值语句简而言之就是在一个always语句块中,</em><em class='similar'>语句是从上到下顺序执行,</em>综合时将会在依据赋值语句逻辑原理结合always块的触发器来实现逻辑综合,阻塞赋值语句RTL级描述与电路映射如图2.8所示。</p><p>非阻塞赋值语句综合</p><p>非阻塞赋值语句综合图例</p><p><em class='similar'>非阻塞赋值语句简而言之是在一个always语法块中,</em><em class='similar'>语句是并行执行的,</em>非阻塞赋值语句RTL级描述与电路映射图2.9所示,<em class='similar'>对比上图可以得到对于一个Always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,</em>但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。</p><p>4、逻辑运算的综合原则</p><p>进行逻辑综合时Verilog HDL语法中的逻辑运算符将会被直接转换成对应的基本逻辑门,如与或非、异或门等[43]。</p><p>非阻塞赋值语句综合图例</p><p>5、算术运算符的综合原则:</p><p>在Verilog HDL语句中支持各种算术运算符如、、、等,在进行综合时RTL构造器会将其构造为加法器、减法器、除法器等源语器件。如图2.11所示为加法运算综合后器件映射图。</p><p>算数运算符综合图例</p><p>always语句块的综合原则</p><p>在Verilog HDL设计中用的最多的就是always语句块,always关键字用于描述组合逻辑和时序逻辑,两种逻辑的主要区别在于敏感触发信号是否为时序信号,alway语句块中多包裹其余语法使用,单独使用不具有任何意义。</p><p>if及条件语句的综合原则</p><p>在Verilog HDL语句中的单条if-then语句常表达条件判断行为,故常被综合为MUX数据复选器,若为嵌套组合预计,常会被逻辑综合为收到触发条件控制的纯组合逻辑电路,如图2.12所示。</p><p>if语句综合图例</p><p>case语句的综合原则</p><p>在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。</p><p>case语句综合图例</p><p>10、循环语句的综合</p><p>对于循环语句,在逻辑综合时依据行为级的逻辑描述若其循环体内部逻辑不存在依赖性或关联性,则循环体内部语句将被展开为并行语句后进行逻辑综合,且语句执行先后顺序不会影响到最终的结果,如:For循环语句在逻辑综合后会依据循环体内部的逻辑构成级联的链式组合逻辑电路。</p><p>循环语句综合图例</p><p>11、函数语句的综合</p><p><em class='similar'>在verilog HDL语句中。</em><em class='similar'>function如C++的内联函数一样,</em><em class='similar'>在逻辑综合时,</em>将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。</p><p>函数语句综合图例</p><p>FPGA技术映射</p><p>在综合优化过程中,技术映射是将技术映射作为综合优化的重要组成部分,也是FPGA支持软件工具EDA中最为关键的部分,技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em><em class='similar'>进而最终影响芯片的性能成本,</em><em class='similar'>故而已形成了以面积优化、</em><em class='similar'>时间延迟优化、</em><em class='similar'>功率优化以及面积和延迟同时优化为目标的一系列研究成果。</em></p><p><em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为进行逻辑转换的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>运行速度相当重要。</p><p>工艺映射流程图</p><p>技术映射的本质是将电路所描述的行为逻辑所对应的布尔网络,通过算法与特定FPGA的工艺器件库,将布尔网络转换为对应FPGA最小逻辑单元的过程。其目的是对用户输入的RTL级电路经过逻辑综合后构成的布尔网络通过先进的算法来进行划分,使得原设计中的每一小块电路的逻辑功能可以借由FPGA的一部分CLB来实现。我们可以参考图2.16来进一步对技术映射的流程进行分析。</p><p><em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em></p><p>由图2.16可以看出划分是工艺映射流程的第一个步骤,划分的本质是对已经获得的用以表示电路逻辑的布尔网络依据其所实现的功能逻辑进行分割,划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。</p><p>电设计转化为DAG图</p><p><em class='similar'>逻辑分解是将电路进行逻辑等价的转换,</em><em class='similar'>目的是将复杂的逻辑单元用基本的逻辑形式表达,</em><em class='similar'>以便于以后的匹配和映射</em>[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em></p><p>逻辑划分</p><p><em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。</p><p><em class='similar'>在EDA流程中技术映射的最后一步是对匹配后的树或图结构进行器件的覆盖,</em><em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。<em class='similar'>既依据一定的规则分离出部分子图进行匹配,</em><em class='similar'>并从匹配集中选出库单元,</em><em class='similar'>完成布尔网图到工艺网表的实际映射。</em><em class='similar'>要保证每完成的一组匹配单元,</em><em class='similar'>其每个单元的栅入和其他组的匹配后的单元的栅出进行相连,</em>且每组单元间不存在重叠关系。<em class='similar'>工艺映射的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集,</em>从而满足用户所期望的对面积、<em class='similar'>功耗、</em>速度的需求。<em class='similar'>最后以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。</p><p>器件覆盖</p><p>下面我们通过分析具有代表性的FlowMap的LUT工艺映射原理,借由以下实例对工艺映射流程进行进一步说明。</p><p>无论多么先进的FPGA芯片中其基本资源中其查找表的输入数是既定的,如LUT1、LUT2、LUT3等,基于图2.2可知,查找表可以实现所有输入不大于其本身输入数量的任意逻辑。而FPGA的工艺映射的目的就是要从目标电路的布尔逻辑图中不断划分出输入数在组成该FPGA的最小查找表之内的等效逻辑。</p><p>首先将图2.17中的门级网表转换为图中的DAG有向图的方式来表示。最上层的节点成为主输入,最下层的节点称为主输出,从而可以得到如图2.18所示的映射范围,图2.19所示为在映射范围下进行切分和标注求解的过程及将映射范围的有向图依据主输入及主输出进行逻辑分层,从而标注拓扑序列,进而完成覆盖。其具体步骤伪代码如图2.20所示。</p><p>Mapping算法伪代码</p><p>通过上述计算可以得到每一层的标注为依据上层计算所得出的最小值,从而可以保证使用最浅的逻辑层深度。之后对电路的主输出开始进行器件映射,每映射一个后主输出将发生变更,对所有的主输出依次进行算法映射后,便可得到相对应的查找表及网表图,如21所示。</p><p>对目标电路进行切分和映射方法的历史发展中,有很多根据不同工艺、不同划分或覆盖思路形成的优秀技术映射算法,如:哥伦比亚大学Steve Wilton团队所开发的更倾向于改善逻辑电路映射后功耗的EMAP算法、多伦多大学Stephen Brown团队所开发的应用比较广泛的IMAP算法等[2]。</p><p>机器学习模型与资源估计方法</p><p>本章前两节主要叙述了关于面向FPGA的逻辑综合与技术映射的基本流程,为本文后续建立基于传统意义上的快速资源估算模型建立基本方法论,而本节将主要介绍再上述两节所述的传统框架基础下,结合机器学习来构建的FPGA设计资源估算的可行性与模型的方法论,包括机器学习与EDA相结合的可行性、随机森林模型,人工神经网络(ANN)及学习模型评估指标。</p><p>机器学习与EDA结合的可行性</p><p><em class='similar'>机器学习是一门多学科交叉领域,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行对应知识体系划分来有效提高学习效率的方法</em>[3]。</p><p>通过机器学习的定义同时结合FPGA设计逻辑综合流程及技术映射原理,我们可以得出对于大型FPGA设计在综合阶段存在的资源估算的时间长的弊端,我们可以使用机器学习方式以Verilog HDL的各种语法及参数的数量及值作为特征,Vivado综合的资源数值为标签,来训练监督学习的回归模型,从而实现快速的资源估算。基于机器学习实现资源估计方法的流程如图<br />机器学习实现RTL级设计资源估算流程</p><p>特征提取方法</p><p>对于机器学习或人工智能而言,模型的选择与好坏并不能最终决定预测精度的上限与下限,最终模型的上限取决于特征与样本的优劣,所以特征对于机器学习模型的学习与预测是相当重要的。</p><p>特征的优化和清洗将对机器学习最终的结果产生较大的影响,所以在选择学习模型与训练器前需要先对样本进行特征提取,对于在RTL级进行资源预测这个命题,我们需要在RTL级提取尽可能多的语法特征,从而确保不会丢失重要特征,虽然会获得很多无关特征或冗余特征,但在进行特征工程及训练模型迭代时可以进一步对特征进行优化,从而保留相关特征和重要特征。</p><p>由于RTL级设计是基于Verilog HDL语言开发的编程语言,所以我们采用尽可能细致的特征提取方法,即将Verilog HDL抽象为数据结构,并结合IEEE 1800所示Verilog语法标准,通过进一步解析数据结构来尽可能全面的提取Verilog HDL语言的语法特征,从而构建在基于2.2节原理的基础上的合理特征集。具体的特征提取算法与特征提取的构建将在错误!未找到引用源。进行详尽的阐述。</p><p>随机森林</p><p><em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em><em class='similar'>这个算法是多学习集成学习的典型模型。</em></p><p>Bagging</p><p><em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em><em class='similar'>它基于自主采样法,</em><em class='similar'>即给定一个数据集拥有固定m个数据样本,</em><em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em><em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em><em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样机,</em><em class='similar'>初始训练集中有的样本在采样集中多次出现,</em><em class='similar'>有的则从未出现。</em>由式(2-1)<em class='similar'>可知采样集中将会出现训练集中约三分之二的数据。</em></p><p>(2-1)</p><p><em class='similar'>通过上述算法可以采样出个含个训练样本的采样数据集,</em><em class='similar'>随后基于每个采样集训练出对应的弱学习器,</em><em class='similar'>再通过将这些基学习器的学习结果进行进一步的结合。</em>从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的计算复杂度为,</em>则通过上述方法可知该算法的复杂度约为,考虑到采样与决策时的时间复杂度很小,<em class='similar'>而通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em><em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、<em class='similar'>较高学习效率的集成学习算法。</em></p><p><em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>由于Bagging学习算法的主要关注点在于如何降低方差,</em><em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显。</em>Bagging的算法伪代码如图2.22所示。</p><p>Bagging算法伪代码</p><p>决策树</p><p><em class='similar'>决策树是一种常见的机器学习算法,</em><em class='similar'>决策树学习的目的是为了构造具有泛化能力强,</em><em class='similar'>处理未见示例能力强的二叉树,</em><em class='similar'>该树能够对泛化样本进行正确且合理的决策,</em><em class='similar'>其基本流程遵循简单且直观的&quot;分而治之&quot;策略,</em><em class='similar'>决策树学习基本算法伪代码实现如图2.23所示。</em></p><p>决策树学习基本算法</p><p>显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。<em class='similar'>在决策树的决策过程中我们更关心的肯定是如何划分,</em><em class='similar'>或者说如何选择最优划分属性,</em><em class='similar'>即结点的&quot;纯度&quot;,</em>决策树中衡量一个结点的纯度的高低有以下几类指标:</p><p>信息熵公式:</p><p>(2-2)</p><p>增益率公式:</p><p>(2-3)</p><p>基尼指数:</p><p>(2-4)</p><p>随机森林</p><p><em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器(决策树)所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入随机属性选择,</em><em class='similar'>并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em><em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分</em>[30]。</p><p>随机森林在多种多样的决策与回归任务中展现了超乎预期的强大的性能,<em class='similar'>随机森林通过增加随机属性的选择实现了对Bagging做微小的改动,</em><em class='similar'>但继承了Bagging中所具有的学习多样性,</em><em class='similar'>随机森林中基学习器的多样性不仅来自样本扰动,</em><em class='similar'>还来自属性扰动,</em><em class='similar'>这就使得最终集成后的强学习器的泛化性能上的提升,</em><em class='similar'>其可通过弱学习器之间差异度的互补来增强。</em></p><p><em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar'>泛化能力强、</em><em class='similar'>鲁棒性强等优势,</em>可有效避免模型过拟合的现象出现,适用于高维数据的处理。</p><p><em class='similar'>随机森林的回归预测结果是棵决策树的预测结果取均值而得到的,</em>它满足以下定理:</p><p>定理1当时,</p><p>(2-5)</p><p><em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar'>则表示一课决策树的平均泛化误差即</em><br />(2-6)</p><p>定理2对所有随机生成的训练集都有,</p><p>(2-7)</p><p>式(2-7)<em class='similar'>中是在与相互独立的情况下,</em><em class='similar'>残差和的加权相关系数。</em></p><p><em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em><em class='similar'>随机森林回归选择对相关系数进行加权处理。</em><em class='similar'>随机森林</em>的具体算法步骤伪代码可概括为下图2.24所示。</p><p>随机森林模型算法伪代码</p><p>人工神经网络</p><p><em class='similar'>人工神经网络是深度学习的核心。</em>其在当代用途广泛、<em class='similar'>功能强大且可扩展,</em><em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em><em class='similar'>例如对数十亿张图像进行分类,</em><em class='similar'>例如</em>Googal的Images,<em class='similar'>或者为语音识别服务提供支持</em>[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。</p><p>感知器</p><p>神经元计算图示</p><p><em class='similar'>感知器架构是最为简单的神经网络基础架构之一。</em>结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar'>也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。</p><p>(2-8)</p><p>sgn\\left(z\\right)=-1,&amp;z&lt;00,&amp;z=0+1,&amp;z&gt;0(2-9)</p><p>感知器是一层阈值逻辑单元单元所构成的,每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元时,</em><em class='similar'>该层通常称为全连接层。</em><em class='similar'>所有输入神经元形成输入层,</em>用以与感知器的输入数据互联。同时,<em class='similar'>每一个神经元会特别增加一个额外的偏置特征,</em><em class='similar'>并通过偏置神经元</em><em class='similar'>(一种特殊类型的神经元)</em><em class='similar'>来保证其输出始终为1。</em><em class='similar'>具有,</em><em class='similar'>作为输入的感知器如图2.26所示。</em><em class='similar'>该感知器可以将输入的数据同时借由输入层来分为三个不同的二进制类,</em>并作为输出。</p><p>感知器结构图示</p><p>借助线性代数的数学关系,通过公式(2-10)可以计算出当存在多个输入时计算全连接层感知机的输出结果,且计算是高效的。</p><p>(2-10)</p><p><em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,期间的权重将会增大。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em>同时每个训练样本进行预测。<em class='similar'>从而对产生错误预测的神经元的权重进行调整,</em>如增大,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。</p><p>(2-11)</p><p>多层感知机</p><p><em class='similar'>多层感知器也称深度人工神经网络,</em>则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU即隐藏层和一个TLU的最后一层即输出层组成。</em><em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em><em class='similar'>每一层都拥有一个偏置神经元并全连接下一层神经元,</em><em class='similar'>除输出层外。</em></p><p>多层感知机结构图示</p><p><em class='similar'>常见的人工神经网络结构是如图2.27所示的多层级结构,</em><em class='similar'>每层的单个神经元与下一层神经元之间实现全连接,</em><em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em><em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em><em class='similar'>最终结果由输出层输出预测结果;</em>换句话说,<em class='similar'>输入层只接受输入而不对输入样本进行任何处理,</em><em class='similar'>隐藏层和输出层包含函数神经元。</em><em class='similar'>神经网络的学习过程是根据训练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em><em class='similar'>神经网络所学习的主要内容包含在连接权重和阈值中。</em></p><p>当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,分为前向传播和后向传播。反向传播是目前使用的学习算法。<em class='similar'>使用有效的技术自动计算此级别。</em>只穿越电平两次,<em class='similar'>即一前一后传播算法可以计算每个模型参数的网络误差梯度。</em><em class='similar'>换句话说,</em><em class='similar'>可以用以学习如何修复每个连接权重和每个偏移项错误。</em>当找到这些梯度时,<em class='similar'>常规梯度会执行下降步骤,</em>直到梯度难以拟合,<em class='similar'>然后它会更新整个过程。</em>常见的DNN网络超参数与典型值如表2.1所示,后续基于机器学习建立快速资源估算模型会进一步对超参数进行调整及介绍。</p><p>典型多层感知机架构</p><p>机器学习性能评估指标</p><p>评价模型性能的指标有很多种,需要我们根据特定的任务选择合适的评价指标。不恰当的评价指标不仅无法模型进行评估,反而会造成误导,得出错误的结论。一个评价指标可以展现模型在某一方面的能力,所以一般情况下,需要构造多个评价指标,来对模型进行全面的分析。针对大型RTL设计的FPGA资源估算模型的需求分析,其为回归问题模型,对于回归问题模型的特点有如下几种模型性能评估指标:</p><p>均方误差</p><p>均方误差是在回归问题的机器学习模型中常见的衡量泛化误差的学习指标,均方误差是反映样本真实值与实际预测值之间差异程度的度量[20]。评价点估计的常用标准即均方误差均方误差公式如(2-12)所示。</p><p>(2-12)</p><p>式(2-11)说明,<em class='similar'>均方误差由点估计的方差与偏差的和的平方两部分组成。</em></p><p>均方根误差</p><p><em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习的精密度。</em><em class='similar'>这也是均方根误差在工程领域被广泛使用作为评估指标的原因。</em>因此,均方根误差是常用来度量预测值同真实值之间的偏差,其计算过程公式如(2-13)所示。</p><p>(2-13)</p><p>3、R-Squared</p><p>是统计学里常用的统计量,的名字是coefficient of determination,另一个名字是Nash-Sutcliffe model efficiency coefficient。给定一系列真值和对应的预测值,的定义如公式(2-13)所示。</p><p>(2-14)</p><p>的含义是,预测值解释了变量的方差的比例差距,其度量的是预测值对于实际值的拟合程度。进一步理解,假定的方差为1,则使用表示该模型之后,的残差的方差减少了多少。比如等于0.8,则使用该模型之后残差的方差为原始值方差的20%。</p><p>:最理想情况,所有的预测值等于真值。</p><p>:一种可能情况是&quot;简单预测所有值等于平均值&quot;,即所有都等于真实值的平均数。</p><p>:模型预测能力差,比&quot;简单预测所有值等于平均值&quot;的效果还差。这表示可能用了错误模型,或者模型假设不合理。</p><p>的最小值没有下限,因为预测可以任意程度的差。因此,其范围是。</p><p>快速RTL级资源估算模型的设计与实现</p><p>本章将结合对第二章所述的FPGA逻辑综合原理与技术映射原理的研究,使用C++语言设计并构建基于传统框架下的快速资源估算模型,并基于该模型结合第一章所述高密度FPGA原型验证系统所需要解决的关键问题及基本需求增加算法优化与约束项优化,实现符合基本原理与能够解决实际工程问题的快速RTL级设计资源估算模型。</p><p>Verific及相关数据结构</p><p>Verific平台介绍</p><p>Verific Design Automation是Verific公司开发的一款用于解析与构建SystemVerilog、VHDL和UPF的解析器平台,使其客户能够以低成本快速开发高级EDA产品。</p><p>Verific分析创建解析树并执行类型推断以解析标识符的含义。解析器/分析器模块支持整个系统Verilog IEEE 1800(包括Verilog IEEE 1364)、VHDL-IEEE-1076和UPF-IEEE-1801语言。生成的解析树/数据模型附带了大量成熟的C++ API。Verific的解析器平台分发为C++源代码,并在所有32位和64位UNIX、Linux、MAC和Windows操作系统上进行编译。Verific的解析器平台目前在全球许多公司的生产和开发中使用,从EDA初创公司到《财富》500强半导体供应商等。</p><p>我们将使用Verific,并基于Verific生成的语法树来完成后续的模型构建操作,由于Verific具有当前行业认可的Parse和Analyze功能,并基于C++平台实现开发,提供广泛的语法树API作为二次开发的基础,故我们选择在Verific的基础上实现可商业化使用的快速资源估算模型。首先需先对Verific所构造的基本数据结构进行相关了解及分析,从而选择构造合理的数据机构及API进行模型建模实现;Verific主要数据结构分为以下两个主要部分:基于RTL的语法树结构和基于Netlist的Database结构,下文将主要介绍构建资源估算模型使用的主要数据结构。</p><p>Parse-Tree数据结构</p><p>Verific在RTL级别Verilog VHDL的语法树Parser上有丰富的经验,通过对语法进行文本级别的流解析在内存中构建层次树(Hierarchy-Tree)结构用以表述Verilog VHDL语法信息,层次结构树(hier Tree)是设计层次结构的独立于语言的表示形式。设计的层次结构由Verilog语言中使用的模块实例化和生成语句定义。随后在本文档中,我们将此数据结构称为hier树或Parse-Tree。这个层次结构树结构是一个轻量级的静态详细层,位于分析的解析树之上,保存着关于各种设计对象的关键信息。树的每个节点都存储有关它所表示的设计对象的信息,以及该层次结构路径中特定于该设计对象的参数和泛型等常量的值。语法树结构主要由以下几种类结构:</p><p>①VeriTreeNode是所有Verilog树节点元素的基类。因此,它包含行文件信息和在所有解析树节点上的数据信息。其中VeriExpression、VeriIdDef、VeriStatement等中非常常用的派生类,用于对Verilog Design作进一步数据构造,下图为VeriTreeNode的继承示图:</p><p>VeriTreeNode类视图</p><p>②VeriIdDef是标识符定义树节点,是标识符节点的基类。Verilog中声明的任何标识符都将成为VeriIdDef结构类。下图为VeriIdDef的类关系视图,其中VeriidDef的继承类VeriModuleID、VeriOperatorID、VeriInstID等为进一步对Verilog语言语法的描述类。</p><p>③VeriExpression是所有Verilog表达式解析树节点的基类。其继承类用于描述包括常量、名称引用、运算符以及出现在实例化端口关联列表和模块端口列表中的端口关联信息等。下图为VeriExpression的类关系视图。</p><p>④VeriStatement是所有Verilog statement 节点的基类,包括所有Always语句块等语法</p><p>⑤VeriModule位于任何Verilog解析树的顶部,是模块节点的基类。它以解析树的形式表示一个完整的Verilog模块。VeriModules存储在静态哈希表中,该哈希表表示已分析的所有Verilog模块。</p><p>VeriModule类视图</p><p>上述5种数据结构为Verific中最基本的基类,所有语法树的语法表述及存储均可由其中一种进行表述,在本文中所有RTL代码的语法将会使用上述类进行语法树处理及构造,从而获取正确的设计层级及内容。</p><p>Netlist数据结构</p><p>由于传统技术映射是在网表级的基础上通过器件库使用图划分算法,将网表节点映射至对应的器件,所以为构建基于传统方法的快速资源估算模型,也需要使用Verific的Netlist数据结构来实现,Verific Netlist Database数据结构如下:</p><p>Verific-Netlist-DataBase数据结构图</p><p>①Libset是一个单例对象(只实例化一次的对象),它包含(char*)lib_name到Library*映射的映射。Libset没有所有者,因此被视为全局对象;</p><p>②Library是Libset拥有的对象,它包含所有Module模块命名到cell指针映射的映射。库对应于它的VHDL或Verilog等价物。例如,在VHDL中,将用户实体/体系结构对分析到一个名为&quot;user&quot;的库中,然后详细描述解析树,那么将创建一个名为&quot;user&quot;的库对象并将其添加到全局库集中。</p><p>③Cell是库所拥有的对象,它包含Netlist_name到netlist*映射的映射。当处理Verilog时,单元是包含单个网络列表的模块。就VHDL而言,单元是一个可以有多种体系结构(网络表)的实体。</p><p>④网络列表是数据库层次结构中的关键组件。它是一个由单元拥有的对象,包含其他网络列表实例化形式的功能(通过称为网络、端口和端口引用的对象连接在一起)。它还包含一组自身正在实例化的引用(从其他网络列表中)。</p><p>如上图所示,基本数据结构为LibSet用以存储所有的Library库,Library库为设计网表存储基本数据结构,Cell结构对应为VHDL代码中Module模块,每个Cell尤其仅有一个对应的Netlist结构,Netlist结构用以存储该Module所有互联信息及实例化信息,如:Port、Net、Instance,包括Net位宽、方向等。</p><p>基于Verific的上述数据结构以及相关的API,使得我们可以在后续基于C++语言实现传统快速资源估算模型提供基本数据基础。</p><p>资源估算模型流程与构造</p><p>本节将主要介绍使用C++构建基于传统框架下的快速资源估���模型的算法分析及具体实现步骤。</p><p>资源估算模型流程设计</p><p>基于第二章节所述逻辑综合及资源映射原理,我们对模型的构建做出进一步的分析,模型输入为RTL级设计文件即Verilog VHDL文件,模型输出为该设计所需FPGA资源数目,其中对于面向大型RTL设计Partition中所需的最重要的关键的资源为FF及LUT,文件流如下图所示。</p><p>快速资源估算模型文件流</p><p>基于Technology Mapping的原理进一步分析,为实现传统框架下较为准确的资源估算,则需要将输入的原始设计从RTL级代码转换至Netlist级别才能实现进一步的Technology Mapping,但是由于获取最直接的网表解构就需要使用综合器对RTL设计进行综合,通过前面对综合原理的分析,可知道综合主要分为以下几步,即RTL设计细化,Flatten,综合优化,综合约束,技术映射等几个步骤,但由于需要面向大型FPGA设计,综合器耗时太长,所以我们选择通过使用Verific来对设计进行静态细化及初步细化,使RTL级设计在内存中转变为伪网表,通过在内存中对伪网表进行Flatten操作,将伪网表所有的层级结构UnGroup至顶层,从而实现与基本综合器相对应的操作的快速版本,对Flatten至顶层的设计依据TechMapping原理使用已经获得的器件库进行器件匹配,基于本节分析及初步设计结果,着手使用Verific对传统资源估算进行进一步分析及模型构建,具体流程如图所示,关键操作及相关原理将在下文着重叙述。</p><p>快速资源估算模型流程图示</p><p>资源估算模型构造实现</p><p>我们以上一节中对快速资源估算模型分析的流程进行进一步的分析,同时进行实现:</p><p>1、Parse-Design操作</p><p>通过将原始设计使用Verific的Parser接口进行设计读入,由于需要商业使用,需要考虑多种用户输入情况,首先考虑常见的通过Filelist进行读入,并支持对于文件正确性校验及报错,并支持输入文件包括.sv\\.v\\.vh\\.svh等多种文件输入,同时支持通过路径进行设计输入,并对设计进行正确性校验,如图3.6所示。</p><p>快速资源估算模型Parse-Design流程</p><p>2、Elaborate操作</p><p>通过对上一步骤获得的完整输入设计的Parse-Tree进行Elaborate,从而获得对应设计的由Verific GTec Cell构成的伪Netlist的设计文件,Elaborate后的设计语法依旧满足Verilog HDL的语法信息,RTL Elaborate会使用门级的网表来表示之的RTL级代码。Elaborate会将RTL级代码进行逻辑展开,获得具有符合电路逻辑的门级视图网络和门级逻辑电路的VerilogHDL表述,该步骤为FPGA设计流程中综合的前置步骤,为下一步进行优化的技术映射做好基础工作,Elaborate操作如图3.10所示。</p><p>RTL Elaborate操作图示</p><p>3、Flatten操作</p><p>在步骤2的基础上,我们将对设计进行Flatten操作,Flatten操作顾名思义是将现有包含层级关系的层级设计进行展平操作,也可以称为ungroup操作,参考下图样例可以更好的说明Flatten操作对于设计的操作,如图3.8所示。</p><p>Flatten操作电路图示</p><p>Flatten操作树结构图示</p><p>在FPGA设计综合流程中Flatten操作会将一些层次树底层的Module、逻辑提升至顶层,将可以合并的逻辑进行合并,同时将一些冗余的互联Net进行优化,为进步一的综合优化和器件映射做好准备,因为对于FPGA或者数字集成电路而言,它是没有层次的概念的,所以Flatten操作可以更好的让寄存器级设计与物理器件之间建立更进一步的联系。</p><p>4、基本器件库</p><p>由于我们中所设计的快速资源估算模型是面向Xilinx的FPGA的模型,所使用的基本器件库是Xilinx公司Virtex系列器件库,其中主要包含的为基本逻辑单元即CLB,具体为MUX、LUT1~6、各形式的触发器即FF、FDR等,一些IP器件由于知识产权等问题无法直接使用,如图3.10以LUT、FF、MUX为例进行说明。</p><p>RTL级基本器件库</p><p>5、Technology Mapping</p><p>对步骤4中完成Flatten后的网表文件进行Technology Mapping,具体原理如2.2.1节中所述,具体操作为:将Flatten后的Netlist网表文件依据设计逻辑对将步骤4中的器件库的器件进行匹配和覆盖使用算法为EMAP,匹配后的网表将不存在基本的门级逻辑(布尔逻辑),而将会被器件库中的基本逻辑器件所替代,如MUX、D-FLIP-FLOP触发器、4-输入LUT器件等。</p><p>6、估算结果展示</p><p>下图为以上述思路构建的快速资源估算模型的初步估算结果,如图图3.11可以获得输入的RTL设计所使用的FPGA片上LUT1-6、BUFG、FF等器件资源数量。</p><p>快速资源估算模型计算结果</p><p>快速资源估算模型优化</p><p>通过图3.11与Vivado综合后结果对比,可以发现,在无优化的情况下仅对设计进行细化及基本技术映射虽然可以得到基本的资源,且在速度上得到了有效的提升,但是存在较大的误差,通过分析Xilinx的综合器Vivado细节及TechMapping,我们可以知道在与FPGA板载器件进行基本逻辑单元及触发器映射时存在优化项,可以理解为约束项,如:面积约束、功耗约束、时序约束、逻辑门约束等多种约束;结合面向大型RTL设计分割流程的实际需求,增加以下优化方案。</p><p>BottomToUP算法的设计与实现</p><p>由于使用Verific进行Elaborate处理及Flatten后无法得到每个层级对应的资源数量,且对整个设计进行Elaborate及Flatten所花费的时间较高,同时由于该资源估算模型面向RTLPartition进行使用,所以需要每个层级每个Inst的资源用于确认RTLPartition时正确的分割边界,所以我们从Verilog HDL与FPGA片上资源映射关系角度出发,在不考虑优化的前提下,每个Module的资源是由其所例化的Instance对应的Module的资源与该Module本身的胶水逻辑所组成,如下图样例所示,红框标注分别为例化Instance与胶水逻辑。</p><p>RTL代码中的Glue Logic和Instance</p><p>以上述分析为出发点,我们希望可以结合Verilog HDL设计的结构化建模方式,以该方式为参考,能够更加准确,更加快速的计算每个Module和Instance节点的资源,我们以RTL设计及计算资源所需数据为出发,设计以下数据机构用于存储每个节点的资源,如图3.13所示。</p><p>BottomToUp算法数据结构</p><p>RTL设计树结构示意图</p><p>通过以上述数据结构,用以实现Bottom to up的计算方式,通过对RTL设计树层次如图3.14所示,进行树遍历算法及递归算法构造存储当前Parse_tree对应的树结构及查找表,该查找表用以存储已被计算过的Module的资源,同时对多个不同参数例化的Module分别计算资源同时通过匹配算法将树结构上的节点与已计算资源节点进行匹配,本算法可以最大程度的减少重复计算,同时为减少网表结构带来的peak memory过大问题,每次计算都将使用不同的库进行技术映射,并在计算完毕后进行释放。另外由于本算法设计数据结构从资源复用角度出发,在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而加快计算速度。算法伪代码如图3.15所示。</p><p>BottomToUp算法伪代码</p><p>通过上图所示算法,在3.2节实现的快速资源估算模型的基础实现快速层次资源估算,输入为RTL级Verilog HDL设计,输出为该设计每个层级所使用的资源数量及相对应的树结构层次,若在输入时提供FPGA型号和资源,程序也会评估该设计所需要的FPGA的数量。如图3.16所示。</p><p>快速资源估算执行图示</p><p>可复用估算结果的Json文件</p><p>优化后快速资源估算模型输出报告</p><p>图3.18中为开源设计openrisc经过该快速资源估算模型新增的Bottom-to-Up算法计算所获得资源数量与每个Hierarchy对应的资源数量,从图中我们可以看到经过资源计算后设计的具体层级,每个层级前标注序号为该Instance节点名称及对应的树层级结构层次,节点后中括号内分别为RTLPartition流程所关注的十种资源数目,同时可以获得在给定的FPGA_Type、FPGA资源阈值下该设计所需的FPGA数量并且会输出如图3.17所示的一份Json文件用以存储每个Module对应的资源,便于复用。</p><p>经过同Vivado进行对比后发现,虽然该算法已经很好的解决了资源估算的速度问题,但是在准确度上还存在可优化空间及约束项,经过对逻辑综合与技术映射技术的进一步分析我们将在Elaborate后增加优化策略与约束策略,从而使估计结果更加符合实际应用场景。</p><p>冗余逻辑优化及合并</p><p>在进行逻辑综合和技术映射时,EDA综合器会对集成电路的规模、运行速度进行优化。综合的优化过程中会去掉常数输入、悬空输出等信号,还会针对源文件中未连接的输入或具有多个驱动的输出等问题报告错误或者警告[16]。若EDA工具发现设计存在部分缺陷如非关键输出悬空能,通常EDA工具都将依据自己的方式进行优化修复,但多所带的结果是可能优化结果并不满足设计者的初衷。综合常见的优化过程还对逻辑进行组合置换,从而进一步减少集成电路所需FPGA资源、功耗、并尽可能提升系统运行速度与减少阻塞。</p><p>通过前述步骤得到的快速资源估算模型,虽然已经可以得到资源的结果,同时若使用Bottom-to-Up的算法可以得到每个层级的资源结果,但是我们通过第二章的综合和技术映射的原理可以得知,在实际的综合和技术映射过程中,是对设计进行了大量的优化和处理的操作,所以如果我们不对当前的快速资源估算模型进行优化和约束,那么该模型的结果是不可用,没有价值和意义的。</p><p>所以我们为使我们资源估算的精确度更加高,所以需要符合逻辑综合和优化的过程,通过分析逻辑综合流程,在逻辑综合的工程中会对冗余逻辑进行优化,比如一些复选器或单纯的数值传递等非有效逻辑进行合并。</p><p>快速资源模型将会查找并发现没有负载或被禁用的逻辑(例如,当选择线保持高位时,驱动多路复用器上第一个选择的逻辑),并假设消耗了零资源。一旦找到一个这样的元件,所有驱动逻辑也会被移除,同时采取预防措施确保其他逻辑也不会被该元件驱动。</p><p>最小面积优化方法</p><p>通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、<em class='similar'>减少硬件资源消耗等,</em>所以在快速资源估算模型中也需加入相关优化项,<em class='similar'>来对RTL设计进行进一步的优化,</em>从而使得资源估算模型的结果更加的精确。</p><p>首先我们考虑资源共享,即在互斥条件下共享算术逻辑单元,主要有关系运算、加法运算、减法运算、除法运算等。</p><p>LUT-5 Base FPGA结构图示</p><p>根据FPGA的结构,可以知道不同系列、不同世代、不同型号的FPGA在逻辑单元的组成上是有很大区别的,比如对于赛灵思的VU440,其基本逻辑单元即CLB单元是以LUT5为基础,同理也有以LUT1、LUT2、LUT3、LUT4、LUT6为基础,支持至最高为LUT8的FPGA,由于LUT1~8之间存在换算关系,LUT的本质就是如图3.18的2进制查找表,故而2个LUT1可以合并组成为一个LUT2,同理以LUT5为Base的FPGA,可以使用多个LUT5来组成LUT6等高维度资源,从而有效的是缩小FPGA布线后使用的面积即器件使用的数量。</p><p>4输入查找表真值表</p><p>在进行资源共享优化时我们遵循以下原则:</p><p>运算符和操作数均相同,则一定可以贡献逻辑单元。</p><p>对于具有相同运算符的表达式,且操作数或操作表达式相同时,为实现逻辑共享我们可以加入一个多路复用开关来完成。</p><p><em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em><em class='similar'>可以共享逻辑单元</em>[16]。</p><p><em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em><em class='similar'>可以共享逻辑单元。</em></p><p>对于运算符不相同的运算表达式,若其有且仅有一个公共的操作数,则为实现逻辑共享可以引入MUX来实现。</p><p><em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em><em class='similar'>从而实现逻辑单元的共享。</em></p><p>除去资源共享优化外,本文基于对RTL代码的分析,通过对公共子表达式增加逻辑优化合并,使并借由数据结构来保存公共部分的运算结果数值,这样在模块内部后续使用相同表达式的地方则可以直接调用该值。</p><p>所以基于以上原理,在进行冗余逻辑优化和合并的基础上,可以增加最小面积优化方法,在资源估算时,以LUT4为base进行初步资源估算,在当前基础上,以LUT4之间的优化方法,我们可以以高维度LUT为Base的FPGA作为方向,将多个LUT在合理的范围内进行合并,合理的范围即在一个Module内的组合逻辑或连续赋值、阻塞赋值、非阻塞赋值等LUT合并至LUT6,从而实现以最小面积为目标的优化策略。</p><p>资源估算模型将找到具有共同输入的共同元素类型并假设共享资源。例如,如果找到两个加法器,均为 A+B,则假定加法器逻辑是共享的。对合并的元素数量设置限制,以限制扇出。同时模型将查找将使用LUT实现的二进制逻辑函数序列,并根据树的唯一输入数和输出数对其进行优化。</p><p>结果分析</p><p>快速资源估算模型无优化结果对比</p><p>快速资源估算模型增加优化结果对比</p><p>表3.1、表3.2分别为快速资源估算模型在5个基本Case下,未增加优化项与优化算法的估算结果与增加优化项及优化算法后的准确值与估算时间的对比,通过分析我们可以发现在不增加优化项及优化算法的情况下在使用资源量即电路逻辑复杂度较低的情况下准确度较好,但随着设计规模的增加电路复杂度的上升其预测资源准确度越来越差,由于对电路的过度精细化导致在面对设计规模较大的电路时由于内存原因导致无法得到估算结果,但是在时间性能上已经较综合布局得到较高的提升最小的设计时间提升约15倍,随着设计负责度的增加,在时间性能提升越明显,同时对比优化后结果可以得出首先由于设计规模较大无法计算的资源已经可以得到结果,且各个Case的估算结果准确度较好,LUT资源估算平均准确度达90.11%,FF资源估算平均准确度达88%,并且在时间性能上进一步提升,较未优化模型提升2倍,已满足在高密度FPGA原型验证系统划分阶段中对超大型设计进行快速资源估算并借以确定划分边界的实际需求。</p><p>本章小结</p><p>本章详细叙述了,在以第二章理论为基础的前提下,使用Verific基础数据结构基于C++语言构建面向高密度FPGA原型验证系统RTLPartition的FPGA设计的快速资源估算模型,同时提供多种优化及约束方案,对模型进行约束及二次优化,使得对设计在FPGA上的资源估算精确度达90%以上,并得到了较好的时间性能,在超过百亿门的电路估算时间仅需几十分钟,时间较完整的综合流程缩短200%以上,同时快速资源估算模型为支持高密度FPGA原型验证系统,为用户提供多种额外功能,如用户指定资源输入、对应不同FPGA的使用数量评估等作为商业软件对用户的友好性功能。同时也为后续基于人工智能的FPGA���源估算模型提供思路及开发基础。</p><p>基于机器学习的RTL级资源估算</p><p>对于机器学习项目,决定预测准确度的上限并不取决于模型的算法的高深或模型算法的先进性,而决定模型预测上限的是特征的全面性、准确性和样本。所以特征的选择和提取尤为重要。</p><p>本章主要阐述基于第二章中提到特征提取方法,使用Verific的Parse-tree来对输入的RTL设计进行二次解析并提取所需要的信息作为后续机器学习的输入特征。构建基于C++的自动化特征提取器并对样本数据构建数据集,并对数据集样本进行分析,洞见特征数据间的数学联系及统计学关系,并尝试多种机器学习回归模型,选择表现较好模型进行进一步训练。</p><p>Verilog HDL 语法特征分析</p><p>基于前一步骤实现的基于Verific的快速资源估算建模所获取的资源之间的映射关系,优化技巧等理论及实践基础,我们发现对于综合后技术映射的基本逻辑就是将Verilog HDL预计合理的使用FPGA上的器件来实现Verilog代码中所需要的数字逻辑,所以我们可以分析将Verilog HDL设计语言和器件间的典型关系,提取VerilogHDL中的语法特征,通过这些特征来构建机器学习模型,从而实现更加快速精确的大型FPGA设计所需要的FPGA片上资源数量,首先我们基于IEEE1801所给出的Verilog的技术文档,对VerilogHDL进行全面特征提取。</p><p>通过对Verilog HDL基本语法分析结合IEEE Verilog 标准、RTL样例设计,拟提取Verlog HDL语法特征对应关键字如表4.1所示。</p><p>Verilog主要语法类型与关键字</p><p>语法类型语法关键字</p><p>端口 Input Output Inout</p><p>线网 Wire Reg</p><p><em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符+-*/^|&amp;</em></p><p>连续赋值语句 Assign</p><p>Always过程块 Always</p><p>过程赋值语句=&lt;=</p><p>条件表达式 If else then</p><p>条件分支语句 case</p><p>循环语句 For While Repeat</p><p>函数语句 Function</p><p>RTL级设计特征提取方法设计</p><p>首先我们通过第二章的综合及技术映射原理已知Verilog HDL语句的综合原则及对应的FPGA片上器件的映射规则,所以我们基于以上原理,借由Verific的Parse-Tree对当前读入的Verilog设计进行二次解析,具体流程图如下:</p><p>特征提取器结构图</p><p>通过解析Verific读入设计时构建的Parse-tree对所有Verific进行提取主要包含以下所述特征。</p><p>(1)端口信息特征提取</p><p>首先对于FPGA上的IO资源是通过RTL中Module的端口映射而来,所以我们首先提取Module的端口信息,对于一个Module的端口信息在Verific的Parse-Tree数据结构中存储在VeriModule类下的VeriDataDeclar类下面,所以我们通过重载Verific提供的Visitor虚函数来获取端口数据类型指针,通过解析VeriDataDeclar下的数据解析出端口数量包括Input、Output、Inout,同时通过解析VeriDataDeclar下的VeriDatatype数据类型,获取对应的端口位宽,并存储为RTL_InputWidth、RTL_OutputWidth、RTL_InoutWidth特征,实现对Module端口特征信息的提取。</p><p>(2)线网信息特征提取</p><p>Verilog VHDL线网类型语法在RTL级描述中也是很重要的存在,基于第二章中描述的综合及技术映射理论可知,线网通常用于赋值语句左右,或被映射为寄存器结构,所以获取Verilog设计的线网类数据信息对于机器学习模型的训练而言应相对重要。</p><p>对于线网结构在Verilog HDL语法中主要体现为Wire和Reg关键字,在Verific的Parse-Tree数据结构中线网结构被构造为VeriNetDecl类进行存储,我们通过重载Visitor基类来获取Module下的全部的VeriNetDecl类,通过解析可获得Reg和Wire关键字的数量以及对应的信号位宽,分别存储为特征RTL_Reg、RTL_RegWidth、RTL_Wire、RTL_WireWidth特征,从而实现对Module线网信息的特征提取。</p><p>(3)操作符及运算表达式特征提取</p><p>在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行联结运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。</p><p>Verilog操作符图示</p><p>首先已知逻辑运算符、算术运算符和关系运算符等操作符在进行逻辑综合后会被综合器转换为对应的逻辑运算门,所以符号表达式的特征信息也是关键特征,所以我们通过如下方式对表达式进行解析从而获得,首先整个表达式在Verific的Parse-tree中被存储在VeriExpression类下,通过解析VeriExpression类获得表达式存储类VeriOpenbinery类,通过判断VeriOpenbinery类下的Type类型获取运算符类型,如OR、AND、PLUS、AlTERSHIFT等,并存储至特征Hash表中,通过获取运算符左右两侧表达式,通过递归算法递归解析剩余运算符两次表达式,从而获取运算符两次表达式位宽,并存储至特征Hash表中,递归完毕后既可以完成对运算符表达式的特征提取,算法伪代码如图4.3所示。</p><p>运算符特征提取伪代码</p><p>(4)连续赋值语句特征提取</p><p>连续赋值语句是在Verilog HDL语法中比较重要且常用的语句,常被综合为FF及LUT等关键器件,所以连续赋值语句的特征提取尤为重要,由于连续赋值语句常包含组合或嵌套式语法,通过IEEE标准中对Verilog连续赋值语句的定义可知,连续赋值语句左侧只能为线网结构即wire类型,而右侧可以包含逻辑运算符(&amp;、|、~)、算术运算符(+、-、*、/)、选择表达式(A?B:C)等多种语法嵌套组合。</p><p>由于需要解析嵌套语法且种类较多,所以采用递归算法对表达式进行解析,首先根据=号左右获取AssignStatement,由于左侧只能为线网结构,所以将表达式左侧存储为AssignRightWidth用以存储assign语句左侧位宽,右侧进一步根据符号进行拆分,若存在逻辑运算符则存储逻辑运算符数量如AND(&amp;)、or(&amp;)等符号特征,并存储数量,则先以符号进行左右两侧拆分,若存在括号,则先进行括号匹配,对提取出的表达式进行进一步递归解析,同时计算符号两侧位宽,并保存为ANDRIGHTWIDTH、ANDLEFTWIDTH等;若表达式右侧为选择表达式,则存储选择表达式数量为QUESTIONCOLON特征,进一步解析该选择表达式分别提取if条件并存储为QUESTIONCOLONIF特征,若if条件存在逻辑或算术运算同理递归调用进行解析并存储至对应特征,else则存储至QUESTIONCOLONELSE特征,同时解析else的逻辑与算术运算,同时存储至对应特征中,then语句则存储至QUESTIONCOLONTHEN特征中,同时递归解析Then语句中的逻辑与算术运算并存储至对应的特征统计中,算法伪代码如图4.4所示。</p><p>连续赋值语句特征提取伪代码</p><p>(5)过程结构体特征提取</p><p><em class='similar'>Verilog HDL语法中的过程机构体,</em><em class='similar'>都是由关键字initial或always和其块内内容语句所组成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。</p><p>Verilog Always过程块语法格式</p><p>由于Always过程块的触发是根据敏感事件列表中的变量是否可以被触发来控制,敏感事件列表通常可有1个或多个表达式来组成。</p><p>所以对于Always块的特征信息的提取,主要分为三部分:</p><p>获取Always语法块数量;</p><p>获取Always语法块敏感事件列表、并解析宽度;</p><p>获取Always语法块内容(由于语法块中包含语法种类较多,将在后续着重叙述);</p><p>在Verific Parse-tree中always块构造存储在VeriAlwaysSatement类中,通过重载Visitor函数,来获取Parse-Tree中的Always结构体的数量,通过统计数量可以获得RTL设计中Always块的数量,通过解析获取到的VeriAlwaysStatement结构中的VeriEventExpress类获取Always的敏感事件列表,由于敏感事件列表中多由表达式构成,所以通过使用前述0、0所提及的递归方法来获取敏感事件表达式的宽度,并存储至特征AlwaysEventWidth中;从而完成对Always结构体数量与Always结构敏感事件列表的特征信息提取。</p><p>Always特征提取伪代码|</p><p>(6)过程赋值语句特征提取</p><p>Verilog过程赋值语句语法格式</p><p><em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、阻塞型赋值语句左右线网数量BlockAssignRightNum、BlockAssignLeftNum;非阻塞型赋值赋值语句NonBlockAssign、非阻塞型赋值语句左右位宽NonBlockAssignRightWidth、NonBlockAssignLeftWidth,其中符号表达式部分,将被存储在对应的符号表达式特征中提取过程与方法思路与连续赋值语句一致,可参见图4.4。由于过程赋值表达式主要被用于过程块中,所以0中对语法块内容的提取将在该部分体现。</p><p>(7)If-else条件分支语句特征提取</p><p>条件分支语句对于硬件的行为描述及其重要,且常被综合为FF和LUT器件,是一种高级语言的抽象表达,故在特征信息提取时,也是重点关注的语法;</p><p>If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em><em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。</p><p>通过Verilog HDL语法可知,<em class='similar'>if-else条件分支语句的作用是复选,</em><em class='similar'>即通过是否满足给定的判断条件来判断下一步电路需要执行的操作或逻辑。</em>其主要语法形式如图4.8所示。</p><p>Verilog If条件语句语法格式</p><p>由于if-else条件分支语句常用语Always过程块中,所以我们在0模块的基础上对if-else条件分支语句进行解析,在Verific-Parse-tree中,条件分支语句被存储为VeriQuestionColon类中,通过解析该类可获得if-else条件语句块数量特征Questioncolon,,由于if-else条件语句存在多条件或多if-else条件嵌套组成,所以采用递归方式分别解析if条件、if条件内容、else分支内容、then条件内容,由于if条件内容为条件表达式,所以可以采用0模块进行解析,并存储特征QUESTIONCOLONIF;if条件内容为赋值表达式,所以可以使用0中对过程赋值语句的提取方法来提取,并存储至对应的过程赋值特征中,同理可对Else内容块及Then内容块解析,并提取特征QUESTIONCOLONELSE、QUESTIONCOLONTHEN。从而完成对if-else条件分支语句的特征提取。</p><p>If条件语句特征提取伪代码</p><p>(8)Case条件分支语句特征提取</p><p>基于0中对Verilog HLD分支控制语句的分析可知,case分支控制语句与if-else语句在功能上大同小异,均是实现分支控制选择,但Case语句可以用较少的语法表达提供较多的分支选择,在实际开发中多用于表述状态机的行为级描述,其在实现多路选择控制上更加简便和直观,其通常用于描述译码或状态机,其语法格式如图4.10所示。</p><p>Verilog Case语句语法格式</p><p>在Verific-Parse-Tree中Case语句块被解析构造存储至VeriCase类中,通过统计该类数量可获得Case数量存储至CaseNum特征,VeriCase类中包括Case控制表达式及分支表到式及分支语句块,模块需要对该类及表达式进行解析,解析控制表达式可用0中所述方法进行递归提取,从而获得控制表达式数量CASECONDITIONNUM、控制表达式位宽CASECONDITIONWIDTH、以及分支数量CASTITEM,由于分支语句块内容多为赋值语句,所以可以使用0中模块进行对应特征提取。Case条件分支语句特征提取伪代码如图4.11所示。</p><p>Case条件分支语句特征提取伪代码</p><p>(9)循环语句特征提取</p><p><em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar'>while、</em>for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。</p><p>Verilog循环语句语法格式</p><p>对于循环语句其逻辑综合后为将循环体按循环次数展开,所以也需要对其提取特定特征,主要分为以下两部分即循环次数,循环体内容。</p><p>对于For循环体,由于其循环次数在for语句条件表达式部分,需要解析出for循环初始值、判断条件、补偿、从而计算出整个循环语句块的循环总次数,for循环语句块在Verific-Parse-tree中被构造为VeriFor结构,其中循环次数部分需要二次解析,通过解析后通过计算初始值-终止值/步长来获得循环次数,并存储于特征RTL_ForItem,同时将for结构体数量存储于特征RTL_ForBlock,对于循环体而言,其内容可嵌套if-else、赋值表达式等多种语法,需要使用递归算法对循环体进行解析,使用0、0中所提及的算法进行特征抽取,同时需要对统计的数量再乘以循环体个数,并存储至特征内。</p><p>对于while循环体,由于其判决条件存在与其条件表达式中,所以需要我们通过二次解析条件表达式来获取终止值,同时需要通过判断终止值的变量表达式来计算循环体次数。</p><p>对于repeat循环体,由于repeat循环体的循环次数在其循环次数表达式中,只需对循环次数表达式进行二次解析获得循环次数即可,同理使用上述方法解析循环体特征信息,并存储至对应特征中;</p><p>对于forever循环语句,只需要将Forever语句中的forever循环体内容进行解析即可完成对forever特征的提取,通过以上方式完成对Verilog循环语句的特征提取。</p><p>循环语句特征提取伪代码</p><p>(10)函数语句特征提取</p><p><em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>的语法形式如下,如图4.14所示。</p><p>Verilog HDL Function语法结构</p><p>function函数定义由于只能被定义在Module中,不被允许在Always过程块内调用且函数模块必须具备相应的IO端口用以提供外部互联。</p><p><em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻��。</em><em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;</p><p>在Verific的Parse-tree中Function被构造存储于VeriFunction类中,通过重载Visitor函数获取该RTL设计下的VeriFunction类,并统计其数量并存储至FunctionNum特征中,同时进一步获取Function的内部逻辑结构,同时对内部逻辑使用0、0、0模块中提到的方法对组合逻辑进行提取,并存储至对应的类中。从而完成对Funtcon的特征提取。</p><p>自动化特征提取器的实现</p><p>本节将叙述基于4.2节所述的特征提取方法构造对应的模块,使用C++设计并开发特征提取器程序,特征提取器流程框图如图4.15所示,输入为包含待所有待提取特征设计文件绝对或相对路径的Filelist,输出为包含特征的Fileli。使用C++14语言进行开发测试,从而完成自动多Case特征提取器的实现。</p><p>RTL语法特征提取器流程图</p><p>该自动化特征提取器,基本涵盖VerilogHDL的所有关键语法及在逻辑综合和技术映射中常用的重要语法信息。包括逻辑运算如(or、shift)的位宽信息、算术运算符的位宽信息、连续赋值运算的位宽信息、阻塞及非阻塞赋值运算的位宽信息、高级运算语法的解析如循环体、函数体、判断决策语句等。</p><p>数据集分析</p><p>数据集构建</p><p>由于机器学习本质上是使用大量的样本数据,通过计算机实现的数学模型,来探索并计算输入特征之间的数学关系,从而实现预测,所以需要使用大量的样本数据来构建数据集,所以我们使用300个Verilog HDL设计及其在Xilinx Vivado综合工具上综合后输出的资源利用率结果来作为基础数据集及预测标签。</p><p>VerilogHDL数据集来自GitHub、Opencore等开源网站,基本数据集涉及CPU、加法器、乘法器、GPU、机器学习等多种类型。部分数据集展示如表4.2所示,数据集主要描述描述数据如表4.3所示。</p><p>部分基本数据集数据图示</p><p>数据集基本概要</p><p>数据集分析</p><p>数据可视化</p><p>我们对数据集使用第四章构造的特征提取器进行特征提取后对数据进行可视化,将可以便于我们对数据进行进一步的分析,使用直方图来展示数据,如图4.16所示。</p><p>特征数据集直方图</p><p>相关性分析</p><p><em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.5、表4.6、表4.7所示的各个资源与RTL级特征间的皮尔逊相关系数。</p><p>特征热力图</p><p>RTL级特征与LUT资源的相关性数据</p><p>RTL级特征与FF资源的相关性数据</p><p>RTL级特征与BUFG资源的相关性数据</p><p>RTL级特征与IO资源的相关性数据</p><p>通过分析我们可以得到FPGA片上资源LUT对应的RTL级代码使用4.2节所述的特征提取器所提取的特征之间的相关性关系,我们可以发现较多特征与LUT、FF、BUFG、IO资源具有典型相关性,进一步验证了通过4.2节构造的特征提取器提取的特征基本符合第二章中逻辑综合原理与技术映射原理,证明该特征提取存在合理性,同时相关性分析也为我们下一步特征工程特征降维删除不相关体征提供参考及依据。</p><p>特征工程</p><p>本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。</p><p>特征预处理</p><p>数据清理</p><p>机器学习算法无法在存在缺失值的特征上来进行学习,但每次进行手动数据填补或清洗将带来巨大的人力损耗,所以我们可以基于流水线的方式,通过构造些自动化方法其完成对数据的清洗处理,首先就是对于数据存在缺失的情况,为解决它我们选用三种解决办法:</p><p>放弃这些数据缺失的区域;</p><p>放弃整个属性;</p><p>将确实的特征值或实际值以书记进行填充,比如0或者平均数、中位数等;</p><p>通过对预测目标和特征属性的分析,由于该特征目标为预测准确设计所需FPGA资源数值,所以对于数据存在缺失的数据类型,我们选择放弃这些数据缺失的数据,从而不对预测结果产生影响。</p><p>处理文本和分类属性</p><p>由于特征中可能存在除数值属性外的其余数据表达形式的特征,由于机器学习模型是数学模型,所以我们需要将文本数据属性和具有分类含义的数据属性进行抽象处理:</p><p>使用OrdinalEncoder顺序编码对文本属性进行编码;</p><p>使用OneHotEncoder独热编码对分类属性进行编码;</p><p>特征缩放</p><p>由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em><em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em><em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。</p><p>在机器学习领域最常用的同比例缩放所有属性特征的两种常用方法:</p><p>最小-最大缩放(归一化)</p><p>归一化的操作较为简单,即将样本数值重新处理后使其使其最终范围归于区间[0,1]之间,具体的实现方法是将该样本值减去样本数据集中的最小值比上样本最大值与样本最小值的差。</p><p>标准化方法</p><p>与归一化方法相比,标准化则完全不同,其本质将特征数据值先减去平均值,再与方差相除,进而使得特征数据具备满足单位方差的分布。</p><p>标准化方法与最小-最大缩放的典型区别与其优势便是标准化处理不会将输入的特征数值绑定到特定范围内,但是标准化方法对于异常值的敏感程度或受影响程度将会减小。</p><p>转换流水线</p><p>由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。</p><p>特征预处理流水线</p><p>当数据集经过特征预处理流水线处理后,完成基本特征工程便具备了进入模型进行训练的基础。经特征工程处理后最终输入特征张量为61*218,标签为使用Xilinx公司Vivado软件进行综合及布局布线后获得的准确资源利用率数值。</p><p>模型框架选择</p><p>模型训练开发流程</p><p>机器学习模型训练开发流程如图4.19所示,在完成数据分析,特征分析,特征工程后,我们需要先数据集进行划分选择合适的机器学习模型来进行预测,首先我们不知道选择哪种模型的时候,先对各种回归模型进行初步尝试,指标采用R2和RMSE进行评估,然后选择在初始参数及该特征下表现较好的模型框架进一步对模型参数进行配置。</p><p>我们分别使用线性回归、决策树、SVM向量机、随机森林、深度神经网络来对数据集进行初步的训练,从而选择出两种有前途的特种进行进一步的训练和微调从而实现我们的预测目标。</p><p>首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。</p><p>各模型尝试预测LUT资源结果</p><p>通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em></p><p>机器学习模型训练</p><p><em class='similar'>Keras是具有高度模块化且提供易用API的库的神经网络库。</em><em class='similar'>基于Python语言,</em><em class='similar'>能以TensorFlow 或Theano等为后端运行。</em></p><p>Keras 能够非常快速的搭建网络模型,以便迅速的将使用者的想法进行实现。基于上述目的Keras具有以下特征,首先,其可以在CPU与GPU上无缝的切换运行;第二,拥有非常简洁且友好的调用接口,减小了研究人员的工作量;第三,模块化设计,使用者可以根据需求非常方便的配置自己的模型;第四,支持支持任意的网络架构。基于上述的优势,本文选择 Keras作为机器学习的基本框架。</p><p>机器学习模型训练及调优流程</p><p>随机森林</p><p>本节在错误!未找到引用源。所尝试的随机森林模型的基础上对随机森林参数进行调优,并通过学习率曲线结合随机搜索与网格搜索对参数进行进一步优化,我们将主要调整影响度较大的n_estimators与max_depth参数用于寻找最优模型。RF模型进行训练、调优的流程如图4.21所示。</p><p>LUT资源模型训练</p><p>随机森林预测LUT模型参数搜索学习曲线</p><p>随机森林LUT预测模型学习曲线</p><p>依据图4.21所示对随机森林预测LUT模型进行训练,首先通过多次迭代依据借由随机森林模型提供的特征贡献度对特征进行二次调优,通过放弃贡献度较低的模型来提升模型准确度,最终输入张量为59*220。在完成特征二次调整的基础上对模型进行超参调整,主要参数n_estimators与max_depth的的学习曲线如图4.22所示,验证方法使用10折交叉验证,得到在n_estimators取33与max_depth取12时评价指标RMSE最优。</p><p>FF资源模型训练</p><p>随机森林预测FF特征搜索学习曲线</p><p>随机森林FF预测模型学习曲线</p><p>依据图4.21所示对随机森林预测FF模型进行训练,训练流程与4.7.2.2方法一致,通过迭代训练与参数调优,主要参数n_estimators与max_depth的的学习曲线如图4.24所示,验证方法使用10折交叉验证,得到在n_estimators取89与max_depth取7时评价指标RMSE最优。</p><p>人工神经网络</p><p>预测LUT资源模型训练</p><p>神经网络学习曲线,左图为超参数调优前学习曲线</p><p>依据图4.21所示流程图构建神经网络模型,为探究初始数据集在模型上的表现特征,通过对未进行超参数调整的模型进行1000训练可得如图4.26所示学习曲线,通过分析可发现初步训练模型存在过拟合情况,为解决过拟合情况,通过使用随机森林迭代构建的特征,并调整模型深度与宽度来解决该问题,分别使用随机搜索与网格搜索对模型隐藏层层数、神经元数、学习率及采样数进行调整,均采用5折交叉验证及提前终止回调用于终止搜索裁判,通过参数搜索可得神经网络模型如图4.27所示,神经网络包括输入及输出层、隐藏层共计6层,输入层宽度为59,由于为典型回归模型故输出层宽度为1,隐藏层共4层,对应神经元数分别为59、96、110、58,学习率使用搜索最佳学习率为0.000107,对模型进行200轮次训练。神经网络训练学习曲线如图4.28所示,通过观察学习曲线可以发现通过特征迭代与超参数调优已经解决过拟合问题,且拟合情况较好。</p><p>神经网络模型结构图</p><p>神经网络与LUT模型学习曲线</p><p>预测FF资源模型训练</p><p>依据图4.21所示流程图构建神经网络模型,使用神经网络模型预测FF资源的训练方法与4.7.2.1基本一致,分别通过随机搜索与网格搜索对神经网络模型进行空间搜索,得到如图4.29所示的神经网络结构,隐藏层共3层,对应神经元数分别为53、162、27,学习率使用搜索最佳学习率为0.00013,对模型进行235轮次训练。神经网络学习曲线如图4.30所示,我们可以发现模型训练曲线拟合度较好并未出现明显的过或欠拟合情况。</p><p>神经网络模型结构图</p><p>神经网络模型预测FF资源学习曲线</p><p>结果与分析</p><p>机器学习模型验证结果</p><p>模型评估</p><p>图4.31为机器学习模型在验证集上预测值与基准值的验证结果,X轴为验证集的准确值,Y轴为预测值。图(a)、图(b)分别为使用随机森林模型对LUT资源、FF资源进行预测的验证结果,图(c)、图(d)为人工神经网络模型对LUT资源、FF资源进行预测的验证结果。各模型验证集评估指标如表4.8所示,结合R方评估指标与图4.31我们可以发现机器学习模型在4.3节中构造的特征提取器的基础上得到了较好的拟合结果,验证了对VerilogHDL语言特取的特征对LUT与FF资源的预测有较好的数学描述。但同时也能发现在LUT、FF资源的预测上人工神经网络这种对非线性特征的学习能力较高的模型表现结果优于随机森林,对LUT预测和FF分别的模型确定性系数达73.4%、85.06%,证明模型已经可以较好的描述特征所代表的数学意义,同时均方根误差对LUT、FF资源分别为和。我们在测试数据集的基础上选取了模型评价指标较高的模型的结果进行分析,结果表明,在使用随机森林对RTL级设计RTL特征进行资源估算后与基准值进行对比,达到了31.3391、13.2000误差的精度,得到了一个较为满意的结果,同时由于该模型预测结果面向为高密度原型验证系统,主要应用于RTL-Partition阶段,基于其对FPGA片上资源利用率存在阈值,即常规情况下划分结果平均占用FPGA资源的50%~70%,且在划分系统程序中可以通过设定资源阈值控制来调整误差,所以当前模型输出的结果基本符合高密度FPGA原型验证系统的需求,同时除去精度外其更加聚焦于时间性能上的提升,通过统计RF、MLP的模型预测时间,我们可以明显看到机器学习在时间性能方面的巨大优势。</p><p>本章小结</p><p>本章叙述了本文中面向机器学习进行资源估算中最为重要的一部分,本章通过结合第二章所述的特征提取方法,通过对Verilog HDL语言分析,结合其语法在逻辑综合、技术映射上的特征关系,完成特征提取器的设计,通过C++完成开发,实现对RTL级代码的特征提取,为下一步建立机器学习模型的建立打好基础。</p><p>并提出了使用机器学习来进行RTL设计在RTL级对其所需FPGA片上资源估算的方法,在对原始数据集进行特征缩放、特征标准化、特征降维等特征工程处理后分别使用RF、MLP进行回归预测,叙述了对多种机器学习模型在标准参数下对使用文本方法所构建的数据集的预测性能表现及对随机森林、深度神经网络进行进一步预测、参数微调等方法及结果的叙述,最终我们得到了对RTL级设计FPGA片上资源利用率预测符合预期且合理的模型。</p>"},{"chapter":"总结与展望","word_count":1545,"word_similar_count":0,"sources":[],"similarity":0,"similarityPercentage":"0.0%","text":"<p>工作总结</p><p>本文的主要研究方向集中在高密度FPGA原型验证系统软件设计CAD流程中的划分阶段的资源估算领域,研究主要面向的是超大型的SoC设计的RTL级描述,研究主要分为三个方面:首先介绍了原型验证流程中FPGA的设计综合流程,包括逻辑综合原理,逻辑综合中Verilog HDL语法对应的逻辑综合原则,技术映射原理,现阶段工业界常用技术映射算法的描述,其次基于该原理结合高密度FPGA原型验证系统划分阶段需求设计并实现了快速资源估算模型,最后提出在EDA软件中结合机器学习方法,将资源估算与机器学习相结合,最终实现以下内容:</p><p>1、实现以传统思路框架为基础的快速资源估算模型,用户输入RTL级设计即可以快速得到设计所需要得FPGA片上资源数量如LUT、FF、BUFG等资源,有效提升了在超大型集成电路设计原型验证RTL划分阶段的迭代速度。</p><p>2、并在此基础上加入了合理的LUT优化算法,Bottom-To-Up算法,使该快速资源估算模型更加匹配实际划分需求及面向不同设计种类的优化方法及面向不同需求的优化方法,并增加可复用资源结构定义,并支持用户自定义功能user-define,使得原型验证划分阶段的迭代速度和实用性得到显著提升,有效提升约2.2倍,由于自主开发故拥有完善的C++输入输出接口,可集成在商业软件中,且实际应用至Player-Pro RTL Partition工业商用软件中,并在实际客户应用场景中得到检验。</p><p>3、以EDA与机器学习相结合的思路,结合逻辑综合及技术映射原理,构建面向RTL级集成电路行为描述的特征提取器,以Xilinx EDA设计软件为标签,尝试训练了线性回归、决策树、SVM、随机森林、人工神经网络等多种机器学习模型,使运行速率提升15倍,平均准确度达75%,同时验证了EDA软件与人工智能相结合的可行性,进一步提升了在超大规模集成电路设计FPGA原型验证的划分阶段的迭代速度,为EDA与原型验证流程相结合的研究打下基础。</p><p>通过以上三点,本文论述的工作为我国自主研发EDA与高密度FPGA原型验证系统的RTLPartition提供了可使用的工程软件,并在使用机器学习对从RTL级设计出发进行FPGA资源估算领域填补了空白。同时也为EDA软件与人工智能的结合验证了可行性。</p><p>工作展望</p><p>面向RTL级设计的FPGA快速资源估算问题结合了图论、��行性问题、逻辑分解、逻辑优化等众多方面特性,具有一定挑战性,随着设计规模的逐渐增大,在验证方面的需求特性也在增加,如何能有效的快速且准确的得到RTL设计所需的FPGA片上资源,并能有效合理的支持原型验证系统的RTL-Partition划分是未来EDA流程中将面临的一大问题。</p><p>本文虽在这方面做了一些研究和实现,但仍需在一下方面做出进一步的改进:</p><p>1.目前虽然实现快速资源估算模型,并增加了符合实际映射原理的优化及约束选项,但是在特殊的FPGA板上器件映射计算方面依然存在较大误差,如BRAM、LUTRAM等先进器件,所以可以考虑后续在这方面增加进一步的研究,使得资源估算更加精确。</p><p>2.虽然在本文中验证了机器学习方法与资源估算相结合的可行性,但是还处于初步阶段,精确度及估算器件类型上还有待增加,如可参照文章【】中提到的多级估算方法,将初步得到的一般器件估算结果进行二级抽象,得到更高级别的资源类型。</p><p>3.在面向资源估算的机器学习模型中增加更高层级抽象特征,增加实际模型泛化率,可参照文章【】利用HLS高层次综合方法快速构建样本设计从而增加模型训练样本数量,使得机器学习模型的泛化程度更高更有效。</p><p>4.神经网络资源估算模型还可以进一步增加不同设计在不同约束下进行综合的样本,使得机器学习模型可以支撑不同约束下的资源估算结果,如面积优化、功率优化等约束选项。</p>"}],"similarity":0.176,"last_part_similar_count":6187,"similarityPercentage":"17.6%","chapter_similar_count":2,"chapter_min_similar_word_count":302,"front_part_similar_count":1709},"date":"2022-03-03 00:15:53","no":"19124f44-b3d1-4ddb-b839-83ebc718705c"}