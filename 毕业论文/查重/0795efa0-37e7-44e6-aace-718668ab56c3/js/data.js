window.data = {"similarity_ref":0,"notes":[],"similarity_remove_self":0.128,"source_max_similar_title":"Verilog HDL应用程序设计实例精讲","references":[],"similarity_custom":0,"kinds":"default,","title":"FPGA资源估算","word_count":41304,"source_max_similar_url":"","similarity":0.128,"report_laconic":{"word_pro_count":0,"similarity_ref":0,"word_ref_count":0,"word_similar_count":5285,"word_custom_count":0,"chapters":[{"word_pro_count":0,"similarity_ref":0,"chapter":"绪论","word_similar_count":5285,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.035,"self":false,"similar_word_count":1372,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.015,"self":false,"similar_word_count":591,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000544119911","author":"杜建国","similarity":0.014,"self":false,"similar_word_count":549,"source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.012,"self":false,"similar_word_count":496,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.012,"self":false,"similar_word_count":474,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.01,"self":false,"similar_word_count":414,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":279,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.004,"self":false,"similar_word_count":168,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.004,"self":false,"similar_word_count":157,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.003,"self":false,"similar_word_count":122,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000130331965511","author":"","similarity":0.002,"self":false,"similar_word_count":86,"source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000137225786211","author":"","similarity":0.002,"self":false,"similar_word_count":81,"source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.002,"self":false,"similar_word_count":76,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":61,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139553504411","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030187211","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183507262511","author":"","similarity":0.001,"self":false,"similar_word_count":56,"source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000030209219211","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118062415311","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106062608311","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143881533411","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000531686611","author":"南夷非","similarity":0.001,"self":false,"similar_word_count":53,"source":"大学生论文联合库","title":"图像处理技术","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106764079211","author":"csdn","similarity":0.001,"self":false,"similar_word_count":52,"source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110791518511","author":"csdn","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000155397363111","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135795011511","author":"","similarity":0.001,"self":false,"similar_word_count":50,"source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310"},{"reference":false,"teacher":"","datatype":"journal","year":"2009","docid":"1000006719680711","author":"沈智芳","similarity":0.001,"self":false,"similar_word_count":50,"source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189662307611","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000570679811","author":"-","similarity":0.001,"self":false,"similar_word_count":49,"source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188062025211","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120580984311","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于FPGA的EPON ONU设计与实现.pdf - 豆丁网","url":"http://www.docin.com/p-1149984087.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186098081911","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于EDA的ALU设计","url":"https://wenku.baidu.com/view/7b0e2b7d1cb91a37f111f18583d049649b660e0c"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118992500811","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117476774611","author":"csdn","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030691609411","author":"邢岳;田正宏;杜辉","similarity":0.001,"self":false,"similar_word_count":48,"source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082078623411","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146790090711","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b"},{"reference":false,"teacher":"","datatype":"book","year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编;黄涛，吴强副主编;王社，魏郧华，胡凯，蔡振参编","similarity":0.001,"self":false,"similar_word_count":47,"source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016188337811","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177893423411","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18"},{"reference":false,"teacher":"","datatype":"book","year":"","docid":"1900023885801611","author":"杨全胜主编","similarity":0.001,"self":false,"similar_word_count":46,"source":"","title":"计算机系统综合课程设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143175526611","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000104784138911","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000187873307311","author":"","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"无线传感器网络节点SoC的原型验证","url":"http://www.doc88.com/p%2D89416909707401.html"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023720243711","author":"刘凡平编著","similarity":0.001,"self":false,"similar_word_count":43,"source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":""},{"reference":false,"teacher":"","datatype":"chinaMeeting","year":"2014","docid":"1300000198113911","author":"崔东文;金波","similarity":0.001,"self":false,"similar_word_count":43,"source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000113620987811","author":"csdn","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082145235511","author":"","similarity":0.001,"self":false,"similar_word_count":42,"source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015110431211","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000193345064111","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195285691911","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000198071294011","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190331742911","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000131832145111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"数字系统设计与Verilog HDL(第3版) - 道客巴巴","url":"http://www.doc88.com/p%2D0087332228399.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120755765111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search"}],"similarity_pro":0,"word_copy_count":5285,"word_self_count":0,"word_count":39759,"similarity":0.133,"similarity_copy":0.133,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"总结与展望","word_similar_count":0,"word_ref_count":0,"sources":[],"similarity_pro":0,"word_copy_count":0,"word_self_count":0,"word_count":1545,"similarity":0,"similarity_copy":0,"similarity_self":0}],"similarity_custom":0,"similarity_pro":0,"last_part_similar_count":4024,"word_copy_count":5285,"chapter_similar_count":1,"max_source_info":{"source_max_similar_docid":"1900023715219511","source_max_similar_url":"","source_max_similar_title":"Verilog HDL应用程序设计实例精讲","source_max_similar_count":934},"chapter_min_similar_word_count":5285,"front_part_similar_count":1261,"chapter_max_similar_word_count":5285,"word_self_count":0,"similarity":0.128,"similarity_copy":0.128,"similarity_self":0,"similarityPercentage":"12.8%","SSetForT_Str":"{◑T1I2◑:[◑2S6I4◑],◑T52I0◑:[◑53S109I15◑],◑T52I1◑:[◑53S109I16◑,◑53S111I4◑,◑53S110I15◑,◑53S111I5◑],◑T52I2◑:[◑53S109I18◑,◑53S111I5◑],◑T75I2◑:[◑76S160I3◑],◑T90I6◑:[◑91S207I5◑,◑91S203I13◑],◑T52I3◑:[◑53S109I17◑,◑53S111I5◑],◑T52I4◑:[◑53S109I19◑,◑53S111I6◑],◑T75I4◑:[◑76S159I7◑,◑76S160I3◑],◑T75I3◑:[◑76S159I6◑],◑T75I6◑:[◑76S160I3◑,◑76S159I9◑],◑T75I5◑:[◑76S159I8◑],◑T37I0◑:[◑38S67I7◑],◑T90I0◑:[◑91S205I8◑,◑91S204I8◑],◑T14I1◑:[◑15S22I8◑,◑15S22I7◑,◑15S22I10◑],◑T90I1◑:[◑91S205I9◑,◑91S206I5◑,◑91S204I9◑,◑91S203I0◑],◑T9I1◑:[◑10S15I4◑],◑T1I6◑:[◑2S6I9◑],◑T90I4◑:[◑91S203I11◑,◑91S207I3◑,◑91S203I14◑],◑T1I7◑:[◑2S6I10◑],◑T90I5◑:[◑91S207I4◑,◑91S203I12◑],◑T90I2◑:[◑91S204I10◑,◑91S205I10◑,◑91S206I6◑,◑91S203I1◑],◑T1I5◑:[◑2S6I8◑],◑T9I5◑:[◑10S15I7◑],◑T26I2◑:[◑27S47I12◑],◑T9I4◑:[◑10S15I6◑],◑T26I1◑:[◑27S47I13◑,◑27S48I3◑,◑27S48I4◑,◑27S47I6◑,◑27S48I5◑,◑27S47I7◑,◑27S47I8◑],◑T49I0◑:[◑50S103I12◑,◑50S103I13◑],◑T49I1◑:[◑50S105I8◑],◑T49I3◑:[◑50S103I6◑],◑T41I0◑:[◑42S80I0◑],◑T64I0◑:[◑65S138I3◑,◑65S138I4◑],◑T87I0◑:[◑88S198I8◑,◑88S199I7◑,◑88S200I5◑],◑T87I1◑:[◑88S198I6◑,◑88S199I5◑,◑88S198I4◑,◑88S199I3◑],◑T41I2◑:[◑42S80I6◑,◑42S81I3◑],◑T41I3◑:[◑42S80I7◑,◑42S81I4◑],◑T41I4◑:[◑42S81I5◑,◑42S80I8◑],◑T41I5◑:[◑42S81I6◑,◑42S81I7◑,◑42S80I9◑],◑T41I6◑:[◑42S80I10◑,◑42S81I9◑,◑42S80I11◑,◑42S81I8◑],◑T87I2◑:[◑88S200I4◑,◑88S198I5◑,◑88S199I4◑],◑T41I7◑:[◑42S80I6◑,◑42S81I10◑,◑42S81I3◑,◑42S80I13◑,◑42S80I12◑,◑42S81I12◑],◑T38I5◑:[◑39S68I8◑,◑39S72I13◑,◑39S73I9◑,◑39S73I8◑,◑39S70I9◑,◑39S71I8◑,◑39S69I13◑],◑T38I4◑:[◑39S68I7◑,◑39S72I12◑,◑39S70I8◑,◑39S71I7◑,◑39S73I7◑,◑39S73I6◑,◑39S69I11◑,◑39S69I12◑],◑T38I3◑:[◑39S68I6◑,◑39S72I11◑,◑39S73I5◑,◑39S70I7◑,◑39S71I6◑,◑39S69I10◑],◑T38I2◑:[◑39S72I10◑,◑39S68I5◑,◑39S73I4◑,◑39S69I9◑,◑39S70I6◑,◑39S71I5◑],◑T15I1◑:[◑16S23I1◑],◑T38I1◑:[◑39S69I8◑,◑39S72I9◑,◑39S68I4◑,◑39S73I4◑,◑39S70I5◑,◑39S71I4◑],◑T38I0◑:[◑39S69I7◑,◑39S68I3◑,◑39S70I4◑,◑39S71I10◑,◑39S73I3◑,◑39S68I12◑,◑39S71I4◑],◑T51I1◑:[◑52S108I14◑],◑T74I1◑:[◑75S156I12◑,◑75S156I11◑],◑T0I4◑:[◑1S0I7◑],◑T51I2◑:[◑52S108I13◑],◑T74I0◑:[◑75S156I11◑,◑75S156I13◑],◑T74I2◑:[◑75S156I11◑,◑75S156I14◑,◑75S156I15◑],◑T59I0◑:[◑60S121I6◑],◑T97I4◑:[◑98S216I11◑,◑98S217I4◑,◑98S216I10◑,◑98S217I5◑,◑98S216I9◑],◑T8I4◑:[◑9S14I5◑],◑T36I1◑:[◑37S66I3◑],◑T0I9◑:[◑1S5I2◑,◑1S0I12◑,◑1S1I10◑],◑T8I2◑:[◑9S14I3◑],◑T8I1◑:[◑9S14I3◑],◑T13I0◑:[◑14S20I7◑,◑14S20I6◑],◑T0I8◑:[◑1S2I5◑,◑1S5I3◑,◑1S1I11◑,◑1S0I11◑],◑T0I5◑:[◑1S0I6◑,◑1S0I8◑,◑1S2I6◑],◑T0I6◑:[◑1S2I6◑,◑1S1I18◑],◑T8I7◑:[◑9S14I7◑],◑T8I5◑:[◑9S14I6◑],◑T40I1◑:[◑41S77I1◑,◑41S76I3◑,◑41S78I8◑,◑41S79I1◑,◑41S79I2◑],◑T40I2◑:[◑41S78I10◑,◑41S76I4◑,◑41S77I3◑],◑T63I0◑:[◑64S133I7◑,◑64S136I10◑],◑T63I3◑:[◑64S134I9◑],◑T63I2◑:[◑64S133I6◑,◑64S134I6◑,◑64S136I6◑,◑64S137I8◑],◑T63I4◑:[◑64S134I9◑],◑T25I1◑:[◑26S45I8◑,◑26S46I6◑],◑T25I0◑:[◑26S46I7◑,◑26S45I7◑,◑26S45I6◑,◑26S46I5◑],◑T40I0◑:[◑41S77I0◑,◑41S78I7◑],◑T37I6◑:[◑38S67I9◑],◑T37I3◑:[◑38S67I5◑],◑T37I1◑:[◑38S67I8◑],◑T54I0◑:[◑55S113I1◑],◑T77I0◑:[◑78S164I0◑],◑T92I4◑:[◑93S210I5◑,◑93S211I5◑],◑T92I5◑:[◑93S211I6◑,◑93S210I6◑],◑T54I2◑:[◑55S113I5◑],◑T77I1◑:[◑78S166I4◑,◑78S166I3◑,◑78S163I5◑,◑78S165I3◑,◑78S163I4◑,◑78S165I2◑,◑78S164I0◑],◑T54I4◑:[◑55S113I5◑],◑T7I5◑:[◑8S13I6◑],◑T7I4◑:[◑8S13I4◑],◑T31I5◑:[◑32S59I5◑],◑T7I3◑:[◑8S13I3◑],◑T31I4◑:[◑32S59I4◑],◑T7I2◑:[◑8S13I2◑],◑T31I3◑:[◑32S59I3◑],◑T92I2◑:[◑93S211I2◑,◑93S211I3◑],◑T7I0◑:[◑8S13I0◑],◑T92I3◑:[◑93S210I3◑,◑93S210I4◑],◑T28I4◑:[◑29S50I4◑],◑T28I2◑:[◑29S50I3◑],◑T28I1◑:[◑29S50I2◑],◑T7I6◑:[◑8S13I7◑],◑T66I6◑:[◑67S145I10◑,◑67S142I4◑,◑67S143I7◑],◑T66I5◑:[◑67S146I11◑,◑67S145I9◑,◑67S142I3◑,◑67S143I6◑],◑T66I8◑:[◑67S145I12◑,◑67S142I6◑,◑67S144I2◑,◑67S143I9◑],◑T66I7◑:[◑67S145I11◑,◑67S142I5◑,◑67S143I8◑],◑T66I9◑:[◑67S145I13◑,◑67S142I6◑,◑67S144I2◑,◑67S143I10◑],◑T81I4◑:[◑82S179I6◑,◑82S178I6◑,◑82S181I4◑,◑82S182I10◑,◑82S180I6◑,◑82S183I7◑],◑T43I0◑:[◑44S87I5◑,◑44S88I4◑,◑44S90I3◑,◑44S89I6◑],◑T66I0◑:[◑67S143I2◑,◑67S142I2◑,◑67S145I4◑,◑67S146I7◑,◑67S142I9◑],◑T43I1◑:[◑44S87I6◑,◑44S88I5◑,◑44S89I7◑,◑44S90I4◑],◑T43I2◑:[◑44S89I8◑,◑44S90I5◑,◑44S87I7◑,◑44S88I6◑,◑44S89I9◑],◑T66I2◑:[◑67S146I8◑,◑67S142I3◑,◑67S144I1◑,◑67S143I3◑,◑67S145I6◑],◑T66I1◑:[◑67S144I1◑,◑67S143I1◑,◑67S142I8◑],◑T66I4◑:[◑67S142I3◑,◑67S143I5◑,◑67S145I8◑,◑67S146I10◑],◑T66I3◑:[◑67S146I9◑,◑67S142I3◑,◑67S144I1◑,◑67S143I4◑,◑67S145I7◑],◑T20I0◑:[◑21S33I4◑,◑21S33I5◑],◑T81I3◑:[◑82S179I6◑,◑82S178I6◑,◑82S180I5◑,◑82S181I4◑,◑82S182I10◑,◑82S180I6◑,◑82S183I7◑],◑T81I2◑:[◑82S179I5◑,◑82S178I5◑,◑82S179I4◑,◑82S181I2◑,◑82S178I4◑,◑82S181I3◑,◑82S180I5◑,◑82S182I8◑,◑82S182I9◑],◑T17I5◑:[◑18S28I3◑],◑T17I3◑:[◑18S26I4◑,◑18S25I7◑,◑18S27I4◑,◑18S28I5◑],◑T17I2◑:[◑18S27I3◑,◑18S26I3◑,◑18S25I6◑],◑T53I0◑:[◑54S112I7◑],◑T53I3◑:[◑54S112I10◑],◑T15I0◑:[◑16S23I3◑],◑T6I2◑:[◑7S11I3◑,◑7S12I5◑,◑7S12I4◑],◑T30I2◑:[◑31S56I14◑,◑31S53I8◑,◑31S54I7◑],◑T30I1◑:[◑31S55I9◑,◑31S53I7◑,◑31S54I6◑],◑T91I1◑:[◑92S209I5◑],◑T30I0◑:[◑31S56I8◑,◑31S55I5◑,◑31S53I6◑,◑31S55I4◑,◑31S53I5◑,◑31S54I4◑,◑31S54I3◑],◑T91I2◑:[◑92S209I4◑],◑T27I4◑:[◑28S49I9◑],◑T27I0◑:[◑28S49I3◑],◑T42I7◑:[◑43S83I11◑,◑43S85I12◑,◑43S82I14◑,◑43S86I6◑,◑43S84I6◑],◑T88I5◑:[◑89S201I5◑],◑T88I0◑:[◑89S201I4◑],◑T42I2◑:[◑43S83I0◑,◑43S84I5◑,◑43S82I5◑,◑43S85I2◑],◑T88I3◑:[◑89S201I11◑],◑T42I4◑:[◑43S83I6◑],◑T65I2◑:[◑66S141I17◑,◑66S140I8◑],◑T42I5◑:[◑43S82I11◑,◑43S82I12◑,◑43S83I9◑,◑43S83I8◑],◑T88I1◑:[◑89S201I5◑],◑T42I6◑:[◑43S83I10◑,◑43S82I13◑,◑43S84I1◑],◑T88I2◑:[◑89S201I10◑],◑T80I1◑:[◑81S175I5◑,◑81S176I4◑,◑81S177I3◑],◑T16I4◑:[◑17S24I10◑],◑T16I2◑:[◑17S24I5◑],◑T16I3◑:[◑17S24I7◑],◑T16I1◑:[◑17S24I5◑],◑T77I6◑:[◑78S165I5◑,◑78S164I4◑,◑78S167I8◑,◑78S163I9◑,◑78S166I6◑,◑78S168I4◑],◑T77I5◑:[◑78S166I5◑,◑78S168I3◑,◑78S163I6◑,◑78S165I4◑,◑78S167I7◑,◑78S164I1◑],◑T0I10◑:[◑1S5I1◑,◑1S2I6◑,◑1S1I10◑],◑T77I7◑:[◑78S165I6◑,◑78S164I5◑,◑78S163I10◑,◑78S166I7◑,◑78S167I9◑],◑T79I0◑:[◑80S172I6◑,◑80S173I5◑,◑80S174I4◑,◑80S171I5◑],◑T79I2◑:[◑80S171I7◑,◑80S172I8◑,◑80S173I7◑],◑T79I1◑:[◑80S173I6◑,◑80S174I5◑,◑80S171I6◑,◑80S174I6◑],◑T33I2◑:[◑34S61I10◑],◑T33I1◑:[◑34S61I10◑],◑T5I2◑:[◑6S10I5◑],◑T10I0◑:[◑11S17I9◑],◑T33I0◑:[◑34S61I8◑,◑34S61I9◑],◑T10I1◑:[◑11S17I10◑],◑T5I0◑:[◑6S10I4◑],◑T5I1◑:[◑6S10I4◑],◑T22I5◑:[◑23S37I11◑,◑23S37I14◑,◑23S37I8◑],◑T45I0◑:[◑46S92I7◑],◑T45I1◑:[◑46S92I6◑],◑T22I4◑:[◑23S37I11◑],◑T60I1◑:[◑61S122I6◑],◑T60I2◑:[◑61S122I7◑],◑T19I4◑:[◑20S32I8◑,◑20S32I11◑],◑T19I1◑:[◑20S32I6◑],◑T19I0◑:[◑20S32I5◑],◑T11I5◑:[◑12S18I9◑],◑T57I3◑:[◑58S117I6◑,◑58S119I8◑],◑T57I4◑:[◑58S117I6◑,◑58S116I13◑,◑58S119I8◑],◑T19I7◑:[◑20S32I10◑],◑T19I8◑:[◑20S32I11◑],◑T19I5◑:[◑20S32I9◑],◑T70I5◑:[◑71S150I5◑],◑T4I0◑:[◑5S9I5◑],◑T55I0◑:[◑56S114I8◑],◑T70I6◑:[◑71S150I6◑],◑T55I1◑:[◑56S114I9◑],◑T55I3◑:[◑56S114I20◑,◑56S114I10◑],◑T55I4◑:[◑56S114I12◑],◑T32I5◑:[◑33S60I13◑],◑T32I4◑:[◑33S60I13◑],◑T32I2◑:[◑33S60I12◑],◑T32I1◑:[◑33S60I6◑],◑T93I1◑:[◑94S212I13◑],◑T32I0◑:[◑33S60I5◑],◑T4I2◑:[◑5S9I7◑],◑T29I4◑:[◑30S51I7◑,◑30S51I8◑],◑T29I0◑:[◑30S52I6◑,◑30S51I6◑],◑T29I7◑:[◑30S51I13◑],◑T29I6◑:[◑30S51I11◑,◑30S51I10◑],◑T21I2◑:[◑22S35I26◑,◑22S35I22◑],◑T21I1◑:[◑22S35I20◑,◑22S35I21◑],◑T21I0◑:[◑22S36I5◑],◑T18I5◑:[◑19S30I5◑,◑19S29I10◑],◑T18I2◑:[◑19S29I7◑],◑T18I3◑:[◑19S30I3◑,◑19S29I8◑],◑T18I1◑:[◑19S29I7◑],◑T79I3◑:[◑80S171I10◑,◑80S173I9◑,◑80S172I9◑,◑80S172I16◑],◑T18I6◑:[◑19S29I12◑,◑19S29I13◑,◑19S30I6◑,◑19S29I11◑],◑T3I0◑:[◑4S8I5◑],◑T3I1◑:[◑4S8I6◑],◑T50I3◑:[◑51S106I12◑],◑T96I0◑:[◑97S215I8◑],◑T58I0◑:[◑59S120I4◑],◑T58I1◑:[◑59S120I4◑],◑T35I2◑:[◑36S63I4◑],◑T35I1◑:[◑36S64I9◑,◑36S63I3◑],◑T3I6◑:[◑4S8I11◑],◑T35I0◑:[◑36S64I7◑,◑36S64I8◑],◑T3I7◑:[◑4S8I12◑],◑T3I4◑:[◑4S8I9◑],◑T50I0◑:[◑51S106I11◑],◑T50I1◑:[◑51S106I11◑],◑T24I6◑:[◑25S43I14◑,◑25S41I17◑,◑25S42I6◑,◑25S42I8◑],◑T24I5◑:[◑25S43I20◑,◑25S44I10◑,◑25S41I13◑,◑25S44I11◑,◑25S42I5◑,◑25S41I16◑,◑25S44I18◑,◑25S42I7◑],◑T24I4◑:[◑25S41I17◑,◑25S42I6◑,◑25S42I8◑],◑T24I3◑:[◑25S44I10◑,◑25S41I3◑,◑25S41I13◑,◑25S44I11◑,◑25S42I5◑,◑25S41I16◑,◑25S44I18◑,◑25S42I7◑],◑T47I3◑:[◑48S97I9◑,◑48S99I6◑,◑48S101I6◑,◑48S97I5◑,◑48S98I4◑,◑48S96I4◑,◑48S100I4◑],◑T47I4◑:[◑48S97I6◑,◑48S98I5◑,◑48S99I3◑,◑48S96I5◑,◑48S101I3◑],◑T47I5◑:[◑48S97I7◑,◑48S98I6◑,◑48S99I4◑,◑48S96I6◑,◑48S101I4◑,◑48S100I2◑],◑T47I6◑:[◑48S97I9◑,◑48S97I8◑,◑48S98I7◑,◑48S99I5◑,◑48S96I7◑,◑48S100I4◑,◑48S99I0◑,◑48S100I3◑,◑48S101I5◑],◑T47I7◑:[◑48S97I9◑,◑48S98I8◑,◑48S99I6◑,◑48S96I8◑,◑48S101I6◑,◑48S100I4◑],◑T62I2◑:[◑63S131I9◑,◑63S130I9◑,◑63S131I8◑,◑63S128I3◑,◑63S130I10◑,◑63S129I6◑,◑63S127I7◑,◑63S129I5◑],◑T62I1◑:[◑63S128I2◑,◑63S130I10◑,◑63S127I6◑,◑63S129I4◑,◑63S129I5◑,◑63S130I7◑],◑T62I4◑:[◑63S128I1◑,◑63S132I8◑,◑63S128I5◑,◑63S127I9◑],◑T62I3◑:[◑63S131I9◑,◑63S128I3◑,◑63S128I4◑,◑63S127I8◑,◑63S129I6◑,◑63S127I7◑,◑63S129I5◑],◑T62I6◑:[◑63S128I6◑,◑63S128I10◑],◑T47I0◑:[◑48S99I1◑,◑48S97I2◑,◑48S98I1◑,◑48S96I1◑],◑T47I1◑:[◑48S99I2◑,◑48S97I3◑,◑48S98I2◑,◑48S96I2◑],◑T62I7◑:[◑63S128I7◑],◑T24I2◑:[◑25S44I9◑,◑25S41I12◑,◑25S42I4◑,◑25S43I6◑],◑T24I1◑:[◑25S41I10◑,◑25S44I9◑,◑25S41I8◑,◑25S43I6◑,◑25S41I9◑],◑T24I0◑:[◑25S44I9◑,◑25S41I0◑,◑25S41I11◑,◑25S41I8◑,◑25S43I6◑],◑T62I0◑:[◑63S128I1◑],◑T36I5◑:[◑37S66I7◑],◑T36I4◑:[◑37S66I7◑],◑T36I3◑:[◑37S66I5◑],◑T36I2◑:[◑37S66I4◑],◑T59I1◑:[◑60S121I8◑],◑T59I2◑:[◑60S121I8◑],◑T2I1◑:[◑3S7I5◑],◑T2I2◑:[◑3S7I10◑],◑T72I2◑:[◑73S153I15◑,◑73S154I15◑,◑73S153I22◑,◑73S154I22◑,◑73S153I3◑,◑73S154I3◑],◑T2I0◑:[◑3S7I4◑],◑T57I1◑:[◑58S119I8◑],◑T57I2◑:[◑58S116I7◑,◑58S117I6◑,◑58S118I2◑,◑58S119I8◑],◑T11I3◑:[◑12S18I7◑],◑T11I4◑:[◑12S18I9◑],◑T11I1◑:[◑12S18I5◑],◑T34I1◑:[◑35S62I5◑,◑35S62I4◑,◑35S62I6◑,◑35S62I3◑],◑T11I2◑:[◑12S18I6◑],◑T34I0◑:[◑35S62I4◑],◑T2I3◑:[◑3S7I11◑],◑T72I1◑:[◑73S154I8◑,◑73S153I21◑,◑73S154I21◑,◑73S153I8◑,◑73S153I2◑,◑73S154I2◑],◑T72I0◑:[◑73S154I13◑,◑73S153I13◑,◑73S154I20◑,◑73S153I20◑,◑73S153I7◑,◑73S154I7◑,◑73S153I1◑,◑73S154I1◑],◑T23I5◑:[◑24S40I6◑,◑24S39I11◑,◑24S38I7◑],◑T23I4◑:[◑24S40I4◑,◑24S40I6◑,◑24S39I11◑,◑24S38I7◑],◑T61I3◑:[◑62S124I3◑,◑62S123I9◑,◑62S123I10◑,◑62S123I8◑,◑62S123I7◑,◑62S125I11◑,◑62S125I12◑,◑62S125I10◑,◑62S125I9◑],◑T84I2◑:[◑85S187I8◑,◑85S188I7◑,◑85S191I3◑,◑85S186I7◑],◑T61I2◑:[◑62S124I2◑,◑62S123I6◑,◑62S125I8◑],◑T84I1◑:[◑85S190I11◑,◑85S191I3◑,◑85S190I12◑,◑85S187I6◑,◑85S188I5◑,◑85S187I5◑,◑85S189I3◑,◑85S186I5◑,◑85S186I4◑],◑T61I5◑:[◑62S123I14◑,◑62S123I13◑,◑62S124I7◑,◑62S124I6◑,◑62S126I8◑,◑62S126I7◑],◑T84I4◑:[◑85S190I22◑,◑85S190I13◑],◑T61I4◑:[◑62S123I14◑,◑62S123I13◑,◑62S126I6◑,◑62S124I7◑,◑62S126I5◑,◑62S124I6◑,◑62S124I5◑],◑T84I6◑:[◑85S188I9◑,◑85S190I11◑,◑85S188I10◑,◑85S190I15◑,◑85S186I13◑,◑85S190I12◑,◑85S187I6◑,◑85S188I5◑,◑85S189I3◑,◑85S186I5◑,◑85S187I19◑,◑85S190I16◑],◑T46I0◑:[◑47S93I9◑,◑47S94I9◑,◑47S93I8◑,◑47S95I0◑],◑T61I6◑:[◑62S123I16◑,◑62S123I15◑,◑62S124I8◑,◑62S124I9◑],◑T46I1◑:[◑47S94I8◑,◑47S93I7◑,◑47S93I6◑],◑T23I3◑:[◑24S40I5◑,◑24S40I3◑],◑T23I2◑:[◑24S38I2◑,◑24S39I8◑,◑24S38I4◑,◑24S38I3◑],◑T23I0◑:[◑24S38I13◑],◑T84I0◑:[◑85S187I5◑,◑85S188I4◑,◑85S189I2◑,◑85S186I4◑],◑T58I3◑:[◑59S120I8◑],◑T66I11◑:[◑67S146I7◑],◑T66I10◑:[◑67S145I14◑,◑67S142I6◑,◑67S144I2◑,◑67S143I11◑]}"},"similarityPercentage":"12.8%","chapter_count":2,"taskid":"oem-5b996e5b-d0a5-4c5a-82ee-c03a795d30e7","source_max_similar_docid":"1900023715219511","report_remove_self":{"similar_offsets":[{"reference":false,"start":10,"end":160},{"reference":false,"start":160,"end":272},{"reference":false,"start":272,"end":420},{"reference":false,"start":420,"end":547},{"reference":false,"start":547,"end":639},{"reference":false,"start":639,"end":725},{"reference":false,"start":725,"end":911},{"reference":false,"start":951,"end":1111},{"reference":false,"start":1135,"end":1286},{"reference":false,"start":1455,"end":1609},{"reference":false,"start":2622,"end":2730},{"reference":false,"start":2730,"end":2772},{"reference":false,"start":5873,"end":5966},{"reference":false,"start":5966,"end":6108},{"reference":false,"start":6108,"end":6174},{"reference":false,"start":6295,"end":6449},{"reference":false,"start":7472,"end":7644},{"reference":false,"start":7644,"end":7729},{"reference":false,"start":7729,"end":7891},{"reference":false,"start":8304,"end":8367},{"reference":false,"start":8367,"end":8529},{"reference":false,"start":8921,"end":9061},{"reference":false,"start":9473,"end":9609},{"reference":false,"start":9609,"end":9743},{"reference":false,"start":9894,"end":10059},{"reference":false,"start":10495,"end":10578},{"reference":false,"start":10744,"end":10885},{"reference":false,"start":10901,"end":11071},{"reference":false,"start":11071,"end":11232},{"reference":false,"start":11429,"end":11533},{"reference":false,"start":11638,"end":11748},{"reference":false,"start":11758,"end":11874},{"reference":false,"start":11878,"end":11945},{"reference":false,"start":11945,"end":12047},{"reference":false,"start":12047,"end":12138},{"reference":false,"start":12138,"end":12267},{"reference":false,"start":12267,"end":12393},{"reference":false,"start":13229,"end":13330},{"reference":false,"start":13973,"end":14081},{"reference":false,"start":14088,"end":14282},{"reference":false,"start":14361,"end":14537},{"reference":false,"start":14555,"end":14650},{"reference":false,"start":15143,"end":15202},{"reference":false,"start":15202,"end":15257},{"reference":false,"start":15257,"end":15379},{"reference":false,"start":15572,"end":15677},{"reference":false,"start":15726,"end":15774},{"reference":false,"start":15796,"end":15826},{"reference":false,"start":15826,"end":15930},{"reference":false,"start":15947,"end":16061},{"reference":false,"start":16071,"end":16160},{"reference":false,"start":16160,"end":16230},{"reference":false,"start":16318,"end":16479},{"reference":false,"start":16629,"end":16729},{"reference":false,"start":16729,"end":16767},{"reference":false,"start":16767,"end":16826},{"reference":false,"start":16837,"end":16945},{"reference":false,"start":16954,"end":17105},{"reference":false,"start":17105,"end":17180},{"reference":false,"start":17180,"end":17235},{"reference":false,"start":17755,"end":17790},{"reference":false,"start":17795,"end":17942},{"reference":false,"start":24162,"end":24280},{"reference":false,"start":26163,"end":26200},{"reference":false,"start":28073,"end":28097},{"reference":false,"start":29109,"end":29252},{"reference":false,"start":30374,"end":30554},{"reference":false,"start":31089,"end":31219},{"reference":false,"start":31219,"end":31375},{"reference":false,"start":31715,"end":31881},{"reference":false,"start":32914,"end":33028},{"reference":false,"start":33732,"end":33798},{"reference":false,"start":33890,"end":34029},{"reference":false,"start":34912,"end":35074},{"reference":false,"start":35430,"end":35584},{"reference":false,"start":35994,"end":36133},{"reference":false,"start":36405,"end":36490},{"reference":false,"start":36920,"end":36990},{"reference":false,"start":37031,"end":37143}],"chapter_max_similar_word_count":5285,"word_similar_count":5285,"chapters":[{"chapter":"绪论","word_count":39759,"word_similar_count":5285,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.035,"self":false,"similar_word_count":1372,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.015,"self":false,"similar_word_count":591,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000544119911","author":"杜建国","similarity":0.014,"self":false,"similar_word_count":549,"source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.012,"self":false,"similar_word_count":496,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.012,"self":false,"similar_word_count":474,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.01,"self":false,"similar_word_count":414,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":279,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.004,"self":false,"similar_word_count":168,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.004,"self":false,"similar_word_count":157,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.003,"self":false,"similar_word_count":122,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000130331965511","author":"","similarity":0.002,"self":false,"similar_word_count":86,"source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000137225786211","author":"","similarity":0.002,"self":false,"similar_word_count":81,"source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.002,"self":false,"similar_word_count":76,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":61,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139553504411","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030187211","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183507262511","author":"","similarity":0.001,"self":false,"similar_word_count":56,"source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000030209219211","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118062415311","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106062608311","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143881533411","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000531686611","author":"南夷非","similarity":0.001,"self":false,"similar_word_count":53,"source":"大学生论文联合库","title":"图像处理技术","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106764079211","author":"csdn","similarity":0.001,"self":false,"similar_word_count":52,"source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110791518511","author":"csdn","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000155397363111","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135795011511","author":"","similarity":0.001,"self":false,"similar_word_count":50,"source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310"},{"reference":false,"teacher":"","datatype":"journal","year":"2009","docid":"1000006719680711","author":"沈智芳","similarity":0.001,"self":false,"similar_word_count":50,"source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189662307611","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000570679811","author":"-","similarity":0.001,"self":false,"similar_word_count":49,"source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188062025211","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120580984311","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于FPGA的EPON ONU设计与实现.pdf - 豆丁网","url":"http://www.docin.com/p-1149984087.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186098081911","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于EDA的ALU设计","url":"https://wenku.baidu.com/view/7b0e2b7d1cb91a37f111f18583d049649b660e0c"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118992500811","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117476774611","author":"csdn","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030691609411","author":"邢岳;田正宏;杜辉","similarity":0.001,"self":false,"similar_word_count":48,"source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082078623411","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146790090711","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b"},{"reference":false,"teacher":"","datatype":"book","year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编;黄涛，吴强副主编;王社，魏郧华，胡凯，蔡振参编","similarity":0.001,"self":false,"similar_word_count":47,"source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016188337811","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177893423411","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18"},{"reference":false,"teacher":"","datatype":"book","year":"","docid":"1900023885801611","author":"杨全胜主编","similarity":0.001,"self":false,"similar_word_count":46,"source":"","title":"计算机系统综合课程设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143175526611","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000104784138911","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000187873307311","author":"","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"无线传感器网络节点SoC的原型验证","url":"http://www.doc88.com/p%2D89416909707401.html"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023720243711","author":"刘凡平编著","similarity":0.001,"self":false,"similar_word_count":43,"source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":""},{"reference":false,"teacher":"","datatype":"chinaMeeting","year":"2014","docid":"1300000198113911","author":"崔东文;金波","similarity":0.001,"self":false,"similar_word_count":43,"source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000113620987811","author":"csdn","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082145235511","author":"","similarity":0.001,"self":false,"similar_word_count":42,"source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015110431211","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000193345064111","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195285691911","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000198071294011","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190331742911","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000131832145111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"数字系统设计与Verilog HDL(第3版) - 道客巴巴","url":"http://www.doc88.com/p%2D0087332228399.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120755765111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search"}],"similarity":0.133,"similarityPercentage":"13.3%","text":"<p>研究背景</p><p>论文研究背景</p><p>随着市场环境的逐步晋级,市场对与IC功能的需求越来越严苛,IC的设计的集成度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em><em class='similar'>设计,</em>也被称为SoC<em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的集成电路设计技术已得到认可与应用,</em>且当代的SoC设计也不再限制于一块芯片上。通常,<em class='similar'>ASIC设计拥有低功耗、</em>流片成本低、迭代速度快等优势,<em class='similar'>所以ASIC可包含更为复杂和灵活的集成逻辑设计。</em><em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em><em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发成本的损失,</em><em class='similar'>所以,</em><em class='similar'>IC的正确性验证正在逐步成为具有很高复杂度的IC研发流程中所必须且关键的环节。</em>现阶段集成电路设计中验证所占用的研发周期通常会占用到整体研发周期的半数以上,所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,<em class='similar'>虽然软件仿真具有简单易用且可行性高的优势,</em><em class='similar'>但是在处理较复杂的集成电路设计时,</em>很难保证其验证效率[6]。<em class='similar'>而基于FPGA的原型验证,</em>依靠其可反复刷写、<em class='similar'>可真实模拟设计中的逻辑功能行为以及能够较为全面且系统的反映逻辑功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>[6]。</p><p><em class='similar'>目前随着超常规性能ASIC芯片设计规模与电路复杂度的提升以及集成电路设计体系结构的不断升级与创新,</em>SoC设计的规模在急速膨胀,<em class='similar'>研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,</em><em class='similar'>因此为保证验证的高效性和准确性,</em><em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。</em>在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。<em class='similar'>通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,</em>因为其具有仿真数据精确、使用方便灵活等优势,因此对于集成规模或复杂度较小的IC模块的正确性验证通常会采用Simulation的方法。但是,当芯片整体复杂与集成度的提升,软件仿真与模拟的效率也在不断下降,同时也将难以覆盖整体IC功能的验证,验证所追求的时间和性能效率也将难以保证,从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,<em class='similar'>各大EDA厂家与集成电路研发厂家进而通过使用硬件加速器来实现仿真验证,</em>其主要思想是基于硬件运算速度远高于软件的原理,<em class='similar'>将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,</em><em class='similar'>最后硬件将加速计算后的结果反馈给上位机即EDA软件,</em><em class='similar'>从而提升整体的验证效率。</em><em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar'>相比于完全使用软件来实现</em>仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、<em class='similar'>真实、</em><em class='similar'>有效的反馈集成电路设计系统所存在的各种问题,</em>进而可以帮助集成电路开发人员精确的发现使用软件仿真无法捕获的异常数据,<em class='similar'>这对于���证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar'>但是硬件仿真器也并不是</em>完美的,因为实现硬件加速仿真需要适配不同的集成电路设计结构,同时还需要重新适配与调整支持硬件加速器的EDA软件与硬件加速设备间的通信接口,若所需要进行验证的集成电路设计发生改变,那原有的硬件加速固件可能无法进行复用,可能导致需要重新设计或更换硬件固件及调整相关接口的适配。从实现本质出发,本文的所提及的高密度原型验证系统也可基于硬件仿真器来实现,但硬件仿真器的生产或因设计变更发生的调整成本高昂,<em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em></p><p>高密度FPGA原型验证系统及EDA</p><p>高密度FPGA原型验证系统</p><p>近年来,随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,仅依赖于一颗先进的FPGA片上逻辑资源已难以满足高性能ASIC芯片设计的需求,因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</p><p>对于能够使用多FPGA进行正确的验证,则必然需要进行逻辑划分,而为实现正确且合理的逻辑划分,首先要解决的就是设计逻辑综合时间长的问题[4]。一个设计规模达到几亿门甚至数十亿门的大规模SoC设计,若使用整个设计先进行综合,再进行逻辑划分的方式,设计的综合时间会非常的漫长,一次综合流程就有可能花费的时间长达数天甚至数周,若设计的规模特别大,甚至会出现编译软件或服务器崩溃的情况[5]。显然,面对超大规模的SoC设计采用RTL(Register Transfer Level,寄存器传输级别)级划分,将会成为最优的选择,RTL-Partition流程如图1.2所示。</p><p>高密度FPGA原型验证流程</p><p>使用RTL划分通过在RTL阶段将设计划分为个子设计后,便可以有效解决设计逻辑综合时间长的问题,同时实现并行编译、综合、布局布线的流程,从而有效提升FPGA原型验证的效率。但为正确实现RTL级的逻辑划分,则需要解决以下几个关键问题:</p><p>(1)首先,在对超大型SoC设计不进行逻辑综合前提下进行RTL级别分割时,需确定最合理的逻辑划分的边界,满足SoC设计的全局时钟树,同时使得进行逻辑划分后的SoC设计满足整个大型FPGA原型验证系统的互联资源和每个划分后的子设计不超出每个FPGA可综合的资源的数量(为增加FPGA综合及布局布线的成功率,常使用FPGA资源总量的60%-70%);</p><p>(2)其次,由于无法对设计进行整体综合,则无法获得设计在FPGA上所需的准确片上资源数量,则如何对设计在RTL级进行快速资源估算,在不进行逻辑综合为前提下获得设计中每个模块的资源,从而为确认划分的边界提供参考依据将成为关键问题;</p><p>(3)最后,如何通过已经获得的RTL级设计的资源与大型原型FPGA设计平台相结合,能同时满足FPGA间的互联结构、互联资源、片上逻辑资源等条件实现合理的逻辑划分,并且划分结果与原始设计逻辑等价;</p><p>本文将主要讨论上述问题中的(1)(2),即如何对RTL设计进行快速且满足RTL级逻辑划分所需精度的快速逻辑资源估算方法并尝试结合机器学习探究解决该问题的方法。</p><p>国内外研究现状</p><p><em class='similar'>当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级</em><em class='similar'>(Register Transfer Level,</em>RTL)的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>布局、</em><em class='similar'>布线等</em>[2]。</p><p>FPGA的硬件组成结构中包含许多不同类别的片上资源,主要有实现逻辑电路所需要的逻辑资源,用于提供外部输入/输出接口的资源,以及连接并导通前两种资源的布线资源。具体来讲,一般包括触发器(F-F)、数字处理单元(DSP)、查找表(LUT)、块状存储(Block RAM,BRAM)等多种片上起源。其中,LUT和FF等逻辑资源一般存在于逻辑块LB(Logic Block或slice)中。</p><p>由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、RTL级设计划分、逻辑综合、工艺映射、单个FPGA的布局和布线等,由于高密度FPGA原型验证流程步骤繁多且耗时较长,设计者在编写和修改RTL描述时,无法快速预估待划分电路在FPGA上实现时需要的片上硬件资源数量,这样就可能导致无法完成综合流程或者无法完成FPGA布局布线,或互联关系复杂,无法满足FPGA间组网关系,从而需要多次设计迭代来解决上述问题。另外,在逻辑综合流程中,每一部分RTL级描述所需要的实际FPGA片上资源的数量,也将对RTL到门级网表的转化与优化过程有指导意义。</p><p>综上所述,在RTL级划分阶段如何能够快速且准确的得到RTL级描述所需要的FPGA片上资源使用量,是一个很关键且重要的问题。虽然在国内也有部分针对大型设计提供EDA及FPGA原型验证厂家,但是对于在划分阶段涉及的资源估算问题在我国国内暂时没有可商业使用的较成熟的解决方案。</p><p>随着FPGA设计规模的越来越大,对于片上资源估算这一环节的重要性越发明显,也是必不可少的步骤,使得FPGA资源估算这一问题也逐渐成为学者和EDA厂商的研究重点,随之而来的也是多种多样的估算方法也都各有优劣。</p><p>2008年Xilinx公司Paul Schumacher 和 Pradip Jha提出由于用户在对FPGA设计的开发使用过程中,无法规避对设计进行逻辑综合这一步骤,从而可以通过使用快速逻辑综合生成的网表结构,通过在设计的宏观层面对现有的器件匹配库对原设计进行匹配替换,从而得到初步的资源估算结果,使用该方法可以较快速的得到不计精度的资源粗略估计值[17]。</p><p>2008年Xilinx公司快速资源估算模型[17]</p><p>2011年代尔夫特工业大学Roel Meeuws等人提出可以通过深度学习建立基于统计方法的高级定量硬件预测模型设想,并做出了初步的验证,为人工智能在资源估计这一问题上的实现建立可行性分析[11]。</p><p>2017年法国瓦伦西亚大学Mariem MakniLAMIH发布的论文中提出一种面向异构FPGA的SoC片上资源估算方法,其出发点是通过结合HSL(High Level Sythesis,高层次综合)报告构建模型对布局后FPGA真实面积进行估算[13]。</p><p>2018年Steve Dai,Yuan Zhou等人在IEEE会议上发表的论文中提出了一种通过提取HLS报告相关信息特征对FPGA布局布线后资源及时序进行预测的方法,并且达到了一个较好的预测结果,由于HLS是比RTL级在设计流程上更高层级、更抽象的表述方法,所以该方法的提出进一步为通过RTL级特征预测实际所需FPGA片上资源提供了可行性[12]。</p><p>通过对国内外研究现状的分析,我们可以发现在面向高密度FPGA原型验证系统的RTL级资源估算方面我国还存在较大的待填补的空白。</p><p>研究的意义</p><p>对于高密度FPGA原型验证系统而言,面向的设计都是规模上千万门或设计规模超过亿门,更有甚者规模超过百亿门,需要上百片当代先进FPGA才可容纳下整个设计,但是对于给定的RTL描述,它所需的FPGA片上硬件资源数量一般需要在完成逻辑打包和布线后,才可以全部得到。但对于规模较大的电路设计,从RTL描述到布线的设计综合流程往往需要花费几个小时乃至数十小时。当出现片上资源不足的问题时,设计者需要修改RTL描述并进行耗时较长的设计综合流程迭代。</p><p>若用户的设计超过百亿门时,进行一次迭代所耗费的时间成本与人力成本都将是不可预计的,所以若可以在不进行综合、布局布线等流程时快速获得所需要的所需要资源的估计值,将会为缩短开发人员的迭代周期提供帮助。同时由于高密度FPGA原型验证划分阶段需要以设计资源使用情况来划分合理的分割边界,合理的分割边界将会对设计在满足硬件FPGA组网前提下为系统的运行,规划,验证,调试提供良好���帮助,而分割边界的确认需要以RTL设计中的每个层级中每个节点的Instance的各项资源作为依据。</p><p>综上所述不论对于开发人员还是对于高密度FPGA原型系统而言,能够快速且精确的获取到大型设计所需的FPGA片上资源及对应层级所需的资源的估计值将具有巨大的意义。</p><p>主要内容及组织结构</p><p>针对我国需要开发具有自主知识产权的大型FPGA原型验证流程和相应的支持EDA软件,本文首先介绍了FPGA的基本结构及大型FPGA原型验证流程中的逻辑综合、技术映射与机器学习模型的一般方法作了详细描述,最后分别以上述基本流程为基础实现了以传统流程为基础的快速资源估算模型及以机器学习为基础的RTL级资源估算模型。本文的组织结构如下:</p><p>绪论主要介绍了当前集成电路设计阶段中验证阶段的重要性及相关的验证手段,并介绍了高密度FPGA原型验证系统与快速资源估算在RTL划分阶段的重要性、意义与待解决的关键问题,并对论文中的主要工作内容进行简要叙述。</p><p>FPGA资源估算方法介绍了FPGA的基本结构与资源组成,并进一步介绍了FPGA设计与验证流程中的快速逻辑综合与技术映射的相关原理,为第三章资源估算模型的实现打下基础,同时分析了EDA工具与机器学习的可能性,并着重介绍了本文第四章实现所用的特征提取方法与机器学习模型。</p><p>快速RTL级资源估算模型的设计与实习本章主要介绍了基于C++与第三方Parser,结合第二章所述的相关原理与方法,如何设计及实现RTL级设计进行快速资源估算的模型,并再次基础上为进一步提升运算速度与估算准确度并满足高密度FPGA原型验证系统RTLPartition的需求,设计并实现了BottomToUp算法,并论述了模型中增加的优化方法与约束项。</p><p>基于机器学习的RTL级资源估算本章主要结合第二章所述的机器学习模型方法,通过分析进一步RTL语法与综合、技术映射的关系,基于C++实现了面向RTL设计的自动化特征提取器,并通过尝试多种机器学习模型,基于Python构建了面向RTL级设计的机器学习资源估算模型,并使用多个Case进行验证,并对模型的预测结果进行分析。</p><p>总结与展望总体概括了论文的工作,并总结了论文中可改进的方式方法与方向。</p><p>FPGA资源估计方法</p><p>FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。FPGA在这样强烈的市场需求下,应时而生。相对于其他相同种类的芯片,由于其可反复擦除的特性,使得基于FPGA进行研发的容错率更好,成本降低。在目前的多数集成电路研发团队的研发过程中,研发团队会先基于一定数量的FPGA芯片对集成电路功能、算法进行实现,并根据实际情况进行修改直到设计达到预期的效果,最后再将达到要求的设计用ASIC实现并最终投入生产。</p><p>FPGA的本质结构是在现场可编程的门阵列芯片。但FPGA实际上并不是仅依靠简单的门级结构所组成。本章将主要介绍FPGA的基本构成资源及高密度FPGA原型验证的基本流程。</p><p>FPGA基本结构与资源组成</p><p>FPGA的基本构成包含以下部分:</p><p><em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em>(Logic Block,LB)也就是我们常说的基本逻辑单元,可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,<em class='similar'>其本质都是由可以实现任意电路逻辑的可编程部分触发器即Flip-Flop等数据存储电路和数据选择器组成</em>[43]。逻辑块是在FPGA设计开发或原型验证流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar'>(Configurable Logic Block)</em>,是以LUT来构成的。</p><p>第二部分则是用以组成信号输入和输出的重要部分即IO块,主要用于与FPGA外部信号进行交互,随着电路功能的逐步增强,外部IO模块也逐渐成为多FPGA原型验证系统中的紧俏资源。</p><p>第三部分是连接FPGA内部互联资源的内部布线资源。</p><p>FPGA基本组成图示</p><p>上述FPGA三部分主要组成具体包括以下内容:<em class='similar'>输入输出块、</em><em class='similar'>可编程的内嵌式RAM块、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>内部布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更先进的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在上述FPGA的结构中,设计者及支持EDA软件中最关心、最重要的资源种类是可编程逻辑单元,它由LUT和FF所组成。LUT在功能上实际等效为一种特殊的静态存储器SRAM。</p><p>可编程逻辑单元中,LUT表示的是一张内存表,其存储的字数或容量实际取决于存储地址的位数。FPGA上LUT的基本存储单元大多使用静态随机存储器实现。LUT单元的具体结构如图2.2所示<br />LUT结构图示</p><p>如图2.2中所示的查找表,它拥有三个输入,则说明其可实现任何逻辑运算函数为三输入。一般输入的LUT由个静态随机存储单元和一个输入的数据复选器组成。</p><p>LUT基本工作原理</p><p>LUT基本工作原理如图2.3所示,上图左侧为电路的实现逻辑及真值表,上图右侧则对应的等效查找表。由图2.3可以知,查找表中的实际内容是将逻辑的输入等效转化为对应的存储地址,对应的输出的则是存储地址中的具体内容。最终的结果是查找表将对应的复杂逻辑运算对等的映射为存储器中的数值,这也是使用FPGA进行验证效率远远高于使用软件模拟的方法的主要因素。所以LUT资源是在对大型集成电路设计使用FPGA进行原型验证时的紧俏资源。此外,当面对的是时序逻辑电路,则FPGA会通过在每个查找表的后侧通过触发器的配置来完成。</p><p>D触发器</p><p>可编程逻辑单元中的另一种重要资源FF(Flip Flop)触发器,其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。触发器电路之间是存在连接关系的或存在直接联系的,从而形成数字集成电路的逻辑门。在FPGA中存在有多种类型的FF,如切换触发器、重置触发器、JK触发器和D信号触发器等。常见的触发器结构通常包含最多2个输入信号、时钟信号及输出信号。触发器资源通常在大型RTL设计进行高密度FPGA原型验证时也是一种常常面临资源紧俏的情况。</p><p>FPGA逻辑综合与技术映射</p><p>在本文中提到的FPGA原型验证方法流程中的起点如图2.5均为RTL级硬件描述语言代码,故本章我们先对硬件描述语言verilog HDL语法及逻辑进行简略的介绍,同时进一步介绍基于Verilog HDL的逻辑综合及工艺映射基本原理及基本算法,上述内容将为后续我们进一步建立可工程化的快速资源估算模型提供基础。</p><p>行为级硬件描述语言</p><p>FPGA设计基本流程</p><p>Verilog HDL是以软件编码的形式来表达硬件行为级的一种高级硬件描述语言,其通常以文本或字符的形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示所期望的电路实现的行为逻辑或复杂的逻辑运算表达等。<em class='similar'>Verilog HDL是当前集成电路开发与设计环境中最常使用的的两种硬件描述语言之一,</em><em class='similar'>其在20世纪80年代中期开发出来。</em>根据IEEE标准所说明的,<em class='similar'>Verilog HDL是一种用来描述和创建电路系统所</em>有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>修改[16]。</p><p><em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>通过使用连续性赋值表达式,用于在实际运行中驱动FPGA中的连续线网,<em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,每个模块的内部代码将用于描述该模块所对应的逻辑功能或行为描述[16]。这些模块将被开发者进行抽象,然后通过线网结构来进行连接或通信。</p><p>而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,首选通过使用Verilog HDL等硬件描述语言开发寄存器传输级即RTL级代码来描述电路设计的行为级逻辑。RTL级描述通过逻辑综合得到电路网表(Netlist),通过对网表进行优化、技术映射、FPGA布局布线等操作后,最后生成FPGA配置数据(bitstream)。其中对于大型原型验证系统最为关注的前端工程就是逻辑综合和技术映射,这个过程是验证Verilog HDL语法正确性和计算该设计所需FPGA片上资源总数的重要过程。其中逻辑综合和技术映射的过程就是将Verilog HDL语言描述的寄存器级代码转换映射至具有工艺概念的逻辑器件的过程,也是本文中结合机器学习人工智能进行FPGA资源估算设计过程中重点关注的过程。</p><p>FPGA逻辑综合</p><p><em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从使用硬件描述语言构造的行为级描述电路的抽象级模型构造出对应的门级电路网表的过程。</em></p><p><em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>如HLS综合;本文将重点关注逻辑综合的基本原理,而逻辑综合是将开发者编写的RTL级描述代码转换至包含有多级触发的逻辑门级的过程,也是在FPGA片上资源估算过程中关注的重要步骤之一,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。</p><p>FPGA逻辑综合流程</p><p>综合是整个ASIC设计流程中的一个中间步骤,综合后生成的网表文件,其本质是基于导线来进行连接的RTL级功能块(如FF、LB和MUX等)所组成。综合产生网表文件后,逻辑优化器会读入经过初步逻辑综合后生成的门级网表,下一步根据使用者提前配置的相关约束对网表进行针对性的优化,如时序、面积等。并且,这些资源约束或称为面积约束和时序约束也能够指定逻辑综合器合理的选取或生成RTL级功能块,逻辑综合流程如图2.6所示。既然综合器的目标是能将硬件描述语言转换成为底层的门级网表,那么综合器必定有一种映射的机制,能够实现Verilog代码中的某些变量、组件映射成对应的硬件元件,这种映射机制将是后续我们基于机器学习进行资源映射方法研究所重点关注的对象。</p><p>由于本文中主要涉及计算RTL模块构造器从工艺库中提取对应的语法及模块进行Technology Mapping映射后所得到的资源,所以当我们聚焦于本文所述的基于机器学习资源估算模型,更加关注于Verilog HDL语句是如何被映射成实际硬件器件的,如:数据类型将被映射成为何种硬件,<em class='similar'>常量是如何进一步转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。</p><p>1、储值单元的综合原则</p><p>对于FPGA上的实际硬件主要有三种基本的存储数值的单元分别是:线网、锁存器、触发器,分别对应于Verilog语言中的net和reg类型关键字,其综合的映射原则是对net类型的关键字在综合后将映射为FPGA片上的布线资源,而reg类型关键字综合后将根据行为级描述的逻辑可能被综合为片上布线资源、触发器资源或锁存器资源即存储器资源,当reg在always模块中即时序电路逻辑中以临时变量被使用时其综合结果取决于设计的具体逻辑实现[44]。</p><p>2、连续赋值语句的综合原则</p><p>连续赋值语句综合图示</p><p>连续赋值语句(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中逻辑综合器会将该语句右侧的表达式逻辑进行计算,用于驱动该语句中左侧的net类型变量,连续赋值语句的右侧表达式中逻辑功能实现后,赋值表达式中信号的改变都会被立刻表现再被赋值的变量数据上[16]。</p><p>3、过程赋值语句的综合原则</p><p><em class='similar'>过程过程赋值语句</em>(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现与连续性赋值相似,</em><em class='similar'>即从赋值运算符即‘=’或‘&lt;=’的右侧计算后抽取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em><em class='similar'>但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,</em>且只有Always语<em class='similar'>句块中的过程赋值语句才可以被综合器综合,</em><em class='similar'>若出现在initial语句块中将被仅用于仿真。</em><em class='similar'>过程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(Non-blocking Assignment Statement)</em></p><p>阻塞赋值语句综合</p><p>阻塞赋值语句综合图例</p><p>阻塞赋值语句简而言之就是在一个always语句块中,语句的执行顺序是依据一定的规则有规律的顺序执行,在综合时将会在依据赋值语句逻辑原理结合always块的触发器来实现逻辑综合,阻塞赋值语句RTL级描述与电路映射如图2.8所示。</p><p>非阻塞赋值语句综合</p><p>非阻塞赋值语句综合图例</p><p><em class='similar'>非阻塞赋值是在always块中的语句都是并行执行的,</em><em class='similar'>非阻塞赋值语句RTL级描述与电路映射图2.9所示,</em>对比上图可以得到对于一个always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。</p><p>4、逻辑运算的综合原则</p><p>进行逻辑综合时Verilog HDL语法中的逻辑运算符将会被直接转换成对应的基本逻辑门,如与或非、异或门等[43]。</p><p>非阻塞赋值语句综合图例</p><p>5、算术运算符的综合原则:</p><p>在Verilog HDL语句中支持各种算术运算符如、、、等,在进行综合时RTL构造器会将其构造为加法器、减法器、除法器等源语器件。如图2.11所示为加法运算综合后器件映射图。</p><p>算数运算符综合图例</p><p>always语句块的综���原则</p><p>在Verilog HDL设计中用的最多的就是always语句块,always关键字用于描述组合逻辑和时序逻辑,两种逻辑的主要区别在于敏感触发信号是否为时序信号,alway语句块中多包裹其余语法使用,单独使用不具有任何意义。</p><p>if及条件语句的综合原则</p><p>在Verilog HDL语句中的单条if-then语句常表达条件判断行为,故常被综合为MUX数据复选器,若为嵌套组合预计,常会被逻辑综合为收到触发条件控制的纯组合逻辑电路,如图2.12所示。</p><p>if语句综合图例</p><p>case语句的综合原则</p><p>在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。</p><p>case语句综合图例</p><p>10、循环语句的综合</p><p>对于循环语句,在逻辑综合时依据行为级的逻辑描述若其循环体内部逻辑不存在依赖性或关联性,则循环体内部语句将被展开为并行语句后进行逻辑综合,且语句执行先后顺序不会影响到最终的结果,如:For循环语句在逻辑综合后会依据循环体内部的逻辑构成级联的链式组合逻辑电路。</p><p>循环语句综合图例</p><p>11、函数语句的综合</p><p><em class='similar'>在verilog HDL语句中。</em>function如C++的内联函数一样,进行逻辑综合时,将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做单纯的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。</p><p>函数语句综合图例</p><p>FPGA技术映射</p><p>在综合优化过程中,<em class='similar'>技术映射是将技术映射作为综合优化的重要组成部分,</em><em class='similar'>也是FPGA支持软件工具EDA中最为关键的部分,</em>技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>由于其重要性,国内外也研发出了一些列针对不同目标的工艺映射办法,面向面积优化、面向时序约束等</p><p><em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为实际转换为FPGA片上器件的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>运行速度等方面相当重要。</p><p>工艺映射流程图</p><p>技术映射的本质是将电路所描述的行为逻辑所对应的布尔网络,通过算法与特定FPGA的工艺器件库,将布尔网络转换为对应FPGA最小逻辑单元的过程。其目的是对用户输入的RTL级电路经过逻辑综合后构成的布尔网络通过先进的算法来进行划分,使得原设计中的每一小块电路的逻辑功能可以借由FPGA的一部分CLB来实现。我们可以参考图2.16来进一步对技术映射的流程进行分析。</p><p><em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em></p><p>由图2.16可以看出划分是工艺映射流程的第一个步骤,划分的本质是对已经获得的用以表示电路逻辑的布尔网络依据其所实现的功能逻辑进行分割,划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。</p><p>电设计转化为DAG图</p><p><em class='similar'>逻辑分解是则将电路进行在逻辑上等价的一种转换,</em><em class='similar'>其根本目的是将复杂的逻辑单元用最基本的逻辑形式来进行表达,</em><em class='similar'>以便于后续的器件匹配和映射</em>[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em></p><p>逻辑划分</p><p><em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。</p><p><em class='similar'>在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,</em><em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。分离出满足器件要求、用户约束的部分子图来<em class='similar'>进行匹配</em>,<em class='similar'>并从匹配集中选出对应的器件库单元,</em><em class='similar'>完成布尔网图到工艺网表的实际映射。</em><em class='similar'>要保证每完成的一组匹配单元,</em><em class='similar'>其每个单元的扇入和其他组的匹配后的单元的扇出进行相通,</em>且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向<em class='similar'>是如何在满足一定约束的条件下分割布尔网表、</em><em class='similar'>如何选取最合适的匹配集,</em>从而满足用户所期望的对面积、<em class='similar'>功耗、</em>速度的需求。当完成技术映射后,<em class='similar'>EDA工具将以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。</p><p>器件覆盖</p><p>下面我们通过分析具有代表性的FlowMap的LUT工艺映射原理,借由以下实例对工艺映射流程进行进一步说明。</p><p>无论多么先进的FPGA芯片中其基本资源中其查找表的输入数是既定的,如LUT1、LUT2、LUT3等,基于图2.2可知,查找表可以实现所有输入不大于其本身输入数量的任意逻辑。而FPGA的工艺映射的目的就是要从目标电路的布尔逻辑图中不断划分出输入数在组成该FPGA的最小查找表之内的等效逻辑。</p><p>首先将图2.17中的门级网表转换为图中的DAG有向图的方式来表示。最上层的节点成为主输入,最下层的节点称为主输出,从而可以得到如图2.18所示的映射范围,图2.19所示为在映射范围下进行切分和标注求解的过程及将映射范围的有向图依据主输入及主输出进行逻辑分层,从而标注拓扑序列,进而完成覆盖。其具体步骤伪代码如图2.20所示。</p><p>Mapping算法伪代码</p><p>通过上述计算可以得到每一层的标注为依据上层计算所得出的最小值,从而可以保证使用最浅的逻辑层深度。之后对电路的主输出开始进行器件映射,每映射一个后主输出将发生变更,对所有的主输出依次进行算法映射后,便可得到相对应的查找表及网表图,如21所示。</p><p>对目标电路进行切分和映射方法的历史发展中,有很多根据不同工艺、不同划分或覆盖思路形成的优秀技术映射算法,如:哥伦比亚大学Steve Wilton团队所开发的更倾向于改善逻辑电路映射后功耗的EMAP算法、多伦多大学Stephen Brown团队所开发的应用比较广泛的IMAP算法等[2]。</p><p>机器学习模型与资源估计方法</p><p>本章前两节主要叙述了关于面向FPGA的逻辑综合与技术映射的基本流程,为本文后续建立基于传统意义上的快速资源估算模型建立基本方法论,而本节将主要介绍再上述两节所述的传统资源获取办法的框架基础下,结合机器学习来构建的FPGA设计资源估算的可行性与模型的方法,包括机器学习与EDA相结合的可行性、随机森林模型,人工神经网络(ANN)及学习模型评估指标。</p><p>机器学习与EDA结合的可行性</p><p><em class='similar'>机器学习是面向多学科的交叉学科,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行对应知识体系的划分来有效的提高学习效率的方法</em>[3]。</p><p>通过机器学习的定义同时结合FPGA设计逻辑综合流程及技术映射原理,我们可以得出对于大型FPGA设计在综合阶段存在的资源估算的时间长的弊端,我们可以使用机器学习方式以Verilog HDL的各种语法及参数的数量及值作为特征,Vivado综合的资源数值为标签,来训练监督学习的回归模型,从而实现快速的资源估算。基于机器学习实现资源估计方法的流程如图<br />机器学习实现RTL级设计资源估算流程</p><p>特征提取方法</p><p>对于机器学习或人工智能而言,模型的选择与好坏并不能最终决定预测精度的上限与下限,最终模型的上限取决于特征与样本的优劣,所以特征对于机器学习模型的学习与预测是相当重要的。</p><p>特征的优化和清洗将对机器学习最终的结果产生较大的影响,所以在选择学习模型与训练器前需要先对样本进行特征提取,对于在RTL级进行资源预测这个命题,我们需要在RTL级提取尽可能多的语法特征,从而确保不会丢失重要特征,虽然会获得很多无关特征或冗余特征,但在进行特征工程及训练模型迭代时可以进一步对特征进行优化,从而保留相关特征和重要特征。</p><p>由于RTL级设计是基于Verilog HDL语言开发的编程语言,所以我们采用尽可能细致的特征提取方法,即将Verilog HDL抽象为数据结构,并结合IEEE 1800所示Verilog语法标准,通过进一步解析数据结构来尽可能全面的提取Verilog HDL语言的语法特征,从而构建在基于2.2节原理的基础上的合理特征集。具体的特征提取算法与特征提取的构建将在错误!未找到引用源。进行详尽的阐述。</p><p>随机森林</p><p><em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推行出的一种比较先进的面向机器学习的算法。</em>这个算法是多学习集成学习的典型模型之一。</p><p>Bagging</p><p><em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>它的算法核心是基于自主采样法来构造的,<em class='similar'>即给定一个数据集拥有固定m个数据样本,</em><em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em><em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em><em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样样本集。</em>由式(2-1)可知采样集中将会出现训练集中约三分之二的数据[44]。</p><p>(2-1)</p><p>通过上述算法可以采样出个含个训练样本的采样数据集,随后使用每个采样集对弱学习器进行训练,再通过将这些弱学习器的预测结果进行进一步的数据结合,从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的时间复杂度为,</em>则通过上述方法可知该算法的复杂度约为,<em class='similar'>考虑到采样与决策时的时间复杂度很小,</em><em class='similar'>而通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em><em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、较高学习效率的集成学习算法[49]。</p><p><em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>如何预测结果的降低方差是Bagging算法主要关注的方向,</em><em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显</em>[50]。Bagging的算法伪代码如图2.22所示。</p><p>Bagging算法伪代码</p><p>决策树</p><p>决策树是一种常见的机器学习算法,决策树算法的最终目标是构造具有泛化能力强,处理未见样本能力强的二叉树,该树能够对泛化样本进行正确且合理的决策,其基本流程遵循基本的分治思想,决策树学习算法伪代码实现如图2.23所示。</p><p>决策树学习基本算法</p><p>显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。在决策树的决策过程中我们更关心的肯定是如何划分,或者说如何能够使得划分的特征是特征集中的最优属性,同时考虑划分的特征类别尽可能的一致,即结点的&quot;纯度&quot;,决策树中衡量一个结点的纯度的高低有以下几类指标:</p><p>信息熵公式:</p><p>(2-2)</p><p>增益率公式:</p><p>(2-3)</p><p>基尼指数:</p><p>(2-4)</p><p>信息熵、增益率与基尼指数将很好的描述一个数据节点对最终预测结果间的信息相关度,从而保证决策树在每个分支进行决策时尽可能的提高决策的正确性。总的来说决策树算法是比较简单的一种基于0、1对数据进行划分的简单决策型机器学习算法,决策树还不能满足本论文中对RTL级设计进行资源估算这种复杂命题,但是使用多颗弱决策树构成的随机森林,将从决策复杂度上较好的满足我们对资源估算这种复杂问题的计算需求。</p><p>随机森林</p><p><em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入一种随机特征选择机制,</em><em class='similar'>并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em><em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优特征用于下一步的划分</em>[30]。</p><p>随机森林在花样繁多的决策与回归命题中展现了远远超乎预期的强大的性能,随机森林通过增加随机属性的选择这一弱小的改动所构成的源于Bagging的学习期,成功的继承了Bagging中所具有的多样���学习方法,而且由于随机森林中若学习器的选择多样性不仅来自样本扰动,还来自本身样本属性的扰动,这就使得最终集成后的强学习器在泛化性能上有较好的提升,且可通过多个弱学习器之间差异度的互补来增强其性能。</p><p><em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar'>泛化能力强、</em>鲁棒性强等多种优势,可以非常有效的避免模型在学习过程中过拟合的现象出现,适用于拥有高维度的样本数据的处理。</p><p>随机森林的回归预测结果是棵决策树的预测结果进行求均而得到的,它满足以下定理:</p><p>定理1当时,</p><p>(2-5)</p><p><em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar'>则表示一课决策树的平均泛化误差即</em><br />(2-6)</p><p>定理2对所有随机生成的训练集都有,</p><p>(2-7)</p><p>式(2-7)<em class='similar'>中是在与相互独立的情况下,</em><em class='similar'>残差和的加权相关系数。</em></p><p><em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em><em class='similar'>随机森林回归选择对相关系数进行加权处理。</em><em class='similar'>随机森林</em>的具体算法步骤伪代码可概括为下图2.24所示。</p><p>随机森林模型算法伪代码</p><p>人工神经网络</p><p><em class='similar'>深度学习的核心是人工神经网络,</em>其在当代用途广泛、功能强大并具有良好的扩展性,<em class='similar'>使得其非常适合处理大型和具有高度复杂的机器学习任务,</em>例如图像识别分类、或者语音识别等[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。</p><p>感知器</p><p>神经元计算图示</p><p><em class='similar'>感知器架构是最为简单的神经网络基础结构模型之一。</em>其结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar'>也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。</p><p>(2-8)</p><p>sgn(z)={█(-1,&amp;z&lt;0@0,&amp;z=0@+1,&amp;z&gt;0)┤(2-9)</p><p>感知器是一层阈值逻辑单元单元所构成的,<em class='similar'>每个阈值逻辑单元单元与全部的Input信号相连接。</em><em class='similar'>当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,</em><em class='similar'>通常将这一层的全部神经元节点称为全连接层。</em><em class='similar'>所有与输入信号相接的全部神经元形成输入神经层,</em>用以与感知器的输入数据互联。同时,每一个神经元会特别增加一个具有特殊意义的偏置特征,并通过特殊的神经元来保证其输出始终为1。具有,作为输入的感知器如图2.26所示。该感知器可以将输入的数据同时借由输入层来分为多个不同的0/1类,并作为多输出。</p><p>感知器结构图示</p><p>借助线性代数的数学关系,通过公式(2-10)可以计算出当存在多个输入时计算全连接层感知机的输出结果,且计算是高效的。</p><p>(2-10)</p><p><em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em><em class='similar'>同时每个训练样本进行预测。</em><em class='similar'>从而对产生错误</em>预测的神经元的权重进行调整,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。</p><p>(2-11)</p><p>多层感知机</p><p>多层感知器也称深度人工神经网络,则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU作为隐藏层和一层输出层组成。</em><em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em><em class='similar'>每一层都拥有一个偏置神经元并全接至下一层神经元。</em></p><p>多层感知机结构图示</p><p><em class='similar'>常见的多层感知机的网络结构是如图2.27所示的多层级结构,</em><em class='similar'>每层的单个神经元与下一层神经元之间实现全部连接,</em><em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em><em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em><em class='similar'>最终结果由输出层输出预测结果;</em>换句话说,<em class='similar'>输入层只用于接收样本数据的输入,</em><em class='similar'>隐藏层和输出层包含函数神经元来对输入的数据进行学习。</em><em class='similar'>神经网络的学习过程是根据训</em><em class='similar'>练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>神经网络所学习的主要内容包含在连接权重和阈值中。</p><p>当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,可进行前向传播和后向传播。只穿越电平两次,一前一后两种传播算法可以计算每个模型参数的网络误差梯度。误差梯度是用以学习如何更好的修复每个连接权重和每个偏移项错误。当找到这些梯度时,会对梯度进行有效的梯度下降运算,直到梯度难以拟合,然后它会更新整个过程。常见的DNN网络超参数与典型值如表2.1所示,后续基于机器学习建立快速资源估算模型会进一步对超参数进行调整及介绍。</p><p>典型多层感知机架构</p><p>机器学习性能评估指标</p><p>评价模型性能的指标有很多种,需要我们根据特定的任务选择合适的评价指标。不恰当的评价指标不仅无法模型进行评估,反而会造成误导,得出错误的结论。一个评价指标可以展现模型在某一方面的能力,所以一般情况下,需要构造多个评价指标,来对模型进行全面的分析。针对大型RTL设计的FPGA资源估算模型的需求分析,其为回归问题模型,对于回归问题模型的特点有如下几种模型性能评估指标:</p><p>均方误差</p><p>均方误差是在回归问题的机器学习模型中常见的衡量泛化误差的学习指标,均方误差是反映样本真实值与实际预测值之间差异程度的度量[20]。评价点估计的常用标准即均方误差均方误差公式如(2-12)所示。</p><p>(2-12)</p><p>式(2-11)说明,<em class='similar'>均方误差由点估计的方差与偏差的和的平方两部分组成。</em></p><p>均方根误差</p><p><em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习预测的精度。</em><em class='similar'>这也是均方根误差在工</em>程领域中尝尝作为评估指标的理由。因此,均方根误差是常用来度量预测值同真实值之间的偏差,其计算过程公式如(2-13)所示。</p><p>(2-13)</p><p>3、R-Squared</p><p>是统计学里常用的统计量,的名字是coefficient of determination,另一个名字是Nash-Sutcliffe model efficiency coefficient。给定一系列真值和对应的预测值,的定义如公式(2-13)所示。</p><p>(2-14)</p><p>的含义是,预测值解释了变量的方差的比例差距,其度量的是预测值对于实际值的拟合程度。进一步理解,假定的方差为1,则使用表示该模型之后,的残差的方差减少了多少。比如等于0.8,则使用该模型之后残差的方差为原始值方差的20%。</p><p>:最理想情况,所有的预测值等于真值。</p><p>:一种可能情况是&quot;简单预测所有值等于平均值&quot;,即所有都等于真实值的平均数。</p><p>:模型预测能力差,比&quot;简单预测所有值等于平均值&quot;的效果还差。这表示可能用了错误模型,或者模型假设不合理。</p><p>的最小值没有下限,因为预测可以任意程度的差。因此,其范围是。</p><p>快速RTL级资源估算模型的设计与实现</p><p>本章将结合对第二章所述的FPGA逻辑综合原理与技术映射原理的研究,使用C++语言设计并构建基于传统框架下的快速资源估算模型,并基于该模型结合第一章所述高密度FPGA原型验证系统所需要解决的关键问题及基本需求增加算法优化与约束项优化,实现符合基本原理与能够解决实际工程问题的快速RTL级设计资源估算模型。</p><p>Verific及相关数据结构</p><p>Verific平台介绍</p><p>Verific Design Automation是Verific公司开发的一款用于解析与构建SystemVerilog、VHDL和UPF的解析器平台,使其客户能够以低成本快速开发高级EDA产品。</p><p>Verific分析创建解析树并执行类型推断以解析标识符的含义。解析器/分析器模块支持整个系统Verilog IEEE 1800(包括Verilog IEEE 1364)、VHDL-IEEE-1076和UPF-IEEE-1801语言。生成的解析树/数据模型附带了大量成熟的C++ API。Verific的解析器平台分发为C++源代码,并在所有32位和64位UNIX、Linux、MAC和Windows操作系统上进行编译。Verific的解析器平台目前在全球许多公司的生产和开发中使用,从EDA初创公司到《财富》500强半导体供应商等。</p><p>我们将使用Verific,并基于Verific生成的语法树来完成后续的模型构建操作,由于Verific具有当前行业认可的Parse和Analyze功能,并基于C++平台实现开发,提供广泛的语法树API作为二次开发的基础,故我们选择在Verific的基础上实现可商业化使用的快速资源估算模型。首先需先对Verific所构造的基本数据结构进行相关了解及分析,从而选择构造合理的数据机构及API进行模型建模实现;Verific主要数据结构分为以下两个主要部分:基于RTL的语法树结构和基于Netlist的Database结构,下文将主要介绍构建资源估算模型使用的主要数据结构。</p><p>Parse-Tree数据结构</p><p>Verific在RTL级别Verilog VHDL的语法树Parser上有丰富的经验,通过对语法进行文本级别的流解析在内存中构建层次树(Hierarchy-Tree)结构用以表述Verilog VHDL语法信息,层次结构树(hier Tree)是设计层次结构的独立于语言的表示形式。设计的层次结构由Verilog语言中使用的模块实例化和生成语句定义。随后在本文档中,我们将此数据结构称为hier树或Parse-Tree。这个层次结构树结构是一个轻量级的静态详细层,位于分析的解析树之上,保存着关于各种设计对象的关键信息。树的每个节点都存储有关它所表示的设计对象的信息,以及该层次结构路径中特定于该设计对象的参数和泛型等常量的值。语法树结构主要由以下几种类结构:</p><p>①VeriTreeNode是所有Verilog树节点元素的基类。因此,它包含行文件信息和在所有解析树节点上的数据信息。其中VeriExpression、VeriIdDef、VeriStatement等中非常常用的派生类,用于对Verilog Design作进一步数据构造,下图为VeriTreeNode的继承示图:</p><p>VeriTreeNode类视图</p><p>②VeriIdDef是标识符定义树节点,是标识符节点的基类。Verilog中声明的任何标识符都将成为VeriIdDef结构类。下图为VeriIdDef的类关系视图,其中VeriidDef的继承类VeriModuleID、VeriOperatorID、VeriInstID等为进一步对Verilog语言语法的描述类。</p><p>③VeriExpression是所有Verilog表达式解析树节点的基类。其继承类用于描述包括常量、名称引用、运算符以及出现在实例化端口关联列表和模块端口列表中的端口关联信息等。下图为VeriExpression的类关系视图。</p><p>④VeriStatement是所有Verilog statement 节点的基类,包括所有Always语句块等语法</p><p>⑤VeriModule位于任何Verilog解析树的顶部,是模块节点的基类。它以解析树的形式表示一个完整的Verilog模块。VeriModules存储在静态哈希表中,该哈希表表示已分析的所有Verilog模块。</p><p>VeriModule类视图</p><p>上述5种数据结构为Verific中最基本的基类,所有语法树的语法表述及存储均可由其中一种进行表述,在本文中所有RTL代码的语法将会使用上述类进行语法树处理及构造,从而获取正确的设计层级及内容。</p><p>Netlist数据结构</p><p>由于传统技术映射是在网表级的基础上通过器件库使用图划分算法,将网表节点映射至对应的器件,所以为构建基于传统方法的快速资源估算模型,也需要使用Verific的Netlist数据结构来实现,Verific Netlist Database数据结构如下:</p><p>Verific-Netlist-DataBase数据结构图</p><p>①Libset是一个单例对象(只实例化一次的对象),它包含(char*)lib_name到Library*映射的映射。Libset没有所有者,因此被视为全局对象;</p><p>②Library是Libset拥有的对象,它包含所有Module模块命名到cell指针映射的映射。库对应于它的VHDL或Verilog等价物。例如,在VHDL中,将用户实体/体系结构对分析到一个名为&quot;user&quot;的库中,然后详细描述解析树,那么将创建一个名为&quot;user&quot;的库对象并将其添加到全局库集中。</p><p>③Cell是库所拥有的对象,它包含Netlist_name到netlist*映射的映射。当处理Verilog时,单元是包含单个网络列表的模块。就VHDL而言,单元是一个可以有多种体系结构(网络表)的实体。</p><p>④网络列表是数据库层次结构中的关键组件。它是一个由单元拥有的对象,包含其他网络列表实例化形式的功能(通过称为网络、端口和端口引用的对象连接在一起)。它还包含一组自身正在实例化的引用(从其他网络列表中)。</p><p>如上图所示,基本数据结构为LibSet用以存储所有的Library库,Library库为设计网表存储基本数据结构,Cell结构对应为VHDL代码中Module模块,每个Cell尤其仅有一个对应的Netlist结构,Netlist结构用以存储该Module所有互联信息及实例化信息,如:Port、Net、Instance,包括Net位宽、方向等。</p><p>基于Verific的上述数据结构以及相关的API,使得我们可以在后续基于C++语言实现传统快速资源估算模型提供基本数据基础。</p><p>资源估算模型流程与构造</p><p>本节将主要介绍使用C++构建基于传统框架下的快速资源估算模型的算法分析及具体实现步骤。</p><p>资源估算模型流程设计</p><p>基于第二章节所述逻辑综合及资源映射原理,我们对模型的构建做出进一步的分析,模型输入为RTL级设计文件即Verilog VHDL文件,模型输出为该设计所需FPGA资源数目,其中对于面向大型RTL设计Partition中所需的最重要的关键的资源为FF及LUT,文件流如下图所示。</p><p>快速资源估算模型文件流</p><p>基于Technology Mapping的原理进一步分析,为实现传统框架下较为准确的资源估算,则需要将输入的原始设计从RTL级代码转换至Netlist级别才能实现进一步的Technology Mapping,但是由于获取最直接的网表解构就需要使用综合器对RTL设计进行综合,通过前面对综合原理的分析,可知道综合主要分为以下几步,即RTL设计细化,Flatten,综合优化,综合约束,技术映射等几个步骤,但由于需要面向大型FPGA设计,综合器耗时太长,所以我们选择通过使用Verific来对设计进行静态细化及初步细化,使RTL级设计在内存中转变为伪网表,通过在内存中对伪网表进行Flatten操作,将伪网表所有的层级结构UnGroup至顶层,从而实现与基本综合器相对应的操作的快速版本,对Flatten至顶层的设计依据TechMapping原理使用已经获得的器件库进行器件匹配,基于本节分析及初步设计结果,着手使用Verific对传统资源估算进行进一步分析及模型构建,具体流程如图所示,关键操作及相关原理将在下文着重叙述。</p><p>快速资源估算模型流程图示</p><p>资源估算模型构造实现</p><p>我们以上一节中对快速资源估算模型分析的流程进行进一步的分析,同时进行实现:</p><p>1、Parse-Design操作</p><p>通过将原始设计使用Verific的Parser接口进行设计读入,由于需要商业使用,需要考虑多种用户输入情况,首先考虑常见的通过Filelist进行读入,并支持对于文件正确性校验及报错,并支持输入文件包括.sv\\.v\\.vh\\.svh等多种文件输入,同时支持通过路径进行设计输入,并对设计进行正确性校验,如图3.6所示。</p><p>快速资源估算模型Parse-Design流程</p><p>2、Elaborate操作</p><p>通过对上一步骤获得的完整输入设计的Parse-Tree进行Elaborate,从而获得对应设计的由Verific GTec Cell构成的伪Netlist的设计文件,Elaborate后的设计语法依旧满足Verilog HDL的语法信息,RTL Elaborate会使用门级的网表来表示之的RTL级代码。Elaborate会将RTL级代码进行逻辑展开,获得具有符合电路逻辑的门级视图网络和门级逻辑电路的VerilogHDL表述,该步骤为FPGA设计流程中综合的前置步骤,为下一步进行优化的技术映射做好基础工作,Elaborate操作如图3.10所示。</p><p>RTL Elaborate操作图示</p><p>3、Flatten操作</p><p>在步骤2的基础上,我们将对设计进行Flatten操作,Flatten操作顾名思义是将现有包含层级关系的层级设计进行展平操作,也可以称为ungroup操作,参考下图样例可以更好的说明Flatten操作对于设计的操作,如图3.8所示。</p><p>Flatten操作电路图示</p><p>Flatten操作树结构图示</p><p>在FPGA设计综合流程中Flatten操作会将一些层次树底层的Module、逻辑提升至顶层,将可以合并的逻辑进行合并,同时将一些冗余的互联Net进行优化,为进步一的综合优化和器件映射做好准备,因为对于FPGA或者数字集成电路而言,它是没有层次的概念的,所以Flatten操作可以更好的让寄存器级设计与物理器件之间建立更进一步的联系。</p><p>4、基本器件库</p><p>由于我们中所设计的快速资源估算模型是面向Xilinx的FPGA的模型,所使用的基本器件库是Xilinx公司Virtex系列器件库,其中主要包含的为基本逻辑单元即CLB,具体为MUX、LUT1~6、各形式的触发器即FF、FDR等,一些IP器件由于知识产权等问题无法直接使用,如图3.10以LUT、FF、MUX为例进行说明。</p><p>RTL级基本器件库</p><p>5、Technology Mapping</p><p>对步骤4中完成Flatten后的网表文件进行Technology Mapping,具体原理如2.2.1节中所述,具体操作为:将Flatten后的Netlist网表文件依据设计逻辑对将步骤4中的器件库的器件进行匹配和覆盖使用算法为EMAP,匹配后的网表将不存在基本的门级逻辑(布尔逻辑),而将会被器件库中的基本逻辑器件所替代,如MUX、D-FLIP-FLOP触发器、4-输入LUT器件等。</p><p>6、估算结果展示</p><p>下图为以上述思路构建的快速资源估算模型的初步估算结果,如图图3.11可以获得输入的RTL设计所使用的FPGA片上LUT1-6、BUFG、FF等器件资源数量。</p><p>快速资源估算模型计算结果</p><p>快速资源估算模型优化</p><p>通过图3.11与Vivado综合后结果对比,可以发现,在无优化的情况下仅对设计进行细化及基本技术映射虽然可以得到基本的资源,且在速度上得到了有效的提升,但是存在较大的误差,通过分析Xilinx的综合器Vivado细节及TechMapping,我们可以知道在与FPGA板载器件进行基本逻辑单元及触发器映射时存在优化项,可以理解为约束项,如:面积约束、功耗约束、时序约束、逻辑门约束等多种约束;结合面向大型RTL设计分割流程的实际需求,增加以下优化方案。</p><p>BottomToUP算法的设计与实现</p><p>由于使用Verific进行Elaborate处理及Flatten后无法得到每个层级对应的资源数量,且对整个设计进行Elaborate及Flatten所花费的时间较高,同时由于该资源估算模型面向RTLPartition进行使用,所以需要每个层级每个Inst的资源用于确认RTLPartition时正确的分割边界,所以我们从Verilog HDL与FPGA片上资源映射关系角度出发,在不考虑优化的前提下,每个Module的资源是由其所例化的Instance对应的Module的资源与该Module本身的胶水逻辑所组成,如下图样例所示,红框标注分别为例化Instance与胶水逻辑。</p><p>RTL代码中的Glue Logic和Instance</p><p>以上述分析为出发点,我们希望可以结合Verilog HDL设计的结构化建模方式,以该方式为参考,能够更加准确,更加快速的计算每个Module和Instance节点的资源,我们以RTL设计及计算资源所需数据为出发,设计以下数据机构用于存储每个节点的资源,如图3.13所示。</p><p>BottomToUp算法数据结构</p><p>RTL设计树结构示意图</p><p>通过以上述数据结构,用以实现Bottom to up的计算方式,通过对RTL设计树层次如图3.14所示,进行树遍历算法及递归算法构造存储当前Parse_tree对应的树结构及查找表,该查找表用以存储已被计算过的Module的资源,同时对多个不同参数例化的Module分别计算资源同时通过匹配算法将树结构上的节点与已计算资源节点进行匹配,本算法可以最大程度的减少重复计算,同时为减少网表结构带来的peak memory过大问题,每次计算都将使用不同的库进行技术映射,并在计算完毕后进行释放。另外由于本算法设计数据结构从资源复用角度出发,在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而<em class='similar'>加快计算速度</em>。<em class='similar'>算法伪代码如图3.15所示。</em></p><p>BottomToUp算法伪代码</p><p>通过上图所示算法,在3.2节实现的快速资源估算模型的基础实现快速层次资源估算,输入为RTL级Verilog HDL设计,输出为该设计每个层级所使用的资源数量及相对应的树结构层次,若在输入时提供FPGA型号和资源,程序也会评估该设计所需要的FPGA的数量。如图3.16所示。</p><p>快速资源估算执行图示</p><p>可复用估算结果的Json文件</p><p>优化后快速资源估算模型输出报告</p><p>图3.18中为开源设计openrisc经过该快速资源估算模型新增的Bottom-to-Up算法计算所获得资源数量与每个Hierarchy对应的资源数量,从图中我们可以看到经过资源计算后设计的具体层级,每个层级前标注序号为该Instance节点名称及对应的树层级结构层次,节点后中括号内分别为RTLPartition流程所关注的十种资源数目,同时可以获得在给定的FPGA_Type、FPGA资源阈值下该设计所需的FPGA数量并且会输出如图3.17所示的一份Json文件用以存储每个Module对应的资源,便于复用。</p><p>经过同Vivado进行对比后发现,虽然该算法已经很好的解决了资源估算的速度问题,但是在准确度上还存在可优化空间及约束项,经过对逻辑综合与技术映射技术的进一步分析我们将在Elaborate后增加优化策略与约束策略,从而使估计结果更加符合实际应用场景。</p><p>冗余逻辑优化及合并</p><p>在进行逻辑综合和技术映射时,EDA综合器会对集成电路的规模、运行速度进行优化。综合的优化过程中会去掉常数输入、悬空输出等信号,还会针对源文件中未连接的输入或具有多个驱动的输出等问题报告错误或者警告[16]。若EDA工具发现设计存在部分缺陷如非关键输出悬空能,通常EDA工具都将依据自己的方式进行优化修复,但多所带的结果是可能优化结果并不满足设计者的初衷。综合常见的优化过程还对逻辑进行组合置换,从而进一步减少集成电路所需FPGA资源、功耗、并尽可能提升系统运行速度与减少阻塞。</p><p>通过前述步骤得到的快速资源估算模型,虽然已经可以得到资源的结果,同时若使用Bottom-to-Up的算法可以得到每个层级的资源结果,但是我们通过第二章的综合和技术映射的原理可以得知,在实际的综合和技术映射过程中,是对设计进行了大量的优化和处理的操作,所以如果我们不对当前的快速资源估算模型进行优化和约束,那么该模型的结果是不可用,没有价值和意义的。</p><p>所以我们为使我们资源估算的精确度更加高,所以需要符合逻辑综合和优化的过程,通过分析逻辑综合流程,在逻辑综合的工程中会对冗余逻辑进行优化,比如一些复选器或单纯的数值传递等非有效逻辑进行合并。</p><p>快速资源模型将会查找并发现没有负载或被禁用的逻辑(例如,当选择线保持高位时,驱动多路复用器上第一个选择的逻辑),并假设消耗了零资源。一旦找到一个这样的元件,所有驱动逻辑也会被移除,同时采取预防措施确保其他逻辑也不会被该元件驱动。</p><p>最小面积优化方法</p><p>通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、有效降低硬件资源消耗等,所以在快速资源估算模型中也需加入相关优化项,来对RTL设计进行进一步的优化,从而使得资源估算模型的结果更加的精确。</p><p>首先我们考虑资源共享,即在互斥条件下共享算术逻辑单元,主要有关系运算、加法运算、减法运算、除法运算等。</p><p>LUT-5 Base FPGA结构图示</p><p>根据FPGA的结构,可以知道不同系列、不同世代、不同型号的FPGA在逻辑单元的组成上是有很大区别的,比如对于赛灵思的VU440,其基本逻辑单元即CLB单元是以LUT5为基础,同理也有以LUT1、LUT2、LUT3、LUT4、LUT6为基础,支持至最高为LUT8的FPGA,由于LUT1~8之间存在换算关系,LUT的本质就是如图3.18的2进制查找表,故而2个LUT1可以合并组成为一个LUT2,同理以LUT5为Base的FPGA,可以使用多个LUT5来组成LUT6等高维度资源,从而有效的是缩小FPGA布线后使用的面积即器件使用的数量。</p><p>4输入查找表真值表</p><p>在进行资源共享优化时我们遵循以下原则:</p><p>运算符和操作数均相同,则一定可以贡献逻辑单元。</p><p>对于具有相同运算符的表达式,且操作数或操作表达式相同时,为实现逻辑共享我们可以加入一个多路复用开关来完成。</p><p>相同运算符,不同的操作或运算符,可以共用一个逻辑运算单元[16]。</p><p>不同的运算符,相同的操作数,可以共用一个逻辑运算单元。</p><p>对于运算符不相同的运算表达式,若其有且仅有一个公共的操作数,则为实现逻辑共用可以引入MUX来实现。</p><p><em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em>从而实现逻辑单元的共用。</p><p>除去资源共享优化外,本文基于对RTL代码的分析,通过对公共子表达式增加逻辑优化合并,使并借由数据结构来保存公共部分的运算结果数值,这样在模块内部后续使用相同表达式的地方则可以直接调用该值。</p><p>所以基于以上原理,在进行冗余逻辑优化和合并的基础上,可以增加最小面积优化方法,在资源估算时,以LUT4为base进行初步资源估算,在当前基础上,以LUT4之间的优化方法,我们可以以高维度LUT为Base的FPGA作为方向,将多个LUT在合理的范围内进行合并,合理的范围即在一个Module内的组合逻辑或连续赋值、阻塞赋值、非阻塞赋值等LUT合并至LUT6,从而实现以最小面积为目标的优化策略。</p><p>资源估算模型将找到具有共同输入的共同元素类型并假设共享资源。例如,如果找到两个加法器,均为 A+B,则假定加法器逻辑是共享的。对合并的元素数量设置限制,以限制扇出。同时模型将查找将使用LUT实现的二进制逻辑函数序列,并根据树的唯一输入数和输出数对其进行优化。</p><p>结果分析</p><p>快速资源估算模型无优化结果对比</p><p>快速资源估算模型增加优化结果对比</p><p>表3.1、表3.2分别为快速资源估算模型在5个基本Case下,未增加优化项与优化算法的估算结果与增加优化项及优化算法后的准确值与估算时间的对比,通过分析我们可以发现在不增加优化项及优化算法的情况下在使用资源量即电路逻辑复杂度较低的情况下准确度较好,但随着设计规模的增加电路复杂度的上升其预测资源准确度越来越差,由于对电路的过度精细化导致在面对设计规模较大的电路时由于内存原因导致无法得到估算结果,但是在时间性能上已经较综合布局得到较高的提升最小的设计时间提升约15倍,随着设计负责度的增加,在时间性能提升越明显,同时对比优化后结果可以得出首先由于设计规模较大无法计算的资源已经可以得到结果,且各个Case的估算结果准确度较好,LUT资源估算平均准确度达90.11%,FF资源估算平均准确度达88%,并且在时间性能上进一步提升,较未优化模型提升2倍,已满足在高密度FPGA原型验证系统划分阶段中对超大型设计进行快速资源估算并借以确定划分边界的实际需求。</p><p>本章小结</p><p>本章详细叙述了,在以第二章理论为基础的前提下,使用Verific基础数据结构基于C++语言构建面向高密度FPGA原型验证系统RTLPartition的FPGA设计的快速资源估算模型,同时提供多种优化及约束方案,对模型进行约束及二次优化,使得对设计在FPGA上的资源估算精确度达90%以上,并得到了较好的时间性能,在超过百亿门的电路估算时间仅需几十分钟,时间较完整的综合流程缩短200%以上,同时快速资源估算模型为支持高密度FPGA原型验证系统,为用户提供多种额外功能,如用户指定资源输入、对应不同FPGA的使用数量评估等作为商业软件对用户的友好性功能。同时也为后续基于人工智能的FPGA资源估算模型提供思路及开发基础。</p><p>基于机器学习的RTL级资源估算</p><p>对于机器学习项目,决定预测准确度的上限并不取决于模型的算法的高深或模型算法的先进性,而��定模型预测上限的是特征的全面性、准确性和样本。所以特征的选择和提取尤为重要。</p><p>本章主要阐述基于第二章中提到特征提取方法,使用Verific的Parse-tree来对输入的RTL设计进行二次解析并提取所需要的信息作为后续机器学习的输入特征。构建基于C++的自动化特征提取器并对样本数据构建数据集,并对数据集样本进行分析,洞见特征数据间的数学联系及统计学关系,并尝试多种机器学习回归模型,选择表现较好模型进行进一步训练。</p><p>Verilog HDL 语法特征分析</p><p>基于前一步骤实现的基于Verific的快速资源估算建模所获取的资源之间的映射关系,优化技巧等理论及实践基础,我们发现对于综合后技术映射的基本逻辑就是将Verilog HDL预计合理的使用FPGA上的器件来实现Verilog代码中所需要的数字逻辑,所以我们可以分析将Verilog HDL设计语言和器件间的典型关系,提取VerilogHDL中的语法特征,通过这些特征来构建机器学习模型,从而实现更加快速精确的大型FPGA设计所需要的FPGA片上资源数量,首先我们基于IEEE1801所给出的Verilog的技术文档,对VerilogHDL进行全面特征提取。</p><p>通过对Verilog HDL基本语法分析结合IEEE Verilog 标准、RTL样例设计,拟提取Verlog HDL语法特征对应关键字如表4.1所示。</p><p>Verilog主要语法类型与关键字</p><p>语法类型语法关键字</p><p>端口 Input Output Inout</p><p>线网 Wire Reg</p><p><em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符+-*/^|&amp;</em></p><p>连续赋值语句 Assign</p><p>Always过程块 Always</p><p>过程赋值语句=&lt;=</p><p>条件表达式 If else then</p><p>条件分支语句 case</p><p>循环语句 For While Repeat</p><p>函数语句 Function</p><p>RTL级设计特征提取方法设计</p><p>首先我们通过第二章的综合及技术映射原理已知Verilog HDL语句的综合原则及对应的FPGA片上器件的映射规则,所以我们基于以上原理,借由Verific的Parse-Tree对当前读入的Verilog设计进行二次解析,具体流程图如下:</p><p>特征提取器结构图</p><p>通过解析Verific读入设计时构建的Parse-tree对所有Verific进行提取主要包含以下所述特征。</p><p>(1)端口信息特征提取</p><p>首先对于FPGA上的IO资源是通过RTL中Module的端口映射而来,所以我们首先提取Module的端口信息,对于一个Module的端口信息在Verific的Parse-Tree数据结构中存储在VeriModule类下的VeriDataDeclar类下面,所以我们通过重载Verific提供的Visitor虚函数来获取端口数据类型指针,通过解析VeriDataDeclar下的数据解析出端口数量包括Input、Output、Inout,同时通过解析VeriDataDeclar下的VeriDatatype数据类型,获取对应的端口位宽,并存储为RTL_InputWidth、RTL_OutputWidth、RTL_InoutWidth特征,实现对Module端口特征信息的提取。</p><p>(2)线网信息特征提取</p><p>Verilog VHDL线网类型语法在RTL级描述中也是很重要的存在,基于第二章中描述的综合及技术映射理论可知,线网通常用于赋值语句左右,或被映射为寄存器结构,所以获取Verilog设计的线网类数据信息对于机器学习模型的训练而言应相对重要。</p><p>对于线网结构在Verilog HDL语法中主要体现为Wire和Reg关键字,在Verific的Parse-Tree数据结构中线网结构被构造为VeriNetDecl类进行存储,我们通过重载Visitor基类来获取Module下的全部的VeriNetDecl类,通过解析可获得Reg和Wire关键字的数量以及对应的信号位宽,分别存储为特征RTL_Reg、RTL_RegWidth、RTL_Wire、RTL_WireWidth特征,从而实现对Module线网信息的特征提取。</p><p>(3)操作符及运算表达式特征提取</p><p>在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行结合运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。</p><p>Verilog操作符图示</p><p>首先已知逻辑运算符、算术运算符和关系运算符等操作符在进行逻辑综合后会被综合器转换为对应的逻辑运算门,所以符号表达式的特征信息也是关键特征,所以我们通过如下方式对表达式进行解析从而获得,首先整个表达式在Verific的Parse-tree中被存储在VeriExpression类下,通过解析VeriExpression类获得表达式存储类VeriOpenbinery类,通过判断VeriOpenbinery类下的Type类型获取运算符类型,如OR、AND、PLUS、AlTERSHIFT等,并存储至特征Hash表中,通过获取运算符左右两侧表达式,通过递归算法递归解析剩余运算符两次表达式,从而获取运算符两次表达式位宽,并存储至特征Hash表中,递归完毕后既可以完成对运算符表达式的特征提取,算法伪代码如图4.3所示。</p><p>运算符特征提取伪代码</p><p>(4)连续赋值语句特征提取</p><p>连续赋值语句是在Verilog HDL语法中比较重要且常用的语句,常被综合为FF及LUT等关键器件,所以连续赋值语句的特征提取尤为重要,由于连续赋值语句常包含组合或嵌套式语法,通过IEEE标准中对Verilog连续赋值语句的定义可知,连续赋值语句左侧只能为线网结构即wire类型,而右侧可以包含逻辑运算符(&amp;、|、~)、算术运算符(+、-、*、/)、选择表达式(A?B:C)等多种语法嵌套组合。</p><p>由于需要解析嵌套语法且种类较多,所以采用递归算法对表达式进行解析,首先根据=号左右获取AssignStatement,由于左侧只能为线网结构,所以将表达式左侧存储为AssignRightWidth用以存储assign语句左侧位宽,右侧进一步根据符号进行拆分,若存在逻辑运算符则存储逻辑运算符数量如AND(&amp;)、or(&amp;)等符号特征,并存储数量,则先以符号进行左右两侧拆分,若存在括号,则先进行括号匹配,对提取出的表达式进行进一步递归解析,同时计算符号两侧位宽,并保存为ANDRIGHTWIDTH、ANDLEFTWIDTH等;若表达式右侧为选择表达式,则存储选择表达式数量为QUESTIONCOLON特征,进一步解析该选择表达式分别提取if条件并存储为QUESTIONCOLONIF特征,若if条件存在逻辑或算术运算同理递归调用进行解析并存储至对应特征,else则存储至QUESTIONCOLONELSE特征,同时解析else的逻辑与算术运算,同时存储至对应特征中,then语句则存储至QUESTIONCOLONTHEN特征中,同时递归解析Then语句中的逻辑与算术运算并存储至对应的特征统计中,算法伪代码如图4.4所示。</p><p>连续赋值语句特征提取伪代码</p><p>(5)过程结构体特征提取</p><p><em class='similar'>Verilog HDL语法中的过程机构体,</em><em class='similar'>都是由语法关键字initial或always和其块内内容语句所构成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。</p><p>Verilog Always过程块语法格式</p><p>由于Always过程块的触发是根据敏感事件列表中的变量是否可以被触发来控制,敏感事件列表通常可有1个或多个表达式来组成。</p><p>所以对于Always块的特征信息的提取,主要分为三部分:</p><p>获取Always语法块数量;</p><p>获取Always语法块敏感事件列表、并解析宽度;</p><p>获取Always语法块内容(由于语法块中包含语法种类较多,将在后续着重叙述);</p><p>在Verific Parse-tree中always块构造存储在VeriAlwaysSatement类中,通过重载Visitor函数,来获取Parse-Tree中的Always结构体的数量,通过统计数量可以获得RTL设计中Always块的数量,通过解析获取到的VeriAlwaysStatement结构中的VeriEventExpress类获取Always的敏感事件列表,由于敏感事件列表中多由表达式构成,所以通过使用前述0、0所提及的递归方法来获取敏感事件表达式的宽度,并存储至特征AlwaysEventWidth中;从而完成对Always结构体数量与Always结构敏感事件列表的特征信息提取。</p><p>Always特征提取伪代码|</p><p>(6)过程赋值语句特征提取</p><p>Verilog过程赋值语句语法格式</p><p><em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、阻塞型赋值语句左右线网数量BlockAssignRightNum、BlockAssignLeftNum;非阻塞型赋值赋值语句NonBlockAssign、非阻塞型赋值语句左右位宽NonBlockAssignRightWidth、NonBlockAssignLeftWidth,其中符号表达式部分,将被存储在对应的符号表达式特征中提取过程与方法思路与连续赋值语句一致,可参见图4.4。由于过程赋值表达式主要被用于过程块中,所以0中对语法块内容的提取将在该部分体现。</p><p>(7)If-else条件分支语句特征提取</p><p>条件分支语句对于硬件的行为描述及其重要,且常被综合为FF和LUT器件,是一种高级语言的抽象表达,故在特征信息提取时,也是重点关注的语法;</p><p>If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em><em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。</p><p>通过Verilog HDL语法可知,if-else条件分支语句的作用是复选,即通过是否满足给定的判断条件来判断下一步电路需要执行的操作或逻辑。其主要语法形式如图4.8所示。</p><p>Verilog If条件语句语法格式</p><p>由于if-else条件分支语句常用语Always过程块中,所以我们在0模块的基础上对if-else条件分支语句进行解析,在Verific-Parse-tree中,条件分支语句被存储为VeriQuestionColon类中,通过解析该类可获得if-else条件语句块数量特征Questioncolon,,由于if-else条件语句存在多条件或多if-else条件嵌套组成,所以采用递归方式分别解析if条件、if条件内容、else分支内容、then条件内容,由于if条件内容为条件表达式,所以可以采用0模块进行解析,并存储特征QUESTIONCOLONIF;if条件内容为赋值表达式,所以可以使用0中对过程赋值语句的提取方法来提取,并存储至对应的过程赋值特征中,同理可对Else内容块及Then内容块解析,并提取特征QUESTIONCOLONELSE、QUESTIONCOLONTHEN。从而完成对if-else条件分支语句的特征提取。</p><p>If条件语句特征提取伪代码</p><p>(8)Case条件分支语句特征提取</p><p>基于0中对Verilog HLD分支控制语句的分析可知,case分支控制语句与if-else语句在功能上大同小异,均是实现分支控制选择,但Case语句可以用较少的语法表达提供较多的分支选择,在实际开发中多用于表述状态机的行为级描述,其在实现多路选择控制上更加简便和直观,其通常用于描述译码或状态机,其语法格式如图4.10所示。</p><p>Verilog Case语句语法格式</p><p>在Verific-Parse-Tree中Case语句块被解析构造存储至VeriCase类中,通过统计该类数量可获得Case数量存储至CaseNum特征,VeriCase类中包括Case控制表达式及分支表到式及分支语句块,模块需要对该类及表达式进行解析,解析控制表达式可用0中所述方法进行递归提取,从而获得控制表达式数量CASECONDITIONNUM、控制表达式位宽CASECONDITIONWIDTH、以及分支数量CASTITEM,由于分支语句块内容多为赋值语句,所以可以使用0中模块进行对应特征提取。Case条件分支语句特征提取伪代码如图4.11所示。</p><p>Case条件分支语句特征提取伪代码</p><p>(9)循环语句特征提取</p><p><em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar'>while、</em>for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。</p><p>Verilog循环语句语法格式</p><p>对于循环语句其逻辑综合后为将循环体按循环次数展开,所以也需要对其提取特定特征,主要分为以下两部分即循环次数,循环体内容。</p><p>对于For循环体,由于其循环次数在for语句条件表达式部分,需要解析出for循环初始值、判断条件、补偿、从而计算出整个循环语句块的循环总次数,for循环语句块在Verific-Parse-tree中被构造为VeriFor结构,其中循环次数部分需要二次解析,通过解析后通过计算初始值-终止值/步长来获得循环次数,并存储于特征RTL_ForItem,同时将for结构体数量存储于特征RTL_ForBlock,对于循环体而言,其内容可嵌套if-else、赋值表达式等多种语法,需要使用递归算法对循环体进行解析,使用0、0中所提及的算法进行特征抽取,同时需要对统计的数量再乘以循环体个数,并存储至特征内。</p><p>对于while循环体,由于其判决条件存在与其条件表达式中,所以需要我们通过二次解析条件表达式来获取终止值,同时需要通过判断终止值的变量表达式来计算循环体次数。</p><p>对于repeat循环体,由于repeat循环体的循环次数在其循环次数表达式中,只需对循环次数表达式进行二次解析获得循环次数即可,同理使用上述方法解析循环体特征信息,并存储至对应特征中;</p><p>对于forever循环语句,只需要将Forever语句中的forever循环体内容进行解析即可完成对forever特征的提取,通过以上方式完成对Verilog循环语句的特征提取。</p><p>循环语句特征提取伪代码</p><p>(10)函数语句特征提取</p><p><em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>的语法形式如下,如图4.14所示。</p><p>Verilog HDL Function语法结构</p><p>function函数定义由于只能被定义在Module中,不被允许在Always过程块内调用且函数模块必须具备相应的IO端口用以提供外部互联。</p><p><em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em><em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;</p><p>在Verific的Parse-tree中Function被构造存储于VeriFunction类中,通过重载Visitor函数获取该RTL设计下的VeriFunction类,并统计其数量并存储至FunctionNum特征中,同时进一步获取Function的内部逻辑结构,同时对内部逻辑使用0、0、0模块中提到的方法对组合逻辑进行提取,并存储至对应的类中。从而完成对Funtcon的特征提取。</p><p>自动化特征提取器的实现</p><p>本节将叙述基于4.2节所述的特征提取方法构造对应的模块,使用C++设计并开发特征提取器程序,特征提取器流程框图如图4.15所示,输入为包含待所有待提取特征设计文件绝对或相对路径的Filelist,输出为包含特征的Fileli。使用C++14语言进行开发测试,从而完成自动多Case特征提取器的实现。</p><p>RTL语法特征提取器流程图</p><p>该自动化特征提取器,基本涵盖VerilogHDL的所有关键语法及在逻辑综合和技术映射中常用的重要语法信息。包括逻辑运算如(or、shift)的位宽信息、算术运算符的位宽信息、连续赋值运算的位宽信息、阻塞及非阻塞赋值运算的位宽信息、高级运算语法的解析如循环体、函数体、判断决策语句等。</p><p>数据集分析</p><p>数据集构建</p><p>由于机器学习本质上是使用大量的样本数据,通过计算机实现的数学模型,来探索并计算输入特征之间的数学关系,从而实现预测,所以需要使用大量的样本数据来构建数据集,所以我们使用300个Verilog HDL设计及其在Xilinx Vivado综合工具上综合后输出的资源利用率结果来作为基础数据集及预测标签。</p><p>VerilogHDL数据集来自GitHub、Opencore等开源网站,基本数据集涉及CPU、加法器、乘法器、GPU、机器学习等多种类型。部分数据集展示如表4.2所示,数据集主要描述描述数据如表4.3所示。</p><p>部分基本数据集数据图示</p><p>数据集基本概要</p><p>数据集分析</p><p>数据可视化</p><p>我们对数据集使用第四章构造的特征提取器进行特征提取后对数据进行可视化,将可以便于我们对数据进行进一步的分析,使用直方图来展示数据,如图4.16所示。</p><p>特征数据集直方图</p><p>相关性分析</p><p><em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.5、表4.6、表4.7所示的各个资源与RTL级特征间的皮尔逊相关系数。</p><p>特征热力图</p><p>RTL级特征与LUT资源的相关性数据</p><p>RTL级特征与FF资源的相关性数据</p><p>RTL级特征与BUFG资源的相关性数据</p><p>RTL级特征与IO资源的相关性数据</p><p>通过分析我们可以得到FPGA片上资源LUT对应的RTL级代码使用4.2节所述的特征提取器所提取的特征之间的相关性关系,我们可以发现较多特征与LUT、FF、BUFG、IO资源具有典型相关性,进一步验证了通过4.2节构造的特征提取器提取的特征基本符合第二章中逻辑综合原理与技术映射原理,证明该特征提取存在合理性,同时相关性分析也为我们下一步特征工程特征降维删除不相关体征提供参考及依据。</p><p>特征工程</p><p>本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。</p><p>特征预处理</p><p>数据清理</p><p>机器学习算法无法在存在缺失值的特征上来进行学习,但每次进行手动数据填补或清洗将带来巨大的人力损耗,所以我们可以基于流水线的方式,通过构造些自动化方法其完成对数据的清洗处理,首先就是对于数据存在缺失的情况,为解决它我们选用三种解决办法:</p><p>放弃这些数据缺失的区域;</p><p>放弃整个属性;</p><p>将确实的特征值或实际值以书记进行填充,比如0或者平均数、中位数等;</p><p>通过对预测目标和特征属性的分析,由于该特征目标为预测准确设计所需FPGA资源数值,所以对于数据存在缺失的数据类型,我们选择放弃这些数据缺失的数据,从而不对预测结果产生影响。</p><p>处理文本和分类属性</p><p>由于特征中可能存在除数值属性外的其余数据表达形式的特征,由于机器学习模型是数学模型,所以我们需要将文本数据属性和具有分类含义的数据属性进行抽象处理:</p><p>使用OrdinalEncoder顺序编码对文本属性进行编码;</p><p>使用OneHotEncoder独热编码对分类属性进行编码;</p><p>特征缩放</p><p>由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em><em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em><em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。</p><p>在机器学习领域最常用的同比例缩放所有属性特征的两种常用方法:</p><p>最小-最大缩放(归一化)</p><p>归一化的操作较为简单,即将样本数值重新处理后使其使其最终范围归于区间[0,1]之间,具体的实现方法是将该样本值减去样本数据集中的最小值比上样本最大值与样本最小值的差。</p><p>标准化方法</p><p>与归一化方法相比,标准化则完全不同,其本质将特征数据值先减去平均值,再与方差相除,进而使得特征数据具备满足单位方差的分布。</p><p>标准化方法与最小-最大缩放的典型区别与其优势便是标准化处理不会将输入的特征数值绑定到特定范围内,但是标准化方法对于异常值的敏感程度或受影响程度将会减小。</p><p>转换流水线</p><p>由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。</p><p>特征预处理流水线</p><p>当数据集经过特征预处理流水线处理后,完成基本特征工程便具备了进入模型进行训练的基础。经特征工程处理后最终输入特征张量为61*218,标签为使用Xilinx公司Vivado软件进行综合及布局布线后获得的准确资源利用率数值。</p><p>模型框架选择</p><p>模型训练开发流程</p><p>机器学习模型训练开发流程如图4.19所示,在完成数据分析,特征分析,特征工程后,我们需要先数据集进行划分选择合适的机器学习模型来进行预测,首先我们不知道选择哪种模型的时候,先对各种回归模型进行初步尝试,指标采用R2和RMSE进行评估,然后选择在初始参数及该特征下表现较好的模型框架进一步对模型参数进行配置。</p><p>我们分别使用线性回归、决策树、SVM向量机、随机森林、深度神经网络来对数据集进行初步的训练,从而选择出两种有前途的特种进行进一步的训练和微调从而实现我们的预测目标。</p><p>首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。</p><p>各模型尝试预测LUT资源结果</p><p>通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em></p><p>机器学习模型训练</p><p>Keras是基于Python语言且具有高度抽象化且拥有易用性高的API群的神经网络库。</p><p>Keras能够非常快速的搭建网络模型,以便迅速的将使用者的想法进行实现。基于上述目的Keras具有以下特征,首先,其可以在CPU与GPU上无缝的切换运行;第二,拥有非常简洁且友好的调用接口,减小了研究人员的工作量;第三,模块化设计,使用者可以根据需求非常方便的配置自己的模型;第四,支持支持任意的网络架构。基于上述的优势,本文选择 Keras作为机器学习的基本框架。</p><p>机器学习模型训练及调优流程</p><p>随机森林</p><p>本节在错误!未找到引用源。所尝试的随机森林模型的基础上对随机森林参数进行调优,并通过学习率曲线结合随机搜索与网格搜索对参数进行进一步优化,我们将主要调整影响度较大的n_estimators与max_depth参数用于寻找最优模型。RF模型进行训练、调优的流程如图4.21所示。</p><p>LUT资源模型训练</p><p>随机森林预测LUT模型参数搜索学习曲线</p><p>随机森林LUT预测模型学习曲线</p><p>依据图4.21所示对随机森林预测LUT模型进行训练,首先通过多次迭代依据借由随机森林模型提供的特征贡献度对特征进行二次调优,通过放弃贡献度较低的模型来提升模型准确度,最终输入张量为59*220。在完成特征二次调整的基础上对模型进行超参调整,主要参数n_estimators与max_depth的的学习曲线如图4.22所示,验证方法使用10折交叉验证,得到在n_estimators取33与max_depth取12时评价指标RMSE最优。</p><p>FF资源模型训练</p><p>随机森林预测FF特征搜索学习曲线</p><p>随机森林FF预测模型学习曲线</p><p>依据图4.21所示对随机森林预测FF模型进行训练,训练流程与4.7.2.2方法一致,通过迭代训练与参数调优,主要参数n_estimators与max_depth的的学习曲线如图4.24所示,验证方法使用10折交叉验证,得到在n_estimators取89与max_depth取7时评价指标RMSE最优。</p><p>人工神经网络</p><p>预测LUT资源模型训练</p><p>神经网络学习曲线,左图为超参数调优前学习曲线</p><p>依据图4.21所示流程图构建神经网络模型,为探究初始数据集在模型上的表现特征,通过对未进行超参数调整的模型进行1000训练可得如图4.26所示学习曲线,通过分析可发现初步训练模型存在过拟合情况,为解决过拟合情况,通过使用随机森林迭代构建的特征,并调整模型深度与宽度来解决该问题,分别使用随机搜索与网格搜索对模型隐藏层层数、神经元数、学习率及采样数进行调整,均采用5折交叉验证及提前终止回调用于终止搜索裁判,通过参数搜索可得神经网络模型如图4.27所示,神经网络包括输入及输出层、隐藏层共计6层,输入层宽度为59,由于为典型回归模型故输出层宽度为1,隐藏层共4层,对应神经元数分别为59、96、110、58,学习率使用搜索最佳学习率为0.000107,对模型进行200轮次训练。神经网络训练学习曲线如图4.28所示,通过观察学习曲线可以发现通过特征迭代与超参数调优已经解决过拟合问题,且拟合情况较好。</p><p>神经网络模型结构图</p><p>神经网络与LUT模型学习曲线</p><p>预测FF资源模型训练</p><p>依据图4.21所示流程图构建神经网络模型,使用神经网络模型预测FF资源的训练方法与4.7.2.1基本一致,分别通过随机搜索与网格搜索对神经网络模型进行空间搜索,得到如图4.29所示的神经网络结构,隐藏层共3层,对应神经元数分别为53、162、27,学习率使用搜索最佳学习率为0.00013,对模型进行235轮次训练。神经网络学习曲线如图4.30所示,我们可以发现模型训练曲线拟合度较好并未出现明显的过或欠拟合情况。</p><p>神经网络模型结构图</p><p>神经网络模型预测FF资源学习曲线</p><p>结果与分析</p><p>机器学习模型验证结果</p><p>模型评估</p><p>图4.31为机器学习模型在验证集上预测值与基准值的验证结果,X轴为验证集的准确值,Y轴为预测值。图(a)、图(b)分别为使用随机森林模型对LUT资源、FF资源进行预测的验证结果,图(c)、图(d)为人工神经网络模型对LUT资源、FF资源进行预测的验证结果。各模型验证集评估指标如表4.8所示,结合R方评估指标与图4.31我们可以发现机器学习模型在4.3节中构造的特征提取器的基础上得到了较好的拟合结果,验证了对VerilogHDL语言特取的特征对LUT与FF资源的预测有较好的数学描述。但同时也能发现在LUT、FF资源的预测上人工神经网络这种对非线性特征的学习能力较高的模型表现结果优于随机森林,对LUT预测和FF分别的模型确定性系数达73.4%、85.06%,证明模型已经可以较好的描述特征所代表的数学意义,同时均方根误差对LUT、FF资源分别为和。我们在测试数据集的基础上选取了模型评价指标较高的模型的结果进行分析,结果表明,在使用随机森林对RTL级设计RTL特征进行资源估算后与基准值进行对比,达到了31.3391、13.2000误差的精度,得到了一个较为满意的结果,同时由于该模型预测结果面向为高密度原型验证系统,主要应用于RTL-Partition阶段,基于其对FPGA片上资源利用率存在阈值,即常规情况下划分结果平均占用FPGA资源的50%~70%,且在划分系统程序中可以通过设定资源阈值控制来调整误差,所以当前模型输出的结果基本符合高密度FPGA原型验证系统的需求,同时除去精度外其更加聚焦于时间性能上的提升,通过统计RF、MLP的模型预测时间,我们可以明显看到机器学习在时间性能方面的巨大优势。</p><p>本章小结</p><p>本章叙述了本文中面向机器学习进行资源估算中最为重要的一部分,本章通过结合第二章所述的特征提取方法,通过对Verilog HDL语言分析,结合其语法在逻辑综合、技术映射上的特征关系,完成特征提取器的设计,通过C++完成开发,实现对RTL级代码的特征提取,为下一步建立机器学习模型的建立打好基础。</p><p>并提出了使用机器学习来进行RTL设计在RTL级对其所需FPGA片上资源估算的方法,在对原始数据集进行特征缩放、特征标准化、特征降维等特征工程处理后分别使用RF、MLP进行回归预测,叙述了对多种机器学习模型在标准参数下对使用文本方法所构建的数据集的预测性能表现及对随机森林、深度神经网络进行进一步预测、参数微调等方法及结果的叙述,最终我们得到了对RTL级设计FPGA片上资源利用率预测符合预期且合理的模型。</p>"},{"chapter":"总结与展望","word_count":1545,"word_similar_count":0,"sources":[],"similarity":0,"similarityPercentage":"0.0%","text":"<p>工作总结</p><p>本文的主要研究方向集中在高密度FPGA原型验证系统软件设计CAD流程中的划分阶段的资源估算领域,研究主要面向的是超大型的SoC设计的RTL级描述,研究主要分为三个方面:首先介绍了原型验证流程中FPGA的设计综合流程,包括逻辑综合原理,逻辑综合中Verilog HDL语法对应的逻辑综合原则,技术映射原理,现阶段工业界常用技术映射算法的描述,其次基于该原理结合高密度FPGA原型验证系统划分阶段需求设计并实现了快速资源估算模型,最后提出在EDA软件中结合机器学习方法,将资源估算与机器学习相结合,最终实现以下内容:</p><p>1、实现以传统思路框架为基础的快速资源估算模型,用户输入RTL级设计即可以快速得到设计所需要得FPGA片上资源数量如LUT、FF、BUFG等资源,有效提升了在超大型集成电路设计原型验证RTL划分阶段的迭代速度。</p><p>2、并在此基础上加入了合理的LUT优化算法,Bottom-To-Up算法,使该快速资源估算模型更加匹配实际划分需求及面向不同设计种类的优化方法及面向不同需求的优化方法,并增加可复用资源结构定义,并支持用户自定义功能user-define,使得原型验证划分阶段的迭代速度和实用性得到显著提升,有效提升约2.2倍,由于自主开发故拥有完善的C++输入输出接口,可集成在商业软件中,且实际应用至Player-Pro RTL Partition工业商用软件中,并在实际客户应用场景中得到检验。</p><p>3、以EDA与机器学习相结合的思路,结合逻辑综合及技术映射原理,构建面向RTL级集成电路行为描述的特征提取器,以Xilinx EDA设计软件为标签,尝试训练了线性回归、决策树、SVM、随机森林、人工神经网络等多种机器学习模型,使运行速率提升15倍,平均准确度达75%,同时验证了EDA软件与人工智能相结合的可行性,进一步提升了在超大规模集成电路设计FPGA原型验证的划分阶段的迭代速度,为EDA与原型验证流程相结合的研究打下基础。</p><p>通过以上三点,本文论述的工作为我国自主研发EDA与高密度FPGA原型验证系统的RTLPartition提供了可使用的工程软件,并在使用机器学习对从RTL级设计出发进行FPGA资源估算领域填补了空白。同时也为EDA软件与人工智能的结合验证了可行性。</p><p>工作展望</p><p>面向RTL级设计的FPGA快速资源估算问题结合了图论、可行性问题、逻辑分解、逻辑优化等众多方面特性,具有一定挑战性,随着设计规模的逐渐增大,在验证方面的需求特性也在增加,如何能有效的快速且准确的得到RTL设计所需的FPGA片上资源,并能有效合理的支持原型验证系统的RTL-Partition划分是未来EDA流程中将面临的一大问题。</p><p>本文虽在这方面做了一些研究和实现,但仍需在一下方面做出进一步的改进:</p><p>1.目前虽然实现快速资源估算模型,并增加了符合实际映射原理的优化及约束选项,但是在特殊的FPGA板上器件映射计算方面依然存在较大误差,如BRAM、LUTRAM等先进器件,所以可以考虑后续在这方面增加进一步的研究,使得资源估算更加精确。</p><p>2.虽然在本文中验证了机器学习方法与资源估算相结合的可行性,但是还处于初步阶段,精确度及估算器件类型上还有待增加,如可参照文章【】中提到的多级估算方法,将初步得到的一般器件估算结果进行二级抽象,得到更高级别的资源类型。</p><p>3.在面向资源估算的机器学习模型中增加更高层级抽象特征,增加实际模型泛化率,可参照文章【】利用HLS高层次综合方法快速构建样本设计从而增加模型训练样本数量,使得机器学习模型的泛化程度更高更有效。</p><p>4.神经网络资源估算模型还可以进一步增加不同设计在不同约束下进行综合的样本,使得机器学习模型可以支撑不同约束下的资源估算结果,如面积优化、功率优化等约束选项。</p>"}],"similarity":0.128,"last_part_similar_count":4024,"similarityPercentage":"12.8%","chapter_similar_count":1,"chapter_min_similar_word_count":5285,"front_part_similar_count":1261},"tasktype":0,"word_similar_count":5285,"author":"张曦","IP":"10.42.27.20","source_max_similar_count":934,"PID":"1@similar-service-cn-part-5c988867b5-7wdns","source_max_similar_similarity":0.023,"report_online_check_comparison":{"word_pro_count":0,"similarity_ref":0,"word_ref_count":0,"word_similar_count":5285,"word_custom_count":0,"chapters":[{"word_pro_count":0,"similarity_ref":0,"chapter":"绪论","word_similar_count":5285,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","year":"2009","datatype":"book","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.035,"similar_word_count":1372,"self":false,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000138222351111","author":"","similarity":0.015,"similar_word_count":591,"self":false,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","year":"2004","datatype":"book","docid":"1900000544119911","author":"杜建国","similarity":0.014,"similar_word_count":549,"self":false,"source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000183161741911","author":"","similarity":0.012,"similar_word_count":496,"self":false,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000120761737511","author":"","similarity":0.012,"similar_word_count":474,"self":false,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","year":"2004","datatype":"book","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.01,"similar_word_count":414,"self":false,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","year":"2002","datatype":"book","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"similar_word_count":279,"self":false,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000190761327111","author":"","similarity":0.004,"similar_word_count":168,"self":false,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000191300761211","author":"","similarity":0.004,"similar_word_count":157,"self":false,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000135249839711","author":"","similarity":0.004,"similar_word_count":146,"self":false,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000139313011911","author":"","similarity":0.004,"similar_word_count":141,"self":false,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000160699485011","author":"","similarity":0.003,"similar_word_count":138,"self":false,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000203566665711","author":"","similarity":0.003,"similar_word_count":135,"self":false,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000117978237811","author":"","similarity":0.003,"similar_word_count":128,"self":false,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000079599488811","author":"","similarity":0.003,"similar_word_count":122,"self":false,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"similar_word_count":119,"self":false,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","year":"2009","datatype":"book","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"similar_word_count":97,"self":false,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000130331965511","author":"","similarity":0.002,"similar_word_count":86,"self":false,"source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000137225786211","author":"","similarity":0.002,"similar_word_count":81,"self":false,"source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000179218349411","author":"","similarity":0.002,"similar_word_count":80,"self":false,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000139286381511","author":"","similarity":0.002,"similar_word_count":78,"self":false,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","year":"2017","datatype":"book","docid":"1900023845356311","author":"陈海虹","similarity":0.002,"similar_word_count":76,"self":false,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000107466903911","author":"csdn","similarity":0.002,"similar_word_count":76,"self":false,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000099531543111","author":"","similarity":0.002,"similar_word_count":74,"self":false,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000118484198911","author":"","similarity":0.002,"similar_word_count":72,"self":false,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000105741580511","author":"","similarity":0.002,"similar_word_count":66,"self":false,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000192630159511","author":"","similarity":0.002,"similar_word_count":65,"self":false,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000437751211","author":"","similarity":0.002,"similar_word_count":64,"self":false,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000195223375811","author":"","similarity":0.002,"similar_word_count":63,"self":false,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","year":"2001","datatype":"journal","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"similar_word_count":62,"self":false,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","year":"2020","datatype":"journal","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"similar_word_count":61,"self":false,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000177068394911","author":"","similarity":0.002,"similar_word_count":60,"self":false,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","year":"2001","datatype":"journal","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"similar_word_count":60,"self":false,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000139553504411","author":"","similarity":0.002,"similar_word_count":60,"self":false,"source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247"},{"reference":false,"teacher":"","year":"2018","datatype":"book","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"similar_word_count":58,"self":false,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000082030187211","author":"","similarity":0.001,"similar_word_count":58,"self":false,"source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000010354498311","author":"","similarity":0.001,"similar_word_count":58,"self":false,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000138922963611","author":"","similarity":0.001,"similar_word_count":57,"self":false,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000183507262511","author":"","similarity":0.001,"similar_word_count":56,"self":false,"source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000030209219211","author":"","similarity":0.001,"similar_word_count":54,"self":false,"source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000118062415311","author":"","similarity":0.001,"similar_word_count":54,"self":false,"source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000106062608311","author":"","similarity":0.001,"similar_word_count":53,"self":false,"source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000143881533411","author":"","similarity":0.001,"similar_word_count":53,"self":false,"source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments"},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000531686611","author":"南夷非","similarity":0.001,"similar_word_count":53,"self":false,"source":"大学生论文联合库","title":"图像处理技术","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000106764079211","author":"csdn","similarity":0.001,"similar_word_count":52,"self":false,"source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000110791518511","author":"csdn","similarity":0.001,"similar_word_count":51,"self":false,"source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000055409152011","author":"","similarity":0.001,"similar_word_count":51,"self":false,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000155397363111","author":"","similarity":0.001,"similar_word_count":51,"self":false,"source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000135795011511","author":"","similarity":0.001,"similar_word_count":50,"self":false,"source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310"},{"reference":false,"teacher":"","year":"2009","datatype":"journal","docid":"1000006719680711","author":"沈智芳","similarity":0.001,"similar_word_count":50,"self":false,"source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000031722729511","author":"","similarity":0.001,"similar_word_count":49,"self":false,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000189662307611","author":"","similarity":0.001,"similar_word_count":49,"self":false,"source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html"},{"reference":false,"teacher":"","year":"2017","datatype":"unionThesisLibrary","docid":"2200000570679811","author":"-","similarity":0.001,"similar_word_count":49,"self":false,"source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000188062025211","author":"","similarity":0.001,"similar_word_count":49,"self":false,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000120580984311","author":"","similarity":0.001,"similar_word_count":49,"self":false,"source":"网页","title":"基于FPGA的EPON ONU设计与实现.pdf - 豆丁网","url":"http://www.docin.com/p-1149984087.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000186098081911","author":"","similarity":0.001,"similar_word_count":49,"self":false,"source":"网页","title":"基于EDA的ALU设计","url":"https://wenku.baidu.com/view/7b0e2b7d1cb91a37f111f18583d049649b660e0c"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000118992500811","author":"","similarity":0.001,"similar_word_count":48,"self":false,"source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000117476774611","author":"csdn","similarity":0.001,"similar_word_count":48,"self":false,"source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596"},{"reference":false,"teacher":"","year":"2020","datatype":"journal","docid":"1000030691609411","author":"邢岳;田正宏;杜辉","similarity":0.001,"similar_word_count":48,"self":false,"source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000082078623411","author":"","similarity":0.001,"similar_word_count":48,"self":false,"source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000129247961111","author":"","similarity":0.001,"similar_word_count":48,"self":false,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000146790090711","author":"","similarity":0.001,"similar_word_count":47,"self":false,"source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b"},{"reference":false,"teacher":"","year":"2016","datatype":"book","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编;黄涛，吴强副主编;王社，魏郧华，胡凯，蔡振参编","similarity":0.001,"similar_word_count":47,"self":false,"source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000016188337811","author":"","similarity":0.001,"similar_word_count":47,"self":false,"source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000177893423411","author":"","similarity":0.001,"similar_word_count":46,"self":false,"source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18"},{"reference":false,"teacher":"","year":"","datatype":"book","docid":"1900023885801611","author":"杨全胜主编","similarity":0.001,"similar_word_count":46,"self":false,"source":"","title":"计算机系统综合课程设计","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000143175526611","author":"","similarity":0.001,"similar_word_count":46,"self":false,"source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000104784138911","author":"","similarity":0.001,"similar_word_count":46,"self":false,"source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000187873307311","author":"","similarity":0.001,"similar_word_count":43,"self":false,"source":"网页","title":"无线传感器网络节点SoC的原型验证","url":"http://www.doc88.com/p%2D89416909707401.html"},{"reference":false,"teacher":"","year":"2017","datatype":"book","docid":"1900023720243711","author":"刘凡平编著","similarity":0.001,"similar_word_count":43,"self":false,"source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":""},{"reference":false,"teacher":"","year":"2014","datatype":"chinaMeeting","docid":"1300000198113911","author":"崔东文;金波","similarity":0.001,"similar_word_count":43,"self":false,"source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":""},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000113620987811","author":"csdn","similarity":0.001,"similar_word_count":43,"self":false,"source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000082145235511","author":"","similarity":0.001,"similar_word_count":42,"self":false,"source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000015110431211","author":"","similarity":0.001,"similar_word_count":41,"self":false,"source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000193345064111","author":"","similarity":0.001,"similar_word_count":41,"self":false,"source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000195285691911","author":"","similarity":0.001,"similar_word_count":41,"self":false,"source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000198071294011","author":"","similarity":0.001,"similar_word_count":40,"self":false,"source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000190331742911","author":"","similarity":0.001,"similar_word_count":40,"self":false,"source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000131832145111","author":"","similarity":0.001,"similar_word_count":40,"self":false,"source":"网页","title":"数字系统设计与Verilog HDL(第3版) - 道客巴巴","url":"http://www.doc88.com/p%2D0087332228399.html"},{"reference":false,"teacher":"","year":"","datatype":"webpage","docid":"9000120755765111","author":"","similarity":0.001,"similar_word_count":40,"self":false,"source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search"}],"similarity_pro":0,"word_copy_count":5285,"word_self_count":0,"similar_paragraphs":[{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":169.99998,"teacher":"","textWithDynamicClass":"的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar 1S0I7' onmouseover=\"highlightSetter('1S0I7',false)\" onmouseout=\"highlightSetter('1S0I7',true)\">(Application Specific Integrated Circuit,</em><em class='similar 1S0I8' onmouseover=\"highlightSetter('1S0I8',false)\" onmouseout=\"highlightSetter('1S0I8',true)\">专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC(System On Chip,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC(System On Chip,"},{"profession":false,"keywords":[],"year":"2009","docid":"1000006719680711","author":"沈智芳","university":"咸宁职业技术学院,湖北咸宁437100","source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":"","reference":false,"similarScore":143.33331,"teacher":"","textWithDynamicClass":"(System—on—Chip)时代。在 SoC平台中,采用标准化的片上总线 OCB(on—chip bus)集成技术,有利于实现 IP核移植、<em class='similar 1S1I18' onmouseover=\"highlightSetter('1S1I18',false)\" onmouseout=\"highlightSetter('1S1I18',true)\">设计重用、</em>系统的时序分析和功能验证自动化等内容的实现,从而为","datatype":"journal","clcs":["TP391"],"similarityPercentage":"70.7%","self":false,"text":"(System—on—Chip)时代。在 SoC平台中,采用标准化的片上总线 OCB(on—chip bus)集成技术,有利于实现 IP核移植、<em class='similar'>设计重用、</em>系统的时序分析和功能验证自动化等内容的实现,从而为"},{"profession":false,"keywords":[],"year":"","docid":"9000203564664811","author":"","university":"","source":"网页","title":"电子与信息工程学部 精品文档","url":"https://www.docin.com/p%2D74446623.html","reference":false,"similarScore":58.333344,"teacher":"","textWithDynamicClass":"的电子系统,这就是所谓\"片上系统\"SoC(System Chip)<em class='similar 1S2I6' onmouseover=\"highlightSetter('1S2I6',false)\" onmouseout=\"highlightSetter('1S2I6',true)\">集成电路设计技术。</em>大规模专用集成电路的设计已经成为一个重要的高科技领","datatype":"webpage","clcs":[],"similarityPercentage":"53.0%","self":false,"text":"的电子系统,这就是所谓\"片上系统\"SoC(System Chip)<em class='similar'>集成电路设计技术。</em>大规模专用集成电路的设计已经成为一个重要的高科技领"}],"textWithDynamicClass":"随着市场环境的逐步晋级,市场对与IC功能的需求越来越严苛,IC的设计的集成度在工艺的进步下也逐步增加。目前的ASIC<em class='similar T0I4' onmouseover=\"highlightSetter('T0I4',false)\" onmouseout=\"highlightSetter('T0I4',true)\">(Application Specific Integrated Circuit,</em><em class='similar T0I5' onmouseover=\"highlightSetter('T0I5',false)\" onmouseout=\"highlightSetter('T0I5',true)\">专用集成电路)</em><em class='similar T0I6' onmouseover=\"highlightSetter('T0I6',false)\" onmouseout=\"highlightSetter('T0I6',true)\">设计,</em>","similar_word_count":16,"text":"随着市场环境的逐步晋级,市场对与IC功能的需求越来越严苛,IC的设计的集成度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em><em class='similar'>设计,</em>","suggest":{"synonyms":[],"keyword":["ic","专用集成电路","集成电路"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":169.99998,"teacher":"","textWithDynamicClass":"专用集成电路)已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC<em class='similar 1S0I11' onmouseover=\"highlightSetter('1S0I11',false)\" onmouseout=\"highlightSetter('1S0I11',true)\">(System On Chip,</em><em class='similar 1S0I12' onmouseover=\"highlightSetter('1S0I12',false)\" onmouseout=\"highlightSetter('1S0I12',true)\">片上系统)</em>的技术在目前的业界已经得到广泛的应用[1]。","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"专用集成电路)已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC<em class='similar'>(System On Chip,</em><em class='similar'>片上系统)</em>的技术在目前的业界已经得到广泛的应用[1]。"},{"profession":false,"keywords":[],"year":"","docid":"9000189613787711","author":"","university":"","source":"网页","title":"基于AMBA总线的DMA控制器的设计--《湖南大学》2012年硕士论文        ","url":"http://cdmd.cnki.com.cn/Article/CDMD-10532-1012481870.htm","reference":false,"similarScore":128.82352,"teacher":"","textWithDynamicClass":"[摘要]<em class='similar 1S5I1' onmouseover=\"highlightSetter('1S5I1',false)\" onmouseout=\"highlightSetter('1S5I1',true)\">:随着超大规模集成电路设计技术不断发展和应用,</em><em class='similar 1S5I2' onmouseover=\"highlightSetter('1S5I2',false)\" onmouseout=\"highlightSetter('1S5I2',true)\">片上系统</em><em class='similar 1S5I3' onmouseover=\"highlightSetter('1S5I3',false)\" onmouseout=\"highlightSetter('1S5I3',true)\">(System-on-Chip,</em>SoC)的设计方已经成为IC产业的主流。而直接存储","datatype":"webpage","clcs":[],"similarityPercentage":"65.6%","self":false,"text":"[摘要]<em class='similar'>:随着超大规模集成电路设计技术不断发展和应用,</em><em class='similar'>片上系统</em><em class='similar'>(System-on-Chip,</em>SoC)的设计方已经成为IC产业的主流。而直接存储"},{"profession":false,"keywords":[],"year":"","docid":"9000203564664811","author":"","university":"","source":"网页","title":"电子与信息工程学部 精品文档","url":"https://www.docin.com/p%2D74446623.html","reference":false,"similarScore":58.333344,"teacher":"","textWithDynamicClass":"的电子系统,这就是所谓&quot;片上系统&quot;SoC<em class='similar 1S2I5' onmouseover=\"highlightSetter('1S2I5',false)\" onmouseout=\"highlightSetter('1S2I5',true)\">(System Chip)</em><em class='similar 1S2I6' onmouseover=\"highlightSetter('1S2I6',false)\" onmouseout=\"highlightSetter('1S2I6',true)\">集成电路设计技术。</em>大规模专用集成电路的设计已经成为一个重要的高科技领","datatype":"webpage","clcs":[],"similarityPercentage":"59.3%","self":false,"text":"的电子系统,这就是所谓&quot;片上系统&quot;SoC<em class='similar'>(System Chip)</em><em class='similar'>集成电路设计技术。</em>大规模专用集成电路的设计已经成为一个重要的高科技领"},{"profession":false,"keywords":[],"year":"2009","docid":"1000006719680711","author":"沈智芳","university":"咸宁职业技术学院,湖北咸宁437100","source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":"","reference":false,"similarScore":143.33331,"teacher":"","textWithDynamicClass":"。随着微电子技术的发展,集成电路工艺进入亚微米乃至纳米时代,<em class='similar 1S1I10' onmouseover=\"highlightSetter('1S1I10',false)\" onmouseout=\"highlightSetter('1S1I10',true)\">集成电路设计技术也与之相适应地由 ASIC时代转向片上系统SoC</em><em class='similar 1S1I11' onmouseover=\"highlightSetter('1S1I11',false)\" onmouseout=\"highlightSetter('1S1I11',true)\">(System—on—Chip)</em>时代。在 SoC平台中,采用标准化的片上总线 OCB(on—chip bus)集成技术,有利于实现 IP核移植、设计重用、","datatype":"journal","clcs":["TP391"],"similarityPercentage":"51.1%","self":false,"text":"。随着微电子技术的发展,集成电路工艺进入亚微米乃至纳米时代,<em class='similar'>集成电路设计技术也与之相适应地由 ASIC时代转向片上系统SoC</em><em class='similar'>(System—on—Chip)</em>时代。在 SoC平台中,采用标准化的片上总线 OCB(on—chip bus)集成技术,有利于实现 IP核移植、设计重用、"}],"textWithDynamicClass":"也被称为SoC<em class='similar T0I8' onmouseover=\"highlightSetter('T0I8',false)\" onmouseout=\"highlightSetter('T0I8',true)\">(System on Chip,</em><em class='similar T0I9' onmouseover=\"highlightSetter('T0I9',false)\" onmouseout=\"highlightSetter('T0I9',true)\">片上系统)</em><em class='similar T0I10' onmouseover=\"highlightSetter('T0I10',false)\" onmouseout=\"highlightSetter('T0I10',true)\">的集成电路设计技术已得到认可与应用,</em>","similar_word_count":25,"text":"也被称为SoC<em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的集成电路设计技术已得到认可与应用,</em>","suggest":{"synonyms":[],"keyword":["片上系统","集成电路","设计技术"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":303,"teacher":"","textWithDynamicClass":"统)的技术在目前的业界已经得到广泛的应用[1]。一般情况下,<em class='similar 2S6I4' onmouseover=\"highlightSetter('2S6I4',false)\" onmouseout=\"highlightSetter('2S6I4',true)\">采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的逻辑设计。","datatype":"webpage","clcs":[],"similarityPercentage":"67.1%","self":false,"text":"统)的技术在目前的业界已经得到广泛的应用[1]。一般情况下,<em class='similar'>采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的逻辑设计。"}],"textWithDynamicClass":"设计,也被称为SoC(System on Chip,片上系统)的集成电路设计技术已得到认可与应用,且当代的SoC设计也不再限制于一块芯片上。通常,<em class='similar T1I2' onmouseover=\"highlightSetter('T1I2',false)\" onmouseout=\"highlightSetter('T1I2',true)\">ASIC设计拥有低功耗、</em>","similar_word_count":8,"text":"设计,也被称为SoC(System on Chip,片上系统)的集成电路设计技术已得到认可与应用,且当代的SoC设计也不再限制于一块芯片上。通常,<em class='similar'>ASIC设计拥有低功耗、</em>","suggest":{"synonyms":[],"keyword":["低功耗"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":303,"teacher":"","textWithDynamicClass":"统)的技术在目前的业界已经得到广泛的应用[1]。一般情况下,采用 ASIC 的设计功耗更低,尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar 2S6I8' onmouseover=\"highlightSetter('2S6I8',false)\" onmouseout=\"highlightSetter('2S6I8',true)\">所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em>也正是由于 ASIC 的复杂性,","datatype":"webpage","clcs":[],"similarityPercentage":"78.6%","self":false,"text":"统)的技术在目前的业界已经得到广泛的应用[1]。一般情况下,采用 ASIC 的设计功耗更低,尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar'>所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em>也正是由于 ASIC 的复杂性,"}],"textWithDynamicClass":"流片成本低、迭代速度快等优势,<em class='similar T1I5' onmouseover=\"highlightSetter('T1I5',false)\" onmouseout=\"highlightSetter('T1I5',true)\">所以ASIC可包含更为复杂和灵活的集成逻辑设计。</em>","similar_word_count":20,"text":"流片成本低、迭代速度快等优势,<em class='similar'>所以ASIC可包含更为复杂和灵活的集成逻辑设计。</em>","suggest":{"synonyms":[],"keyword":["逻辑设计"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":303,"teacher":"","textWithDynamicClass":"尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的逻辑设计。<em class='similar 2S6I9' onmouseover=\"highlightSetter('2S6I9',false)\" onmouseout=\"highlightSetter('2S6I9',true)\">也正是由于 ASIC 的复杂性,</em><em class='similar 2S6I10' onmouseover=\"highlightSetter('2S6I10',false)\" onmouseout=\"highlightSetter('2S6I10',true)\">使得 ASIC 的设计风险也大幅增加。</em>一旦芯片设计失败,不仅会损失大量的研发成本,还可能","datatype":"webpage","clcs":[],"similarityPercentage":"75.9%","self":false,"text":"尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,所以 ASIC 可容纳更为复杂和灵活的逻辑设计。<em class='similar'>也正是由于 ASIC 的复杂性,</em><em class='similar'>使得 ASIC 的设计风险也大幅增加。</em>一旦芯片设计失败,不仅会损失大量的研发成本,还可能"}],"textWithDynamicClass":"所以ASIC可包含更为复杂和灵活的集成逻辑设计。<em class='similar T1I6' onmouseover=\"highlightSetter('T1I6',false)\" onmouseout=\"highlightSetter('T1I6',true)\">同样正是由于现代ASIC设计的高复杂度,</em><em class='similar T1I7' onmouseover=\"highlightSetter('T1I7',false)\" onmouseout=\"highlightSetter('T1I7',true)\">使得其研发设计的风险也在大幅增加。</em>","similar_word_count":32,"text":"所以ASIC可包含更为复杂和灵活的集成逻辑设计。<em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em>","suggest":{"synonyms":[],"keyword":["复杂度","研发设计"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":248.0342,"teacher":"","textWithDynamicClass":" ASIC 的复杂性,使得 ASIC 的设计风险也大幅增加。<em class='similar 3S7I4' onmouseover=\"highlightSetter('3S7I4',false)\" onmouseout=\"highlightSetter('3S7I4',true)\">一旦芯片设计失败,</em><em class='similar 3S7I5' onmouseover=\"highlightSetter('3S7I5',false)\" onmouseout=\"highlightSetter('3S7I5',true)\">不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯片公司的芯片研发出自己相应的产品,如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。<em class='similar 3S7I10' onmouseover=\"highlightSetter('3S7I10',false)\" onmouseout=\"highlightSetter('3S7I10',true)\">所以,</em>验证逐步变为复杂芯片研发过程中的关键环节。","datatype":"webpage","clcs":[],"similarityPercentage":"88.9%","self":false,"text":" ASIC 的复杂性,使得 ASIC 的设计风险也大幅增加。<em class='similar'>一旦芯片设计失败,</em><em class='similar'>不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯片公司的芯片研发出自己相应的产品,如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。<em class='similar'>所以,</em>验证逐步变为复杂芯片研发过程中的关键环节。"}],"textWithDynamicClass":"同样正是由于现代ASIC设计的高复杂度,使得其研发设计的风险也在大幅增加。<em class='similar T2I0' onmouseover=\"highlightSetter('T2I0',false)\" onmouseout=\"highlightSetter('T2I0',true)\">一旦芯片设计失败,</em><em class='similar T2I1' onmouseover=\"highlightSetter('T2I1',false)\" onmouseout=\"highlightSetter('T2I1',true)\">将会导致大量研发成本的损失,</em><em class='similar T2I2' onmouseover=\"highlightSetter('T2I2',false)\" onmouseout=\"highlightSetter('T2I2',true)\">所以,</em>","similar_word_count":23,"text":"同样正是由于现代ASIC设计的高复杂度,使得其研发设计的风险也在大幅增加。<em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发成本的损失,</em><em class='similar'>所以,</em>","suggest":{"synonyms":[],"keyword":["芯片设计","研发成本"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":248.0342,"teacher":"","textWithDynamicClass":"还可能导致客户对公司的产品失去信任。因为客户需要芯片公司的芯片研发出自己相应的产品,如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。所以,<em class='similar 3S7I11' onmouseover=\"highlightSetter('3S7I11',false)\" onmouseout=\"highlightSetter('3S7I11',true)\">验证逐步变为复杂芯片研发过程中的关键环节。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"72.3%","self":false,"text":"还可能导致客户对公司的产品失去信任。因为客户需要芯片公司的芯片研发出自己相应的产品,如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。所以,<em class='similar'>验证逐步变为复杂芯片研发过程中的关键环节。</em>"}],"textWithDynamicClass":"一旦芯片设计失败,将会导致大量研发成本的损失,所以,<em class='similar T2I3' onmouseover=\"highlightSetter('T2I3',false)\" onmouseout=\"highlightSetter('T2I3',true)\">IC的正确性验证正在逐步成为具有很高复杂度的IC研发流程中所必须且关键的环节。</em>","similar_word_count":36,"text":"一旦芯片设计失败,将会导致大量研发成本的损失,所以,<em class='similar'>IC的正确性验证正在逐步成为具有很高复杂度的IC研发流程中所必须且关键的环节。</em>","suggest":{"synonyms":[],"keyword":["正确性验证","复杂度","研发流程"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":548.125,"teacher":"","textWithDynamicClass":"证方法成���验证的关键。目前,最常见的验证方法是软件仿真技术,<em class='similar 4S8I5' onmouseover=\"highlightSetter('4S8I5',false)\" onmouseout=\"highlightSetter('4S8I5',true)\">但是软件仿真虽然简单易行,</em><em class='similar 4S8I6' onmouseover=\"highlightSetter('4S8I6',false)\" onmouseout=\"highlightSetter('4S8I6',true)\">在面对复杂的集成电路设计时,</em>其验证效率过低,最终可能影响到产品的及时发布。而基于 FPGA 的原型验证方法,","datatype":"webpage","clcs":[],"similarityPercentage":"76.7%","self":false,"text":"证方法成为验证的关键。目前,最常见的验证方法是软件仿真技术,<em class='similar'>但是软件仿真虽然简单易行,</em><em class='similar'>在面对复杂的集成电路设计时,</em>其验证效率过低,最终可能影响到产品的及时发布。而基于 FPGA 的原型验证方法,"}],"textWithDynamicClass":"所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,<em class='similar T3I0' onmouseover=\"highlightSetter('T3I0',false)\" onmouseout=\"highlightSetter('T3I0',true)\">虽然软件仿真具有简单易用且可行性高的优势,</em><em class='similar T3I1' onmouseover=\"highlightSetter('T3I1',false)\" onmouseout=\"highlightSetter('T3I1',true)\">但是在处理较复杂的集成电路设计时,</em>","similar_word_count":36,"text":"所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,<em class='similar'>虽然软件仿真具有简单易用且可行性高的优势,</em><em class='similar'>但是在处理较复杂的集成电路设计时,</em>","suggest":{"synonyms":[],"keyword":["软件仿真","易用","可行性","集成电路","设计时"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":548.125,"teacher":"","textWithDynamicClass":"在面对复杂的集成电路设计时,其验证效率过低,最终可能影响到产品的及时发布。<em class='similar 4S8I9' onmouseover=\"highlightSetter('4S8I9',false)\" onmouseout=\"highlightSetter('4S8I9',true)\">而基于 FPGA 的原型验证方法,</em>凭借其可反复擦除、可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,","datatype":"webpage","clcs":[],"similarityPercentage":"79.5%","self":false,"text":"在面对复杂的集成电路设计时,其验证效率过低,最终可能影响到产品的及时发布。<em class='similar'>而基于 FPGA 的原型验证方法,</em>凭借其可反复擦除、可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,"}],"textWithDynamicClass":"很难保证其验证效率[6]。<em class='similar T3I4' onmouseover=\"highlightSetter('T3I4',false)\" onmouseout=\"highlightSetter('T3I4',true)\">而基于FPGA的原型验证,</em>","similar_word_count":9,"text":"很难保证其验证效率[6]。<em class='similar'>而基于FPGA的原型验证,</em>","suggest":{"synonyms":[],"keyword":["原型验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":548.125,"teacher":"","textWithDynamicClass":"其验证效率过低,最终可能影响到产品的及时发布。而基于 FPGA 的原型验证方法,凭借其可反复擦除、<em class='similar 4S8I11' onmouseover=\"highlightSetter('4S8I11',false)\" onmouseout=\"highlightSetter('4S8I11',true)\">可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar 4S8I12' onmouseover=\"highlightSetter('4S8I12',false)\" onmouseout=\"highlightSetter('4S8I12',true)\">被越来越多的验证团队所采用。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"83.7%","self":false,"text":"其验证效率过低,最终可能影响到产品的及时发布。而基于 FPGA 的原型验证方法,凭借其可反复擦除、<em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用。</em>"}],"textWithDynamicClass":"依靠其可反复刷写、<em class='similar T3I6' onmouseover=\"highlightSetter('T3I6',false)\" onmouseout=\"highlightSetter('T3I6',true)\">可真实模拟设计中的逻辑功能行为以及能够较为全面且系统的反映逻辑功能等优势,</em><em class='similar T3I7' onmouseover=\"highlightSetter('T3I7',false)\" onmouseout=\"highlightSetter('T3I7',true)\">被越来越多的验证团队所采用</em>","similar_word_count":49,"text":"依靠其可反复刷写、<em class='similar'>可真实模拟设计中的逻辑功能行为以及能够较为全面且系统的反映逻辑功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>","suggest":{"synonyms":[],"keyword":["模拟设计","逻辑","功能行为","逻辑功能"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":356.48413,"teacher":"","textWithDynamicClass":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar 5S9I5' onmouseover=\"highlightSetter('5S9I5',false)\" onmouseout=\"highlightSetter('5S9I5',true)\">集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,","datatype":"webpage","clcs":[],"similarityPercentage":"77.4%","self":false,"text":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar'>集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,"}],"textWithDynamicClass":"<em class='similar T4I0' onmouseover=\"highlightSetter('T4I0',false)\" onmouseout=\"highlightSetter('T4I0',true)\">目前随着超常规性能ASIC芯片设计规模与电路复杂度的提升以及集成电路设计体系结构的不断升级与创新,</em>","similar_word_count":45,"text":"<em class='similar'>目前随着超常规性能ASIC芯片设计规模与电路复杂度的提升以及集成电路设计体系结构的不断升级与创新,</em>","suggest":{"synonyms":[{"synonyms":["晋级"],"keyword":"升级"}],"keyword":["超常规","设计规模","复杂度","集成电路设计","体系结构","升级","与创新"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":356.48413,"teacher":"","textWithDynamicClass":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,其规模愈加庞大,<em class='similar 5S9I7' onmouseover=\"highlightSetter('5S9I7',false)\" onmouseout=\"highlightSetter('5S9I7',true)\">正确性验证已成为高性能芯片研发过程中的关键环节,</em>因此集成电路公司相继推出了许多高级的验证方法来保证","datatype":"webpage","clcs":[],"similarityPercentage":"79.4%","self":false,"text":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,其规模愈加庞大,<em class='similar'>正确性验证已成为高性能芯片研发过程中的关键环节,</em>因此集成电路公司相继推出了许多高级的验证方法来保证"}],"textWithDynamicClass":"SoC设计的规模在急速膨胀,<em class='similar T4I2' onmouseover=\"highlightSetter('T4I2',false)\" onmouseout=\"highlightSetter('T4I2',true)\">研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,</em>","similar_word_count":28,"text":"SoC设计的规模在急速膨胀,<em class='similar'>研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,</em>","suggest":{"synonyms":[],"keyword":["研发流程","高性能","研发周期","关键环节"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":163.39392,"teacher":"","textWithDynamicClass":"模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,<em class='similar 6S10I4' onmouseover=\"highlightSetter('6S10I4',false)\" onmouseout=\"highlightSetter('6S10I4',true)\">因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电","datatype":"webpage","clcs":[],"similarityPercentage":"63.8%","self":false,"text":"模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,<em class='similar'>因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em>在复杂的高性能芯片西安电"}],"textWithDynamicClass":"SoC设计的规模在急速膨胀,研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,<em class='similar T5I0' onmouseover=\"highlightSetter('T5I0',false)\" onmouseout=\"highlightSetter('T5I0',true)\">因此为保证验证的高效性和准确性,</em><em class='similar T5I1' onmouseover=\"highlightSetter('T5I1',false)\" onmouseout=\"highlightSetter('T5I1',true)\">许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。</em>","similar_word_count":43,"text":"SoC设计的规模在急速膨胀,研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,<em class='similar'>因此为保证验证的高效性和准确性,</em><em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。</em>","suggest":{"synonyms":[{"synonyms":["接踵"],"keyword":"相继"}],"keyword":["高效性","准确性","集成电路设计公司","相继"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000187873307311","author":"","university":"","source":"网页","title":"无线传感器网络节点SoC的原型验证","url":"http://www.doc88.com/p%2D89416909707401.html","reference":false,"similarScore":85.33333,"teacher":"","textWithDynamicClass":"性。然而随着 SoC 复杂度的提高,由于软件仿真速度的限制,<em class='similar 7S11I3' onmouseover=\"highlightSetter('7S11I3',false)\" onmouseout=\"highlightSetter('7S11I3',true)\">仅通过软件仿真很难验证硬件设计功能的正确性,</em>而通过 FPGA 实现 SoC 设计原型进行原型验","datatype":"webpage","clcs":[],"similarityPercentage":"63.7%","self":false,"text":"性。然而随着 SoC 复杂度的提高,由于软件仿真速度的限制,<em class='similar'>仅通过软件仿真很难验证硬件设计功能的正确性,</em>而通过 FPGA 实现 SoC 设计原型进行原型验"},{"profession":false,"keywords":[],"year":"","docid":"9000058639272611","author":"","university":"","source":"网页","title":"算法举例_学习资料共享网","url":"http://www.87994.com/read/7351734a28277d64c6e20de8.html","reference":false,"similarScore":100.52172,"teacher":"","textWithDynamicClass":"理和上传给上位机显示。程序部分是用VerilogHDL语言,<em class='similar 7S12I4' onmouseover=\"highlightSetter('7S12I4',false)\" onmouseout=\"highlightSetter('7S12I4',true)\">并利用QuartusⅡ等EDA软件进行仿真,</em><em class='similar 7S12I5' onmouseover=\"highlightSetter('7S12I5',false)\" onmouseout=\"highlightSetter('7S12I5',true)\">验证了设计功能的正确性。</em>基于FPGA的视觉电生理图像刺激系统的设计FPGA","datatype":"webpage","clcs":[],"similarityPercentage":"55.0%","self":false,"text":"理和上传给上位机显示。程序部分是用VerilogHDL语言,<em class='similar'>并利用QuartusⅡ等EDA软件进行仿真,</em><em class='similar'>验证了设计功能的正确性。</em>基于FPGA的视觉电生理图像刺激系统的设计FPGA"}],"textWithDynamicClass":"在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。<em class='similar T6I2' onmouseover=\"highlightSetter('T6I2',false)\" onmouseout=\"highlightSetter('T6I2',true)\">通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,</em>","similar_word_count":30,"text":"在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。<em class='similar'>通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,</em>","suggest":{"synonyms":[],"keyword":["仿真","集成电路","设计功能","正确性"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":517.748,"teacher":"","textWithDynamicClass":"<em class='similar 8S13I0' onmouseover=\"highlightSetter('8S13I0',false)\" onmouseout=\"highlightSetter('8S13I0',true)\">,各大集成电路公司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,","datatype":"webpage","clcs":[],"similarityPercentage":"59.3%","self":false,"text":"<em class='similar'>,各大集成电路公司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,"}],"textWithDynamicClass":"从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,<em class='similar T7I0' onmouseover=\"highlightSetter('T7I0',false)\" onmouseout=\"highlightSetter('T7I0',true)\">各大EDA厂家与集成电路研发厂家进而通过使用硬件加速器来实现仿真验证,</em>","similar_word_count":32,"text":"从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,<em class='similar'>各大EDA厂家与集成电路研发厂家进而通过使用硬件加速器来实现仿真验证,</em>","suggest":{"synonyms":[],"keyword":["厂家","集成电路","硬件加速器","仿真验证","硬件","仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":517.748,"teacher":"","textWithDynamicClass":",各大集成电路公司提出了硬件加速器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar 8S13I2' onmouseover=\"highlightSetter('8S13I2',false)\" onmouseout=\"highlightSetter('8S13I2',true)\">将软件模拟中的某些复杂运算交给硬件加速器计算,</em>最后硬件加速器将运算结果传回仿真软件,","datatype":"webpage","clcs":[],"similarityPercentage":"59.8%","self":false,"text":",各大集成电路公司提出了硬件加���器仿真验证,主要思想是做出专门的硬件加速器,<em class='similar'>将软件模拟中的某些复杂运算交给硬件加速器计算,</em>最后硬件加速器将运算结果传回仿真软件,"}],"textWithDynamicClass":"其主要思想是基于硬件运算速度远高于软件的原理,<em class='similar T7I2' onmouseover=\"highlightSetter('T7I2',false)\" onmouseout=\"highlightSetter('T7I2',true)\">将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,</em>","similar_word_count":28,"text":"其主要思想是基于硬件运算速度远高于软件的原理,<em class='similar'>将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,</em>","suggest":{"synonyms":[],"keyword":["硬件","软件仿真","运算逻辑","加速计算","仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":517.748,"teacher":"","textWithDynamicClass":"主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,<em class='similar 8S13I3' onmouseover=\"highlightSetter('8S13I3',false)\" onmouseout=\"highlightSetter('8S13I3',true)\">最后硬件加速器将运算结果传回仿真软件,</em>最终从整体上提升验证效率","datatype":"webpage","clcs":[],"similarityPercentage":"63.8%","self":false,"text":"主要思想是做出专门的硬件加速器,将软件模拟中的某些复杂运算交给硬件加速器计算,<em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em>最终从整体上提升验证效率"}],"textWithDynamicClass":"将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,<em class='similar T7I3' onmouseover=\"highlightSetter('T7I3',false)\" onmouseout=\"highlightSetter('T7I3',true)\">最后硬件将加速计算后的结果反馈给上位机即EDA软件,</em>","similar_word_count":23,"text":"将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,<em class='similar'>最后硬件将加速计算后的结果反馈给上位机即EDA软件,</em>","suggest":{"synonyms":[],"keyword":["硬件","加速计算","结果反馈","上位机"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":517.748,"teacher":"","textWithDynamicClass":"最后硬件加速器将运算结果传回仿真软件,<em class='similar 8S13I4' onmouseover=\"highlightSetter('8S13I4',false)\" onmouseout=\"highlightSetter('8S13I4',true)\">最终从整体上提升验证效率</em>[3]。<em class='similar 8S13I6' onmouseover=\"highlightSetter('8S13I6',false)\" onmouseout=\"highlightSetter('8S13I6',true)\">而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar 8S13I7' onmouseover=\"highlightSetter('8S13I7',false)\" onmouseout=\"highlightSetter('8S13I7',true)\">相比于软件去实现芯片电路</em>的模型构建,硬件加速器采用真实的硬件仿真环境,可以","datatype":"webpage","clcs":[],"similarityPercentage":"71.4%","self":false,"text":"最后硬件加速器将运算结果传回仿真软件,<em class='similar'>最终从整体上提升验证效率</em>[3]。<em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar'>相比于软件去实现芯片电路</em>的模型构建,硬件加速器采用真实的硬件仿真环境,可以"}],"textWithDynamicClass":"最后硬件将加速计算后的结果反馈给上位机即EDA软件,<em class='similar T7I4' onmouseover=\"highlightSetter('T7I4',false)\" onmouseout=\"highlightSetter('T7I4',true)\">从而提升整体的验证效率。</em><em class='similar T7I5' onmouseover=\"highlightSetter('T7I5',false)\" onmouseout=\"highlightSetter('T7I5',true)\">而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar T7I6' onmouseover=\"highlightSetter('T7I6',false)\" onmouseout=\"highlightSetter('T7I6',true)\">相比于完全使用软件来实现</em>","similar_word_count":42,"text":"最后硬件将加速计算后的结果反馈给上位机即EDA软件,<em class='similar'>从而提升整体的验证效率。</em><em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar'>相比于完全使用软件来实现</em>","suggest":{"synonyms":[],"keyword":["硬件加速器","硬件","验证效率","仿真环境","仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":481.60864,"teacher":"","textWithDynamicClass":"去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,<em class='similar 9S14I3' onmouseover=\"highlightSetter('9S14I3',false)\" onmouseout=\"highlightSetter('9S14I3',true)\">可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,这对于验证工程师的调试很有帮助,","datatype":"webpage","clcs":[],"similarityPercentage":"42.9%","self":false,"text":"去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,<em class='similar'>可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,这对于验证工程师的调试很有帮助,"}],"textWithDynamicClass":"相比于完全使用软件来实现仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、<em class='similar T8I1' onmouseover=\"highlightSetter('T8I1',false)\" onmouseout=\"highlightSetter('T8I1',true)\">真实、</em><em class='similar T8I2' onmouseover=\"highlightSetter('T8I2',false)\" onmouseout=\"highlightSetter('T8I2',true)\">有效的反馈集成电路设计系统所存在的各种问题,</em>","similar_word_count":23,"text":"相比于完全使用软件来实现仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、<em class='similar'>真实、</em><em class='similar'>有效的反馈集成电路设计系统所存在的各种问题,</em>","suggest":{"synonyms":[{"synonyms":["反应"],"keyword":"反馈"}],"keyword":["反馈","集成电路","设计系统","各种问题"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":481.60864,"teacher":"","textWithDynamicClass":"去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,可以真正的反映系统设计中的各种问题,有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar 9S14I5' onmouseover=\"highlightSetter('9S14I5',false)\" onmouseout=\"highlightSetter('9S14I5',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar 9S14I6' onmouseover=\"highlightSetter('9S14I6',false)\" onmouseout=\"highlightSetter('9S14I6',true)\">典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em>但是硬件加速仿真验证也","datatype":"webpage","clcs":[],"similarityPercentage":"75.1%","self":false,"text":"去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,可以真正的反映系统设计中的各种问题,有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em>但是硬件加速仿真验证也"}],"textWithDynamicClass":"进而可以帮助集成电路开发人员精确的发现使用软件仿真无法捕获的异常数据,<em class='similar T8I4' onmouseover=\"highlightSetter('T8I4',false)\" onmouseout=\"highlightSetter('T8I4',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar T8I5' onmouseover=\"highlightSetter('T8I5',false)\" onmouseout=\"highlightSetter('T8I5',true)\">典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>","similar_word_count":41,"text":"进而可以帮助集成电路开发人员精确的发现使用软件仿真无法捕获的异常数据,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>","suggest":{"synonyms":[],"keyword":["工程师","调试","硬件仿真器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":481.60864,"teacher":"","textWithDynamicClass":"典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。<em class='similar 9S14I7' onmouseover=\"highlightSetter('9S14I7',false)\" onmouseout=\"highlightSetter('9S14I7',true)\">但是硬件加速仿真验证也</em>存在缺陷,因为这种方法需要专门的团队进行硬件加速器","datatype":"webpage","clcs":[],"similarityPercentage":"73.4%","self":false,"text":"典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。<em class='similar'>但是硬件加速仿真验证也</em>存在缺陷,因为这种方法需要专门的团队进行硬件加速器"}],"textWithDynamicClass":"[35]。<em class='similar T8I7' onmouseover=\"highlightSetter('T8I7',false)\" onmouseout=\"highlightSetter('T8I7',true)\">但是硬件仿真器也并不是</em>","similar_word_count":11,"text":"[35]。<em class='similar'>但是硬件仿真器也并不是</em>","suggest":{"synonyms":[],"keyword":["硬件仿真器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":388.39996,"teacher":"","textWithDynamicClass":"原型验证也可以通过硬件仿真器实现,但硬件仿真器的价格太昂贵,<em class='similar 10S15I4' onmouseover=\"highlightSetter('10S15I4',false)\" onmouseout=\"highlightSetter('10S15I4',true)\">而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。随着 FPGA 性能的不断提升,","datatype":"webpage","clcs":[],"similarityPercentage":"55.0%","self":false,"text":"原型验证也可以通过硬件仿真器实现,但硬件仿真器的价格太昂贵,<em class='similar'>而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。随着 FPGA 性能的不断提升,"}],"textWithDynamicClass":"从实现本质出发,本文的所提及的高密度原型验证系统也可基于硬件仿真器来实现,但硬件仿真器的生产或因设计变更发生的调整成本高昂,<em class='similar T9I1' onmouseover=\"highlightSetter('T9I1',false)\" onmouseout=\"highlightSetter('T9I1',true)\">而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>","similar_word_count":25,"text":"从实现本质出发,本文的所提及的高密度原型验证系统也可基于硬件仿真器来实现,但硬件仿真器的生产或因设计变更发生的调整成本高昂,<em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>","suggest":{"synonyms":[{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["完好"],"keyword":"完备"}],"keyword":["当代","技术发展","配套软件","完备"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":388.39996,"teacher":"","textWithDynamicClass":"原型验证也可以通过硬件仿真器实现,但硬件仿真器的价格太昂贵,而且由于 FPGA 的技术积累已经比较成熟,所以本文采用 FPGA 实现原型验证。<em class='similar 10S15I6' onmouseover=\"highlightSetter('10S15I6',false)\" onmouseout=\"highlightSetter('10S15I6',true)\">随着 FPGA 性能的不断提升,</em><em class='similar 10S15I7' onmouseover=\"highlightSetter('10S15I7',false)\" onmouseout=\"highlightSetter('10S15I7',true)\">基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG","datatype":"webpage","clcs":[],"similarityPercentage":"82.9%","self":false,"text":"原型验证也可以通过硬件仿真器实现,但硬件仿真器的价格太昂贵,而且由于 FPGA 的技术积累已经比较成熟,所以本文采用 FPGA 实现原型验证。<em class='similar'>随着 FPGA 性能的不断提升,</em><em class='similar'>基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG"}],"textWithDynamicClass":"所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar T9I4' onmouseover=\"highlightSetter('T9I4',false)\" onmouseout=\"highlightSetter('T9I4',true)\">随着FPGA性能的不断提升,</em><em class='similar T9I5' onmouseover=\"highlightSetter('T9I5',false)\" onmouseout=\"highlightSetter('T9I5',true)\">基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","similar_word_count":34,"text":"所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","suggest":{"synonyms":[],"keyword":["原型验证","芯片验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000798956911","author":"JXT","university":"","source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":"","reference":false,"similarScore":91.25,"teacher":"","textWithDynamicClass":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar 11S17I9' onmouseover=\"highlightSetter('11S17I9',false)\" onmouseout=\"highlightSetter('11S17I9',true)\">设计者将要通过硬件描述语言在寄存器传输级</em>(Register Transfer Level,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"55.3%","self":false,"text":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar'>设计者将要通过硬件描述语言在寄存器传输级</em>(Register Transfer Level,"}],"textWithDynamicClass":"<em class='similar T10I0' onmouseover=\"highlightSetter('T10I0',false)\" onmouseout=\"highlightSetter('T10I0',true)\">当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级</em>","similar_word_count":32,"text":"<em class='similar'>当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级</em>","suggest":{"synonyms":[],"keyword":["集成电路","开发人员","硬件描述语言","寄存器传输级"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000798956911","author":"JXT","university":"","source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":"","reference":false,"similarScore":91.25,"teacher":"","textWithDynamicClass":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,设计者将要通过硬件描述语言在寄存器传输级<em class='similar 11S17I10' onmouseover=\"highlightSetter('11S17I10',false)\" onmouseout=\"highlightSetter('11S17I10',true)\">(Register Transfer Level,</em>RTL)进行逻辑设计[13],进而在逻辑级定义芯","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"59.9%","self":false,"text":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,设计者将要通过硬件描述语言在寄存器传输级<em class='similar'>(Register Transfer Level,</em>RTL)进行逻辑设计[13],进而在逻辑级定义芯"}],"textWithDynamicClass":"当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级<em class='similar T10I1' onmouseover=\"highlightSetter('T10I1',false)\" onmouseout=\"highlightSetter('T10I1',true)\">(Register Transfer Level,</em>","similar_word_count":6,"text":"当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级<em class='similar'>(Register Transfer Level,</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190331742911","author":"","university":"","source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html","reference":false,"similarScore":138.66666,"teacher":"","textWithDynamicClass":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar 12S18I5' onmouseover=\"highlightSetter('12S18I5',false)\" onmouseout=\"highlightSetter('12S18I5',true)\">逻辑综合、</em><em class='similar 12S18I6' onmouseover=\"highlightSetter('12S18I6',false)\" onmouseout=\"highlightSetter('12S18I6',true)\">逻辑优化、</em><em class='similar 12S18I7' onmouseover=\"highlightSetter('12S18I7',false)\" onmouseout=\"highlightSetter('12S18I7',true)\">技术映射、</em>打包、<em class='similar 12S18I9' onmouseover=\"highlightSetter('12S18I9',false)\" onmouseout=\"highlightSetter('12S18I9',true)\">布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节","datatype":"webpage","clcs":[],"similarityPercentage":"78.3%","self":false,"text":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar'>逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em>打包、<em class='similar'>布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节"}],"textWithDynamicClass":"的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar T11I1' onmouseover=\"highlightSetter('T11I1',false)\" onmouseout=\"highlightSetter('T11I1',true)\">包括逻辑综合、</em><em class='similar T11I2' onmouseover=\"highlightSetter('T11I2',false)\" onmouseout=\"highlightSetter('T11I2',true)\">逻辑优化、</em><em class='similar T11I3' onmouseover=\"highlightSetter('T11I3',false)\" onmouseout=\"highlightSetter('T11I3',true)\">技术映射、</em><em class='similar T11I4' onmouseover=\"highlightSetter('T11I4',false)\" onmouseout=\"highlightSetter('T11I4',true)\">布局、</em><em class='similar T11I5' onmouseover=\"highlightSetter('T11I5',false)\" onmouseout=\"highlightSetter('T11I5',true)\">布线等</em>","similar_word_count":19,"text":"的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>布局、</em><em class='similar'>布线等</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["构造"],"keyword":"布局"}],"keyword":["逻辑综合","逻辑优化","映射","布局","布线"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190765717911","author":"","university":"","source":"网页","title":"2019年12月_oyzy_Sean的篝火_SeanOY_CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/month/2019/12","reference":false,"similarScore":97.99999,"teacher":"","textWithDynamicClass":")FPGA概要一、FPGA组成要素FPGA主要由三部分组成:<em class='similar 14S20I6' onmouseover=\"highlightSetter('14S20I6',false)\" onmouseout=\"highlightSetter('14S20I6',true)\">实现逻辑电路的逻辑要素</em><em class='similar 14S20I7' onmouseover=\"highlightSetter('14S20I7',false)\" onmouseout=\"highlightSetter('14S20I7',true)\">(逻辑块,</em>Logical Block,LB)、与外部进行信号","datatype":"webpage","clcs":[],"similarityPercentage":"38.7%","self":false,"text":")FPGA概要一、FPGA组成要素FPGA主要由三部分组成:<em class='similar'>实现逻辑电路的逻辑要素</em><em class='similar'>(逻辑块,</em>Logical Block,LB)、与外部进行信号"}],"textWithDynamicClass":"<em class='similar T13I0' onmouseover=\"highlightSetter('T13I0',false)\" onmouseout=\"highlightSetter('T13I0',true)\">第一部分是实现逻辑电路的逻辑要素即逻辑块</em>","similar_word_count":20,"text":"<em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em>","suggest":{"synonyms":[],"keyword":["第一部分","逻辑电路","逻辑要素","逻辑块"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190761327111","author":"","university":"","source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox","reference":false,"similarScore":164.88371,"teacher":"","textWithDynamicClass":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar 15S22I7' onmouseover=\"highlightSetter('15S22I7',false)\" onmouseout=\"highlightSetter('15S22I7',true)\">逻辑要素逻辑要素由可以实现任意逻辑电路的可编程部分触发器</em><em class='similar 15S22I8' onmouseover=\"highlightSetter('15S22I8',false)\" onmouseout=\"highlightSetter('15S22I8',true)\">(Flip-Flop,</em>FF)<em class='similar 15S22I10' onmouseover=\"highlightSetter('15S22I10',false)\" onmouseout=\"highlightSetter('15S22I10',true)\">等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/","datatype":"webpage","clcs":[],"similarityPercentage":"59.1%","self":false,"text":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar'>逻辑要素逻辑要素由可以实现任意逻辑电路的可编程部分触发器</em><em class='similar'>(Flip-Flop,</em>FF)<em class='similar'>等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/"}],"textWithDynamicClass":"可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,<em class='similar T14I1' onmouseover=\"highlightSetter('T14I1',false)\" onmouseout=\"highlightSetter('T14I1',true)\">其本质都是由可以实现任意电路逻辑的可编程部分触发器即Flip-Flop等数据存储电路和数据选择器组成</em>","similar_word_count":43,"text":"可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,<em class='similar'>其本质都是由可以实现任意电路逻辑的可编程部分触发器即Flip-Flop等数据存储电路和数据选择器组成</em>","suggest":{"synonyms":[],"keyword":["逻辑的","可编程","触发器","存储电路","数据选择器","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135795011511","author":"","university":"","source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310","reference":false,"similarScore":77.61903,"teacher":"","textWithDynamicClass":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB(Configurable Logic Block)来介绍,<em class='similar 16S23I3' onmouseover=\"highlightSetter('16S23I3',false)\" onmouseout=\"highlightSetter('16S23I3',true)\">把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把","datatype":"webpage","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB(Configurable Logic Block)来介绍,<em class='similar'>把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把"}],"textWithDynamicClass":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar T15I0' onmouseover=\"highlightSetter('T15I0',false)\" onmouseout=\"highlightSetter('T15I0',true)\">如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em>","similar_word_count":22,"text":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em>","suggest":{"synonyms":[],"keyword":["设计研发","逻辑单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135795011511","author":"","university":"","source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310","reference":false,"similarScore":77.61903,"teacher":"","textWithDynamicClass":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar 16S23I1' onmouseover=\"highlightSetter('16S23I1',false)\" onmouseout=\"highlightSetter('16S23I1',true)\">(Configurable Logic Block)</em>来介绍,把CLB作为FPGA里的最小逻辑单元。","datatype":"webpage","clcs":[],"similarityPercentage":"66.3%","self":false,"text":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar'>(Configurable Logic Block)</em>来介绍,把CLB作为FPGA里的最小逻辑单元。"}],"textWithDynamicClass":"如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB<em class='similar T15I1' onmouseover=\"highlightSetter('T15I1',false)\" onmouseout=\"highlightSetter('T15I1',true)\">(Configurable Logic Block)</em>","similar_word_count":6,"text":"如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB<em class='similar'>(Configurable Logic Block)</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139141171711","author":"","university":"","source":"网页","title":"多FPGA验证平台的SoC逻辑划分方法及应用 - 道客巴巴","url":"http://www.doc88.com/p%2D9942184587640.html","reference":false,"similarScore":127.85715,"teacher":"","textWithDynamicClass":"A原型验证方法的关键挑战FPGA芯片是由各项硬件资源构成的,<em class='similar 17S24I5' onmouseover=\"highlightSetter('17S24I5',false)\" onmouseout=\"highlightSetter('17S24I5',true)\">其中包括可编程输入输出资源</em>( I/OBl ock)<em class='similar 17S24I7' onmouseover=\"highlightSetter('17S24I7',false)\" onmouseout=\"highlightSetter('17S24I7',true)\">、基本可编程逻辑单元</em>( LUT)、嵌入式块RAM、<em class='similar 17S24I10' onmouseover=\"highlightSetter('17S24I10',false)\" onmouseout=\"highlightSetter('17S24I10',true)\">布线资源、</em>底层嵌入功能单元、内嵌专用硬核等等。因为FPGA芯","datatype":"webpage","clcs":[],"similarityPercentage":"54.5%","self":false,"text":"A原型验证方法的关键挑战FPGA芯片是由各项硬件资源构成的,<em class='similar'>其中包括可编程输入输出资源</em>( I/OBl ock)<em class='similar'>、基本可编程逻辑单元</em>( LUT)、嵌入式块RAM、<em class='similar'>布线资源、</em>底层嵌入功能单元、内嵌专用硬核等等。因为FPGA芯"}],"textWithDynamicClass":"上述FPGA三部分主要组成具体包括以下内容:<em class='similar T16I1' onmouseover=\"highlightSetter('T16I1',false)\" onmouseout=\"highlightSetter('T16I1',true)\">输入输出块、</em><em class='similar T16I2' onmouseover=\"highlightSetter('T16I2',false)\" onmouseout=\"highlightSetter('T16I2',true)\">可编程的内嵌式RAM块、</em><em class='similar T16I3' onmouseover=\"highlightSetter('T16I3',false)\" onmouseout=\"highlightSetter('T16I3',true)\">可编程逻辑单元、</em><em class='similar T16I4' onmouseover=\"highlightSetter('T16I4',false)\" onmouseout=\"highlightSetter('T16I4',true)\">内部布线资源等。</em>","similar_word_count":28,"text":"上述FPGA三部分主要组成具体包括以下内容:<em class='similar'>输入输出块、</em><em class='similar'>可编程的内嵌式RAM块、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>内部布线资源等。</em>","suggest":{"synonyms":[],"keyword":["输入输出","可编程","内嵌式","逻辑单元","布线","内嵌"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000030209219211","author":"","university":"","source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html","reference":false,"similarScore":205.42018,"teacher":"","textWithDynamicClass":"rdwareDescriptionLanguage,HDL)是一种用形式化方法来描述数字电路和系统的语言。VerilogHDL和VHDL是目前世界上最流行的两种硬件描述语言,<em class='similar 18S28I5' onmouseover=\"highlightSetter('18S28I5',false)\" onmouseout=\"highlightSetter('18S28I5',true)\">都是在20世纪80年代中期开发出来的,</em>两种HDL均为IEEE标准。但是Veriolg语言","datatype":"webpage","clcs":[],"similarityPercentage":"86.9%","self":false,"text":"rdwareDescriptionLanguage,HDL)是一种用形式化方法来描述数字电路和系统的语言。VerilogHDL和VHDL是目前世界上最流行的两种硬件描述语言,<em class='similar'>都是在20世纪80年代中期开发出来的,</em>两种HDL均为IEEE标准。但是Veriolg语言"},{"profession":false,"keywords":[],"year":"","docid":"9000186098081911","author":"","university":"","source":"网页","title":"基于EDA的ALU设计","url":"https://wenku.baidu.com/view/7b0e2b7d1cb91a37f111f18583d049649b660e0c","reference":false,"similarScore":194.35065,"teacher":"","textWithDynamicClass":"电子系统进行描述。VerilogHDL和VHDL是目前世界上<em class='similar 18S25I6' onmouseover=\"highlightSetter('18S25I6',false)\" onmouseout=\"highlightSetter('18S25I6',true)\">最流行的两种硬件描述语言</em>,<em class='similar 18S25I7' onmouseover=\"highlightSetter('18S25I7',false)\" onmouseout=\"highlightSetter('18S25I7',true)\">都是在20世纪80年代中期开发出来的。</em>前者由GatewayDesignAutomatio","datatype":"webpage","clcs":[],"similarityPercentage":"68.9%","self":false,"text":"电子系统进行描述。VerilogHDL和VHDL是目前世界上<em class='similar'>最流行的两种硬件描述语言</em>,<em class='similar'>都是在20世纪80年代中期开发出来的。</em>前者由GatewayDesignAutomatio"},{"profession":false,"keywords":[],"year":"","docid":"9000120580984311","author":"","university":"","source":"网页","title":"基于FPGA的EPON ONU设计与实现.pdf - 豆丁网","url":"http://www.docin.com/p-1149984087.html","reference":false,"similarScore":180.10822,"teacher":"","textWithDynamicClass":"用于从算法级、门级到开关级的多种抽象设计层次的数字系统建模。<em class='similar 18S27I3' onmouseover=\"highlightSetter('18S27I3',false)\" onmouseout=\"highlightSetter('18S27I3',true)\">VHDL和Verilog HDL 是目前世界上最流行的两种硬件描述语言,</em><em class='similar 18S27I4' onmouseover=\"highlightSetter('18S27I4',false)\" onmouseout=\"highlightSetter('18S27I4',true)\">两者都是在20世纪80年代中期开发出来的。</em>两种 HDL 语言均为IEEE 标准。Verilo","datatype":"webpage","clcs":[],"similarityPercentage":"64.6%","self":false,"text":"用于从算法级、门级到开关级的多种抽象设计层次的数字系统建模。<em class='similar'>VHDL和Verilog HDL 是目前世界上最流行的两种硬件描述语言,</em><em class='similar'>两者都是在20世纪80年代中期开发出来的。</em>两种 HDL 语言均为IEEE 标准。Verilo"},{"profession":false,"keywords":[],"year":"","docid":"9000105919985711","author":"","university":"","source":"网页","title":"基于FPGA的豆浆机控制电路设计与实现 - 道客巴巴","url":"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f7356186da1f68d4e419ce3b4603506695bc21271704d6c1776203ae4a5afdf04128715c7ea3de95c81cd2ace22c38f82c23006a913263&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adoc88%2Ecom&qid=cb8178880014014e&p1=9","reference":false,"similarScore":188.89609,"teacher":"","textWithDynamicClass":"出逻辑表达式,其还可以用来表示数字逻辑系统所完成的逻辑功能。<em class='similar 18S26I3' onmouseover=\"highlightSetter('18S26I3',false)\" onmouseout=\"highlightSetter('18S26I3',true)\"> Verilog HDL 和 VHDL 是世界上使用最广泛的两种硬件描述语言,</em><em class='similar 18S26I4' onmouseover=\"highlightSetter('18S26I4',false)\" onmouseout=\"highlightSetter('18S26I4',true)\">这两种语言都是在20世纪80年代中期被开发出来的。</em>前者由 Gateway Design Automa","datatype":"webpage","clcs":[],"similarityPercentage":"63.8%","self":false,"text":"出逻辑表达式,其还可以用来表示数字逻辑系统所完成的逻辑功能。<em class='similar'> Verilog HDL 和 VHDL 是世界上使用最广泛的两种硬件描述语言,</em><em class='similar'>这两种语言都是在20世纪80年代中期被开发出来的。</em>前者由 Gateway Design Automa"}],"textWithDynamicClass":"Verilog HDL是以软件编码的形式来表达硬件行为级的一种高级硬件描述语言,其通常以文本或字符的形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示所期望的电路实现的行为逻辑或复杂的逻辑运算表达等。<em class='similar T17I2' onmouseover=\"highlightSetter('T17I2',false)\" onmouseout=\"highlightSetter('T17I2',true)\">Verilog HDL是当前集成电路开发与设计环境中最常使用的的两种硬件描述语言之一,</em><em class='similar T17I3' onmouseover=\"highlightSetter('T17I3',false)\" onmouseout=\"highlightSetter('T17I3',true)\">其在20世纪80年代中期开发出来。</em>","similar_word_count":48,"text":"Verilog HDL是以软件编码的形式来表达硬件行为级的一种高级硬件描述语言,其通常以文本或字符的形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示所期望的电路实现的行为逻辑或复杂的逻辑运算表达等。<em class='similar'>Verilog HDL是当前集成电路开发与设计环境中最常使用的的两种硬件描述语言之一,</em><em class='similar'>其在20世纪80年代中期开发出来。</em>","suggest":{"synonyms":[],"keyword":["集成电路","设计环境","硬件描述语言","20","80","中期"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000030209219211","author":"","university":"","source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html","reference":false,"similarScore":205.42018,"teacher":"","textWithDynamicClass":"rdwareDescriptionLanguage,HDL)<em class='similar 18S28I3' onmouseover=\"highlightSetter('18S28I3',false)\" onmouseout=\"highlightSetter('18S28I3',true)\">是一种用形式化方法来描述数字电路和系统的语言。</em>VerilogHDL和VHDL是目前世界上最流行的两种硬件描述语言,都是在20世纪80年代中期开发出来的,","datatype":"webpage","clcs":[],"similarityPercentage":"72.8%","self":false,"text":"rdwareDescriptionLanguage,HDL)<em class='similar'>是一种用形式化方法来描述数字电路和系统的语言。</em>VerilogHDL和VHDL是目前世界上最流行的两种硬件描述语言,都是在20世纪80年代中期开发出来的,"}],"textWithDynamicClass":"根据IEEE标准所说明的,<em class='similar T17I5' onmouseover=\"highlightSetter('T17I5',false)\" onmouseout=\"highlightSetter('T17I5',true)\">Verilog HDL是一种用来描述和创建电路系统所</em>","similar_word_count":18,"text":"根据IEEE标准所说明的,<em class='similar'>Verilog HDL是一种用来描述和创建电路系统所</em>","suggest":{"synonyms":[],"keyword":["电路系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000118992500811","author":"","university":"","source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html","reference":false,"similarScore":155.05556,"teacher":"","textWithDynamicClass":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar 19S30I3' onmouseover=\"highlightSetter('19S30I3',false)\" onmouseout=\"highlightSetter('19S30I3',true)\">所以它支持硬件设计的开发、</em>验证、综合和测试;","datatype":"webpage","clcs":[],"similarityPercentage":"68.0%","self":false,"text":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar'>所以它支持硬件设计的开发、</em>验证、综合和测试;"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000437751211","author":"","university":"","source":"大学生论文联合库","title":"数字频率发生器","url":"","reference":false,"similarScore":321.09988,"teacher":"","textWithDynamicClass":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar 19S29I7' onmouseover=\"highlightSetter('19S29I7',false)\" onmouseout=\"highlightSetter('19S29I7',true)\">由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar 19S29I8' onmouseover=\"highlightSetter('19S29I8',false)\" onmouseout=\"highlightSetter('19S29I8',true)\">因此它支持硬件设计的开发、</em>验证、综合和测试;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.2%","self":false,"text":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar'>由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar'>因此它支持硬件设计的开发、</em>验证、综合和测试;"}],"textWithDynamicClass":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar T18I1' onmouseover=\"highlightSetter('T18I1',false)\" onmouseout=\"highlightSetter('T18I1',true)\">由于Verilog HDL是机器可读的、</em><em class='similar T18I2' onmouseover=\"highlightSetter('T18I2',false)\" onmouseout=\"highlightSetter('T18I2',true)\">人类可读的,</em><em class='similar T18I3' onmouseover=\"highlightSetter('T18I3',false)\" onmouseout=\"highlightSetter('T18I3',true)\">所以该语言能够支持对硬件设计进行开发、</em>","similar_word_count":34,"text":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"}],"keyword":["机器","可读","硬件设计","硬件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000118992500811","author":"","university":"","source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html","reference":false,"similarScore":155.05556,"teacher":"","textWithDynamicClass":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,所以它支持硬件设计的开发、验证、<em class='similar 19S30I5' onmouseover=\"highlightSetter('19S30I5',false)\" onmouseout=\"highlightSetter('19S30I5',true)\">综合和测试;</em><em class='similar 19S30I6' onmouseover=\"highlightSetter('19S30I6',false)\" onmouseout=\"highlightSetter('19S30I6',true)\">支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的","datatype":"webpage","clcs":[],"similarityPercentage":"73.5%","self":false,"text":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,所以它支持硬件设计的开发、验证、<em class='similar'>综合和测试;</em><em class='similar'>支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000437751211","author":"","university":"","source":"大学生论文联合库","title":"数字频率发生器","url":"","reference":false,"similarScore":321.09988,"teacher":"","textWithDynamicClass":"因此它支持硬件设计的开发、验证、<em class='similar 19S29I10' onmouseover=\"highlightSetter('19S29I10',false)\" onmouseout=\"highlightSetter('19S29I10',true)\">综合和测试;</em><em class='similar 19S29I11' onmouseover=\"highlightSetter('19S29I11',false)\" onmouseout=\"highlightSetter('19S29I11',true)\">硬件数据之间的通信;</em><em class='similar 19S29I12' onmouseover=\"highlightSetter('19S29I12',false)\" onmouseout=\"highlightSetter('19S29I12',true)\">硬件的设计、</em><em class='similar 19S29I13' onmouseover=\"highlightSetter('19S29I13',false)\" onmouseout=\"highlightSetter('19S29I13',true)\">维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"57.4%","self":false,"text":"因此它支持硬件设计的开发、验证、<em class='similar'>综合和测试;</em><em class='similar'>硬件数据之间的通信;</em><em class='similar'>硬件的设计、</em><em class='similar'>维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的"}],"textWithDynamicClass":"正确性验证、<em class='similar T18I5' onmouseover=\"highlightSetter('T18I5',false)\" onmouseout=\"highlightSetter('T18I5',true)\">合成和测试、</em><em class='similar T18I6' onmouseover=\"highlightSetter('T18I6',false)\" onmouseout=\"highlightSetter('T18I6',true)\">硬件设计数据的通信和维护、</em>","similar_word_count":17,"text":"正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>","suggest":{"synonyms":[],"keyword":["硬件设计","硬件","设计数据"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":362.06055,"teacher":"","textWithDynamicClass":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar 20S32I5' onmouseover=\"highlightSetter('20S32I5',false)\" onmouseout=\"highlightSetter('20S32I5',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar 20S32I6' onmouseover=\"highlightSetter('20S32I6',false)\" onmouseout=\"highlightSetter('20S32I6',true)\">连续赋值语句,</em>在此表达式中寄存器和线网都可以连续驱动线网,实现基本的结构化建模:","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"90.0%","self":false,"text":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>连续赋值语句,</em>在此表达式中寄存器和线网都可以连续驱动线网,实现基本的结构化建模:"}],"textWithDynamicClass":"<em class='similar T19I0' onmouseover=\"highlightSetter('T19I0',false)\" onmouseout=\"highlightSetter('T19I0',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar T19I1' onmouseover=\"highlightSetter('T19I1',false)\" onmouseout=\"highlightSetter('T19I1',true)\">一种是连续型赋值语句,</em>","similar_word_count":22,"text":"<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>","suggest":{"synonyms":[],"keyword":["语句","连续型","赋值语句","赋值"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":362.06055,"teacher":"","textWithDynamicClass":"连续赋值语句,在此表达式中寄存器和线网都可以连续驱动线网,<em class='similar 20S32I8' onmouseover=\"highlightSetter('20S32I8',false)\" onmouseout=\"highlightSetter('20S32I8',true)\">实现基本的结构化建模:</em><em class='similar 20S32I9' onmouseover=\"highlightSetter('20S32I9',false)\" onmouseout=\"highlightSetter('20S32I9',true)\">过程赋值语句,</em><em class='similar 20S32I10' onmouseover=\"highlightSetter('20S32I10',false)\" onmouseout=\"highlightSetter('20S32I10',true)\">在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar 20S32I11' onmouseover=\"highlightSetter('20S32I11',false)\" onmouseout=\"highlightSetter('20S32I11',true)\">实现基本的行为建模。</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"81.1%","self":false,"text":"连续赋值语句,在此表达式中寄存器和线网都可以连续驱动线网,<em class='similar'>实现基本的结构化建模:</em><em class='similar'>过程赋值语句,</em><em class='similar'>在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar'>实现基本的行为建模。</em>"}],"textWithDynamicClass":"通过使用连续性赋值表达式,用于在实际运行中驱动FPGA中的连续线网,<em class='similar T19I4' onmouseover=\"highlightSetter('T19I4',false)\" onmouseout=\"highlightSetter('T19I4',true)\">从而实现基本建模;</em><em class='similar T19I5' onmouseover=\"highlightSetter('T19I5',false)\" onmouseout=\"highlightSetter('T19I5',true)\">另一种是过程型赋值语句,</em>","similar_word_count":19,"text":"通过使用连续性赋值表达式,用于在实际运行中驱动FPGA中的连续线网,<em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>","suggest":{"synonyms":[],"keyword":["语句","赋值语句","赋值","建模","另一种"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":362.06055,"teacher":"","textWithDynamicClass":"过程赋值语句,<em class='similar 20S32I10' onmouseover=\"highlightSetter('20S32I10',false)\" onmouseout=\"highlightSetter('20S32I10',true)\">在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar 20S32I11' onmouseover=\"highlightSetter('20S32I11',false)\" onmouseout=\"highlightSetter('20S32I11',true)\">实现基本的行为建模。</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"74.6%","self":false,"text":"过程赋值语句,<em class='similar'>在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar'>实现基本的行为建模。</em>"}],"textWithDynamicClass":"在过程性赋值语句的行为级描述中,<em class='similar T19I7' onmouseover=\"highlightSetter('T19I7',false)\" onmouseout=\"highlightSetter('T19I7',true)\">将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar T19I8' onmouseover=\"highlightSetter('T19I8',false)\" onmouseout=\"highlightSetter('T19I8',true)\">从而实现行为级的描述建模。</em>","similar_word_count":33,"text":"在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>","suggest":{"synonyms":[],"keyword":["线网","建模","行为级","寄存器","网间","运算结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000639003511","author":"欧阳廷炳","university":"","source":"大学生论文联合库","title":"数字集成电路设计","url":"","reference":false,"similarScore":173.55933,"teacher":"","textWithDynamicClass":"4.5.1 DC综合综合是数字前端模块设计中的重要步骤之一,<em class='similar 21S33I4' onmouseover=\"highlightSetter('21S33I4',false)\" onmouseout=\"highlightSetter('21S33I4',true)\">综合的过程是将我们用硬件描述语言描述的行为级的电路、</em><em class='similar 21S33I5' onmouseover=\"highlightSetter('21S33I5',false)\" onmouseout=\"highlightSetter('21S33I5',true)\">RTL 级的电路转换到门级电路网表的过程。</em>我们需要用到Design Compiler工具是S","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"41.0%","self":false,"text":"4.5.1 DC综合综合是数字前端模块设计中的重要步骤之一,<em class='similar'>综合的过程是将我们用硬件描述语言描述的行为级的电路、</em><em class='similar'>RTL 级的电路转换到门级电路网表的过程。</em>我们需要用到Design Compiler工具是S"}],"textWithDynamicClass":"<em class='similar T20I0' onmouseover=\"highlightSetter('T20I0',false)\" onmouseout=\"highlightSetter('T20I0',true)\">对于FPGA数字电路设计而言综合简而言之就是从使用硬件描述语言构造的行为级描述电路的抽象级模型构造出对应的门级电路网表的过程。</em>","similar_word_count":59,"text":"<em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从使用硬件描述语言构造的行为级描述电路的抽象级模型构造出对应的门级电路网表的过程。</em>","suggest":{"synonyms":[{"synonyms":["笼统"],"keyword":"抽象"}],"keyword":["数字电路设计","硬件描述语言","行为级","抽象","模型构造","电路网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000098888088811","author":"","university":"","source":"网页","title":"形式化验证技术在EDA软件开发中的应用","url":"http://cache.baiducontent.com/c?m=9d78d513d99417fc4fece4697c1cc0116f43f0122ba3a7013894cd47c9221d03506790a63a675541c4c50b315cfe4356fdf041236a5c3df58cc8fe4adfbe922a2b8d2234761d8c4705d36ef58d197b&p=9b63892984904ead0dbd9b7a46&newp=8767c64ad4934eab13b5db354d53d8224216ed6938c3864e1290c408d23f061d4862e7bd26281306d1c178650aad4d56e0f7357323454df6cc8a871d81ed&user=baidu&fm=sc&query=site%3Adoc88%2Ecom+EDA%C8%ED%BC%FE&qid=deefeeeb00006b19&p1=26","reference":false,"similarScore":110.769226,"teacher":"","textWithDynamicClass":"件后,设计者还必须进行一次R T L 级功能仿真。1.2.3<em class='similar 22S36I5' onmouseover=\"highlightSetter('22S36I5',false)\" onmouseout=\"highlightSetter('22S36I5',true)\">综合优化综合可细分为行为综合和逻辑综合。</em>是指把}玎)L 语言翻译成最基本的与或非门的连接关","datatype":"webpage","clcs":[],"similarityPercentage":"76.4%","self":false,"text":"件后,设计者还必须进行一次R T L 级功能仿真。1.2.3<em class='similar'>综合优化综合可细分为行为综合和逻辑综合。</em>是指把}玎)L 语言翻译成最基本的与或非门的连接关"},{"profession":false,"keywords":[],"year":"","docid":"9000146036562311","author":"","university":"","source":"网页","title":"选择题   数字系统设计","url":"https://wenku.baidu.com/view/dd29f7e9b8f67c1cfad6b8c1","reference":false,"similarScore":206.55554,"teacher":"","textWithDynamicClass":"PROM,HDL,PAL,GAL70.以下说法错误的是BA.<em class='similar 22S35I20' onmouseover=\"highlightSetter('22S35I20',false)\" onmouseout=\"highlightSetter('22S35I20',true)\">行为综合:</em><em class='similar 22S35I21' onmouseover=\"highlightSetter('22S35I21',false)\" onmouseout=\"highlightSetter('22S35I21',true)\">从算法表示、</em><em class='similar 22S35I22' onmouseover=\"highlightSetter('22S35I22',false)\" onmouseout=\"highlightSetter('22S35I22',true)\">行为描述转换到寄存器传输级</em>(RTL)B.逻辑综合:<em class='similar 22S35I26' onmouseover=\"highlightSetter('22S35I26',false)\" onmouseout=\"highlightSetter('22S35I26',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)C.版图综合或结构综合:从逻辑门表示","datatype":"webpage","clcs":[],"similarityPercentage":"68.8%","self":false,"text":"PROM,HDL,PAL,GAL70.以下说法错误的是BA.<em class='similar'>行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL)B.逻辑综合:<em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)C.版图综合或结构综合:从逻辑门表示"}],"textWithDynamicClass":"<em class='similar T21I0' onmouseover=\"highlightSetter('T21I0',false)\" onmouseout=\"highlightSetter('T21I0',true)\">综合细分行为综合与逻辑综合,</em><em class='similar T21I1' onmouseover=\"highlightSetter('T21I1',false)\" onmouseout=\"highlightSetter('T21I1',true)\">行为综合是从算法表示、</em><em class='similar T21I2' onmouseover=\"highlightSetter('T21I2',false)\" onmouseout=\"highlightSetter('T21I2',true)\">行为描述转换到RTL级,</em>","similar_word_count":32,"text":"<em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>","suggest":{"synonyms":[],"keyword":["细分","逻辑综合","行为描述","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":222.8977,"teacher":"","textWithDynamicClass":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar 23S37I8' onmouseover=\"highlightSetter('23S37I8',false)\" onmouseout=\"highlightSetter('23S37I8',true)\">是如何转换成硬件的;</em>.常量(oonstants)<em class='similar 23S37I11' onmouseover=\"highlightSetter('23S37I11',false)\" onmouseout=\"highlightSetter('23S37I11',true)\">是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar 23S37I14' onmouseover=\"highlightSetter('23S37I14',false)\" onmouseout=\"highlightSetter('23S37I14',true)\">是如何转换成硬件的。</em>常量数据类型(net、register、param","datatype":"book","clcs":[],"similarityPercentage":"86.1%","self":false,"text":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar'>是如何转换成硬件的;</em>.常量(oonstants)<em class='similar'>是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar'>是如何转换成硬件的。</em>常量数据类型(net、register、param"}],"textWithDynamicClass":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,更加关注于Verilog HDL语句是如何被映射成实际硬件器件的,如:数据类型将被映射成为何种硬件,<em class='similar T22I4' onmouseover=\"highlightSetter('T22I4',false)\" onmouseout=\"highlightSetter('T22I4',true)\">常量是如何进一步转换成逻辑数值的,</em><em class='similar T22I5' onmouseover=\"highlightSetter('T22I5',false)\" onmouseout=\"highlightSetter('T22I5',true)\">语句是如何转换成硬件的。</em>","similar_word_count":27,"text":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,更加关注于Verilog HDL语句是如何被映射成实际硬件器件的,如:数据类型将被映射成为何种硬件,<em class='similar'>常量是如何进一步转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>","suggest":{"synonyms":[],"keyword":["语句","硬件","常量","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":227.94736,"teacher":"","textWithDynamicClass":"(即\"=\"或\"<=\")右边提取出的逻辑,用于驱动赋值语句左边的变量(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar 24S38I13' onmouseover=\"highlightSetter('24S38I13',false)\" onmouseout=\"highlightSetter('24S38I13',true)\">有两种类型的过程赋值语句:</em>.","datatype":"book","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"(即\"=\"或\"<=\")右边提取出的逻辑,用于驱动赋值语句左边的变量(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar'>有两种类型的过程赋值语句:</em>."}],"textWithDynamicClass":"<em class='similar T23I0' onmouseover=\"highlightSetter('T23I0',false)\" onmouseout=\"highlightSetter('T23I0',true)\">过程过程赋值语句</em>","similar_word_count":8,"text":"<em class='similar'>过程过程赋值语句</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句","赋值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000010354498311","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449","reference":false,"similarScore":172.63155,"teacher":"","textWithDynamicClass":"uta,b;outputc;assignc=a&amp;b;<em class='similar 24S39I8' onmouseover=\"highlightSetter('24S39I8',false)\" onmouseout=\"highlightSetter('24S39I8',true)\">endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或<=)右边提取出的逻辑用于驱动赋值语句左边的变量","datatype":"webpage","clcs":[],"similarityPercentage":"57.3%","self":false,"text":"uta,b;outputc;assignc=a&amp;b;<em class='similar'>endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或<=)右边提取出的逻辑用于驱动赋值语句左边的变量"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":227.94736,"teacher":"","textWithDynamicClass":"叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值<em class='similar 24S38I2' onmouseover=\"highlightSetter('24S38I2',false)\" onmouseout=\"highlightSetter('24S38I2',true)\">(Procedural Assignment)</em><em class='similar 24S38I3' onmouseover=\"highlightSetter('24S38I3',false)\" onmouseout=\"highlightSetter('24S38I3',true)\">语句的硬件实现是:</em><em class='similar 24S38I4' onmouseover=\"highlightSetter('24S38I4',false)\" onmouseout=\"highlightSetter('24S38I4',true)\">从赋值语句</em>(即\"=\"或\"<=\")右边提取出的逻辑,用于驱动赋值语句左边的变量","datatype":"book","clcs":[],"similarityPercentage":"51.3%","self":false,"text":"叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值<em class='similar'>(Procedural Assignment)</em><em class='similar'>语句的硬件实现是:</em><em class='similar'>从赋值语句</em>(即\"=\"或\"<=\")右边提取出的逻辑,用于驱动赋值语句左边的变量"}],"textWithDynamicClass":"(Procejural Assignment)<em class='similar T23I2' onmouseover=\"highlightSetter('T23I2',false)\" onmouseout=\"highlightSetter('T23I2',true)\">语句对应的FPGA的硬件实现与连续性赋值相似,</em>","similar_word_count":19,"text":"(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现与连续性赋值相似,</em>","suggest":{"synonyms":[],"keyword":["语句","硬件实现","连续性","赋值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000100889763911","author":"","university":"","source":"网页","title":"学习FPGA verilog的心得 ","url":"","reference":false,"similarScore":202.49998,"teacher":"","textWithDynamicClass":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar 24S40I3' onmouseover=\"highlightSetter('24S40I3',false)\" onmouseout=\"highlightSetter('24S40I3',true)\">从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net 过程赋值语句的综合:<em class='similar 24S40I5' onmouseover=\"highlightSetter('24S40I5',false)\" onmouseout=\"highlightSetter('24S40I5',true)\">从赋值语句右边提取出的逻辑,</em><em class='similar 24S40I6' onmouseover=\"highlightSetter('24S40I6',false)\" onmouseout=\"highlightSetter('24S40I6',true)\">用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a","datatype":"webpage","clcs":[],"similarityPercentage":"72.4%","self":false,"text":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar'>从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net 过程赋值语句的综合:<em class='similar'>从赋值语句右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a"},{"profession":false,"keywords":[],"year":"","docid":"9000010354498311","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449","reference":false,"similarScore":172.63155,"teacher":"","textWithDynamicClass":"uta,b;outputc;assignc=a&b;endmodule过程赋值语句的硬件实现是,从赋值语句的(=或&lt;=)<em class='similar 24S39I11' onmouseover=\"highlightSetter('24S39I11',false)\" onmouseout=\"highlightSetter('24S39I11',true)\">右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句","datatype":"webpage","clcs":[],"similarityPercentage":"69.7%","self":false,"text":"uta,b;outputc;assignc=a&b;endmodule过程赋值语句的硬件实现是,从赋值语句的(=或&lt;=)<em class='similar'>右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":227.94736,"teacher":"","textWithDynamicClass":"从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar 24S38I7' onmouseover=\"highlightSetter('24S38I7',false)\" onmouseout=\"highlightSetter('24S38I7',true)\">用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中(仅用于仿真),也可出现在\"always\"块语句中,但是只有\"always\"块语句中的过程赋值语句才能被综合。有两种类型的过程赋值语句:","datatype":"book","clcs":[],"similarityPercentage":"69.3%","self":false,"text":"从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的变���</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中(仅用于仿真),也可出现在\"always\"块语句中,但是只有\"always\"块语句中的过程赋值语句才能被综合。有两种类型的过程赋值语句:"}],"textWithDynamicClass":"语句对应的FPGA的硬件实现与连续性赋值相似,<em class='similar T23I3' onmouseover=\"highlightSetter('T23I3',false)\" onmouseout=\"highlightSetter('T23I3',true)\">即从赋值运算符即‘=’或‘&lt;=’的右侧计算后抽取出逻辑,</em><em class='similar T23I4' onmouseover=\"highlightSetter('T23I4',false)\" onmouseout=\"highlightSetter('T23I4',true)\">用于驱动赋值语句左边的变量,</em>","similar_word_count":33,"text":"语句对应的FPGA的硬件实现与连续性赋值相似,<em class='similar'>即从赋值运算符即‘=’或‘&lt;=’的右侧计算后抽取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句","赋值","运算符","右侧","抽取","逻辑","左边"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000100889763911","author":"","university":"","source":"网页","title":"学习FPGA verilog的心得 ","url":"","reference":false,"similarScore":202.49998,"teacher":"","textWithDynamicClass":"用于驱动赋值语句左边的net 过程赋值语句的综合:从赋值语句右边提取出的逻辑,<em class='similar 24S40I6' onmouseover=\"highlightSetter('24S40I6',false)\" onmouseout=\"highlightSetter('24S40I6',true)\">用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a","datatype":"webpage","clcs":[],"similarityPercentage":"72.2%","self":false,"text":"用于驱动赋值语句左边的net 过程赋值语句的综合:从赋值语句右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":227.94736,"teacher":"","textWithDynamicClass":"从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar 24S38I7' onmouseover=\"highlightSetter('24S38I7',false)\" onmouseout=\"highlightSetter('24S38I7',true)\">用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中(仅用于仿真),也可出现在\"always\"块语句中,但是只有\"always\"块语句中的过程赋值语句才能被综合。有两种类型的过程赋值语句:","datatype":"book","clcs":[],"similarityPercentage":"68.4%","self":false,"text":"从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在\"initial\"语句中(仅用于仿真),也可出现在\"always\"块语句中,但是只有\"always\"块语句中的过程赋值语句才能被综合。有两种类型的过程赋值语句:"},{"profession":false,"keywords":[],"year":"","docid":"9000010354498311","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449","reference":false,"similarScore":172.63155,"teacher":"","textWithDynamicClass":"uta,b;outputc;assignc=a&b;endmodule过程赋值语句的硬件实现是,从赋值语句的(=或&lt;=)<em class='similar 24S39I11' onmouseover=\"highlightSetter('24S39I11',false)\" onmouseout=\"highlightSetter('24S39I11',true)\">右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句","datatype":"webpage","clcs":[],"similarityPercentage":"64.4%","self":false,"text":"uta,b;outputc;assignc=a&b;endmodule过程赋值语句的硬件实现是,从赋值语句的(=或&lt;=)<em class='similar'>右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句"}],"textWithDynamicClass":"即从赋值运算符即‘=’或‘<=’的右侧计算后抽取出逻辑,用于驱动赋值语句左边的变量,<em class='similar T23I5' onmouseover=\"highlightSetter('T23I5',false)\" onmouseout=\"highlightSetter('T23I5',true)\">但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,</em>","similar_word_count":28,"text":"即从赋值运算符即‘=’或‘<=’的右侧计算后抽取出逻辑,用于驱动赋值语句左边的变量,<em class='similar'>但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语句","赋值","左边","语法","reg"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":546.7894,"teacher":"","textWithDynamicClass":"<em class='similar 25S41I0' onmouseover=\"highlightSetter('25S41I0',false)\" onmouseout=\"highlightSetter('25S41I0',true)\">3过程赋值语句的综合过程赋值</em>(Procedural Assignment)语句的硬件实现是:从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,用于驱动赋值语句左边的变量(必须是reg类型)<em class='similar 25S41I8' onmouseover=\"highlightSetter('25S41I8',false)\" onmouseout=\"highlightSetter('25S41I8',true)\">。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar 25S41I9' onmouseover=\"highlightSetter('25S41I9',false)\" onmouseout=\"highlightSetter('25S41I9',true)\">(仅用于仿真)</em><em class='similar 25S41I10' onmouseover=\"highlightSetter('25S41I10',false)\" onmouseout=\"highlightSetter('25S41I10',true)\">,也可出现在&quot;always&quot;块语句中,</em><em class='similar 25S41I11' onmouseover=\"highlightSetter('25S41I11',false)\" onmouseout=\"highlightSetter('25S41I11',true)\">但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em>有两种类型的过程赋值语句:","datatype":"book","clcs":[],"similarityPercentage":"66.8%","self":false,"text":"<em class='similar'>3过程赋值语句的综合过程赋值</em>(Procedural Assignment)语句的硬件实现是:从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,用于驱动赋值语句左边的变量(必须是reg类型)<em class='similar'>。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar'>(仅用于仿真)</em><em class='similar'>,也可出现在&quot;always&quot;块语句中,</em><em class='similar'>但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em>有两种类型的过程赋值语句:"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":119.214294,"teacher":"","textWithDynamicClass":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar 25S43I6' onmouseover=\"highlightSetter('25S43I6',false)\" onmouseout=\"highlightSetter('25S43I6',true)\">过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)","datatype":"webpage","clcs":[],"similarityPercentage":"50.8%","self":false,"text":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar'>过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":261.27274,"teacher":"","textWithDynamicClass":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar 25S44I9' onmouseover=\"highlightSetter('25S44I9',false)\" onmouseout=\"highlightSetter('25S44I9',true)\">过程赋值语句过程赋值语句出现在initial和always块语句中,</em>包括阻塞赋值语句、","datatype":"webpage","clcs":[],"similarityPercentage":"43.3%","self":false,"text":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar'>过程赋值语句过程赋值语句出现在initial和always块语句中,</em>包括阻塞赋值语句、"}],"textWithDynamicClass":"但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,且只有Always语<em class='similar T24I0' onmouseover=\"highlightSetter('T24I0',false)\" onmouseout=\"highlightSetter('T24I0',true)\">句块中的过程赋值语句才可以被综合器综合,</em><em class='similar T24I1' onmouseover=\"highlightSetter('T24I1',false)\" onmouseout=\"highlightSetter('T24I1',true)\">若出现在initial语句块中将被仅用于仿真。</em>","similar_word_count":36,"text":"但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,且只有Always语<em class='similar'>句块中的过程赋值语句才可以被综合器综合,</em><em class='similar'>若出现在initial语句块中将被仅用于仿真。</em>","suggest":{"synonyms":[],"keyword":["赋值语句","综合器","initial","语句","中将","仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar 25S42I4' onmouseover=\"highlightSetter('25S42I4',false)\" onmouseout=\"highlightSetter('25S42I4',true)\">(=或有两种类型的过程赋值语句:</em><em class='similar 25S42I5' onmouseover=\"highlightSetter('25S42I5',false)\" onmouseout=\"highlightSetter('25S42I5',true)\">阻塞赋值语句</em><em class='similar 25S42I6' onmouseover=\"highlightSetter('25S42I6',false)\" onmouseout=\"highlightSetter('25S42I6',true)\">(Blocking Assignment STatement)</em><em class='similar 25S42I7' onmouseover=\"highlightSetter('25S42I7',false)\" onmouseout=\"highlightSetter('25S42I7',true)\">、非阻塞赋值语句</em>(non-Blocking Assignment statement)","datatype":"webpage","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar'>(=或有两种类型的过程赋值语句:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em>(non-Blocking Assignment statement)"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":546.7894,"teacher":"","textWithDynamicClass":"但是只有\"always\"块语句中的过程赋值语句才能被综合。<em class='similar 25S41I12' onmouseover=\"highlightSetter('25S41I12',false)\" onmouseout=\"highlightSetter('25S41I12',true)\">有两种类型的过程赋值语句:</em><em class='similar 25S41I13' onmouseover=\"highlightSetter('25S41I13',false)\" onmouseout=\"highlightSetter('25S41I13',true)\">.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar 25S41I16' onmouseover=\"highlightSetter('25S41I16',false)\" onmouseout=\"highlightSetter('25S41I16',true)\">非阻塞赋值语句</em>(Non一blocking Assignment statement)","datatype":"book","clcs":[],"similarityPercentage":"70.6%","self":false,"text":"但是只有\"always\"块语句中的过程赋值语句才能被综合。<em class='similar'>有两种类型的过程赋值语句:</em><em class='similar'>.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar'>非阻塞赋值语句</em>(Non一blocking Assignment statement)"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":119.214294,"teacher":"","textWithDynamicClass":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar 25S43I6' onmouseover=\"highlightSetter('25S43I6',false)\" onmouseout=\"highlightSetter('25S43I6',true)\">过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)","datatype":"webpage","clcs":[],"similarityPercentage":"47.4%","self":false,"text":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar'>过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":261.27274,"teacher":"","textWithDynamicClass":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar 25S44I9' onmouseover=\"highlightSetter('25S44I9',false)\" onmouseout=\"highlightSetter('25S44I9',true)\">过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar 25S44I10' onmouseover=\"highlightSetter('25S44I10',false)\" onmouseout=\"highlightSetter('25S44I10',true)\">包括阻塞赋值语句、</em><em class='similar 25S44I11' onmouseover=\"highlightSetter('25S44I11',false)\" onmouseout=\"highlightSetter('25S44I11',true)\">非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar 25S44I18' onmouseover=\"highlightSetter('25S44I18',false)\" onmouseout=\"highlightSetter('25S44I18',true)\">阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\"","datatype":"webpage","clcs":[],"similarityPercentage":"45.8%","self":false,"text":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar'>过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar'>包括阻塞赋值语句、</em><em class='similar'>非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar'>阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\""}],"textWithDynamicClass":"句块中的过程赋值语句才可以被综合器综合,若出现在initial语句块中将被仅用于仿真。<em class='similar T24I2' onmouseover=\"highlightSetter('T24I2',false)\" onmouseout=\"highlightSetter('T24I2',true)\">过程赋值语句有以下两种分别为:</em><em class='similar T24I3' onmouseover=\"highlightSetter('T24I3',false)\" onmouseout=\"highlightSetter('T24I3',true)\">阻塞赋值语句</em>","similar_word_count":20,"text":"句块中的过程赋值语句才可以被综合器综合,若出现在initial语句块中将被仅用于仿真。<em class='similar'>过程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["赋值语句","语句","阻塞"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的(=或有两种类型的过程赋值语句:<em class='similar 25S42I5' onmouseover=\"highlightSetter('25S42I5',false)\" onmouseout=\"highlightSetter('25S42I5',true)\">阻塞赋值语句</em><em class='similar 25S42I6' onmouseover=\"highlightSetter('25S42I6',false)\" onmouseout=\"highlightSetter('25S42I6',true)\">(Blocking Assignment STatement)</em><em class='similar 25S42I7' onmouseover=\"highlightSetter('25S42I7',false)\" onmouseout=\"highlightSetter('25S42I7',true)\">、非阻塞赋值语句</em><em class='similar 25S42I8' onmouseover=\"highlightSetter('25S42I8',false)\" onmouseout=\"highlightSetter('25S42I8',true)\">(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在","datatype":"webpage","clcs":[],"similarityPercentage":"82.0%","self":false,"text":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的(=或有两种类型的过程赋值语句:<em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":546.7894,"teacher":"","textWithDynamicClass":"有两种类型的过程赋值语句:<em class='similar 25S41I13' onmouseover=\"highlightSetter('25S41I13',false)\" onmouseout=\"highlightSetter('25S41I13',true)\">.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar 25S41I16' onmouseover=\"highlightSetter('25S41I16',false)\" onmouseout=\"highlightSetter('25S41I16',true)\">非阻塞赋值语句</em><em class='similar 25S41I17' onmouseover=\"highlightSetter('25S41I17',false)\" onmouseout=\"highlightSetter('25S41I17',true)\">(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在","datatype":"book","clcs":[],"similarityPercentage":"74.0%","self":false,"text":"有两种类型的过程赋值语句:<em class='similar'>.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar'>非阻塞赋值语句</em><em class='similar'>(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":119.214294,"teacher":"","textWithDynamicClass":"有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar 25S43I20' onmouseover=\"highlightSetter('25S43I20',false)\" onmouseout=\"highlightSetter('25S43I20',true)\">非阻塞赋值方式 </em>","datatype":"webpage","clcs":[],"similarityPercentage":"54.1%","self":false,"text":"有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞(non-blocking)赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar'>非阻塞赋值方式 </em>"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":261.27274,"teacher":"","textWithDynamicClass":"p;b&c&d);燕山大学电子实验中心(3)过程赋值语句过程赋值语句出现在initial和always块语句中,<em class='similar 25S44I10' onmouseover=\"highlightSetter('25S44I10',false)\" onmouseout=\"highlightSetter('25S44I10',true)\">包括阻塞赋值语句、</em><em class='similar 25S44I11' onmouseover=\"highlightSetter('25S44I11',false)\" onmouseout=\"highlightSetter('25S44I11',true)\">非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar 25S44I18' onmouseover=\"highlightSetter('25S44I18',false)\" onmouseout=\"highlightSetter('25S44I18',true)\">阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\"","datatype":"webpage","clcs":[],"similarityPercentage":"49.7%","self":false,"text":"p;b&c&d);燕山大学电子实验中心(3)过程赋值语句过程赋值语句出现在initial和always块语句中,<em class='similar'>包括阻塞赋值语句、</em><em class='similar'>非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar'>阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是\"=\""}],"textWithDynamicClass":"过程赋值语句有以下两种分别为:阻塞赋值语句<em class='similar T24I4' onmouseover=\"highlightSetter('T24I4',false)\" onmouseout=\"highlightSetter('T24I4',true)\">(Blocking Assignment Statement)</em><em class='similar T24I5' onmouseover=\"highlightSetter('T24I5',false)\" onmouseout=\"highlightSetter('T24I5',true)\">、非阻塞赋值语句</em>","similar_word_count":13,"text":"过程赋值语句有以下两种分别为:阻塞赋值语句<em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["赋值语句","语句","阻塞","非阻塞"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"阻塞赋值语句<em class='similar 25S42I6' onmouseover=\"highlightSetter('25S42I6',false)\" onmouseout=\"highlightSetter('25S42I6',true)\">(Blocking Assignment STatement)</em><em class='similar 25S42I7' onmouseover=\"highlightSetter('25S42I7',false)\" onmouseout=\"highlightSetter('25S42I7',true)\">、非阻塞赋值语句</em><em class='similar 25S42I8' onmouseover=\"highlightSetter('25S42I8',false)\" onmouseout=\"highlightSetter('25S42I8',true)\">(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在","datatype":"webpage","clcs":[],"similarityPercentage":"84.1%","self":false,"text":"阻塞赋值语句<em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":546.7894,"teacher":"","textWithDynamicClass":"(Blocking Assi即ment statement);.非阻塞赋值语句<em class='similar 25S41I17' onmouseover=\"highlightSetter('25S41I17',false)\" onmouseout=\"highlightSetter('25S41I17',true)\">(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在","datatype":"book","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"(Blocking Assi即ment statement);.非阻塞赋值语句<em class='similar'>(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":119.214294,"teacher":"","textWithDynamicClass":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,过程赋值语句出现在initial和always块语句中,有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar 25S43I14' onmouseover=\"highlightSetter('25S43I14',false)\" onmouseout=\"highlightSetter('25S43I14',true)\">(non-blocking)</em>赋值方式:赋值符号为<=,如b 赋值变量<=表达式;57非阻塞赋值与阻塞赋值的区别(1)非阻塞赋值方式","datatype":"webpage","clcs":[],"similarityPercentage":"54.7%","self":false,"text":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,过程赋值语句出现在initial和always块语句中,有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar'>(non-blocking)</em>赋值方式:赋值符号为<=,如b 赋值变量<=表达式;57非阻塞赋值与阻塞赋值的区别(1)非阻塞赋值方式"}],"textWithDynamicClass":"(Blocking Assignment Statement)、非阻塞赋值语句<em class='similar T24I6' onmouseover=\"highlightSetter('T24I6',false)\" onmouseout=\"highlightSetter('T24I6',true)\">(Non-blocking Assignment Statement)</em>","similar_word_count":7,"text":"(Blocking Assignment Statement)、非阻塞赋值语句<em class='similar'>(Non-blocking Assignment Statement)</em>","suggest":{"synonyms":[],"keyword":["blocking"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":131.14282,"teacher":"","textWithDynamicClass":"新后的值。5.3.2非阻塞赋值语句非阻塞赋值语句可以简述为:<em class='similar 26S45I6' onmouseover=\"highlightSetter('26S45I6',false)\" onmouseout=\"highlightSetter('26S45I6',true)\">在一个always块中,</em><em class='similar 26S45I7' onmouseover=\"highlightSetter('26S45I7',false)\" onmouseout=\"highlightSetter('26S45I7',true)\">语句是并行执行的。</em>例5一3描述了一个非阻塞赋值语句","datatype":"book","clcs":[],"similarityPercentage":"63.2%","self":false,"text":"新后的值。5.3.2非阻塞赋值语句非阻塞赋值语句可以简述为:<em class='similar'>在一个always块中,</em><em class='similar'>语句是并行执行的。</em>例5一3描述了一个非阻塞赋值语句"},{"profession":false,"keywords":[],"year":"","docid":"9000057340942311","author":"","university":"","source":"网页","title":"第5章 Verilog设计深入_学习资料共享网","url":"http://www.87994.com/read/c7d9314411a81aba08ab68ee.html","reference":false,"similarScore":180,"teacher":"","textWithDynamicClass":"言,执行时间为,从效果上中的顺序语句具有并行执行的特征,看,<em class='similar 26S46I5' onmouseover=\"highlightSetter('26S46I5',false)\" onmouseout=\"highlightSetter('26S46I5',true)\">always中的顺序语句具有并行执行的特征,</em><em class='similar 26S46I6' onmouseover=\"highlightSetter('26S46I6',false)\" onmouseout=\"highlightSetter('26S46I6',true)\">包括阻塞与非阻塞赋值语句。</em><em class='similar 26S46I7' onmouseover=\"highlightSetter('26S46I7',false)\" onmouseout=\"highlightSetter('26S46I7',true)\">中的顺序语句具有并行执行的特征包括阻塞与非阻塞赋值语句。</em>3.过程语句本身是并行语句过程语句引导的语句属于顺","datatype":"webpage","clcs":[],"similarityPercentage":"60.2%","self":false,"text":"言,执行时间为,从效果上中的顺序语句具有并行执行的特征,看,<em class='similar'>always中的顺序语句具有并行执行的特征,</em><em class='similar'>包括阻塞与非阻塞赋值语句。</em><em class='similar'>中的顺序语句具有并行执行的特征包括阻塞与非阻塞赋值语句。</em>3.过程语句本身是并行语句过程语句引导的语句属于顺"}],"textWithDynamicClass":"<em class='similar T25I0' onmouseover=\"highlightSetter('T25I0',false)\" onmouseout=\"highlightSetter('T25I0',true)\">非阻塞赋值是在always块中的语句都是并行执行的,</em>","similar_word_count":21,"text":"<em class='similar'>非阻塞赋值是在always块中的语句都是并行执行的,</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["非阻塞赋值","语句","并行执行","非阻塞","阻塞","并行"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000057340942311","author":"","university":"","source":"网页","title":"第5章 Verilog设计深入_学习资料共享网","url":"http://www.87994.com/read/c7d9314411a81aba08ab68ee.html","reference":false,"similarScore":180,"teacher":"","textWithDynamicClass":"言,执行时间为,从效果上中的顺序语句具有并行执行的特征,看,always中的顺序语句具有并行执行的特征,<em class='similar 26S46I6' onmouseover=\"highlightSetter('26S46I6',false)\" onmouseout=\"highlightSetter('26S46I6',true)\">包括阻塞与非阻塞赋值语句。</em>中的顺序语句具有并行执行的特征包括阻塞与非阻塞赋值语句。","datatype":"webpage","clcs":[],"similarityPercentage":"55.7%","self":false,"text":"言,执行时间为,从效果上中的顺序语句具有并行执行的特征,看,always中的顺序语句具有并行执行的特征,<em class='similar'>包括阻塞与非阻塞赋值语句。</em>中的顺序语句具有并行执行的特征包括阻塞与非阻塞赋值语句。"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":131.14282,"teacher":"","textWithDynamicClass":"语句是并行执行的。<em class='similar 26S45I8' onmouseover=\"highlightSetter('26S45I8',false)\" onmouseout=\"highlightSetter('26S45I8',true)\">例5一3描述了一个非阻塞赋值语句</em>的实例。[例5一3】非阻塞赋值语句。 module","datatype":"book","clcs":[],"similarityPercentage":"54.9%","self":false,"text":"语句是并行执行的。<em class='similar'>例5一3描述了一个非阻塞赋值语句</em>的实例。[例5一3】非阻塞赋值语句。 module"}],"textWithDynamicClass":"非阻塞赋值是在always块中的语句都是并行执行的,<em class='similar T25I1' onmouseover=\"highlightSetter('T25I1',false)\" onmouseout=\"highlightSetter('T25I1',true)\">非阻塞赋值语句RTL级描述与电路映射图2.9所示,</em>","similar_word_count":21,"text":"非阻塞赋值是在always块中的语句都是并行执行的,<em class='similar'>非阻塞赋值语句RTL级描述与电路映射图2.9所示,</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["非阻塞赋值","语句","非阻塞","赋值语句","映射图","2.9所","阻塞"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":245.85153,"teacher":"","textWithDynamicClass":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar 27S47I6' onmouseover=\"highlightSetter('27S47I6',false)\" onmouseout=\"highlightSetter('27S47I6',true)\">(case expression)</em><em class='similar 27S47I7' onmouseover=\"highlightSetter('27S47I7',false)\" onmouseout=\"highlightSetter('27S47I7',true)\">和选择项表达式</em><em class='similar 27S47I8' onmouseover=\"highlightSetter('27S47I8',false)\" onmouseout=\"highlightSetter('27S47I8',true)\">(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar 27S47I12' onmouseover=\"highlightSetter('27S47I12',false)\" onmouseout=\"highlightSetter('27S47I12',true)\">case语句可以看做是��套的if语句,</em><em class='similar 27S47I13' onmouseover=\"highlightSetter('27S47I13',false)\" onmouseout=\"highlightSetter('27S47I13',true)\">从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可","datatype":"book","clcs":[],"similarityPercentage":"67.3%","self":false,"text":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar'>(case expression)</em><em class='similar'>和选择项表达式</em><em class='similar'>(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar'>case语句可以看做是嵌套的if语句,</em><em class='similar'>从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":97.64706,"teacher":"","textWithDynamicClass":"verilog HDL语言中,允许把常量(constant)<em class='similar 27S48I3' onmouseover=\"highlightSetter('27S48I3',false)\" onmouseout=\"highlightSetter('27S48I3',true)\">作为case语句的条件表达式,</em><em class='similar 27S48I4' onmouseover=\"highlightSetter('27S48I4',false)\" onmouseout=\"highlightSetter('27S48I4',true)\">而在选择项表达式中使用变量。</em><em class='similar 27S48I5' onmouseover=\"highlightSetter('27S48I5',false)\" onmouseout=\"highlightSetter('27S48I5',true)\">常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代","datatype":"book","clcs":[],"similarityPercentage":"46.0%","self":false,"text":"verilog HDL语言中,允许把常量(constant)<em class='similar'>作为case语句的条件表达式,</em><em class='similar'>而在选择项表达式中使用变量。</em><em class='similar'>常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代"}],"textWithDynamicClass":"在Verilog HDL语句种,<em class='similar T26I1' onmouseover=\"highlightSetter('T26I1',false)\" onmouseout=\"highlightSetter('T26I1',true)\">case包含两类条件表达式和选择项表达式,</em><em class='similar T26I2' onmouseover=\"highlightSetter('T26I2',false)\" onmouseout=\"highlightSetter('T26I2',true)\">case语句可以看作是嵌套的if语句,</em>","similar_word_count":31,"text":"在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>","suggest":{"synonyms":[],"keyword":["语句","case","两类","条件表达式","选择项","表达式","看作","嵌套"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":280.41663,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 28S49I3' onmouseover=\"highlightSetter('28S49I3',false)\" onmouseout=\"highlightSetter('28S49I3',true)\">5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,","datatype":"book","clcs":[],"similarityPercentage":"70.7%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,"}],"textWithDynamicClass":"<em class='similar T27I0' onmouseover=\"highlightSetter('T27I0',false)\" onmouseout=\"highlightSetter('T27I0',true)\">在verilog HDL语句中。</em>","similar_word_count":7,"text":"<em class='similar'>在verilog HDL语句中。</em>","suggest":{"synonyms":[],"keyword":["verilog","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":280.41663,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。5.16函数的综合在Verilog HDL语句中,函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar 28S49I9' onmouseover=\"highlightSetter('28S49I9',false)\" onmouseout=\"highlightSetter('28S49I9',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函","datatype":"book","clcs":[],"similarityPercentage":"88.2%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。5.16函数的综合在Verilog HDL语句中,函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函"}],"textWithDynamicClass":"function如C++的内联函数一样,进行逻辑综合时,将会被直接展开成对应代码放在对应的模块中。<em class='similar T27I4' onmouseover=\"highlightSetter('T27I4',false)\" onmouseout=\"highlightSetter('T27I4',true)\">任何在函数中定义的局部变量都被当做单纯的临时变量,</em>","similar_word_count":24,"text":"function如C++的内联函数一样,进行逻辑综合时,将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做单纯的临时变量,</em>","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"}],"keyword":["局部变量","当做","临时"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":441.08435,"teacher":"","textWithDynamicClass":"一个功能相同的简化电路的过程,它主要包含逻辑综合和工艺映射。<em class='similar 29S50I2' onmouseover=\"highlightSetter('29S50I2',false)\" onmouseout=\"highlightSetter('29S50I2',true)\">工艺映射作为综合优化的重要组成部分,</em>也是FPGA 支持软件工具中最为关键的部分,","datatype":"webpage","clcs":[],"similarityPercentage":"75.9%","self":false,"text":"一个功能相同的简化电路的过程,它主要包含逻辑综合和工艺映射。<em class='similar'>工艺映射作为综合优化的重要组成部分,</em>也是FPGA 支持软件工具中最为关键的部分,"}],"textWithDynamicClass":"在综合优化过程中,<em class='similar T28I1' onmouseover=\"highlightSetter('T28I1',false)\" onmouseout=\"highlightSetter('T28I1',true)\">技术映射是将技术映射作为综合优化的重要组成部分,</em>","similar_word_count":23,"text":"在综合优化过程中,<em class='similar'>技术映射是将技术映射作为综合优化的重要组成部分,</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["映射","优化的","重要组成部分"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":441.08435,"teacher":"","textWithDynamicClass":"一个功能相同的简化电路的过程,它主要包含逻辑综合和工艺映射。工艺映射作为综合优化的重要组成部分,<em class='similar 29S50I3' onmouseover=\"highlightSetter('29S50I3',false)\" onmouseout=\"highlightSetter('29S50I3',true)\">也是FPGA 支持软件工具中最为关键的部分,</em>其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,","datatype":"webpage","clcs":[],"similarityPercentage":"85.7%","self":false,"text":"一个功能相同的简化电路的过程,它主要包含逻辑综合和工艺映射。工艺映射作为综合优化的重要组成部分,<em class='similar'>也是FPGA 支持软件工具中最为关键的部分,</em>其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,"}],"textWithDynamicClass":"技术映射是将技术映射作为综合优化的重要组成部分,<em class='similar T28I2' onmouseover=\"highlightSetter('T28I2',false)\" onmouseout=\"highlightSetter('T28I2',true)\">也是FPGA支持软件工具EDA中最为关键的部分,</em>","similar_word_count":18,"text":"技术映射是将技术映射作为综合优化的重要组成部分,<em class='similar'>也是FPGA支持软件工具EDA中最为关键的部分,</em>","suggest":{"synonyms":[],"keyword":["软件工具"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":441.08435,"teacher":"","textWithDynamicClass":"也是FPGA 支持软件工具中最为关键的部分,<em class='similar 29S50I4' onmouseover=\"highlightSetter('29S50I4',false)\" onmouseout=\"highlightSetter('29S50I4',true)\">其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。在国外,研究机构","datatype":"webpage","clcs":[],"similarityPercentage":"79.1%","self":false,"text":"也是FPGA 支持软件工具中最为关键的部分,<em class='similar'>其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。在国外,研究机构"}],"textWithDynamicClass":"技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar T28I4' onmouseover=\"highlightSetter('T28I4',false)\" onmouseout=\"highlightSetter('T28I4',true)\">其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>","similar_word_count":37,"text":"技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["映射","优化结果","设计流程","布局布线","决定性"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar 30S51I6' onmouseover=\"highlightSetter('30S51I6',false)\" onmouseout=\"highlightSetter('30S51I6',true)\">02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>这里所说的逻辑单元依赖于特定的FPGA架构,","datatype":"webpage","clcs":[],"similarityPercentage":"94.3%","self":false,"text":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar'>02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>这里所说的逻辑单元依赖于特定的FPGA架构,"},{"profession":false,"keywords":[],"year":"","docid":"9000195223375811","author":"","university":"","source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07","reference":false,"similarScore":400,"teacher":"","textWithDynamicClass":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar 30S52I6' onmouseover=\"highlightSetter('30S52I6',false)\" onmouseout=\"highlightSetter('30S52I6',true)\">10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是","datatype":"webpage","clcs":[],"similarityPercentage":"81.6%","self":false,"text":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar'>10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是"}],"textWithDynamicClass":"<em class='similar T29I0' onmouseover=\"highlightSetter('T29I0',false)\" onmouseout=\"highlightSetter('T29I0',true)\">工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>","similar_word_count":40,"text":"<em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["工艺映射","网表","逻辑单元","逻辑","映射"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。<em class='similar 30S51I7' onmouseover=\"highlightSetter('30S51I7',false)\" onmouseout=\"highlightSetter('30S51I7',true)\">这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar 30S51I8' onmouseover=\"highlightSetter('30S51I8',false)\" onmouseout=\"highlightSetter('30S51I8',true)\">是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,因此对最终电路实现的质量","datatype":"webpage","clcs":[],"similarityPercentage":"78.6%","self":false,"text":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。<em class='similar'>这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar'>是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,因此对最终电路实现的质量"}],"textWithDynamicClass":"[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar T29I4' onmouseover=\"highlightSetter('T29I4',false)\" onmouseout=\"highlightSetter('T29I4',true)\">FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>","similar_word_count":21,"text":"[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>","suggest":{"synonyms":[],"keyword":["逻辑单元","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发��友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar 30S51I10' onmouseover=\"highlightSetter('30S51I10',false)\" onmouseout=\"highlightSetter('30S51I10',true)\">因此对最终电路实现的质量</em><em class='similar 30S51I11' onmouseover=\"highlightSetter('30S51I11',false)\" onmouseout=\"highlightSetter('30S51I11',true)\">(面积、</em>速度、<em class='similar 30S51I13' onmouseover=\"highlightSetter('30S51I13',false)\" onmouseout=\"highlightSetter('30S51I13',true)\">功耗等)</em>至关重要。","datatype":"webpage","clcs":[],"similarityPercentage":"78.5%","self":false,"text":"是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar'>因此对最终电路实现的质量</em><em class='similar'>(面积、</em>速度、<em class='similar'>功耗等)</em>至关重要。"}],"textWithDynamicClass":"技术映射是从RTL级出发对所描述的硬件行为实际转换为FPGA片上器件的重要步骤,<em class='similar T29I6' onmouseover=\"highlightSetter('T29I6',false)\" onmouseout=\"highlightSetter('T29I6',true)\">因此对FPGA片上最终实现的电路的面积、</em><em class='similar T29I7' onmouseover=\"highlightSetter('T29I7',false)\" onmouseout=\"highlightSetter('T29I7',true)\">功耗、</em>","similar_word_count":18,"text":"技术映射是从RTL级出发对所描述的硬件行为实际转换为FPGA片上器件的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>","suggest":{"synonyms":[],"keyword":["功耗"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar 31S54I3' onmouseover=\"highlightSetter('31S54I3',false)\" onmouseout=\"highlightSetter('31S54I3',true)\">第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar 31S54I4' onmouseover=\"highlightSetter('31S54I4',false)\" onmouseout=\"highlightSetter('31S54I4',true)\">输出是实际工艺下可实现的门级网表,</em>其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar'>第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表,</em>其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar 31S53I5' onmouseover=\"highlightSetter('31S53I5',false)\" onmouseout=\"highlightSetter('31S53I5',true)\">工艺映射的输入是布尔网络,</em><em class='similar 31S53I6' onmouseover=\"highlightSetter('31S53I6',false)\" onmouseout=\"highlightSetter('31S53I6',true)\">输出是实际工艺下可实现的门级网表。</em>布尔网络表示的是一组逻辑表达式,","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar'>工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em>布尔网络表示的是一组逻辑表达式,"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003386423011","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所! 上海200030；上海交通大学大规模集成电路研究所! 上海200030","source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":"","reference":false,"similarScore":208.49808,"teacher":"","textWithDynamicClass":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar 31S55I4' onmouseover=\"highlightSetter('31S55I4',false)\" onmouseout=\"highlightSetter('31S55I4',true)\">工艺映射自动化过程的输入是布尔网络,</em><em class='similar 31S55I5' onmouseover=\"highlightSetter('31S55I5',false)\" onmouseout=\"highlightSetter('31S55I5',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。1工艺映射所谓的布尔网络是一组逻辑表达式,","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"59.6%","self":false,"text":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar'>工艺映射自动化过程的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。1工艺映射所谓的布尔网络是一组逻辑表达式,"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003389855311","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所!上海200030；上海交通大学大规模集成电路研究所!上海200030","source":"微电子学","title":"速度优化再分解设计方法","url":"","reference":false,"similarScore":138.55557,"teacher":"","textWithDynamicClass":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar 31S56I8' onmouseover=\"highlightSetter('31S56I8',false)\" onmouseout=\"highlightSetter('31S56I8',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,它的各个结点可以是任意的逻辑功能组合单元。","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"59.6%","self":false,"text":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,它的各个结点可以是任意的逻辑功能组合单元。"}],"textWithDynamicClass":"<em class='similar T30I0' onmouseover=\"highlightSetter('T30I0',false)\" onmouseout=\"highlightSetter('T30I0',true)\">由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em>","similar_word_count":46,"text":"<em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em>","suggest":{"synonyms":[],"keyword":["2.16","工艺映射","网表","可实现","这一个"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"输出是实际工艺下可实现的门级网表,其具体流程如图2—2所示。<em class='similar 31S54I6' onmouseover=\"highlightSetter('31S54I6',false)\" onmouseout=\"highlightSetter('31S54I6',true)\">图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。","datatype":"webpage","clcs":[],"similarityPercentage":"67.2%","self":false,"text":"输出是实际工艺下可实现的门级网表,其具体流程如图2—2所示。<em class='similar'>图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003386423011","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所! 上海200030；上海交通大学大规模集成电路研究所! 上海200030","source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":"","reference":false,"similarScore":208.49808,"teacher":"","textWithDynamicClass":"输出是实际工艺下可实现的门级网表。其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar 31S55I9' onmouseover=\"highlightSetter('31S55I9',false)\" onmouseout=\"highlightSetter('31S55I9',true)\">1工艺映射所谓的布尔网络是一组逻辑表达式,</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"63.9%","self":false,"text":"输出是实际工艺下可实现的门级网表。其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar'>1工艺映射所谓的布尔网络是一组逻辑表达式,</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"输出是实际工艺下可实现的门级网表。<em class='similar 31S53I7' onmouseover=\"highlightSetter('31S53I7',false)\" onmouseout=\"highlightSetter('31S53I7',true)\">布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。","datatype":"webpage","clcs":[],"similarityPercentage":"62.6%","self":false,"text":"输出是实际工艺下可实现的门级网表。<em class='similar'>布尔网络表示的是一组逻辑表达式,</em>它的各个结点可以是任意的逻辑功能组合单元。"}],"textWithDynamicClass":"由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,<em class='similar T30I1' onmouseover=\"highlightSetter('T30I1',false)\" onmouseout=\"highlightSetter('T30I1',true)\">门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em>","similar_word_count":29,"text":"由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,<em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em>","suggest":{"synonyms":[],"keyword":["网表","为是","一组组","逻辑表达式","布尔网络","布尔"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,<em class='similar 31S54I7' onmouseover=\"highlightSetter('31S54I7',false)\" onmouseout=\"highlightSetter('31S54I7',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路","datatype":"webpage","clcs":[],"similarityPercentage":"69.8%","self":false,"text":"其具体流程如图2—2所示。图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"布尔网络表示的是一组逻辑表达式,<em class='similar 31S53I8' onmouseover=\"highlightSetter('31S53I8',false)\" onmouseout=\"highlightSetter('31S53I8',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步","datatype":"webpage","clcs":[],"similarityPercentage":"65.1%","self":false,"text":"布尔网络表示的是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003389855311","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所!上海200030；上海交通大学大规模集成电路研究所!上海200030","source":"微电子学","title":"速度优化再分解设计方法","url":"","reference":false,"similarScore":138.55557,"teacher":"","textWithDynamicClass":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,输出是实际工艺下可实现的门级网表。其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar 31S56I14' onmouseover=\"highlightSetter('31S56I14',false)\" onmouseout=\"highlightSetter('31S56I14',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"64.2%","self":false,"text":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,输出是实际工艺下可实现的门级网表。其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>"}],"textWithDynamicClass":"门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,<em class='similar T30I2' onmouseover=\"highlightSetter('T30I2',false)\" onmouseout=\"highlightSetter('T30I2',true)\">该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","similar_word_count":24,"text":"门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,<em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","suggest":{"synonyms":[],"keyword":["布尔网络","布尔","网络图","逻辑功能","组合单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":240.18208,"teacher":"","textWithDynamicClass":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar 32S59I3' onmouseover=\"highlightSetter('32S59I3',false)\" onmouseout=\"highlightSetter('32S59I3',true)\">原电路可由一组单输出布尔子网络表示。</em>根据工艺映射算法的不同需要,","datatype":"webpage","clcs":[],"similarityPercentage":"54.1%","self":false,"text":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar'>原电路可由一组单输出布尔子网络表示。</em>根据工艺映射算法的不同需要,"}],"textWithDynamicClass":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar T31I3' onmouseover=\"highlightSetter('T31I3',false)\" onmouseout=\"highlightSetter('T31I3',true)\">原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em>","similar_word_count":34,"text":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em>","suggest":{"synonyms":[],"keyword":["原始","布尔网络","逻辑电路","一个个","布尔","子网络"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":240.18208,"teacher":"","textWithDynamicClass":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,原电路可由一组单输出布尔子网络表示。<em class='similar 32S59I4' onmouseover=\"highlightSetter('32S59I4',false)\" onmouseout=\"highlightSetter('32S59I4',true)\">根据工艺映射算法的不同需要,</em><em class='similar 32S59I5' onmouseover=\"highlightSetter('32S59I5',false)\" onmouseout=\"highlightSetter('32S59I5',true)\">原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻","datatype":"webpage","clcs":[],"similarityPercentage":"68.2%","self":false,"text":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,原电路可由一组单输出布尔子网络表示。<em class='similar'>根据工艺映射算法的不同需要,</em><em class='similar'>原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻"}],"textWithDynamicClass":"原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。<em class='similar T31I4' onmouseover=\"highlightSetter('T31I4',false)\" onmouseout=\"highlightSetter('T31I4',true)\">根据工艺映射算法的不同,</em><em class='similar T31I5' onmouseover=\"highlightSetter('T31I5',false)\" onmouseout=\"highlightSetter('T31I5',true)\">原电路均可被构造成由一张DAG图或一组树来表示</em>","similar_word_count":32,"text":"���始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。<em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["映射","映射算法","一张"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":355.65686,"teacher":"","textWithDynamicClass":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar 33S60I5' onmouseover=\"highlightSetter('33S60I5',false)\" onmouseout=\"highlightSetter('33S60I5',true)\">逻辑分解是将电路进行逻辑上的变化,</em>目的是将复杂的逻辑单元用基本函数的形式","datatype":"webpage","clcs":[],"similarityPercentage":"74.6%","self":false,"text":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar'>逻辑分解是将电路进行逻辑上的变化,</em>目的是将复杂的逻辑单元用基本函数的形式"}],"textWithDynamicClass":"<em class='similar T32I0' onmouseover=\"highlightSetter('T32I0',false)\" onmouseout=\"highlightSetter('T32I0',true)\">逻辑分解是则将电路进行在逻辑上等价的一种转换,</em>","similar_word_count":22,"text":"<em class='similar'>逻辑分解是则将电路进行在逻辑上等价的一种转换,</em>","suggest":{"synonyms":[{"synonyms":["上乘"],"keyword":"上等"}],"keyword":["逻辑分解","逻辑","上等"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":355.65686,"teacher":"","textWithDynamicClass":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。逻辑分解是将电路进行逻辑上的变化,<em class='similar 33S60I6' onmouseover=\"highlightSetter('33S60I6',false)\" onmouseout=\"highlightSetter('33S60I6',true)\">目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar 33S60I12' onmouseover=\"highlightSetter('33S60I12',false)\" onmouseout=\"highlightSetter('33S60I12',true)\">以便于以后的匹配和映射。</em>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。","datatype":"webpage","clcs":[],"similarityPercentage":"76.2%","self":false,"text":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。逻辑分解是将电路进行逻辑上的变化,<em class='similar'>目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar'>以便于以后的匹配和映射。</em>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。"}],"textWithDynamicClass":"逻辑分解是则将电路进行在逻辑上等价的一种转换,<em class='similar T32I1' onmouseover=\"highlightSetter('T32I1',false)\" onmouseout=\"highlightSetter('T32I1',true)\">其根本目的是将复杂的逻辑单元用最基本的逻辑形式来进行表达,</em><em class='similar T32I2' onmouseover=\"highlightSetter('T32I2',false)\" onmouseout=\"highlightSetter('T32I2',true)\">以便于后续的器件匹配和映射</em>","similar_word_count":41,"text":"逻辑分解是则将电路进行在逻辑上等价的一种转换,<em class='similar'>其根本目的是将复杂的逻辑单元用最基本的逻辑形式来进行表达,</em><em class='similar'>以便于后续的器件匹配和映射</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["逻辑","根本目的","逻辑单元","逻辑形式","后续","器件","匹配","映射"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":355.65686,"teacher":"","textWithDynamicClass":"(两输入的与门,与非门,或门,单输入的非门等)表达,以便于以后的匹配和映射。<em class='similar 33S60I13' onmouseover=\"highlightSetter('33S60I13',false)\" onmouseout=\"highlightSetter('33S60I13',true)\">经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分","datatype":"webpage","clcs":[],"similarityPercentage":"64.5%","self":false,"text":"(两输入的与门,与非门,或门,单输入的非门等)表达,以便于以后的匹配和映射。<em class='similar'>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分"}],"textWithDynamicClass":"[45]。<em class='similar T32I4' onmouseover=\"highlightSetter('T32I4',false)\" onmouseout=\"highlightSetter('T32I4',true)\">布尔网络在经过逻辑分解操作后,</em><em class='similar T32I5' onmouseover=\"highlightSetter('T32I5',false)\" onmouseout=\"highlightSetter('T32I5',true)\">其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","similar_word_count":44,"text":"[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","suggest":{"synonyms":[{"synonyms":["其实"],"keyword":"原本"}],"keyword":["逻辑分解","逻辑","布尔网络","原本","逻辑关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":250.31253,"teacher":"","textWithDynamicClass":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar 34S61I8' onmouseover=\"highlightSetter('34S61I8',false)\" onmouseout=\"highlightSetter('34S61I8',true)\">经过划分和逻辑分解之后,</em><em class='similar 34S61I9' onmouseover=\"highlightSetter('34S61I9',false)\" onmouseout=\"highlightSetter('34S61I9',true)\">下一步就是匹配。</em><em class='similar 34S61I10' onmouseover=\"highlightSetter('34S61I10',false)\" onmouseout=\"highlightSetter('34S61I10',true)\">之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是","datatype":"webpage","clcs":[],"similarityPercentage":"57.1%","self":false,"text":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar'>经过划分和逻辑分解之后,</em><em class='similar'>下一步就是匹配。</em><em class='similar'>之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是"}],"textWithDynamicClass":"<em class='similar T33I0' onmouseover=\"highlightSetter('T33I0',false)\" onmouseout=\"highlightSetter('T33I0',true)\">经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar T33I1' onmouseover=\"highlightSetter('T33I1',false)\" onmouseout=\"highlightSetter('T33I1',true)\">而匹配则是在划分与逻辑分解后,</em><em class='similar T33I2' onmouseover=\"highlightSetter('T33I2',false)\" onmouseout=\"highlightSetter('T33I2',true)\">将与工艺无关的布尔网络与工艺库相结合。</em>","similar_word_count":50,"text":"<em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["逻辑分解","匹配","无关","布尔网络","工艺库"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":399.961,"teacher":"","textWithDynamicClass":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar 35S62I4' onmouseover=\"highlightSetter('35S62I4',false)\" onmouseout=\"highlightSetter('35S62I4',true)\">就是用实际工艺下可实现的单元库对布尔图进行匹配,</em>也就是把理想的布尔网络用库中的实际单元实现的过程。","datatype":"webpage","clcs":[],"similarityPercentage":"67.0%","self":false,"text":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar'>就是用实际工艺下可实现的单元库对布尔图进行匹配,</em>也就是把理想的布尔网络用库中的实际单元实现的过程。"}],"textWithDynamicClass":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar T34I0' onmouseover=\"highlightSetter('T34I0',false)\" onmouseout=\"highlightSetter('T34I0',true)\">提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em>","similar_word_count":35,"text":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["可实现","逻辑单元","器件","布尔图","等效","匹配"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":399.961,"teacher":"","textWithDynamicClass":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar 35S62I4' onmouseover=\"highlightSetter('35S62I4',false)\" onmouseout=\"highlightSetter('35S62I4',true)\">就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar 35S62I5' onmouseover=\"highlightSetter('35S62I5',false)\" onmouseout=\"highlightSetter('35S62I5',true)\">也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar 35S62I6' onmouseover=\"highlightSetter('35S62I6',false)\" onmouseout=\"highlightSetter('35S62I6',true)\">FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结","datatype":"webpage","clcs":[],"similarityPercentage":"67.1%","self":false,"text":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar'>就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar'>也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar'>FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结"}],"textWithDynamicClass":"提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,<em class='similar T34I1' onmouseover=\"highlightSetter('T34I1',false)\" onmouseout=\"highlightSetter('T34I1',true)\">是把理想的布尔网络用库中的实际单元实现的过程</em>","similar_word_count":22,"text":"提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,<em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>","suggest":{"synonyms":[],"keyword":["理想的","布尔网络"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190283878711","author":"","university":"","source":"网页","title":"多级逻辑面积优化设计方法","url":"http://www.doc88.com/p%2D4943406875941.html","reference":false,"similarScore":152.30771,"teacher":"","textWithDynamicClass":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar 36S64I7' onmouseover=\"highlightSetter('36S64I7',false)\" onmouseout=\"highlightSetter('36S64I7',true)\">工艺映射自动化过程的最后一步是疆盖。</em><em class='similar 36S64I8' onmouseover=\"highlightSetter('36S64I8',false)\" onmouseout=\"highlightSetter('36S64I8',true)\">它的作用就是在多种可行的匹配中,</em>根据实际电路的要求,","datatype":"webpage","clcs":[],"similarityPercentage":"34.4%","self":false,"text":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar'>工艺映射自动化过程的最后一步是疆盖。</em><em class='similar'>它的作用就是在多种可行的匹配中,</em>根据实际电路的要求,"}],"textWithDynamicClass":"<em class='similar T35I0' onmouseover=\"highlightSetter('T35I0',false)\" onmouseout=\"highlightSetter('T35I0',true)\">在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,</em>","similar_word_count":36,"text":"<em class='similar'>在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,</em>","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["映射","逻辑","匹配"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":440.76923,"teacher":"","textWithDynamicClass":"于树或图的结构匹配算法。工艺映射自动化过程的最后一步是覆盖,<em class='similar 36S63I3' onmouseover=\"highlightSetter('36S63I3',false)\" onmouseout=\"highlightSetter('36S63I3',true)\">它的作用是根据实际电路的要求,</em><em class='similar 36S63I4' onmouseover=\"highlightSetter('36S63I4',false)\" onmouseout=\"highlightSetter('36S63I4',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹","datatype":"webpage","clcs":[],"similarityPercentage":"96.8%","self":false,"text":"于树或图的结构匹配算法。工艺映射自动化过程的最后一步是覆盖,<em class='similar'>它的作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹"},{"profession":false,"keywords":[],"year":"","docid":"9000190283878711","author":"","university":"","source":"网页","title":"多级逻辑面积优化设计方法","url":"http://www.doc88.com/p%2D4943406875941.html","reference":false,"similarScore":152.30771,"teacher":"","textWithDynamicClass":"它的作用就是在多种可行的匹配中,<em class='similar 36S64I9' onmouseover=\"highlightSetter('36S64I9',false)\" onmouseout=\"highlightSetter('36S64I9',true)\">根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出","datatype":"webpage","clcs":[],"similarityPercentage":"55.4%","self":false,"text":"它的作用就是在多种可行的匹配中,<em class='similar'>根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出"}],"textWithDynamicClass":"在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,<em class='similar T35I1' onmouseover=\"highlightSetter('T35I1',false)\" onmouseout=\"highlightSetter('T35I1',true)\">其作用是根据实际电路的要求,</em><em class='similar T35I2' onmouseover=\"highlightSetter('T35I2',false)\" onmouseout=\"highlightSetter('T35I2',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>","similar_word_count":46,"text":"在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,<em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["匹配","可行"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":292.16345,"teacher":"","textWithDynamicClass":"来覆盖整个网络的所有节点。也就是依据一定的规则分隔出部分网表<em class='similar 37S66I3' onmouseover=\"highlightSetter('37S66I3',false)\" onmouseout=\"highlightSetter('37S66I3',true)\">进行匹配</em>,<em class='similar 37S66I4' onmouseover=\"highlightSetter('37S66I4',false)\" onmouseout=\"highlightSetter('37S66I4',true)\">并从匹配集中选出库单元,</em>完成布尔网表到工艺网表的实现。","datatype":"webpage","clcs":[],"similarityPercentage":"86.6%","self":false,"text":"来覆盖整个网络的所有节点。也就是依据一定的规则分隔出部分网表<em class='similar'>进行匹配</em>,<em class='similar'>并从匹配集中选出库单元,</em>完成布尔网表到工艺网表的实现。"}],"textWithDynamicClass":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。分离出满足器件要求、用户约束的部分子图来<em class='similar T36I1' onmouseover=\"highlightSetter('T36I1',false)\" onmouseout=\"highlightSetter('T36I1',true)\">进行匹配</em><em class='similar'>,</em><em class='similar T36I2' onmouseover=\"highlightSetter('T36I2',false)\" onmouseout=\"highlightSetter('T36I2',true)\">并从匹配集中选出对应的器件库单元,</em>","similar_word_count":20,"text":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。分离出满足器件要求、用户约束的部分子图来<em class='similar'>进行匹配</em><em class='similar'>,</em><em class='similar'>并从匹配集中选出对应的器件库单元,</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["器件","匹配"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":292.16345,"teacher":"","textWithDynamicClass":",并从匹配集中选出库单元,<em class='similar 37S66I5' onmouseover=\"highlightSetter('37S66I5',false)\" onmouseout=\"highlightSetter('37S66I5',true)\">完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,<em class='similar 37S66I7' onmouseover=\"highlightSetter('37S66I7',false)\" onmouseout=\"highlightSetter('37S66I7',true)\">要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库","datatype":"webpage","clcs":[],"similarityPercentage":"72.6%","self":false,"text":",并从匹配集中选出库单元,<em class='similar'>完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,<em class='similar'>要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库"}],"textWithDynamicClass":"进行匹配,并从匹配集中选出对应的器件库单元,<em class='similar T36I3' onmouseover=\"highlightSetter('T36I3',false)\" onmouseout=\"highlightSetter('T36I3',true)\">完成布尔网图到工艺网表的实际映射。</em><em class='similar T36I4' onmouseover=\"highlightSetter('T36I4',false)\" onmouseout=\"highlightSetter('T36I4',true)\">要保证每完成的一组匹配单元,</em>","similar_word_count":29,"text":"进行匹配,并从匹配集中选出对应的器件库单元,<em class='similar'>完成布尔网图到工艺网表的实际映射。</em><em class='similar'>要保证每完成的一组匹配单元,</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["匹配","布尔","网图","网表","映射"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":292.16345,"teacher":"","textWithDynamicClass":"完成布尔网表到工艺网表的实现。对每一个选出的匹配,<em class='similar 37S66I7' onmouseover=\"highlightSetter('37S66I7',false)\" onmouseout=\"highlightSetter('37S66I7',true)\">要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库","datatype":"webpage","clcs":[],"similarityPercentage":"69.7%","self":false,"text":"完成布尔网表到工艺网表的实现。对每一个选出的匹配,<em class='similar'>要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库"}],"textWithDynamicClass":"完成布尔网图到工艺网表的实际映射。要保证每完成的一组匹配单元,<em class='similar T36I5' onmouseover=\"highlightSetter('T36I5',false)\" onmouseout=\"highlightSetter('T36I5',true)\">其每个单元的扇入和其他组的匹配后的单元的扇出进行相通,</em>","similar_word_count":26,"text":"完成布尔网图到工艺网表的实际映射。要保证每完成的一组匹配单元,<em class='similar'>其每个单元的扇入和其他组的匹配后的单元的扇出进行相通,</em>","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["沟通"],"keyword":"相通"}],"keyword":["匹配","扇入","扇出","相通"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":173.369,"teacher":"","textWithDynamicClass":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,功耗等)最优的一组匹配。<em class='similar 38S67I7' onmouseover=\"highlightSetter('38S67I7',false)\" onmouseout=\"highlightSetter('38S67I7',true)\">覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar 38S67I8' onmouseover=\"highlightSetter('38S67I8',false)\" onmouseout=\"highlightSetter('38S67I8',true)\">如何选取匹配集。</em>最后以实际网表的形式输出。","datatype":"webpage","clcs":[],"similarityPercentage":"61.1%","self":false,"text":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,功耗等)最优的一组匹配。<em class='similar'>覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集。</em>最后以实际网表的形式输出。"}],"textWithDynamicClass":"且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向<em class='similar T37I0' onmouseover=\"highlightSetter('T37I0',false)\" onmouseout=\"highlightSetter('T37I0',true)\">是如何在满足一定约束的条件下分割布尔网表、</em><em class='similar T37I1' onmouseover=\"highlightSetter('T37I1',false)\" onmouseout=\"highlightSetter('T37I1',true)\">如何选取最合适的匹配集,</em>","similar_word_count":31,"text":"且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向<em class='similar'>是如何在满足一定约束的条件下分割布尔网表、</em><em class='similar'>如何选取最合适的匹配集,</em>","suggest":{"synonyms":[{"synonyms":["割据"],"keyword":"分割"},{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["分割","布尔","网表","匹配"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":173.369,"teacher":"","textWithDynamicClass":"如何选取匹配集。<em class='similar 38S67I9' onmouseover=\"highlightSetter('38S67I9',false)\" onmouseout=\"highlightSetter('38S67I9',true)\">最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程","datatype":"webpage","clcs":[],"similarityPercentage":"66.4%","self":false,"text":"如何选取匹配集。<em class='similar'>最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程"}],"textWithDynamicClass":"速度的需求。当完成技术映射后,<em class='similar T37I6' onmouseover=\"highlightSetter('T37I6',false)\" onmouseout=\"highlightSetter('T37I6',true)\">EDA工具将以实际的门级网表的形式输出,</em>","similar_word_count":17,"text":"速度的需求。当完成技术映射后,<em class='similar'>EDA工具将以实际的门级网表的形式输出,</em>","suggest":{"synonyms":[],"keyword":["网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":540.0513,"teacher":"","textWithDynamicClass":"的核心,也就是使计算机具有人工智能的根本途径。它(机器学习)<em class='similar 39S72I9' onmouseover=\"highlightSetter('39S72I9',false)\" onmouseout=\"highlightSetter('39S72I9',true)\">涵盖概率论,</em><em class='similar 39S72I10' onmouseover=\"highlightSetter('39S72I10',false)\" onmouseout=\"highlightSetter('39S72I10',true)\">统计学,</em><em class='similar 39S72I11' onmouseover=\"highlightSetter('39S72I11',false)\" onmouseout=\"highlightSetter('39S72I11',true)\">近似理论和复杂算法等多学科知识,</em>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,","datatype":"webpage","clcs":[],"similarityPercentage":"91.0%","self":false,"text":"的核心,也就是使计算机具有人工智能的根本途径。它(机器学习)<em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等多学科知识,</em>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,"},{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":633.0512,"teacher":"","textWithDynamicClass":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar 39S70I4' onmouseover=\"highlightSetter('39S70I4',false)\" onmouseout=\"highlightSetter('39S70I4',true)\">但机器学习是一门多学科的交叉专业,</em><em class='similar 39S70I5' onmouseover=\"highlightSetter('39S70I5',false)\" onmouseout=\"highlightSetter('39S70I5',true)\">涵盖概率论,</em><em class='similar 39S70I6' onmouseover=\"highlightSetter('39S70I6',false)\" onmouseout=\"highlightSetter('39S70I6',true)\">统计学,</em><em class='similar 39S70I7' onmouseover=\"highlightSetter('39S70I7',false)\" onmouseout=\"highlightSetter('39S70I7',true)\">近似理论和复杂算法等知识,</em>使用计算机为工具并致力于真实实时的模拟人类学习方式,","datatype":"webpage","clcs":[],"similarityPercentage":"86.1%","self":false,"text":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar'>但机器学习是一门多学科的交叉专业,</em><em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em>使用计算机为工具并致力于真实实时的模拟人类学习方式,"},{"profession":false,"keywords":[],"year":"","docid":"9000146790090711","author":"","university":"","source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b","reference":false,"similarScore":586.37177,"teacher":"","textWithDynamicClass":"预测模型为特征。预测方法的种类很多,各有相应的预测模型。⑵、<em class='similar 39S69I7' onmouseover=\"highlightSetter('39S69I7',false)\" onmouseout=\"highlightSetter('39S69I7',true)\">机器学习机器学习是一门多学科交叉科学,</em><em class='similar 39S69I8' onmouseover=\"highlightSetter('39S69I8',false)\" onmouseout=\"highlightSetter('39S69I8',true)\">涵盖概率论知识、</em><em class='similar 39S69I9' onmouseover=\"highlightSetter('39S69I9',false)\" onmouseout=\"highlightSetter('39S69I9',true)\">统计学知识、</em><em class='similar 39S69I10' onmouseover=\"highlightSetter('39S69I10',false)\" onmouseout=\"highlightSetter('39S69I10',true)\">近似理论知识和复杂算法知识;</em>使用计算机作为工具;","datatype":"webpage","clcs":[],"similarityPercentage":"78.8%","self":false,"text":"预测模型为特征。预测方法的种类很多,各有相应的预测模型。⑵、<em class='similar'>机器学习机器学习是一门多学科交叉科学,</em><em class='similar'>涵盖概率论知识、</em><em class='similar'>统计学知识、</em><em class='similar'>近似理论知识和复杂算法知识;</em>使用计算机作为工具;"},{"profession":false,"keywords":[],"year":"","docid":"9000195285691911","author":"","university":"","source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880","reference":false,"similarScore":688.83325,"teacher":"","textWithDynamicClass":"身的性能。它是人工智能的核心,是使计算机具有智能的根本途径。<em class='similar 39S68I3' onmouseover=\"highlightSetter('39S68I3',false)\" onmouseout=\"highlightSetter('39S68I3',true)\">机器学习是一门多学科交叉专业,</em><em class='similar 39S68I4' onmouseover=\"highlightSetter('39S68I4',false)\" onmouseout=\"highlightSetter('39S68I4',true)\">涵盖概率论知识,</em><em class='similar 39S68I5' onmouseover=\"highlightSetter('39S68I5',false)\" onmouseout=\"highlightSetter('39S68I5',true)\">统计学知识,</em><em class='similar 39S68I6' onmouseover=\"highlightSetter('39S68I6',false)\" onmouseout=\"highlightSetter('39S68I6',true)\">近似理论知识和复杂算法知识,</em><em class='similar 39S68I7' onmouseover=\"highlightSetter('39S68I7',false)\" onmouseout=\"highlightSetter('39S68I7',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar 39S68I8' onmouseover=\"highlightSetter('39S68I8',false)\" onmouseout=\"highlightSetter('39S68I8',true)\">并将现有内容进行知识结构划分来有效提高学习效率。</em>[1]机器学习有下面几种定义:(1)<em class='similar 39S68I12' onmouseover=\"highlightSetter('39S68I12',false)\" onmouseout=\"highlightSetter('39S68I12',true)\">机器学习是一门人工智能的科学,</em>该领域的主要研究对象是人工智能,特别是如何在经验学","datatype":"webpage","clcs":[],"similarityPercentage":"72.1%","self":false,"text":"身的性能。它是人工智能的核心,是使计算机具有智能的根本途径。<em class='similar'>机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率论知识,</em><em class='similar'>统计学知识,</em><em class='similar'>近似理论知识和复杂算法知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行知识结构划分来有效提高学习效率。</em>[1]机器学习有下面几种定义:(1)<em class='similar'>机器学习是一门人工智能的科学,</em>该领域的主要研究对象是人工智能,特别是如何在经验学"},{"profession":false,"keywords":[],"year":"","docid":"9000193345064111","author":"","university":"","source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html","reference":false,"similarScore":632.4524,"teacher":"","textWithDynamicClass":"Deepfake 技术合成的假视频[21]相关词条机器学习:<em class='similar 39S71I4' onmouseover=\"highlightSetter('39S71I4',false)\" onmouseout=\"highlightSetter('39S71I4',true)\">机器学习是涵盖概率论知识,</em><em class='similar 39S71I5' onmouseover=\"highlightSetter('39S71I5',false)\" onmouseout=\"highlightSetter('39S71I5',true)\">统计学知识,</em><em class='similar 39S71I6' onmouseover=\"highlightSetter('39S71I6',false)\" onmouseout=\"highlightSetter('39S71I6',true)\">近似理论知识和复杂算法知识,</em><em class='similar 39S71I7' onmouseover=\"highlightSetter('39S71I7',false)\" onmouseout=\"highlightSetter('39S71I7',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar 39S71I8' onmouseover=\"highlightSetter('39S71I8',false)\" onmouseout=\"highlightSetter('39S71I8',true)\">并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。</em>深度学习:<em class='similar 39S71I10' onmouseover=\"highlightSetter('39S71I10',false)\" onmouseout=\"highlightSetter('39S71I10',true)\">深度学习是机器学习的一种,</em>使用深层神经网络组合低层特征形成更加抽象的高层表示","datatype":"webpage","clcs":[],"similarityPercentage":"69.4%","self":false,"text":"Deepfake 技术合成的假视频[21]相关词条机器学习:<em class='similar'>机器学习是涵盖概率论知识,</em><em class='similar'>统计学知识,</em><em class='similar'>近似理论知识和复杂算法知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。</em>深度学习:<em class='similar'>深度学习是机器学习的一种,</em>使用深层神经网络组合低层特征形成更加抽象的高层表示"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":525.8931,"teacher":"","textWithDynamicClass":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar 39S73I3' onmouseover=\"highlightSetter('39S73I3',false)\" onmouseout=\"highlightSetter('39S73I3',true)\">1机器学习机器学习是一门多学科交叉专业,</em><em class='similar 39S73I4' onmouseover=\"highlightSetter('39S73I4',false)\" onmouseout=\"highlightSetter('39S73I4',true)\">涵盖概率学与统计学知识,</em><em class='similar 39S73I5' onmouseover=\"highlightSetter('39S73I5',false)\" onmouseout=\"highlightSetter('39S73I5',true)\">近似理论和复杂算法知识,</em>用计算机作为工具,","datatype":"journal","clcs":[],"similarityPercentage":"67.0%","self":false,"text":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar'>1机器学习机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率学与统计学知识,</em><em class='similar'>近似理论和复杂算法知识,</em>用计算机作为工具,"}],"textWithDynamicClass":"<em class='similar T38I0' onmouseover=\"highlightSetter('T38I0',false)\" onmouseout=\"highlightSetter('T38I0',true)\">机器学习是面向多学科的交叉学科,</em><em class='similar T38I1' onmouseover=\"highlightSetter('T38I1',false)\" onmouseout=\"highlightSetter('T38I1',true)\">其涵盖概率论,</em><em class='similar T38I2' onmouseover=\"highlightSetter('T38I2',false)\" onmouseout=\"highlightSetter('T38I2',true)\">统计学,</em><em class='similar T38I3' onmouseover=\"highlightSetter('T38I3',false)\" onmouseout=\"highlightSetter('T38I3',true)\">近似理论和复杂算法等知识,</em>","similar_word_count":36,"text":"<em class='similar'>机器学习是面向多学科的交叉学科,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em>","suggest":{"synonyms":[],"keyword":["机器学习","多学科","交叉学科","涵盖","概率论","统计学","近似理论","复杂算法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":540.0513,"teacher":"","textWithDynamicClass":"近似理论和复杂算法等多学科知识,<em class='similar 39S72I12' onmouseover=\"highlightSetter('39S72I12',false)\" onmouseout=\"highlightSetter('39S72I12',true)\">使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em>将数据内容进行知识结构划分来有效提高学习效率。","datatype":"webpage","clcs":[],"similarityPercentage":"91.9%","self":false,"text":"近似理论和复杂算法等多学科知识,<em class='similar'>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em>将数据内容进行知识结构划分来有效提高学习效率。"},{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":633.0512,"teacher":"","textWithDynamicClass":"近似理论和复杂算法等知识,<em class='similar 39S70I8' onmouseover=\"highlightSetter('39S70I8',false)\" onmouseout=\"highlightSetter('39S70I8',true)\">使用计算机为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行实时结构划分来有效提高学习效率。","datatype":"webpage","clcs":[],"similarityPercentage":"91.1%","self":false,"text":"近似理论和复杂算法等知识,<em class='similar'>使用计算机为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行实时结构划分来有效提高学习效率。"},{"profession":false,"keywords":[],"year":"","docid":"9000195285691911","author":"","university":"","source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880","reference":false,"similarScore":688.83325,"teacher":"","textWithDynamicClass":"近似理论知识和复杂算法知识,<em class='similar 39S68I7' onmouseover=\"highlightSetter('39S68I7',false)\" onmouseout=\"highlightSetter('39S68I7',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行知识结构划分来有效提高学习效率。","datatype":"webpage","clcs":[],"similarityPercentage":"83.5%","self":false,"text":"近似理论知识和复杂算法知识,<em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行知识结构划分来有效提高学习效率。"},{"profession":false,"keywords":[],"year":"","docid":"9000193345064111","author":"","university":"","source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html","reference":false,"similarScore":632.4524,"teacher":"","textWithDynamicClass":"近似理论知识和复杂算法知识,<em class='similar 39S71I7' onmouseover=\"highlightSetter('39S71I7',false)\" onmouseout=\"highlightSetter('39S71I7',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。","datatype":"webpage","clcs":[],"similarityPercentage":"81.6%","self":false,"text":"近似理论知识和复杂算法知识,<em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。"},{"profession":false,"keywords":[],"year":"","docid":"9000146790090711","author":"","university":"","source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b","reference":false,"similarScore":586.37177,"teacher":"","textWithDynamicClass":"近似理论知识和复杂算法知识;<em class='similar 39S69I11' onmouseover=\"highlightSetter('39S69I11',false)\" onmouseout=\"highlightSetter('39S69I11',true)\">使用计算机作为工具;</em><em class='similar 39S69I12' onmouseover=\"highlightSetter('39S69I12',false)\" onmouseout=\"highlightSetter('39S69I12',true)\">致力于真实实时地模拟人类学习方式,</em>并通过将现有内容进行知识结构划分来有效提高","datatype":"webpage","clcs":[],"similarityPercentage":"77.7%","self":false,"text":"近似理论知识和复杂算法知识;<em class='similar'>使用计算机作为工具;</em><em class='similar'>致力于真实实时地模拟人类学习方式,</em>并通过将现有内容进行知识结构划分来有效提高"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":525.8931,"teacher":"","textWithDynamicClass":"近似理论和复杂算法知识,<em class='similar 39S73I6' onmouseover=\"highlightSetter('39S73I6',false)\" onmouseout=\"highlightSetter('39S73I6',true)\">用计算机作为工具,</em><em class='similar 39S73I7' onmouseover=\"highlightSetter('39S73I7',false)\" onmouseout=\"highlightSetter('39S73I7',true)\">致力于实时模拟人类学习方式,</em>将现有内容进行知识结构划分,","datatype":"journal","clcs":[],"similarityPercentage":"69.3%","self":false,"text":"近似理论和复杂算法知识,<em class='similar'>用计算机作为工具,</em><em class='similar'>致力于实时模拟人类学习方式,</em>将现有内容进行知识结构划分,"}],"textWithDynamicClass":"机器学习是面向多学科的交叉学科,其涵盖概率论,统计学,近似理论和复杂算法等知识,<em class='similar T38I4' onmouseover=\"highlightSetter('T38I4',false)\" onmouseout=\"highlightSetter('T38I4',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>","similar_word_count":26,"text":"机器学习是面向多学科的交叉学科,其涵盖概率论,统计学,近似理论和复杂算法等知识,<em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em>","suggest":{"synonyms":[{"synonyms":["尽力"],"keyword":"致力"},{"synonyms":["及时"],"keyword":"实时"}],"keyword":["致力","实时","学习方式"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":633.0512,"teacher":"","textWithDynamicClass":"使用计算机为工具并致力于真实实时的模拟人类学习方式,<em class='similar 39S70I9' onmouseover=\"highlightSetter('39S70I9',false)\" onmouseout=\"highlightSetter('39S70I9',true)\">并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会","datatype":"webpage","clcs":[],"similarityPercentage":"85.3%","self":false,"text":"使用计算机为工具并致力于真实实时的模拟人类学习方式,<em class='similar'>并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会"},{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快��理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":540.0513,"teacher":"","textWithDynamicClass":"使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,<em class='similar 39S72I13' onmouseover=\"highlightSetter('39S72I13',false)\" onmouseout=\"highlightSetter('39S72I13',true)\">将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,","datatype":"webpage","clcs":[],"similarityPercentage":"84.0%","self":false,"text":"使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,<em class='similar'>将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,"},{"profession":false,"keywords":[],"year":"","docid":"9000193345064111","author":"","university":"","source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html","reference":false,"similarScore":632.4524,"teacher":"","textWithDynamicClass":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar 39S71I8' onmouseover=\"highlightSetter('39S71I8',false)\" onmouseout=\"highlightSetter('39S71I8',true)\">并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。</em>深度学习:深度学习是机器学习的一种,","datatype":"webpage","clcs":[],"similarityPercentage":"82.8%","self":false,"text":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar'>并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。</em>深度学习:深度学习是机器学习的一种,"},{"profession":false,"keywords":[],"year":"","docid":"9000195285691911","author":"","university":"","source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880","reference":false,"similarScore":688.83325,"teacher":"","textWithDynamicClass":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar 39S68I8' onmouseover=\"highlightSetter('39S68I8',false)\" onmouseout=\"highlightSetter('39S68I8',true)\">并将现有内容进行知识结构划分来有效提高学习效率。</em>[1]机器学习有下面几种定义:(1)机器学习是一门人工智能的科学,","datatype":"webpage","clcs":[],"similarityPercentage":"82.2%","self":false,"text":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar'>并将现有内容进行知识结构划分来有效提高学习效率。</em>[1]机器学习有下面几种定义:(1)机器学习是一门人工智能的科学,"},{"profession":false,"keywords":[],"year":"","docid":"9000146790090711","author":"","university":"","source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b","reference":false,"similarScore":586.37177,"teacher":"","textWithDynamicClass":"致力于真实实时地模拟人类学习方式,<em class='similar 39S69I13' onmouseover=\"highlightSetter('39S69I13',false)\" onmouseout=\"highlightSetter('39S69I13',true)\">并通过将现有内容进行知识结构划分来有效提高</em>","datatype":"webpage","clcs":[],"similarityPercentage":"76.9%","self":false,"text":"致力于真实实时地模拟人类学习方式,<em class='similar'>并通过将现有内容进行知识结构划分来有效提高</em>"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":525.8931,"teacher":"","textWithDynamicClass":"致力于实时模拟人类学习方式,<em class='similar 39S73I8' onmouseover=\"highlightSetter('39S73I8',false)\" onmouseout=\"highlightSetter('39S73I8',true)\">将现有内容进行知识结构划分,</em><em class='similar 39S73I9' onmouseover=\"highlightSetter('39S73I9',false)\" onmouseout=\"highlightSetter('39S73I9',true)\">有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域","datatype":"journal","clcs":[],"similarityPercentage":"65.9%","self":false,"text":"致力于实时模拟人类学习方式,<em class='similar'>将现有内容进行知识结构划分,</em><em class='similar'>有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域"}],"textWithDynamicClass":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar T38I5' onmouseover=\"highlightSetter('T38I5',false)\" onmouseout=\"highlightSetter('T38I5',true)\">并将现有内容进行对应知识体系的划分来有效的提高学习效率的方法</em>","similar_word_count":30,"text":"使用计算机作为工具并致力于真实实时的模拟人类学习方式,<em class='similar'>并将现有内容进行对应知识体系的划分来有效的提高学习效率的方法</em>","suggest":{"synonyms":[],"keyword":["知识体系","提高学习效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9100000975023511","author":"aaz7428135","university":"","source":"百科","title":"随机森林","url":"http://baike.so.com/doc/31116.html","reference":false,"similarScore":215.16196,"teacher":"","textWithDynamicClass":"<em class='similar 41S77I0' onmouseover=\"highlightSetter('41S77I0',false)\" onmouseout=\"highlightSetter('41S77I0',true)\">在机器学习中,</em><em class='similar 41S77I1' onmouseover=\"highlightSetter('41S77I1',false)\" onmouseout=\"highlightSetter('41S77I1',true)\">随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。 Leo Breiman和Adele Cutler发展出推论出随机森林的算法。","datatype":"wiki","clcs":[],"similarityPercentage":"69.0%","self":false,"text":"<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。 Leo Breiman和Adele Cutler发展出推论出随机森林的算法。"},{"profession":false,"keywords":[],"year":"","docid":"9000205787700011","author":"","university":"","source":"网页","title":"干货丨大数据基础术语精粹来袭","url":"https://www.docin.com/p%2D2290152325.html","reference":false,"similarScore":215.16196,"teacher":"","textWithDynamicClass":"f(key)为哈希(Hash)函数。四十九、随机森林英文名:<em class='similar 41S78I7' onmouseover=\"highlightSetter('41S78I7',false)\" onmouseout=\"highlightSetter('41S78I7',true)\">Random forest 在机器学习中,</em><em class='similar 41S78I8' onmouseover=\"highlightSetter('41S78I8',false)\" onmouseout=\"highlightSetter('41S78I8',true)\">随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。 Leo Breiman 和Adele Cutler 发展出推论出随机森林的算法。","datatype":"webpage","clcs":[],"similarityPercentage":"66.3%","self":false,"text":"f(key)为哈希(Hash)函数。四十九、随机森林英文名:<em class='similar'>Random forest 在机器学习中,</em><em class='similar'>随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。 Leo Breiman 和Adele Cutler 发展出推论出随机森林的算法。"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023720243711","author":"刘凡平编著","university":"","source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":"","reference":false,"similarScore":186.45767,"teacher":"","textWithDynamicClass":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar 41S76I3' onmouseover=\"highlightSetter('41S76I3',false)\" onmouseout=\"highlightSetter('41S76I3',true)\">8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。","datatype":"book","clcs":[],"similarityPercentage":"52.5%","self":false,"text":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar'>8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。"},{"profession":false,"keywords":[],"year":"2019","docid":"1000031673706911","author":"","university":"","source":"人文杂志","title":"领投人特征对股权众筹融资绩效影响的实证研究","url":"","reference":false,"similarScore":166.89655,"teacher":"","textWithDynamicClass":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar 41S79I1' onmouseover=\"highlightSetter('41S79I1',false)\" onmouseout=\"highlightSetter('41S79I1',true)\">随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar 41S79I2' onmouseover=\"highlightSetter('41S79I2',false)\" onmouseout=\"highlightSetter('41S79I2',true)\">通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文","datatype":"journal","clcs":[],"similarityPercentage":"30.9%","self":false,"text":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar'>随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar'>通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文"}],"textWithDynamicClass":"<em class='similar T40I0' onmouseover=\"highlightSetter('T40I0',false)\" onmouseout=\"highlightSetter('T40I0',true)\">在机器学习中,</em><em class='similar T40I1' onmouseover=\"highlightSetter('T40I1',false)\" onmouseout=\"highlightSetter('T40I1',true)\">随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em>","similar_word_count":35,"text":"<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em>","suggest":{"synonyms":[],"keyword":["机器学习","随机森林","决策树","学习器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9100000975023511","author":"aaz7428135","university":"","source":"百科","title":"随机森林","url":"http://baike.so.com/doc/31116.html","reference":false,"similarScore":215.16196,"teacher":"","textWithDynamicClass":"随机森林是一个包含多个决策树的分类器,并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar 41S77I3' onmouseover=\"highlightSetter('41S77I3',false)\" onmouseout=\"highlightSetter('41S77I3',true)\"> Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em>而\"Random Forests&quo","datatype":"wiki","clcs":[],"similarityPercentage":"71.1%","self":false,"text":"随机森林是一个包含多个决策树的分类器,并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar'> Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em>而\"Random Forests&quo"},{"profession":false,"keywords":[],"year":"","docid":"9000205787700011","author":"","university":"","source":"网页","title":"干货丨大数据基础术语精粹来袭","url":"https://www.docin.com/p%2D2290152325.html","reference":false,"similarScore":215.16196,"teacher":"","textWithDynamicClass":"随机森林是一个包含多个决策树的分类器,并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar 41S78I10' onmouseover=\"highlightSetter('41S78I10',false)\" onmouseout=\"highlightSetter('41S78I10',true)\"> Leo Breiman 和Adele Cutler 发展出推论出随机森林的算法。</em>\"RandomForests\"","datatype":"webpage","clcs":[],"similarityPercentage":"69.5%","self":false,"text":"随机森林是一个包含多个决策树的分类器,并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar'> Leo Breiman 和Adele Cutler 发展出推论出随机森林的算法。</em>\"RandomForests\""},{"profession":false,"keywords":[],"year":"2017","docid":"1900023720243711","author":"刘凡平编著","university":"","source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":"","reference":false,"similarScore":186.45767,"teacher":"","textWithDynamicClass":"imum Tree),在剪枝之后都能够保留最重要的属性划分。8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。<em class='similar 41S76I4' onmouseover=\"highlightSetter('41S76I4',false)\" onmouseout=\"highlightSetter('41S76I4',true)\">随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em>随机森林,顾名思义就是用随机的方式建立一个森林,森","datatype":"book","clcs":[],"similarityPercentage":"66.9%","self":false,"text":"imum Tree),在剪枝之后都能够保留最重要的属性划分。8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。<em class='similar'>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em>随机森林,顾名思义就是用随机的方式建立一个森林,森"}],"textWithDynamicClass":"在机器学习中,随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。<em class='similar T40I2' onmouseover=\"highlightSetter('T40I2',false)\" onmouseout=\"highlightSetter('T40I2',true)\">随机森林是Leo Breiman和Adele Cutler发展出推行出的一种比较先进的面向机器学习的算法。</em>","similar_word_count":36,"text":"在机器学习中,随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。<em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推行出的一种比较先进的面向机器学习的算法。</em>","suggest":{"synonyms":[{"synonyms":["奉行"],"keyword":"推行"}],"keyword":["机器学习","随机森林","推行"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":455.85236,"teacher":"","textWithDynamicClass":"<em class='similar 42S80I0' onmouseover=\"highlightSetter('42S80I0',false)\" onmouseout=\"highlightSetter('42S80I0',true)\">g是并行式集成学习方法最著名的代表。</em>从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。给定包含m个样本的数据集,","datatype":"webpage","clcs":[],"similarityPercentage":"64.4%","self":false,"text":"<em class='similar'>g是并行式集成学习方法最著名的代表。</em>从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。给定包含m个样本的数据集,"}],"textWithDynamicClass":"<em class='similar T41I0' onmouseover=\"highlightSetter('T41I0',false)\" onmouseout=\"highlightSetter('T41I0',true)\">Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>","similar_word_count":25,"text":"<em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>","suggest":{"synonyms":[],"keyword":["并行式","集成学习","代表性","机器学习方法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":495.49124,"teacher":"","textWithDynamicClass":"自助采样法(bootstrap sampling)采样数据。<em class='similar 42S81I3' onmouseover=\"highlightSetter('42S81I3',false)\" onmouseout=\"highlightSetter('42S81I3',true)\">给定包含m��样本的数据集,</em><em class='similar 42S81I4' onmouseover=\"highlightSetter('42S81I4',false)\" onmouseout=\"highlightSetter('42S81I4',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 42S81I5' onmouseover=\"highlightSetter('42S81I5',false)\" onmouseout=\"highlightSetter('42S81I5',true)\">再把该样本放回初始数据集,</em>使得下次采样时,","datatype":"webpage","clcs":[],"similarityPercentage":"71.5%","self":false,"text":"自助采样法(bootstrap sampling)采样数据。<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em>使得下次采样时,"},{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":455.85236,"teacher":"","textWithDynamicClass":"g是并行式集成学习方法最著名的代表。从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。<em class='similar 42S80I6' onmouseover=\"highlightSetter('42S80I6',false)\" onmouseout=\"highlightSetter('42S80I6',true)\">给定包含m个样本的数据集,</em><em class='similar 42S80I7' onmouseover=\"highlightSetter('42S80I7',false)\" onmouseout=\"highlightSetter('42S80I7',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 42S80I8' onmouseover=\"highlightSetter('42S80I8',false)\" onmouseout=\"highlightSetter('42S80I8',true)\">再把该样本放回初始数据集,</em>使得下次采样时该样本仍有可能被选中,","datatype":"webpage","clcs":[],"similarityPercentage":"69.3%","self":false,"text":"g是并行式集成学习方法最著名的代表。从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em>使得下次采样时该样本仍有可能被选中,"}],"textWithDynamicClass":"它的算法核心是基于自主采样法来构造的,<em class='similar T41I2' onmouseover=\"highlightSetter('T41I2',false)\" onmouseout=\"highlightSetter('T41I2',true)\">即给定一个数据集拥有固定m个数据样本,</em><em class='similar T41I3' onmouseover=\"highlightSetter('T41I3',false)\" onmouseout=\"highlightSetter('T41I3',true)\">学习算法先随机拿出一个样本放入采样集中,</em><em class='similar T41I4' onmouseover=\"highlightSetter('T41I4',false)\" onmouseout=\"highlightSetter('T41I4',true)\">再通过将该出去的样本放回数据集,</em>","similar_word_count":52,"text":"它的算法核心是基于自主采样法来构造的,<em class='similar'>即给定一个数据集拥有固定m个数据样本,</em><em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em>","suggest":{"synonyms":[],"keyword":["给定","数据集","数据样本","学习算法","采样","放回"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":455.85236,"teacher":"","textWithDynamicClass":"再把该样本放回初始数据集,<em class='similar 42S80I9' onmouseover=\"highlightSetter('42S80I9',false)\" onmouseout=\"highlightSetter('42S80I9',true)\">使得下次采样时该样本仍有可能被选中,</em>这样,","datatype":"webpage","clcs":[],"similarityPercentage":"69.5%","self":false,"text":"再把该样本放回初始数据集,<em class='similar'>使得下次采样时该样本仍有可能被选中,</em>这样,"},{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":495.49124,"teacher":"","textWithDynamicClass":"再把该样本放回初始数据集,<em class='similar 42S81I6' onmouseover=\"highlightSetter('42S81I6',false)\" onmouseout=\"highlightSetter('42S81I6',true)\">使得下次采样时,</em><em class='similar 42S81I7' onmouseover=\"highlightSetter('42S81I7',false)\" onmouseout=\"highlightSetter('42S81I7',true)\">样本仍可能被选中,</em>这样,","datatype":"webpage","clcs":[],"similarityPercentage":"64.0%","self":false,"text":"再把该样本放回初始数据集,<em class='similar'>使得下次采样时,</em><em class='similar'>样本仍可能被选中,</em>这样,"}],"textWithDynamicClass":"即给定一个数据集拥有固定m个数据样本,学习算法先随机拿出一个样本放入采样集中,再通过将该出去的样本放回数据集,<em class='similar T41I5' onmouseover=\"highlightSetter('T41I5',false)\" onmouseout=\"highlightSetter('T41I5',true)\">使得在每一次采样时均有可能取到之前的样本,</em>","similar_word_count":20,"text":"即给定一个数据集拥有固定m个数据样本,学习算法先随机拿出一个样本放入采样集中,再通过将该出去的样本放回数据集,<em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em>","suggest":{"synonyms":[],"keyword":["采样"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":455.85236,"teacher":"","textWithDynamicClass":"g是并行式集成学习方法最著名的代表。从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。<em class='similar 42S80I6' onmouseover=\"highlightSetter('42S80I6',false)\" onmouseout=\"highlightSetter('42S80I6',true)\">给定包含m个样本的数据集,</em><em class='similar 42S80I7' onmouseover=\"highlightSetter('42S80I7',false)\" onmouseout=\"highlightSetter('42S80I7',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 42S80I8' onmouseover=\"highlightSetter('42S80I8',false)\" onmouseout=\"highlightSetter('42S80I8',true)\">再把该样本放回初始数据集,</em><em class='similar 42S80I9' onmouseover=\"highlightSetter('42S80I9',false)\" onmouseout=\"highlightSetter('42S80I9',true)\">使得下次采样时该样本仍有可能被选中,</em><em class='similar 42S80I10' onmouseover=\"highlightSetter('42S80I10',false)\" onmouseout=\"highlightSetter('42S80I10',true)\">这样,</em><em class='similar 42S80I11' onmouseover=\"highlightSetter('42S80I11',false)\" onmouseout=\"highlightSetter('42S80I11',true)\">经过m次随机采样操作,</em><em class='similar 42S80I12' onmouseover=\"highlightSetter('42S80I12',false)\" onmouseout=\"highlightSetter('42S80I12',true)\">我们得到含。</em><em class='similar 42S80I13' onmouseover=\"highlightSetter('42S80I13',false)\" onmouseout=\"highlightSetter('42S80I13',true)\">个样本的采样集,</em>初始训练集中有的样本在采样集里多次出现,有的则从未","datatype":"webpage","clcs":[],"similarityPercentage":"70.8%","self":false,"text":"g是并行式集成学习方法最著名的代表。从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下次采样时该样本仍有可能被选中,</em><em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到含。</em><em class='similar'>个样本的采样集,</em>初始训练集中有的样本在采样集里多次出现,有的则从未"},{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":495.49124,"teacher":"","textWithDynamicClass":"自助采样法(bootstrap sampling)采样数据。<em class='similar 42S81I3' onmouseover=\"highlightSetter('42S81I3',false)\" onmouseout=\"highlightSetter('42S81I3',true)\">给定包含m个样本的数据集,</em><em class='similar 42S81I4' onmouseover=\"highlightSetter('42S81I4',false)\" onmouseout=\"highlightSetter('42S81I4',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 42S81I5' onmouseover=\"highlightSetter('42S81I5',false)\" onmouseout=\"highlightSetter('42S81I5',true)\">再把该样本放回初始数据集,</em><em class='similar 42S81I6' onmouseover=\"highlightSetter('42S81I6',false)\" onmouseout=\"highlightSetter('42S81I6',true)\">使得下次采样时,</em><em class='similar 42S81I7' onmouseover=\"highlightSetter('42S81I7',false)\" onmouseout=\"highlightSetter('42S81I7',true)\">样本仍可能被选中,</em><em class='similar 42S81I8' onmouseover=\"highlightSetter('42S81I8',false)\" onmouseout=\"highlightSetter('42S81I8',true)\">这样,</em><em class='similar 42S81I9' onmouseover=\"highlightSetter('42S81I9',false)\" onmouseout=\"highlightSetter('42S81I9',true)\">经过m次随机采样操作,</em><em class='similar 42S81I10' onmouseover=\"highlightSetter('42S81I10',false)\" onmouseout=\"highlightSetter('42S81I10',true)\">我们得到包含m个样本的采样集。</em>按照此方式,<em class='similar 42S81I12' onmouseover=\"highlightSetter('42S81I12',false)\" onmouseout=\"highlightSetter('42S81I12',true)\">我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基本学","datatype":"webpage","clcs":[],"similarityPercentage":"68.2%","self":false,"text":"自助采样法(bootstrap sampling)采样数据。<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下次采样时,</em><em class='similar'>样本仍可能被选中,</em><em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到包含m个样本的采样集。</em>按照此方式,<em class='similar'>我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基本学"}],"textWithDynamicClass":"使得在每一次采样时均有可能取到之前的样本,<em class='similar T41I6' onmouseover=\"highlightSetter('T41I6',false)\" onmouseout=\"highlightSetter('T41I6',true)\">这样经过覆盖所有样本的次数的随机采样,</em><em class='similar T41I7' onmouseover=\"highlightSetter('T41I7',false)\" onmouseout=\"highlightSetter('T41I7',true)\">我们可以获得包含m个数据的采样样本集。</em>","similar_word_count":36,"text":"使得在每一次采样时均有可能取到之前的样本,<em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样样本集。</em>","suggest":{"synonyms":[],"keyword":["采样","随机采样","样本集"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":311.82355,"teacher":"","textWithDynamicClass":"算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)<em class='similar 43S82I5' onmouseover=\"highlightSetter('43S82I5',false)\" onmouseout=\"highlightSetter('43S82I5',true)\">为基学习器的计算复杂度,</em>?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)的复杂度较小,","datatype":"webpage","clcs":[],"similarityPercentage":"78.3%","self":false,"text":"算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)<em class='similar'>为基学习器的计算复杂度,</em>?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)的复杂度较小,"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":390.64706,"teacher":"","textWithDynamicClass":"<em class='similar 43S83I0' onmouseover=\"highlightSetter('43S83I0',false)\" onmouseout=\"highlightSetter('43S83I0',true)\">假定基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)+O(,)),考虑到采样与投票/平均过程的复杂度O","datatype":"book","clcs":["TP181"],"similarityPercentage":"69.4%","self":false,"text":"<em class='similar'>假定基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)+O(,)),考虑到采样与投票/平均过程的复杂度O"},{"profession":false,"keywords":[],"year":"","docid":"9000130331965511","author":"","university":"","source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610","reference":false,"similarScore":223.08823,"teacher":"","textWithDynamicClass":"Bagging算法有以下优点:(1)<em class='similar 43S85I2' onmouseover=\"highlightSetter('43S85I2',false)\" onmouseout=\"highlightSetter('43S85I2',true)\">假定一个基学习器的计算复杂度为O</em>(m),Bagging的复杂度为T(O(m)+O(s)),由于采样过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"Bagging算法有以下优点:(1)<em class='similar'>假定一个基学习器的计算复杂度为O</em>(m),Bagging的复杂度为T(O(m)+O(s)),由于采样过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030691609411","author":"邢岳；田正宏；杜辉","university":"","source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":"","reference":false,"similarScore":257.15686,"teacher":"","textWithDynamicClass":"提高模型准确度。因此,Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)<em class='similar 43S84I5' onmouseover=\"highlightSetter('43S84I5',false)\" onmouseout=\"highlightSetter('43S84I5',true)\">由于基学习器结合过程的复杂度一般很小,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,","datatype":"journal","clcs":[],"similarityPercentage":"54.4%","self":false,"text":"提高模型准确度。因此,Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)<em class='similar'>由于基学习器结合过程的复杂度一般很小,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,"}],"textWithDynamicClass":"随后使用每个采样集对弱学习器进行训练,再通过将这些弱学习器的预测结果进行进一步的数据结合,从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar T42I2' onmouseover=\"highlightSetter('T42I2',false)\" onmouseout=\"highlightSetter('T42I2',true)\">若基学习器的时间复杂度为 ,</em>","similar_word_count":12,"text":"随后使用每个采样集对弱学习器进行训练,再通过将这些弱学习器的预测结果进行进一步的数据结合,从而实现Bagging算法���流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的时间复杂度为 ,</em>","suggest":{"synonyms":[],"keyword":["学习器","时间复杂度","复杂度"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":311.82355,"teacher":"","textWithDynamicClass":"算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar 43S82I11' onmouseover=\"highlightSetter('43S82I11',false)\" onmouseout=\"highlightSetter('43S82I11',true)\">的复杂度较小,</em><em class='similar 43S82I12' onmouseover=\"highlightSetter('43S82I12',false)\" onmouseout=\"highlightSetter('43S82I12',true)\">?也是一个不太大的常数,</em><em class='similar 43S82I13' onmouseover=\"highlightSetter('43S82I13',false)\" onmouseout=\"highlightSetter('43S82I13',true)\">因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。","datatype":"webpage","clcs":[],"similarityPercentage":"64.4%","self":false,"text":"算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)为基学习器的计算复杂度,?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar'>的复杂度较小,</em><em class='similar'>?也是一个不太大的常数,</em><em class='similar'>因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":390.64706,"teacher":"","textWithDynamicClass":"假定基学习器的计算复杂度为O(m),则Bagging的复杂度大致为T(O(m)+O(,)),<em class='similar 43S83I6' onmouseover=\"highlightSetter('43S83I6',false)\" onmouseout=\"highlightSetter('43S83I6',true)\">考虑到采样与投票/平均过程的复杂度O</em>(,)<em class='similar 43S83I8' onmouseover=\"highlightSetter('43S83I8',false)\" onmouseout=\"highlightSetter('43S83I8',true)\">很小,</em><em class='similar 43S83I9' onmouseover=\"highlightSetter('43S83I9',false)\" onmouseout=\"highlightSetter('43S83I9',true)\">而T通常是一个不太大的常数,</em><em class='similar 43S83I10' onmouseover=\"highlightSetter('43S83I10',false)\" onmouseout=\"highlightSetter('43S83I10',true)\">因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,","datatype":"book","clcs":["TP181"],"similarityPercentage":"64.0%","self":false,"text":"假定基学习器的计算复杂度为O(m),则Bagging的复杂度大致为T(O(m)+O(,)),<em class='similar'>考虑到采样与投票/平均过程的复杂度O</em>(,)<em class='similar'>很小,</em><em class='similar'>而T通常是一个不太大的常数,</em><em class='similar'>因此,</em>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030691609411","author":"邢岳；田正宏；杜辉","university":"","source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":"","reference":false,"similarScore":257.15686,"teacher":"","textWithDynamicClass":"提高模型准确度。<em class='similar 43S84I1' onmouseover=\"highlightSetter('43S84I1',false)\" onmouseout=\"highlightSetter('43S84I1',true)\">因此,</em>Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)由于基学习器结合过程的复杂度一般很小,","datatype":"journal","clcs":[],"similarityPercentage":"59.8%","self":false,"text":"提高模型准确度。<em class='similar'>因此,</em>Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)由于基学习器结合过程的复杂度一般很小,"}],"textWithDynamicClass":"则通过上述方法可知该算法的复杂度约为 ,<em class='similar T42I4' onmouseover=\"highlightSetter('T42I4',false)\" onmouseout=\"highlightSetter('T42I4',true)\">考虑到采样与决策时的时间复杂度 很小,</em><em class='similar T42I5' onmouseover=\"highlightSetter('T42I5',false)\" onmouseout=\"highlightSetter('T42I5',true)\">而 通常是较大样本数据而言是一个较小的常数,</em><em class='similar T42I6' onmouseover=\"highlightSetter('T42I6',false)\" onmouseout=\"highlightSetter('T42I6',true)\">因此,</em>","similar_word_count":39,"text":"则通过上述方法可知该算法的复杂度约为 ,<em class='similar'>考虑到采样与决策时的时间复杂度 很小,</em><em class='similar'>而 通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em>","suggest":{"synonyms":[],"keyword":["时间复杂度","复杂度","采样","很小","大样本数据","常数"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":311.82355,"teacher":"","textWithDynamicClass":"因此,<em class='similar 43S82I14' onmouseover=\"highlightSetter('43S82I14',false)\" onmouseout=\"highlightSetter('43S82I14',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等","datatype":"webpage","clcs":[],"similarityPercentage":"71.6%","self":false,"text":"因此,<em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030691609411","author":"邢岳；田正宏；杜辉","university":"","source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":"","reference":false,"similarScore":257.15686,"teacher":"","textWithDynamicClass":"Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)由于基学习器结合过程的复杂度一般很小,<em class='similar 43S84I6' onmouseover=\"highlightSetter('43S84I6',false)\" onmouseout=\"highlightSetter('43S84I6',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>所以Bagging算法非常高效。本文的目的是通过输","datatype":"journal","clcs":[],"similarityPercentage":"71.4%","self":false,"text":"Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)由于基学习器结合过程的复杂度一般很小,<em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>所以Bagging算法非常高效。本文的目的是通过输"},{"profession":false,"keywords":[],"year":"","docid":"9000130331965511","author":"","university":"","source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610","reference":false,"similarScore":223.08823,"teacher":"","textWithDynamicClass":"Bagging算法有以下优点:(1)假定一个基学习器的计算复杂度为O(m),Bagging的复杂度为T(O(m)+O(s)),由于采样过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar 43S85I12' onmouseover=\"highlightSetter('43S85I12',false)\" onmouseout=\"highlightSetter('43S85I12',true)\">训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任","datatype":"webpage","clcs":[],"similarityPercentage":"71.1%","self":false,"text":"Bagging算法有以下优点:(1)假定一个基学习器的计算复杂度为O(m),Bagging的复杂度为T(O(m)+O(s)),由于采样过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar'>训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":390.64706,"teacher":"","textWithDynamicClass":"因此,<em class='similar 43S83I11' onmouseover=\"highlightSetter('43S83I11',false)\" onmouseout=\"highlightSetter('43S83I11',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>这说明Bagging是一个很高效的集成学习算法。另","datatype":"book","clcs":["TP181"],"similarityPercentage":"69.7%","self":false,"text":"因此,<em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>这说明Bagging是一个很高效的集成学习算法。另"},{"profession":false,"keywords":[],"year":"","docid":"9000016188337811","author":"","university":"","source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449","reference":false,"similarScore":214.41183,"teacher":"","textWithDynamicClass":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar 43S86I6' onmouseover=\"highlightSetter('43S86I6',false)\" onmouseout=\"highlightSetter('43S86I6',true)\"> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由","datatype":"webpage","clcs":[],"similarityPercentage":"64.2%","self":false,"text":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar'> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由"}],"textWithDynamicClass":"考虑到采样与决策时的时间复杂度 很小,而 通常是较大样本数据而言是一个较小的常数,因此,<em class='similar T42I7' onmouseover=\"highlightSetter('T42I7',false)\" onmouseout=\"highlightSetter('T42I7',true)\">训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>","similar_word_count":35,"text":"考虑到采样与决策时的时间复杂度 很小,而 通常是较大样本数据而言是一个较小的常数,因此,<em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["学习器","时间复杂度","复杂度","训练","学习算法","训练所","同阶"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000155397363111","author":"","university":"","source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/","reference":false,"similarScore":245.27971,"teacher":"","textWithDynamicClass":"可以用来做包外估计(out-of-bag estimate)<em class='similar 44S88I4' onmouseover=\"highlightSetter('44S88I4',false)\" onmouseout=\"highlightSetter('44S88I4',true)\">。从偏差-方差分解的角度来看,</em><em class='similar 44S88I5' onmouseover=\"highlightSetter('44S88I5',false)\" onmouseout=\"highlightSetter('44S88I5',true)\">Bagging主要关注降低方差,</em>因此它在易受样本扰动的学习器上效果更明显。","datatype":"webpage","clcs":[],"similarityPercentage":"76.0%","self":false,"text":"可以用来做包外估计(out-of-bag estimate)<em class='similar'>。从偏差-方差分解的角度来看,</em><em class='similar'>Bagging主要关注降低方差,</em>因此它在易受样本扰动的学习器上效果更明显。"},{"profession":false,"keywords":[],"year":"","docid":"9000192363721811","author":"","university":"","source":"网页","title":"快速了解Bagging算法_chicken_shit_bro的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43179522/article/details/106063938","reference":false,"similarScore":226.18881,"teacher":"","textWithDynamicClass":"包外样本评估(即:不同于训练数据的样本)&quot;。 4.<em class='similar 44S89I6' onmouseover=\"highlightSetter('44S89I6',false)\" onmouseout=\"highlightSetter('44S89I6',true)\">从偏差-方差分解角度看,</em><em class='similar 44S89I7' onmouseover=\"highlightSetter('44S89I7',false)\" onmouseout=\"highlightSetter('44S89I7',true)\">Bagging主要关注降低方差,</em>因此他在不剪枝决策树、","datatype":"webpage","clcs":[],"similarityPercentage":"75.9%","self":false,"text":"包外样本评估(即:不同于训练数据的样本)&quot;。 4.<em class='similar'>从偏差-方差分解角度看,</em><em class='similar'>Bagging主要关注降低方差,</em>因此他在不剪枝决策树、"},{"profession":false,"keywords":[],"year":"2017","docid":"1000027401097911","author":"黄海平；徐宁；朱毅凯；王汝传","university":"南京邮电大学计算机学院,江苏南京210023；江苏省无线传感网高技术研究重点实验室,江苏南京210003；南京大学网络信息中心,江苏南京,210023","source":"南京邮电大学学报（自然科学版）","title":"基于智能眼镜触控行为的隐式身份认证方案","url":"","reference":false,"similarScore":200.81815,"teacher":"","textWithDynamicClass":"训练集的特征值。使用Bagging算法来完成机器学习的任务。<em class='similar 44S90I3' onmouseover=\"highlightSetter('44S90I3',false)\" onmouseout=\"highlightSetter('44S90I3',true)\">从偏差-方差分解的角度看,</em><em class='similar 44S90I4' onmouseover=\"highlightSetter('44S90I4',false)\" onmouseout=\"highlightSetter('44S90I4',true)\">Bagging算法主要任务为降低方差,</em>因此使用样本对结果影响较大的学习","datatype":"journal","clcs":["TP393.08"],"similarityPercentage":"72.6%","self":false,"text":"训练集的特征值。使用Bagging算法来完成机器学习的任务。<em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>Bagging算法主要任务为降低方差,</em>因此使用样本对结果影响较大的学习"},{"profession":false,"keywords":[],"year":"","docid":"9000106764079211","author":"csdn","university":"","source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819","reference":false,"similarScore":150.38461,"teacher":"","textWithDynamicClass":"习器进行结合.对分类任务使用投票法,对回归任务采用平均值法.<em class='similar 44S87I5' onmouseover=\"highlightSetter('44S87I5',false)\" onmouseout=\"highlightSetter('44S87I5',true)\">从偏差-方差的角度,</em><em class='similar 44S87I6' onmouseover=\"highlightSetter('44S87I6',false)\" onmouseout=\"highlightSetter('44S87I6',true)\">Bagging主要关注降低方差,</em>因此它在容易受到样本扰动的学习器","datatype":"webpage","clcs":[],"similarityPercentage":"71.8%","self":false,"text":"习器进行结合.对分类任务使用投票法,对回归任务采用平均值法.<em class='similar'>从偏差-方差的角度,</em><em class='similar'>Bagging主要关注降低方差,</em>因此它在容易受到样本扰动的学习器"}],"textWithDynamicClass":"<em class='similar T43I0' onmouseover=\"highlightSetter('T43I0',false)\" onmouseout=\"highlightSetter('T43I0',true)\">从偏差-方差分解的角度看,</em><em class='similar T43I1' onmouseover=\"highlightSetter('T43I1',false)\" onmouseout=\"highlightSetter('T43I1',true)\">如何预测结果的降低方差是Bagging算法主要关注的方向,</em>","similar_word_count":34,"text":"<em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>如何预测结果的降低方差是Bagging算法主要关注的方向,</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["偏差","方差分解","预测结果","降低方差"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000155397363111","author":"","university":"","source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/","reference":false,"similarScore":245.27971,"teacher":"","textWithDynamicClass":"Bagging主要关注降低方差,<em class='similar 44S88I6' onmouseover=\"highlightSetter('44S88I6',false)\" onmouseout=\"highlightSetter('44S88I6',true)\">因此它在易受样本扰动的学习器上效果更明显。</em>其实这里的Bagging主要就是做了一个数据扰动的","datatype":"webpage","clcs":[],"similarityPercentage":"75.2%","self":false,"text":"Bagging主要关注降低方差,<em class='similar'>因此它在易受样本扰动的学习器上效果更明显。</em>其实这里的Bagging主要就是做了一个数据扰动的"},{"profession":false,"keywords":[],"year":"","docid":"9000192363721811","author":"","university":"","source":"网页","title":"快速了解Bagging算法_chicken_shit_bro的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43179522/article/details/106063938","reference":false,"similarScore":226.18881,"teacher":"","textWithDynamicClass":"Bagging主要关注降低方差,<em class='similar 44S89I8' onmouseover=\"highlightSetter('44S89I8',false)\" onmouseout=\"highlightSetter('44S89I8',true)\">因此他在不剪枝决策树、</em><em class='similar 44S89I9' onmouseover=\"highlightSetter('44S89I9',false)\" onmouseout=\"highlightSetter('44S89I9',true)\">神经网络等易受样本扰动的学习器上效果更为明显。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"67.1%","self":false,"text":"Bagging主要关注降低方差,<em class='similar'>因此他在不剪枝决策树、</em><em class='similar'>神经网络等易受样本扰动的学习器上效果更为明显。</em>"},{"profession":false,"keywords":[],"year":"2017","docid":"1000027401097911","author":"黄海平；徐宁；朱毅凯；王汝传","university":"南京邮电大学计算机学院,江苏南京210023；江苏省无线传感网高技术研究重点实验室,江苏南京210003；南京大学网络信息中心,江苏南京,210023","source":"南京邮电大学学报（自然科学版）","title":"基于智能眼镜触控行为的隐式身份认证方案","url":"","reference":false,"similarScore":200.81815,"teacher":"","textWithDynamicClass":"Bagging算法主要任务为降低方差,<em class='similar 44S90I5' onmouseover=\"highlightSetter('44S90I5',false)\" onmouseout=\"highlightSetter('44S90I5',true)\">因此使用样本对结果影响较大的学习</em>方法作为基学习器会有较好的效果。本文将使用神经网络","datatype":"journal","clcs":["TP393.08"],"similarityPercentage":"66.7%","self":false,"text":"Bagging算法主要任务为降低方差,<em class='similar'>因此使用样本对结果影响较大的学习</em>方法作为基学习器会有较好的效果。本文将使用神经网络"},{"profession":false,"keywords":[],"year":"","docid":"9000106764079211","author":"csdn","university":"","source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819","reference":false,"similarScore":150.38461,"teacher":"","textWithDynamicClass":"Bagging主要关注降低方差,<em class='similar 44S87I7' onmouseover=\"highlightSetter('44S87I7',false)\" onmouseout=\"highlightSetter('44S87I7',true)\">因此它在容易受到样本扰动的学习器</em>(如不剪枝的决策树、神经网络)中效果更明显.5.B","datatype":"webpage","clcs":[],"similarityPercentage":"65.7%","self":false,"text":"Bagging主要关注降低方差,<em class='similar'>因此它在容易受到样本扰动的学习器</em>(如不剪枝的决策树、神经网络)中效果更明显.5.B"}],"textWithDynamicClass":"从偏差-方差分解的角度看,如何预测结果的降低方差是Bagging算法主要关注的方向,<em class='similar T43I2' onmouseover=\"highlightSetter('T43I2',false)\" onmouseout=\"highlightSetter('T43I2',true)\">因此它在受样本的干扰较大的学习器上的优秀表现更为明显</em>","similar_word_count":26,"text":"从偏差-方差分解的角度看,如何预测结果的降低方差是Bagging算法主要关注的方向,<em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显</em>","suggest":{"synonyms":[],"keyword":["学习器"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000503259011","author":"","university":"","source":"大学生论文联合库","title":"贝叶斯分类器的性能比较","url":"","reference":false,"similarScore":139.23076,"teacher":"","textWithDynamicClass":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar 46S92I6' onmouseover=\"highlightSetter('46S92I6',false)\" onmouseout=\"highlightSetter('46S92I6',true)\">这就是Bagging算法的基本思路。</em><em class='similar 46S92I7' onmouseover=\"highlightSetter('46S92I7',false)\" onmouseout=\"highlightSetter('46S92I7',true)\">随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"82.7%","self":false,"text":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar'>这就是Bagging算法的基本思路。</em><em class='similar'>随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森"}],"textWithDynamicClass":"<em class='similar T45I0' onmouseover=\"highlightSetter('T45I0',false)\" onmouseout=\"highlightSetter('T45I0',true)\">随机森林是Bagging的变体,</em><em class='similar T45I1' onmouseover=\"highlightSetter('T45I1',false)\" onmouseout=\"highlightSetter('T45I1',true)\">是基于Bagging的算法思路扩展而来,</em>","similar_word_count":24,"text":"<em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>","suggest":{"synonyms":[],"keyword":["随机森林","变体"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":76.81818,"teacher":"","textWithDynamicClass":"<em class='similar 47S95I0' onmouseover=\"highlightSetter('47S95I0',false)\" onmouseout=\"highlightSetter('47S95I0',true)\">进一步在决策树的训练过程中引入随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的","datatype":"webpage","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"<em class='similar'>进一步在决策树的训练过程中引入随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的"},{"profession":false,"keywords":[],"year":"","docid":"9000082132296211","author":"","university":"","source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463","reference":false,"similarScore":197.23485,"teacher":"","textWithDynamicClass":"m Forest,简称RF)是Bagging的一个扩展变体。其在以决策树作为基学习器构建Bagging集成的基础上,<em class='similar 47S94I9' onmouseover=\"highlightSetter('47S94I9',false)\" onmouseout=\"highlightSetter('47S94I9',true)\">进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的","datatype":"webpage","clcs":[],"similarityPercentage":"59.1%","self":false,"text":"m Forest,简称RF)是Bagging的一个扩展变体。其在以决策树作为基学习器构建Bagging集成的基础上,<em class='similar'>进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的"},{"profession":false,"keywords":[],"year":"","docid":"9000143175526611","author":"","university":"","source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html","reference":false,"similarScore":222.54498,"teacher":"","textWithDynamicClass":"以决策树为基学习器,<em class='similar 47S93I8' onmouseover=\"highlightSetter('47S93I8',false)\" onmouseout=\"highlightSetter('47S93I8',true)\">进一步在训练过程中引入了随机特征的选择,</em><em class='similar 47S93I9' onmouseover=\"highlightSetter('47S93I9',false)\" onmouseout=\"highlightSetter('47S93I9',true)\">即在每个节点分裂过程中的特征随机选择,</em>泛化能力强且实现简单[26]。而 Treebag","datatype":"webpage","clcs":[],"similarityPercentage":"50.3%","self":false,"text":"以决策树为基学习器,<em class='similar'>进一步在训练过程中引入了随机特征的选择,</em><em class='similar'>即在每个节点分裂过程中的特征随机选择,</em>泛化能力强且实现简单[26]。而 Treebag"}],"textWithDynamicClass":"是基于Bagging的算法思路扩展而来,其本质也是一种由多个弱学习器所集成的强学习器。<em class='similar T46I0' onmouseover=\"highlightSetter('T46I0',false)\" onmouseout=\"highlightSetter('T46I0',true)\">RF在通过在训练过程中引入一种随机特征选择机制,</em>","similar_word_count":22,"text":"是基于Bagging的算法思路扩展而来,其本质也是一种由多个弱学习器所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入一种随机特征选择机制,</em>","suggest":{"synonyms":[],"keyword":["训练过程","随机特征","选择机制"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082132296211","author":"","university":"","source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463","reference":false,"similarScore":197.23485,"teacher":"","textWithDynamicClass":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar 47S94I8' onmouseover=\"highlightSetter('47S94I8',false)\" onmouseout=\"highlightSetter('47S94I8',true)\">其在以决策树作为基学习器构建Bagging集成的基础上,</em>进一步在决策树的训练过程中引入了随机属性选择。","datatype":"webpage","clcs":[],"similarityPercentage":"69.7%","self":false,"text":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar'>其在以决策树作为基学习器构建Bagging集成的基础上,</em>进一步在决策树的训练过程中引入了随机属性选择。"},{"profession":false,"keywords":[],"year":"","docid":"9000143175526611","author":"","university":"","source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html","reference":false,"similarScore":222.54498,"teacher":"","textWithDynamicClass":"练子集建立个体学习器,最后将其组合为整体。代表算法是 RF,<em class='similar 47S93I6' onmouseover=\"highlightSetter('47S93I6',false)\" onmouseout=\"highlightSetter('47S93I6',true)\">其是在 Bagging 基础上,</em><em class='similar 47S93I7' onmouseover=\"highlightSetter('47S93I7',false)\" onmouseout=\"highlightSetter('47S93I7',true)\">以决策树为基学习器,</em>进一步在训练过程中引入了随机特征的选择,","datatype":"webpage","clcs":[],"similarityPercentage":"56.8%","self":false,"text":"练子集建立个体学习器,最后将其组合为整体。代表算法是 RF,<em class='similar'>其是在 Bagging 基础上,</em><em class='similar'>以决策树为基学习器,</em>进一步在训练过程中引入了随机特征的选择,"}],"textWithDynamicClass":"RF在通过在训练过程中引入一种随机特征选择机制,<em class='similar T46I1' onmouseover=\"highlightSetter('T46I1',false)\" onmouseout=\"highlightSetter('T46I1',true)\">并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>","similar_word_count":25,"text":"RF在通过在训练过程中引入一种随机特征选择机制,<em class='similar'>并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>","suggest":{"synonyms":[],"keyword":["决策树","学习器","得来"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar 48S96I1' onmouseover=\"highlightSetter('48S96I1',false)\" onmouseout=\"highlightSetter('48S96I1',true)\">具体来说,</em><em class='similar 48S96I2' onmouseover=\"highlightSetter('48S96I2',false)\" onmouseout=\"highlightSetter('48S96I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性,","datatype":"webpage","clcs":[],"similarityPercentage":"87.7%","self":false,"text":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性,"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"过程中引入了随机属性选择。<em class='similar 48S98I1' onmouseover=\"highlightSetter('48S98I1',false)\" onmouseout=\"highlightSetter('48S98I1',true)\">具体来说,</em><em class='similar 48S98I2' onmouseover=\"highlightSetter('48S98I2',false)\" onmouseout=\"highlightSetter('48S98I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性;","datatype":"webpage","clcs":[],"similarityPercentage":"87.7%","self":false,"text":"过程中引入了随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优属性;"},{"profession":false,"keywords":[],"year":"","docid":"9000137225786211","author":"","university":"","source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551","reference":false,"similarScore":776.78455,"teacher":"","textWithDynamicClass":"多样性不仅来自样本扰动,还来自属性扰动。<em class='similar 48S97I2' onmouseover=\"highlightSetter('48S97I2',false)\" onmouseout=\"highlightSetter('48S97I2',true)\">具体来说:</em><em class='similar 48S97I3' onmouseover=\"highlightSetter('48S97I3',false)\" onmouseout=\"highlightSetter('48S97I3',true)\">传统的决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优秀的属性;","datatype":"webpage","clcs":[],"similarityPercentage":"86.2%","self":false,"text":"多样性不仅来自样本扰动,还来自属性扰动��<em class='similar'>具体来说:</em><em class='similar'>传统的决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)中选择一个最优秀的属性;"},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":741.1846,"teacher":"","textWithDynamicClass":"属性集合也引入了随机属性选择.<em class='similar 48S99I1' onmouseover=\"highlightSetter('48S99I1',false)\" onmouseout=\"highlightSetter('48S99I1',true)\">具体来说,</em><em class='similar 48S99I2' onmouseover=\"highlightSetter('48S99I2',false)\" onmouseout=\"highlightSetter('48S99I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在RF中,","datatype":"webpage","clcs":[],"similarityPercentage":"76.3%","self":false,"text":"属性集合也引入了随机属性选择.<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em>而在RF中,"}],"textWithDynamicClass":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar T47I0' onmouseover=\"highlightSetter('T47I0',false)\" onmouseout=\"highlightSetter('T47I0',true)\">具体来说,</em><em class='similar T47I1' onmouseover=\"highlightSetter('T47I1',false)\" onmouseout=\"highlightSetter('T47I1',true)\">传统决策树在选择划分属性时是在当前树节点的特征集合</em>","similar_word_count":29,"text":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>","suggest":{"synonyms":[],"keyword":["决策树","树节点"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar 48S96I4' onmouseover=\"highlightSetter('48S96I4',false)\" onmouseout=\"highlightSetter('48S96I4',true)\">中选择一个最优属性,</em><em class='similar 48S96I5' onmouseover=\"highlightSetter('48S96I5',false)\" onmouseout=\"highlightSetter('48S96I5',true)\">,而在RF中,</em><em class='similar 48S96I6' onmouseover=\"highlightSetter('48S96I6',false)\" onmouseout=\"highlightSetter('48S96I6',true)\">对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,","datatype":"webpage","clcs":[],"similarityPercentage":"93.2%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性,</em><em class='similar'>,而在RF中,</em><em class='similar'>对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar 48S98I4' onmouseover=\"highlightSetter('48S98I4',false)\" onmouseout=\"highlightSetter('48S98I4',true)\">中选择一个最优属性;</em><em class='similar 48S98I5' onmouseover=\"highlightSetter('48S98I5',false)\" onmouseout=\"highlightSetter('48S98I5',true)\">而在RF中,</em><em class='similar 48S98I6' onmouseover=\"highlightSetter('48S98I6',false)\" onmouseout=\"highlightSetter('48S98I6',true)\">对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,","datatype":"webpage","clcs":[],"similarityPercentage":"93.2%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em>先从该结点的属性集合中随机选择一个包含k个属性的子集,"},{"profession":false,"keywords":[],"year":"","docid":"9000137225786211","author":"","university":"","source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551","reference":false,"similarScore":776.78455,"teacher":"","textWithDynamicClass":"传统的决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar 48S97I5' onmouseover=\"highlightSetter('48S97I5',false)\" onmouseout=\"highlightSetter('48S97I5',true)\">中选择一个最优秀的属性;</em><em class='similar 48S97I6' onmouseover=\"highlightSetter('48S97I6',false)\" onmouseout=\"highlightSetter('48S97I6',true)\">而在RF中,</em><em class='similar 48S97I7' onmouseover=\"highlightSetter('48S97I7',false)\" onmouseout=\"highlightSetter('48S97I7',true)\">对基决策树的每一个结点,</em><em class='similar 48S97I8' onmouseover=\"highlightSetter('48S97I8',false)\" onmouseout=\"highlightSetter('48S97I8',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S97I9' onmouseover=\"highlightSetter('48S97I9',false)\" onmouseout=\"highlightSetter('48S97I9',true)\">然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"84.5%","self":false,"text":"传统的决策树在选择划分属性时是在当前结点的属性集合(假定有d个属性)<em class='similar'>中选择一个最优秀的属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每一个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000139553504411","author":"","university":"","source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247","reference":false,"similarScore":524.78455,"teacher":"","textWithDynamicClass":"g集成的基础上,进一步在决策树的训练过程中引入随机属性选择。<em class='similar 48S101I3' onmouseover=\"highlightSetter('48S101I3',false)\" onmouseout=\"highlightSetter('48S101I3',true)\">而在RF 中,</em><em class='similar 48S101I4' onmouseover=\"highlightSetter('48S101I4',false)\" onmouseout=\"highlightSetter('48S101I4',true)\">对基决策树的每个结点,</em><em class='similar 48S101I5' onmouseover=\"highlightSetter('48S101I5',false)\" onmouseout=\"highlightSetter('48S101I5',true)\">先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar 48S101I6' onmouseover=\"highlightSetter('48S101I6',false)\" onmouseout=\"highlightSetter('48S101I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>这里的参数k 控制了随机性的引入程度;若令 k =","datatype":"webpage","clcs":[],"similarityPercentage":"81.1%","self":false,"text":"g集成的基础上,进一步在决策树的训练过程中引入随机属性选择。<em class='similar'>而在RF 中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>这里的参数k 控制了随机性的引入程度;若令 k ="},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":741.1846,"teacher":"","textWithDynamicClass":"传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;<em class='similar 48S99I3' onmouseover=\"highlightSetter('48S99I3',false)\" onmouseout=\"highlightSetter('48S99I3',true)\">而在RF中,</em><em class='similar 48S99I4' onmouseover=\"highlightSetter('48S99I4',false)\" onmouseout=\"highlightSetter('48S99I4',true)\">对基决策树的每个结点,</em><em class='similar 48S99I5' onmouseover=\"highlightSetter('48S99I5',false)\" onmouseout=\"highlightSetter('48S99I5',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S99I6' onmouseover=\"highlightSetter('48S99I6',false)\" onmouseout=\"highlightSetter('48S99I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能","datatype":"webpage","clcs":[],"similarityPercentage":"78.4%","self":false,"text":"传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;<em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能"},{"profession":false,"keywords":[],"year":"","docid":"9000082030187211","author":"","university":"","source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612","reference":false,"similarScore":484.78455,"teacher":"","textWithDynamicClass":"步在决策树的训练过程中引入随机属性选择。 RF在划分属性时,<em class='similar 48S100I2' onmouseover=\"highlightSetter('48S100I2',false)\" onmouseout=\"highlightSetter('48S100I2',true)\">对基决策树中的每个结点,</em><em class='similar 48S100I3' onmouseover=\"highlightSetter('48S100I3',false)\" onmouseout=\"highlightSetter('48S100I3',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S100I4' onmouseover=\"highlightSetter('48S100I4',false)\" onmouseout=\"highlightSetter('48S100I4',true)\">然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学","datatype":"webpage","clcs":[],"similarityPercentage":"77.1%","self":false,"text":"步在决策树的训练过程中引入随机属性选择。 RF在划分属性时,<em class='similar'>对基决策树中的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学"}],"textWithDynamicClass":"(假定有 个特征)<em class='similar T47I3' onmouseover=\"highlightSetter('T47I3',false)\" onmouseout=\"highlightSetter('T47I3',true)\">中选择一个最优属性;</em><em class='similar T47I4' onmouseover=\"highlightSetter('T47I4',false)\" onmouseout=\"highlightSetter('T47I4',true)\">而在RF中,</em><em class='similar T47I5' onmouseover=\"highlightSetter('T47I5',false)\" onmouseout=\"highlightSetter('T47I5',true)\">对基决策树的每个结点,</em>","similar_word_count":23,"text":"(假定有 个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em>","suggest":{"synonyms":[],"keyword":["决策树","最优","结点"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 48S96I7' onmouseover=\"highlightSetter('48S96I7',false)\" onmouseout=\"highlightSetter('48S96I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,","datatype":"webpage","clcs":[],"similarityPercentage":"94.2%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 48S98I7' onmouseover=\"highlightSetter('48S98I7',false)\" onmouseout=\"highlightSetter('48S98I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,","datatype":"webpage","clcs":[],"similarityPercentage":"94.2%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分,"},{"profession":false,"keywords":[],"year":"","docid":"9000139553504411","author":"","university":"","source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247","reference":false,"similarScore":524.78455,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 48S101I5' onmouseover=\"highlightSetter('48S101I5',false)\" onmouseout=\"highlightSetter('48S101I5',true)\">先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分.","datatype":"webpage","clcs":[],"similarityPercentage":"87.8%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分."},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":741.1846,"teacher":"","textWithDynamicClass":"对基决策树的每个结点,<em class='similar 48S99I5' onmouseover=\"highlightSetter('48S99I5',false)\" onmouseout=\"highlightSetter('48S99I5',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分.","datatype":"webpage","clcs":[],"similarityPercentage":"83.5%","self":false,"text":"对基决策树的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em>然后再从这个子集中选择一个最优属性用于划分."},{"profession":false,"keywords":[],"year":"","docid":"9000137225786211","author":"","university":"","source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551","reference":false,"similarScore":776.78455,"teacher":"","textWithDynamicClass":"对基决策树的每一个结点,<em class='similar 48S97I8' onmouseover=\"highlightSetter('48S97I8',false)\" onmouseout=\"highlightSetter('48S97I8',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S97I9' onmouseover=\"highlightSetter('48S97I9',false)\" onmouseout=\"highlightSetter('48S97I9',true)\">然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"82.3%","self":false,"text":"对基决策树的每一个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000082030187211","author":"","university":"","source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612","reference":false,"similarScore":484.78455,"teacher":"","textWithDynamicClass":"步在决策树的训练过程中引入随机属性选择。 RF在划分属性时,对基决策树中的每个结点,<em class='similar 48S100I3' onmouseover=\"highlightSetter('48S100I3',false)\" onmouseout=\"highlightSetter('48S100I3',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S100I4' onmouseover=\"highlightSetter('48S100I4',false)\" onmouseout=\"highlightSetter('48S100I4',true)\">然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学","datatype":"webpage","clcs":[],"similarityPercentage":"67.6%","self":false,"text":"步在决策树的训练过程中引入随机属性选择。 RF在划分属性时,对基决策树中的每个结点,<em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学"}],"textWithDynamicClass":"中选择一个最优属性;而在RF中,对基决策树的每个结点,<em class='similar T47I6' onmouseover=\"highlightSetter('T47I6',false)\" onmouseout=\"highlightSetter('T47I6',true)\">先从该结点的属性的集合中随机选择一个包含 个属性的子集,</em>","similar_word_count":26,"text":"中选择一个最优属性;而在RF中,对基决策树的每个结点,<em class='similar'>先从该结点的属性的集合中随机选择一个包含 个属性的子集,</em>","suggest":{"synonyms":[],"keyword":["结点","随机选择","子集"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar 48S96I8' onmouseover=\"highlightSetter('48S96I8',false)\" onmouseout=\"highlightSetter('48S96I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"91.6%","self":false,"text":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar 48S98I8' onmouseover=\"highlightSetter('48S98I8',false)\" onmouseout=\"highlightSetter('48S98I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、","datatype":"webpage","clcs":[],"similarityPercentage":"91.6%","self":false,"text":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、"},{"profession":false,"keywords":[],"year":"","docid":"9000139553504411","author":"","university":"","source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247","reference":false,"similarScore":524.78455,"teacher":"","textWithDynamicClass":"先从该结点的属性集合中随机选择一个包含 k个属性的子集,<em class='similar 48S101I6' onmouseover=\"highlightSetter('48S101I6',false)\" onmouseout=\"highlightSetter('48S101I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>这里的参数k 控制了随机性的引入程度;若令 k =","datatype":"webpage","clcs":[],"similarityPercentage":"86.0%","self":false,"text":"先从该结点的属性集合中随机选择一个包含 k个属性的子集,<em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>这里的参数k 控制了随机性的引入程度;若令 k ="},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":741.1846,"teacher":"","textWithDynamicClass":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar 48S99I6' onmouseover=\"highlightSetter('48S99I6',false)\" onmouseout=\"highlightSetter('48S99I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能","datatype":"webpage","clcs":[],"similarityPercentage":"84.0%","self":false,"text":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>随机森林简单、容易实现、计算开销小.效果能"},{"profession":false,"keywords":[],"year":"","docid":"9000137225786211","author":"","university":"","source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551","reference":false,"similarScore":776.78455,"teacher":"","textWithDynamicClass":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar 48S97I9' onmouseover=\"highlightSetter('48S97I9',false)\" onmouseout=\"highlightSetter('48S97I9',true)\">然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"80.6%","self":false,"text":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar'>然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000082030187211","author":"","university":"","source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612","reference":false,"similarScore":484.78455,"teacher":"","textWithDynamicClass":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar 48S100I4' onmouseover=\"highlightSetter('48S100I4',false)\" onmouseout=\"highlightSetter('48S100I4',true)\">然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学","datatype":"webpage","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"先从该结点的属性集合中随机选择一个包含k个属性的子集,<em class='similar'>然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学"}],"textWithDynamicClass":"先从该结点的属性的集合中随机选择一个包含 个属性的子集,<em class='similar T47I7' onmouseover=\"highlightSetter('T47I7',false)\" onmouseout=\"highlightSetter('T47I7',true)\">然后再从这个子集中选择一个最优特征用于下一步的划分</em>","similar_word_count":25,"text":"先从该结点的属性的集合中随机选择一个包含 个属性的子集,<em class='similar'>然后再从这个子集中选择一个最优特征用于下一步的划分</em>","suggest":{"synonyms":[],"keyword":["最优","子集"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000131811984111","author":"","university":"","source":"网页","title":"            模型说明_文本分类_详细教程_NLP自学习平台_自然语言处理-阿里云    ","url":"https://help.aliyun.com/document_detail/162446.html","reference":false,"similarScore":57.600002,"teacher":"","textWithDynamicClass":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar 50S105I8' onmouseover=\"highlightSetter('50S105I8',false)\" onmouseout=\"highlightSetter('50S105I8',true)\">随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院","datatype":"webpage","clcs":[],"similarityPercentage":"66.6%","self":false,"text":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar'>随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000456857311","author":"张宇","university":"","source":"大学生论文联合库","title":"遥感影像在地球覆盖分类中的应用","url":"","reference":false,"similarScore":142.76924,"teacher":"老师","textWithDynamicClass":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,泛化能力好,鲁棒性强,(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar 50S103I12' onmouseover=\"highlightSetter('50S103I12',false)\" onmouseout=\"highlightSetter('50S103I12',true)\">研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar 50S103I13' onmouseover=\"highlightSetter('50S103I13',false)\" onmouseout=\"highlightSetter('50S103I13',true)\">并通过对该方法检测的云影区块进行形态学变换、</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"36.3%","self":false,"text":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,泛化能力好,鲁棒性强,(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar'>研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar'>并通过对该方法检测的云影区块进行形态学变换、</em>"}],"textWithDynamicClass":"<em class='similar T49I0' onmouseover=\"highlightSetter('T49I0',false)\" onmouseout=\"highlightSetter('T49I0',true)\">通过对随机森林算法进行研究,</em><em class='similar T49I1' onmouseover=\"highlightSetter('T49I1',false)\" onmouseout=\"highlightSetter('T49I1',true)\">发现随机森林相较于传统的机器学习模型具有训练速度快、</em>","similar_word_count":38,"text":"<em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["随机森林算法","随机森林","机器学习模型","训练","速度快"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000456857311","author":"张宇","university":"","source":"大学生论文联合库","title":"遥感影像在地球覆盖分类中的应用","url":"","reference":false,"similarScore":142.76924,"teacher":"老师","textWithDynamicClass":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar 50S103I6' onmouseover=\"highlightSetter('50S103I6',false)\" onmouseout=\"highlightSetter('50S103I6',true)\">泛化能力好,</em>鲁棒性强,(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,研究了基于随机森林的遥感影像云影信息检测方法,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"46.2%","self":false,"text":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar'>泛化能力好,</em>鲁棒性强,(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,研究了基于随机森林的遥感影像云影信息检测方法,"}],"textWithDynamicClass":"预测效果好、<em class='similar T49I3' onmouseover=\"highlightSetter('T49I3',false)\" onmouseout=\"highlightSetter('T49I3',true)\">泛化能力强、</em>","similar_word_count":5,"text":"预测效果好、<em class='similar'>泛化能力强、</em>","suggest":{"synonyms":[],"keyword":["泛化能力"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000106062608311","author":"","university":"","source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html","reference":false,"similarScore":118.05556,"teacher":"","textWithDynamicClass":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar 51S106I11' onmouseover=\"highlightSetter('51S106I11',false)\" onmouseout=\"highlightSetter('51S106I11',true)\">�5�3即随机森林的泛化误差.</em>每颗决策树的平均泛化误差定义为:","datatype":"webpage","clcs":[],"similarityPercentage":"48.1%","self":false,"text":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar'>�5�3即随机森林的泛化误差.</em>每颗决策树的平均泛化误差定义为:"}],"textWithDynamicClass":"<em class='similar T50I0' onmouseover=\"highlightSetter('T50I0',false)\" onmouseout=\"highlightSetter('T50I0',true)\">式(2-5)</em><em class='similar T50I1' onmouseover=\"highlightSetter('T50I1',false)\" onmouseout=\"highlightSetter('T50I1',true)\">右侧部分表示随机森林的泛化误差,</em>","similar_word_count":18,"text":"<em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>","suggest":{"synonyms":[],"keyword":["右侧","随机森林","泛化误差"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000106062608311","author":"","university":"","source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html","reference":false,"similarScore":118.05556,"teacher":"","textWithDynamicClass":"中�5�3式(5)中右边记为 PE �6�5(forest)�5�3即随机森林的泛化误差.<em class='similar 51S106I12' onmouseover=\"highlightSetter('51S106I12',false)\" onmouseout=\"highlightSetter('51S106I12',true)\">每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�","datatype":"webpage","clcs":[],"similarityPercentage":"57.7%","self":false,"text":"中�5�3式(5)中右边记为 PE �6�5(forest)�5�3即随机森林的泛化误差.<em class='similar'>每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�"}],"textWithDynamicClass":"将其记为 。<em class='similar T50I3' onmouseover=\"highlightSetter('T50I3',false)\" onmouseout=\"highlightSetter('T50I3',true)\"> 则表示一课决策树的平均泛化误差即</em>","similar_word_count":16,"text":"将其记为 。<em class='similar'> 则表示一课决策树的平均泛化误差即</em>","suggest":{"synonyms":[],"keyword":["泛化误差","决策树"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200005292737611","author":"张冰","university":"","source":"大学生论文联合库","title":"基于bp神经网络的短期负荷预测方法","url":"","reference":false,"similarScore":121.83334,"teacher":"","textWithDynamicClass":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar 52S108I13' onmouseover=\"highlightSetter('52S108I13',false)\" onmouseout=\"highlightSetter('52S108I13',true)\">;是残差与之间的加权相关系数,</em><em class='similar 52S108I14' onmouseover=\"highlightSetter('52S108I14',false)\" onmouseout=\"highlightSetter('52S108I14',true)\">与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"76.3%","self":false,"text":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar'>;是残差与之间的加权相关系数,</em><em class='similar'>与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低"}],"textWithDynamicClass":"式(2-7)<em class='similar T51I1' onmouseover=\"highlightSetter('T51I1',false)\" onmouseout=\"highlightSetter('T51I1',true)\">中 是在 与 相互独立的情况下,</em><em class='similar T51I2' onmouseover=\"highlightSetter('T51I2',false)\" onmouseout=\"highlightSetter('T51I2',true)\">残差 和 的加权相关系数。</em>","similar_word_count":22,"text":"式(2-7)<em class='similar'>中 是在 与 相互独立的情况下,</em><em class='similar'>残差 和 的加权相关系数。</em>","suggest":{"synonyms":[],"keyword":["相互独立","残差","加权","相关系数"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar 53S109I15' onmouseover=\"highlightSetter('53S109I15',false)\" onmouseout=\"highlightSetter('53S109I15',true)\">定理2给出了精确回归森林的条件:</em>残差间的低相关性和低的错误决策树。","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"53.8%","self":false,"text":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar'>定理2给出了精确回归森林的条件:</em>残差间的低相关性和低的错误决策树。"}],"textWithDynamicClass":"<em class='similar T52I0' onmouseover=\"highlightSetter('T52I0',false)\" onmouseout=\"highlightSetter('T52I0',true)\">上述定理1和定理2给定了使随机森林精确的前提是:</em>","similar_word_count":23,"text":"<em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em>","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"}],"keyword":["定理","和定理","给定","随机森林","精确"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"',(?的加权相关系数,且?与?'相互独立。定理2给出了精确回归森林的条件:<em class='similar 53S109I16' onmouseover=\"highlightSetter('53S109I16',false)\" onmouseout=\"highlightSetter('53S109I16',true)\">残差间的低相关性和低的错误决策树。</em><em class='similar 53S109I17' onmouseover=\"highlightSetter('53S109I17',false)\" onmouseout=\"highlightSetter('53S109I17',true)\">随机森林通过加权相关系数?</em><em class='similar 53S109I18' onmouseover=\"highlightSetter('53S109I18',false)\" onmouseout=\"highlightSetter('53S109I18',true)\">降低决策树的平均误差。</em>随机森林","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"70.1%","self":false,"text":"',(?的加权相关系数,且?与?'相互独立。定理2给出了精确回归森林的条件:<em class='similar'>残差间的低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数?</em><em class='similar'>降低决策树的平均误差。</em>随机森林"},{"profession":false,"keywords":[],"year":"","docid":"9000113620987811","author":"csdn","university":"","source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770","reference":false,"similarScore":112.499985,"teacher":"","textWithDynamicClass":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar 53S110I15' onmouseover=\"highlightSetter('53S110I15',false)\" onmouseout=\"highlightSetter('53S110I15',true)\">指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{","datatype":"webpage","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar'>指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{"},{"profession":false,"keywords":[],"year":"","docid":"9000179731028611","author":"","university":"","source":"网页","title":"随机森林回归模型及其在污水排放量预测中的应用","url":"https://www.docin.com/p%2D1408710266.html","reference":false,"similarScore":213.83331,"teacher":"","textWithDynamicClass":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar 53S111I4' onmouseover=\"highlightSetter('53S111I4',false)\" onmouseout=\"highlightSetter('53S111I4',true)\">定理低相关性和低的错误决策树。</em><em class='similar 53S111I5' onmouseover=\"highlightSetter('53S111I5',false)\" onmouseout=\"highlightSetter('53S111I5',true)\">随机森林通过加权相关系数降低决策树的平均误差。</em>随机森林","datatype":"webpage","clcs":[],"similarityPercentage":"59.6%","self":false,"text":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar'>定理低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数降低决策树的平均误差。</em>随机森林"}],"textWithDynamicClass":"上述定理1和定理2给定了使随机森林精确的前提是:<em class='similar T52I1' onmouseover=\"highlightSetter('T52I1',false)\" onmouseout=\"highlightSetter('T52I1',true)\">残差间的相关系数低以及错误决策树数目较少。</em><em class='similar T52I2' onmouseover=\"highlightSetter('T52I2',false)\" onmouseout=\"highlightSetter('T52I2',true)\">为降低决策树的平均误差,</em>","similar_word_count":31,"text":"上述定理1和定理2给定了使随机森林精确的前提是:<em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em>","suggest":{"synonyms":[{"synonyms":["数量"],"keyword":"数目"}],"keyword":["残差","相关系数","决策树","数目","平均误差"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"残差间的低相关性和低的错误决策树。<em class='similar 53S109I17' onmouseover=\"highlightSetter('53S109I17',false)\" onmouseout=\"highlightSetter('53S109I17',true)\">随机森林通过加权相关系数?</em><em class='similar 53S109I18' onmouseover=\"highlightSetter('53S109I18',false)\" onmouseout=\"highlightSetter('53S109I18',true)\">降低决策树的平均误差。</em><em class='similar 53S109I19' onmouseover=\"highlightSetter('53S109I19',false)\" onmouseout=\"highlightSetter('53S109I19',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"74.0%","self":false,"text":"残差间的低相关性和低的错误决策树。<em class='similar'>随机森林通过加权相关系数?</em><em class='similar'>降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"},{"profession":false,"keywords":[],"year":"","docid":"9000179731028611","author":"","university":"","source":"网页","title":"随机森林回归模型及其在污水排放量预测中的应用","url":"https://www.docin.com/p%2D1408710266.html","reference":false,"similarScore":213.83331,"teacher":"","textWithDynamicClass":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。定理低相关性和低的错误决策树。<em class='similar 53S111I5' onmouseover=\"highlightSetter('53S111I5',false)\" onmouseout=\"highlightSetter('53S111I5',true)\">随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar 53S111I6' onmouseover=\"highlightSetter('53S111I6',false)\" onmouseout=\"highlightSetter('53S111I6',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"webpage","clcs":[],"similarityPercentage":"58.6%","self":false,"text":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。定理低相关性和低的错误决策树。<em class='similar'>随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"}],"textWithDynamicClass":"残差间的相关系数低以及错误决策树数目较少。为降低决策树的平均误差,<em class='similar T52I3' onmouseover=\"highlightSetter('T52I3',false)\" onmouseout=\"highlightSetter('T52I3',true)\">随机森林回归选择对相关系数 进行加权处理。</em><em class='similar T52I4' onmouseover=\"highlightSetter('T52I4',false)\" onmouseout=\"highlightSetter('T52I4',true)\">随机森林</em>","similar_word_count":23,"text":"残差间的相关系数低以及错误决策树数目较少。为降低决策树的平均误差,<em class='similar'>随机森林回归选择对相关系数 进行加权处理。</em><em class='similar'>随机森林</em>","suggest":{"synonyms":[],"keyword":["随机森林","相关系数","回归","加权处理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":333.59995,"teacher":"","textWithDynamicClass":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar 54S112I7' onmouseover=\"highlightSetter('54S112I7',false)\" onmouseout=\"highlightSetter('54S112I7',true)\">人工神经网络是深度学习的核心。</em>它们用途广泛,功能强大且可扩展,使其非常适合处理大型和高度复杂的机器学习任务,","datatype":"webpage","clcs":[],"similarityPercentage":"100.0%","self":false,"text":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar'>人工神经网络是深度学习的核心。</em>它们用途广泛,功能强大且可扩展,使其非常适合处理大型和高度复杂的机器学习任务,"}],"textWithDynamicClass":"<em class='similar T53I0' onmouseover=\"highlightSetter('T53I0',false)\" onmouseout=\"highlightSetter('T53I0',true)\">深度学习的核心是人工神经网络,</em>","similar_word_count":14,"text":"<em class='similar'>深度学习的核心是人工神经网络,</em>","suggest":{"synonyms":[],"keyword":["深度学习","人工神经网络"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":333.59995,"teacher":"","textWithDynamicClass":"ot;神经元\"),以免我们将创造力限制在生物学上。人工神经网络是深度学习的核心。它们用途广泛,功能强大且可扩展,<em class='similar 54S112I10' onmouseover=\"highlightSetter('54S112I10',false)\" onmouseout=\"highlightSetter('54S112I10',true)\">使其非常适合处理大型和高度复杂的机器学习任务,</em>例如对数十亿张图像进行分类(例如GoogleIma","datatype":"webpage","clcs":[],"similarityPercentage":"96.1%","self":false,"text":"ot;神经元\"),以免我们将创造力限制在生物学上。人工神经网络是深度学习的核心。它们用途广泛,功能强大且可扩展,<em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em>例如对数十亿张图像进行分类(例如GoogleIma"}],"textWithDynamicClass":"其在当代用途广泛、功能强大并具有良好的扩展性,<em class='similar T53I3' onmouseover=\"highlightSetter('T53I3',false)\" onmouseout=\"highlightSetter('T53I3',true)\">使得其非常适合处理大型和具有高度复杂的机器学习任务,</em>","similar_word_count":25,"text":"其在当代用途广泛、功能强大并具有良好的扩展性,<em class='similar'>使得其非常适合处理大型和具有高度复杂的机器学习任务,</em>","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"}],"keyword":["机器","学习任务"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":126.60869,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。<em class='similar 55S113I1' onmouseover=\"highlightSetter('55S113I1',false)\" onmouseout=\"highlightSetter('55S113I1',true)\">03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4),称为阈值逻辑单元","datatype":"webpage","clcs":[],"similarityPercentage":"60.7%","self":false,"text":"起来以计算复杂的逻辑表达式。<em class='similar'>03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4),称为阈值逻辑单元"}],"textWithDynamicClass":"<em class='similar T54I0' onmouseover=\"highlightSetter('T54I0',false)\" onmouseout=\"highlightSetter('T54I0',true)\">感知器架构是最为简单的神经网络基础结构模型之一。</em>","similar_word_count":23,"text":"<em class='similar'>感知器架构是最为简单的神经网络基础结构模型之一。</em>","suggest":{"synonyms":[],"keyword":["感知器","架构","神经","网络基础","结构模型"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":126.60869,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar 55S113I5' onmouseover=\"highlightSetter('55S113I5',false)\" onmouseout=\"highlightSetter('55S113I5',true)\">,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入","datatype":"webpage","clcs":[],"similarityPercentage":"63.2%","self":false,"text":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar'>,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入"}],"textWithDynamicClass":"其结构如图2.25所示,<em class='similar T54I2' onmouseover=\"highlightSetter('T54I2',false)\" onmouseout=\"highlightSetter('T54I2',true)\">图中所示神经元结构称为阈值逻辑单元</em>","similar_word_count":17,"text":"其结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>","suggest":{"synonyms":[],"keyword":["神经","神经元结构","阈值","逻辑单元","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":126.60869,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar 55S113I5' onmouseover=\"highlightSetter('55S113I5',false)\" onmouseout=\"highlightSetter('55S113I5',true)\">,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入","datatype":"webpage","clcs":[],"similarityPercentage":"68.9%","self":false,"text":"起来以计算复杂的逻辑表达式。03感知器感知器是最简单的ANN架构之一,由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar'>,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入"}],"textWithDynamicClass":"(TLU),<em class='similar T54I4' onmouseover=\"highlightSetter('T54I4',false)\" onmouseout=\"highlightSetter('T54I4',true)\">也称为阈值逻辑值单元</em>","similar_word_count":10,"text":"(TLU),<em class='similar'>也称为阈值逻辑值单元</em>","suggest":{"synonyms":[],"keyword":["阈值","逻辑值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":355.6842,"teacher":"","textWithDynamicClass":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar 56S114I8' onmouseover=\"highlightSetter('56S114I8',false)\" onmouseout=\"highlightSetter('56S114I8',true)\">(而不是二进制开/关值)</em><em class='similar 56S114I9' onmouseover=\"highlightSetter('56S114I9',false)\" onmouseout=\"highlightSetter('56S114I9',true)\">,并且每个输入连接都与权重相关联。</em>TLU计算其输入的加权总和","datatype":"webpage","clcs":[],"similarityPercentage":"78.3%","self":false,"text":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar'>(而不是二进制开/关值)</em><em class='similar'>,并且每个输入连接都与权重相关联。</em>TLU计算其输入的加权总和"}],"textWithDynamicClass":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar T55I0' onmouseover=\"highlightSetter('T55I0',false)\" onmouseout=\"highlightSetter('T55I0',true)\">而不是二进制的0/1值,</em><em class='similar T55I1' onmouseover=\"highlightSetter('T55I1',false)\" onmouseout=\"highlightSetter('T55I1',true)\">并且每个输入连接都有对应的相关联的权重值</em>","similar_word_count":30,"text":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>","suggest":{"synonyms":[],"keyword":["二进制","相关联","权重值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":355.6842,"teacher":"","textWithDynamicClass":",并且每个输入连接都与权重相关联。<em class='similar 56S114I10' onmouseover=\"highlightSetter('56S114I10',false)\" onmouseout=\"highlightSetter('56S114I10',true)\">TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar 56S114I12' onmouseover=\"highlightSetter('56S114I12',false)\" onmouseout=\"highlightSetter('56S114I12',true)\">,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar 56S114I20' onmouseover=\"highlightSetter('56S114I20',false)\" onmouseout=\"highlightSetter('56S114I20',true)\">计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav","datatype":"webpage","clcs":[],"similarityPercentage":"77.3%","self":false,"text":",并且每个输入连接都与权重相关联。<em class='similar'>TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar'>,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar'>计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav"}],"textWithDynamicClass":"[44]。<em class='similar T55I3' onmouseover=\"highlightSetter('T55I3',false)\" onmouseout=\"highlightSetter('T55I3',true)\">TLU来计算输入的加权和,</em><em class='similar T55I4' onmouseover=\"highlightSetter('T55I4',false)\" onmouseout=\"highlightSetter('T55I4',true)\">其中阶跃函数将使用加权和来输出学习结果,</em>","similar_word_count":29,"text":"[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>","suggest":{"synonyms":[],"keyword":["加权和","阶跃函数","学习结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000132611414211","author":"","university":"","source":"网页","title":"基于深度学习的航拍车流实时检测与追踪方法研究 - 道...","url":"http://www.doc88.com/p%2D9983830032983.html","reference":false,"similarScore":115.23812,"teacher":"","textWithDynamicClass":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar 58S119I8' onmouseover=\"highlightSetter('58S119I8',false)\" onmouseout=\"highlightSetter('58S119I8',true)\">全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将","datatype":"webpage","clcs":[],"similarityPercentage":"27.7%","self":false,"text":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar'>全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将"}],"textWithDynamicClass":"感知器是一层阈值逻辑单元单元所构成的,<em class='similar T57I1' onmouseover=\"highlightSetter('T57I1',false)\" onmouseout=\"highlightSetter('T57I1',true)\">每个阈值逻辑单元单元与全部的Input信号相连接。</em>","similar_word_count":21,"text":"感知器是一层阈值逻辑单元单元所构成的,<em class='similar'>每个阈值逻辑单元单元与全部的Input信号相连接。</em>","suggest":{"synonyms":[],"keyword":["阈值","逻辑单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":198.78787,"teacher":"","textWithDynamicClass":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar 58S116I7' onmouseover=\"highlightSetter('58S116I7',false)\" onmouseout=\"highlightSetter('58S116I7',true)\">当一层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,该层称为全连接层或密集层。感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。所有输入神经元形成输入层。","datatype":"webpage","clcs":[],"similarityPercentage":"74.5%","self":false,"text":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,该层称为全连接层或密集层。感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。所有输入神经元形成输入层。"},{"profession":false,"keywords":[],"year":"","docid":"9000131871609811","author":"","university":"","source":"网页","title":"人工神经网络165 样本 Xi Yi 要求设计一个神经网络 用...","url":"http://www.docin.com/p%2D969285621%2Df2.html","reference":false,"similarScore":208.33331,"teacher":"","textWithDynamicClass":"机的结构图该多层感知机有两个用于处理的隐层节点及一个输出层。<em class='similar 58S118I2' onmouseover=\"highlightSetter('58S118I2',false)\" onmouseout=\"highlightSetter('58S118I2',true)\">这个神经网络是全连接的即神经网络中任何一层的神经元都和上一层的所有节点神经元相连接。</em>神经网络中数据流的方向是前向的从左到右一层层地流动","datatype":"webpage","clcs":[],"similarityPercentage":"71.3%","self":false,"text":"机的结构图该多层感知机有两个用于处理的隐层节点及一个输出层。<em class='similar'>这个神经网络是全连接的即神经网络中任何一层的神经元都和上一层的所有节点神经元相连接。</em>神经网络中数据流的方向是前向的从左到右一层层地流动"},{"profession":false,"keywords":[],"year":"2018","docid":"1000031940330811","author":"杨佶","university":"","source":"信息技术与信息化","title":"基于卷积神经网络的手写汉字识别研究","url":"","reference":false,"similarScore":96.33332,"teacher":"","textWithDynamicClass":"大降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar 58S117I6' onmouseover=\"highlightSetter('58S117I6',false)\" onmouseout=\"highlightSetter('58S117I6',true)\">每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连","datatype":"journal","clcs":[],"similarityPercentage":"63.4%","self":false,"text":"大降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar'>每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连"},{"profession":false,"keywords":[],"year":"","docid":"9000132611414211","author":"","university":"","source":"网页","title":"基于深度学习的航拍车流实时检测与追踪方法研究 - 道...","url":"http://www.doc88.com/p%2D9983830032983.html","reference":false,"similarScore":115.23812,"teacher":"","textWithDynamicClass":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar 58S119I8' onmouseover=\"highlightSetter('58S119I8',false)\" onmouseout=\"highlightSetter('58S119I8',true)\">全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将","datatype":"webpage","clcs":[],"similarityPercentage":"51.3%","self":false,"text":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar'>全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将"}],"textWithDynamicClass":"每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar T57I2' onmouseover=\"highlightSetter('T57I2',false)\" onmouseout=\"highlightSetter('T57I2',true)\">当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,</em>","similar_word_count":30,"text":"每个阈值逻辑单元单元与全部的Input信号相连接。<em class='similar'>当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,</em>","suggest":{"synonyms":[{"synonyms":["连结"],"keyword":"相接"}],"keyword":["一层","神经","神经元","相接"]}},{"sources":[{"profession":false,"keywords":[],"year":"2018","docid":"1000031940330811","author":"杨佶","university":"","source":"信息技术与信息化","title":"基于卷积神经网络的手写汉字识别研究","url":"","reference":false,"similarScore":96.33332,"teacher":"","textWithDynamicClass":"大降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar 58S117I6' onmouseover=\"highlightSetter('58S117I6',false)\" onmouseout=\"highlightSetter('58S117I6',true)\">每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连","datatype":"journal","clcs":[],"similarityPercentage":"65.3%","self":false,"text":"大降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar'>每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连"},{"profession":false,"keywords":[],"year":"","docid":"9000132611414211","author":"","university":"","source":"网页","title":"基于深度学习的航拍车流实时检测与追踪方法研究 - 道...","url":"http://www.doc88.com/p%2D9983830032983.html","reference":false,"similarScore":115.23812,"teacher":"","textWithDynamicClass":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar 58S119I8' onmouseover=\"highlightSetter('58S119I8',false)\" onmouseout=\"highlightSetter('58S119I8',true)\">全连接层的所有神经元节点会和前一层的卷积��的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将","datatype":"webpage","clcs":[],"similarityPercentage":"51.2%","self":false,"text":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar'>全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将"}],"textWithDynamicClass":"当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,<em class='similar T57I3' onmouseover=\"highlightSetter('T57I3',false)\" onmouseout=\"highlightSetter('T57I3',true)\">通常将这一层的全部神经元节点称为全连接层。</em>","similar_word_count":20,"text":"当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,<em class='similar'>通常将这一层的全部神经元节点称为全连接层。</em>","suggest":{"synonyms":[],"keyword":["一层","神经","神经元","神经元节点","连接层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":198.78787,"teacher":"","textWithDynamicClass":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。当一层中的所有神经元都连接到上一层中的每个神经元(即其输入神经元)时,该层称为全连接层或密集层。感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar 58S116I13' onmouseover=\"highlightSetter('58S116I13',false)\" onmouseout=\"highlightSetter('58S116I13',true)\">所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通","datatype":"webpage","clcs":[],"similarityPercentage":"74.0%","self":false,"text":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。当一层中的所有神经元都连接到上一层中的每个神经元(即其输入神经元)时,该层称为全连接层或密集层。感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar'>所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通"},{"profession":false,"keywords":[],"year":"2018","docid":"1000031940330811","author":"杨佶","university":"","source":"信息技术与信息化","title":"基于卷积神经网络的手写汉字识别研究","url":"","reference":false,"similarScore":96.33332,"teacher":"","textWithDynamicClass":"大降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar 58S117I6' onmouseover=\"highlightSetter('58S117I6',false)\" onmouseout=\"highlightSetter('58S117I6',true)\">每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连","datatype":"journal","clcs":[],"similarityPercentage":"65.3%","self":false,"text":"大降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar'>每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连"},{"profession":false,"keywords":[],"year":"","docid":"9000132611414211","author":"","university":"","source":"网页","title":"基于深度学习的航拍车流实时检测与追踪方法研究 - 道...","url":"http://www.doc88.com/p%2D9983830032983.html","reference":false,"similarScore":115.23812,"teacher":"","textWithDynamicClass":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar 58S119I8' onmouseover=\"highlightSetter('58S119I8',false)\" onmouseout=\"highlightSetter('58S119I8',true)\">全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将","datatype":"webpage","clcs":[],"similarityPercentage":"51.6%","self":false,"text":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar'>全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将"}],"textWithDynamicClass":"通常将这一层的全部神经元节点称为全连接层。<em class='similar T57I4' onmouseover=\"highlightSetter('T57I4',false)\" onmouseout=\"highlightSetter('T57I4',true)\">所有与输入信号相接的全部神经元形成输入神经层,</em>","similar_word_count":22,"text":"通常将这一层的全部神经元节点称为全连接层。<em class='similar'>所有与输入信号相接的全部神经元形成输入神经层,</em>","suggest":{"synonyms":[{"synonyms":["连结"],"keyword":"相接"}],"keyword":["神经","神经元","相接","输入信号"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015758038411","author":"","university":"","source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f","reference":false,"similarScore":290.44885,"teacher":"","textWithDynamicClass":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar 59S120I4' onmouseover=\"highlightSetter('59S120I4',false)\" onmouseout=\"highlightSetter('59S120I4',true)\">Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,这两个神经元之间的联系就会变得更强。","datatype":"webpage","clcs":[],"similarityPercentage":"57.8%","self":false,"text":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar'>Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,这两个神经元之间的联系就会变得更强。"}],"textWithDynamicClass":"<em class='similar T58I0' onmouseover=\"highlightSetter('T58I0',false)\" onmouseout=\"highlightSetter('T58I0',true)\">关于感知器的训练算法,</em><em class='similar T58I1' onmouseover=\"highlightSetter('T58I1',false)\" onmouseout=\"highlightSetter('T58I1',true)\">其很大程度上受到 规则的启发,</em>","similar_word_count":23,"text":"<em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到 规则的启发,</em>","suggest":{"synonyms":[{"synonyms":["引导"],"keyword":"启发"}],"keyword":["感知器","训练算法","启发"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015758038411","author":"","university":"","source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f","reference":false,"similarScore":290.44885,"teacher":"","textWithDynamicClass":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar 59S120I8' onmouseover=\"highlightSetter('59S120I8',false)\" onmouseout=\"highlightSetter('59S120I8',true)\">这两个神经元之间的联系就会变得更强。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar'>这两个神经元之间的联系就会变得更强。</em>"}],"textWithDynamicClass":"当两个神经元在某种情况下经常进行交互时,<em class='similar T58I3' onmouseover=\"highlightSetter('T58I3',false)\" onmouseout=\"highlightSetter('T58I3',true)\">这两个神经元之间的互联关系便会得到加强,</em>","similar_word_count":19,"text":"当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>","suggest":{"synonyms":[],"keyword":["神经元","互联关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":127.33745,"teacher":"","textWithDynamicClass":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar 60S121I6' onmouseover=\"highlightSetter('60S121I6',false)\" onmouseout=\"highlightSetter('60S121I6',true)\">感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。<em class='similar 60S121I8' onmouseover=\"highlightSetter('60S121I8',false)\" onmouseout=\"highlightSetter('60S121I8',true)\">对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的","datatype":"webpage","clcs":[],"similarityPercentage":"54.1%","self":false,"text":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar'>感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。<em class='similar'>对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的"}],"textWithDynamicClass":"也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,<em class='similar T59I0' onmouseover=\"highlightSetter('T59I0',false)\" onmouseout=\"highlightSetter('T59I0',true)\">感知器每一次训练被送入一个训练样本,</em><em class='similar T59I1' onmouseover=\"highlightSetter('T59I1',false)\" onmouseout=\"highlightSetter('T59I1',true)\">同时每个训练样本进行预测。</em><em class='similar T59I2' onmouseover=\"highlightSetter('T59I2',false)\" onmouseout=\"highlightSetter('T59I2',true)\">从而对产生错误</em>","similar_word_count":36,"text":"也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em><em class='similar'>同时每个训练样本进行预测。</em><em class='similar'>从而对产生错误</em>","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["感知器","训练","送入","训练样本"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":198.70192,"teacher":"","textWithDynamicClass":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar 61S122I6' onmouseover=\"highlightSetter('61S122I6',false)\" onmouseout=\"highlightSetter('61S122I6',true)\">它会增强来自输入的连接权重,</em><em class='similar 61S122I7' onmouseover=\"highlightSetter('61S122I7',false)\" onmouseout=\"highlightSetter('61S122I7',true)\">这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更","datatype":"webpage","clcs":[],"similarityPercentage":"87.4%","self":false,"text":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar'>它会增强来自输入的连接权重,</em><em class='similar'>这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更"}],"textWithDynamicClass":"更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,<em class='similar T60I1' onmouseover=\"highlightSetter('T60I1',false)\" onmouseout=\"highlightSetter('T60I1',true)\">从而增强来自输入的连接权重,</em><em class='similar T60I2' onmouseover=\"highlightSetter('T60I2',false)\" onmouseout=\"highlightSetter('T60I2',true)\">这些神经元权重将有助于正确的预测,</em>","similar_word_count":29,"text":"更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>","suggest":{"synonyms":[],"keyword":["神经元","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":425.55875,"teacher":"","textWithDynamicClass":"-&gt;多层感知器多层感知器(MLP)<em class='similar 62S124I2' onmouseover=\"highlightSetter('62S124I2',false)\" onmouseout=\"highlightSetter('62S124I2',true)\">是由一个输入层、</em><em class='similar 62S124I3' onmouseover=\"highlightSetter('62S124I3',false)\" onmouseout=\"highlightSetter('62S124I3',true)\">一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。通常,","datatype":"webpage","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"-&gt;多层感知器多层感知器(MLP)<em class='similar'>是由一个输入层、</em><em class='similar'>一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。通常,"},{"profession":false,"keywords":[],"year":"","docid":"9000198071294011","author":"","university":"","source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784","reference":false,"similarScore":114.25439,"teacher":"","textWithDynamicClass":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar 62S125I8' onmouseover=\"highlightSetter('62S125I8',false)\" onmouseout=\"highlightSetter('62S125I8',true)\">MLP 由一个输入层,</em><em class='similar 62S125I9' onmouseover=\"highlightSetter('62S125I9',false)\" onmouseout=\"highlightSetter('62S125I9',true)\">一个或多个 TLU 层</em><em class='similar 62S125I10' onmouseover=\"highlightSetter('62S125I10',false)\" onmouseout=\"highlightSetter('62S125I10',true)\">(称为隐藏层)</em><em class='similar 62S125I11' onmouseover=\"highlightSetter('62S125I11',false)\" onmouseout=\"highlightSetter('62S125I11',true)\">和一个最后一层</em><em class='similar 62S125I12' onmouseover=\"highlightSetter('62S125I12',false)\" onmouseout=\"highlightSetter('62S125I12',true)\">(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神","datatype":"webpage","clcs":[],"similarityPercentage":"52.0%","self":false,"text":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar'>MLP 由一个输入层,</em><em class='similar'>一个或多个 TLU 层</em><em class='similar'>(称为隐藏层)</em><em class='similar'>和一个最后一层</em><em class='similar'>(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神"},{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":448.05078,"teacher":"","textWithDynamicClass":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar 62S123I6' onmouseover=\"highlightSetter('62S123I6',false)\" onmouseout=\"highlightSetter('62S123I6',true)\">输入层,</em><em class='similar 62S123I7' onmouseover=\"highlightSetter('62S123I7',false)\" onmouseout=\"highlightSetter('62S123I7',true)\">一层或多层TLU</em><em class='similar 62S123I8' onmouseover=\"highlightSetter('62S123I8',false)\" onmouseout=\"highlightSetter('62S123I8',true)\">(称为隐藏层)</em><em class='similar 62S123I9' onmouseover=\"highlightSetter('62S123I9',false)\" onmouseout=\"highlightSetter('62S123I9',true)\">和一个TLU的最后一层</em><em class='similar 62S123I10' onmouseover=\"highlightSetter('62S123I10',false)\" onmouseout=\"highlightSetter('62S123I10',true)\">(称为输出层)</em>组成(请参见图7)。靠近输入层的层通常称为较低层,","datatype":"webpage","clcs":[],"similarityPercentage":"49.5%","self":false,"text":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar'>输入层,</em><em class='similar'>一层或多层TLU</em><em class='similar'>(称为隐藏层)</em><em class='similar'>和一个TLU的最后一层</em><em class='similar'>(称为输出层)</em>组成(请参见图7)。靠近输入层的层通常称为较低层,"}],"textWithDynamicClass":"多层感知器也称深度人工神经网络,则是在上述感知器的基础上,<em class='similar T61I2' onmouseover=\"highlightSetter('T61I2',false)\" onmouseout=\"highlightSetter('T61I2',true)\">由一层输入层、</em><em class='similar T61I3' onmouseover=\"highlightSetter('T61I3',false)\" onmouseout=\"highlightSetter('T61I3',true)\">一层或多层TLU作为隐藏层和一层输出层组成。</em>","similar_word_count":25,"text":"多层感知器也称深度人工神经网络,则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU作为隐藏层和一层输出层组成。</em>","suggest":{"synonyms":[],"keyword":["一层","输入层","多层","隐藏层","输出层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":448.05078,"teacher":"","textWithDynamicClass":"(称为输出层)组成(请参见图7)<em class='similar 62S123I13' onmouseover=\"highlightSetter('62S123I13',false)\" onmouseout=\"highlightSetter('62S123I13',true)\">。靠近输入层的层通常称为较低层,</em><em class='similar 62S123I14' onmouseover=\"highlightSetter('62S123I14',false)\" onmouseout=\"highlightSetter('62S123I14',true)\">靠近输出层的层通常称为较高层。</em>除输出层外的每一层都包含一个偏置神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"71.4%","self":false,"text":"(称为输出层)组成(请参见图7)<em class='similar'>。靠近输入层的层通常称为较低层,</em><em class='similar'>靠近输出层的层通常称为较高层。</em>除输出层外的每一层都包含一个偏置神经元,"},{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":425.55875,"teacher":"","textWithDynamicClass":"一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络(ANN)。<em class='similar 62S124I5' onmouseover=\"highlightSetter('62S124I5',false)\" onmouseout=\"highlightSetter('62S124I5',true)\">通常,</em><em class='similar 62S124I6' onmouseover=\"highlightSetter('62S124I6',false)\" onmouseout=\"highlightSetter('62S124I6',true)\">靠近输入层的层称为较低层,</em><em class='similar 62S124I7' onmouseover=\"highlightSetter('62S124I7',false)\" onmouseout=\"highlightSetter('62S124I7',true)\">靠近输出层的层称为外层,</em>除输出层外的每一层都包含一个偏置神经元,","datatype":"webpage","clcs":[],"similarityPercentage":"69.4%","self":false,"text":"一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络(ANN)。<em class='similar'>通常,</em><em class='similar'>靠近输入层的层称为较低层,</em><em class='similar'>靠近输出层的层称为外层,</em>除输出层外的每一层都包含一个偏置神经元,"},{"profession":false,"keywords":[],"year":"","docid":"9000182703986211","author":"","university":"","source":"网页","title":"这20个技巧让你的NN训练事半功倍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621470205&ver=3079&signature=kw5RCVbl5EU17CBuWzJ1GLX7ffFaX34*2jH6iqJWKgPBjfkWbCORV83fl6L-ioLwhlQuul6zWvRzvZM8PS6lZHOvpD2HGS-OevDm0JNIkSMT*MgOZXSwHLjq*goZTWbI&new=1","reference":false,"similarScore":81.666664,"teacher":"","textWithDynamicClass":"opout可以删除那些相关的功能,并防止网络过度拟合。注意:<em class='similar 62S126I5' onmouseover=\"highlightSetter('62S126I5',false)\" onmouseout=\"highlightSetter('62S126I5',true)\">它主要用于较低层</em><em class='similar 62S126I6' onmouseover=\"highlightSetter('62S126I6',false)\" onmouseout=\"highlightSetter('62S126I6',true)\">(靠近输入)</em><em class='similar 62S126I7' onmouseover=\"highlightSetter('62S126I7',false)\" onmouseout=\"highlightSetter('62S126I7',true)\">而不是较高层</em><em class='similar 62S126I8' onmouseover=\"highlightSetter('62S126I8',false)\" onmouseout=\"highlightSetter('62S126I8',true)\">(靠近输出)</em>。5、经典思路,先过拟合,再正则化,模型只有拥有足","datatype":"webpage","clcs":[],"similarityPercentage":"57.7%","self":false,"text":"opout可以删除那些相关的功能,并防止网络过度拟合。注意:<em class='similar'>它主要用于较低层</em><em class='similar'>(靠近输入)</em><em class='similar'>而不是较高层</em><em class='similar'>(靠近输出)</em>。5、经典思路,先过拟合,再正则化,模型只有拥有足"}],"textWithDynamicClass":"由一层输入层、一层或多层TLU作为隐藏层和一层输出层组成。<em class='similar T61I4' onmouseover=\"highlightSetter('T61I4',false)\" onmouseout=\"highlightSetter('T61I4',true)\">靠近输入层级常称为较低层,</em><em class='similar T61I5' onmouseover=\"highlightSetter('T61I5',false)\" onmouseout=\"highlightSetter('T61I5',true)\">靠近输出的层通常为较高层。</em>","similar_word_count":24,"text":"由一层输入层、一层或多层TLU作为隐藏层和一层输出层组成。<em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em>","suggest":{"synonyms":[{"synonyms":["靠拢"],"keyword":"靠近"}],"keyword":["输入层","靠近","层级","低层","高层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":425.55875,"teacher":"","textWithDynamicClass":"靠近输出层的层称为外层,<em class='similar 62S124I8' onmouseover=\"highlightSetter('62S124I8',false)\" onmouseout=\"highlightSetter('62S124I8',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 62S124I9' onmouseover=\"highlightSetter('62S124I9',false)\" onmouseout=\"highlightSetter('62S124I9',true)\">并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神","datatype":"webpage","clcs":[],"similarityPercentage":"64.8%","self":false,"text":"靠近输出层的层称为外层,<em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神"},{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":448.05078,"teacher":"","textWithDynamicClass":"靠近输出层的层通常称为较高层。<em class='similar 62S123I15' onmouseover=\"highlightSetter('62S123I15',false)\" onmouseout=\"highlightSetter('62S123I15',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 62S123I16' onmouseover=\"highlightSetter('62S123I16',false)\" onmouseout=\"highlightSetter('62S123I16',true)\">并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层","datatype":"webpage","clcs":[],"similarityPercentage":"63.2%","self":false,"text":"靠近输出层的层通常称为较高层。<em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层"}],"textWithDynamicClass":"靠近输入层级常称为较低层,靠近输出的层通常为较高层。<em class='similar T61I6' onmouseover=\"highlightSetter('T61I6',false)\" onmouseout=\"highlightSetter('T61I6',true)\">每一层都拥有一个偏置神经元并全接至下一层神经元。</em>","similar_word_count":23,"text":"靠近输入层级常称为较低层,靠近输出的层通常为较高层。<em class='similar'>每一层都拥有一个偏置神经元并全接至下一层神经元。</em>","suggest":{"synonyms":[],"keyword":["一层","偏置","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":575.8405,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。<em class='similar 63S128I1' onmouseover=\"highlightSetter('63S128I1',false)\" onmouseout=\"highlightSetter('63S128I1',true)\">常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar 63S128I2' onmouseover=\"highlightSetter('63S128I2',false)\" onmouseout=\"highlightSetter('63S128I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar 63S128I3' onmouseover=\"highlightSetter('63S128I3',false)\" onmouseout=\"highlightSetter('63S128I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 63S128I4' onmouseover=\"highlightSetter('63S128I4',false)\" onmouseout=\"highlightSetter('63S128I4',true)\">也不存在跨层相互连接。</em><em class='similar 63S128I5' onmouseover=\"highlightSetter('63S128I5',false)\" onmouseout=\"highlightSetter('63S128I5',true)\">这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar 63S128I6' onmouseover=\"highlightSetter('63S128I6',false)\" onmouseout=\"highlightSetter('63S128I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 63S128I7' onmouseover=\"highlightSetter('63S128I7',false)\" onmouseout=\"highlightSetter('63S128I7',true)\">隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar 63S128I10' onmouseover=\"highlightSetter('63S128I10',false)\" onmouseout=\"highlightSetter('63S128I10',true)\">输入层神经元只负责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"5.5%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。<em class='similar'>常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em><em class='similar'>这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"}],"textWithDynamicClass":"<em class='similar T62I0' onmouseover=\"highlightSetter('T62I0',false)\" onmouseout=\"highlightSetter('T62I0',true)\">常见的多层感知机的网络结构是如图2.27所示的多层级结构,</em>","similar_word_count":26,"text":"<em class='similar'>常见的多层感知机的网络结构是如图2.27所示的多层级结构,</em>","suggest":{"synonyms":[],"keyword":["多层感知机","网络结构","2.27所","层级结构"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":315.9511,"teacher":"","textWithDynamicClass":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar 63S127I6' onmouseover=\"highlightSetter('63S127I6',false)\" onmouseout=\"highlightSetter('63S127I6',true)\">常见的一种是每层神经元与下一层神经元全互连,</em>神经元之间不存在同层连接,","datatype":"webpage","clcs":[],"similarityPercentage":"68.3%","self":false,"text":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar'>常见的一种是每层神经元与下一层神经元全互连,</em>神经元之间不存在同层连接,"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":575.8405,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。常见的多层前馈神经网络结构如图2.3所示。<em class='similar 63S128I2' onmouseover=\"highlightSetter('63S128I2',false)\" onmouseout=\"highlightSetter('63S128I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em>神经元之间不存在同层相互连接,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"52.8%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。常见的多层前馈神经网络结构如图2.3所示。<em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em>神经元之间不存在同层相互连接,"},{"profession":false,"keywords":[],"year":"","docid":"9000104784138911","author":"","university":"","source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html","reference":false,"similarScore":235.95108,"teacher":"","textWithDynamicClass":"有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,<em class='similar 63S129I4' onmouseover=\"highlightSetter('63S129I4',false)\" onmouseout=\"highlightSetter('63S129I4',true)\">层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar 63S129I5' onmouseover=\"highlightSetter('63S129I5',false)\" onmouseout=\"highlightSetter('63S129I5',true)\">同层的神经元之间不存在连接,</em>不同层的神经元不存在跨层的连接。","datatype":"webpage","clcs":[],"similarityPercentage":"52.0%","self":false,"text":"有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,<em class='similar'>层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar'>同层的神经元之间不存在连接,</em>不同层的神经元不存在跨层的连接。"},{"profession":false,"keywords":[],"year":"","docid":"9000121493694611","author":"","university":"","source":"网页","title":"人工神经网络与案例推理技术相结合用于故障诊断 - 豆丁网","url":"http://www.docin.com/p-898412490.html","reference":false,"similarScore":168.92447,"teacher":"","textWithDynamicClass":"隐含层)和输出层组成,隐含层可以由若干层组成。在这种网络中,<em class='similar 63S130I7' onmouseover=\"highlightSetter('63S130I7',false)\" onmouseout=\"highlightSetter('63S130I7',true)\">每一层的神经元只接受前一层神经元的输出,</em>并输出给下一层,<em class='similar 63S130I9' onmouseover=\"highlightSetter('63S130I9',false)\" onmouseout=\"highlightSetter('63S130I9',true)\">同层神经元之间没有连接;</em><em class='similar 63S130I10' onmouseover=\"highlightSetter('63S130I10',false)\" onmouseout=\"highlightSetter('63S130I10',true)\">层内神经元相互之间有连接的分层网络;</em>有反馈连接的分层网络。21互联网络模型这是一种在任","datatype":"webpage","clcs":[],"similarityPercentage":"50.6%","self":false,"text":"隐含层)和输出层组成,隐含层可以由若干层组成。在这种网络中,<em class='similar'>每一层的神经元只接受前一层神经元的输出,</em>并输出给下一层,<em class='similar'>同层神经元之间没有连接;</em><em class='similar'>层内神经元相互之间有连接的分层网络;</em>有反馈连接的分层网络。21互联网络模型这是一种在任"}],"textWithDynamicClass":"常见的多层感知机的网络结构是如图2.27所示的多层级结构,<em class='similar T62I1' onmouseover=\"highlightSetter('T62I1',false)\" onmouseout=\"highlightSetter('T62I1',true)\">每层的单个神经元与下一层神经元之间实现全部连接,</em>","similar_word_count":23,"text":"常见的多层感知机的网络结构是如图2.27所示的多层级结构,<em class='similar'>每层的单个神经元与下一层神经元之间实现全部连接,</em>","suggest":{"synonyms":[],"keyword":["单个","神经元","一层"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000189185320311","author":"","university":"","source":"网页","title":"基于深度神经网络的单通道语音分离技术及研究","url":"http://www.doc88.com/p%2D6748734074002.html","reference":false,"similarScore":166.8421,"teacher":"","textWithDynamicClass":"玻尔兹曼机(RBM)是一种随机神经网络,包含可视层和隐藏层,<em class='similar 63S131I8' onmouseover=\"highlightSetter('63S131I8',false)\" onmouseout=\"highlightSetter('63S131I8',true)\">同一层的神经元相互之间是独立的,</em><em class='similar 63S131I9' onmouseover=\"highlightSetter('63S131I9',false)\" onmouseout=\"highlightSetter('63S131I9',true)\">而不同层之间的神经元是相互连接的,</em>在网络进行训练以及使用时信息会在两个方向进行流动。","datatype":"webpage","clcs":[],"similarityPercentage":"68.7%","self":false,"text":"玻尔兹曼机(RBM)是一种随机神经网络,包含可视层和隐藏层,<em class='similar'>同一层的神经元相互之间是独立的,</em><em class='similar'>而不同层之间的神经元是相互连接的,</em>在网络进行训练以及使用时信息会在两个方向进行流动。"},{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":315.9511,"teacher":"","textWithDynamicClass":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,常见的一种是每层神经元与下一层神经元全互连,<em class='similar 63S127I7' onmouseover=\"highlightSetter('63S127I7',false)\" onmouseout=\"highlightSetter('63S127I7',true)\">神经元之间不存在同层连接,</em><em class='similar 63S127I8' onmouseover=\"highlightSetter('63S127I8',false)\" onmouseout=\"highlightSetter('63S127I8',true)\">也不存在跨层链接,</em>这样的结构通常称为\"多层前馈神经网络\",","datatype":"webpage","clcs":[],"similarityPercentage":"67.7%","self":false,"text":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,常见的一种是每层神经元与下一层神经元全互连,<em class='similar'>神经元之间不存在同层连接,</em><em class='similar'>也不存在跨层链接,</em>这样的结构通常称为\"多层前馈神经网络\","},{"profession":false,"keywords":[],"year":"","docid":"9000104784138911","author":"","university":"","source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html","reference":false,"similarScore":235.95108,"teacher":"","textWithDynamicClass":"有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,层级结构表示每层的神经元都与下一层的神经元相互连接,<em class='similar 63S129I5' onmouseover=\"highlightSetter('63S129I5',false)\" onmouseout=\"highlightSetter('63S129I5',true)\">同层的神经元之间不存在连接,</em><em class='similar 63S129I6' onmouseover=\"highlightSetter('63S129I6',false)\" onmouseout=\"highlightSetter('63S129I6',true)\">不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏","datatype":"webpage","clcs":[],"similarityPercentage":"62.1%","self":false,"text":"有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,层级结构表示每层的神经元都与下一层的神经元相互连接,<em class='similar'>同层的神经元之间不存在连接,</em><em class='similar'>不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":575.8405,"teacher":"","textWithDynamicClass":"图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,<em class='similar 63S128I3' onmouseover=\"highlightSetter('63S128I3',false)\" onmouseout=\"highlightSetter('63S128I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 63S128I4' onmouseover=\"highlightSetter('63S128I4',false)\" onmouseout=\"highlightSetter('63S128I4',true)\">也不存在跨层相互连接。</em>这样的神经网络通常被称为\"多层前馈神经网络\"。","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"61.7%","self":false,"text":"图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,<em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em>这样的神经网络通常被称为\"多层前馈神经网络\"。"},{"profession":false,"keywords":[],"year":"","docid":"9000121493694611","author":"","university":"","source":"网页","title":"人工神经网络与案例推理技术相结合用于故障诊断 - 豆丁网","url":"http://www.docin.com/p-898412490.html","reference":false,"similarScore":168.92447,"teacher":"","textWithDynamicClass":"隐含层)和输出层组成,隐含层可以由若干层组成。在这种网络中,每一层的神经元只接受前一层神经元的输出,并输出给下一层,<em class='similar 63S130I9' onmouseover=\"highlightSetter('63S130I9',false)\" onmouseout=\"highlightSetter('63S130I9',true)\">同层神经元之间没有连接;</em><em class='similar 63S130I10' onmouseover=\"highlightSetter('63S130I10',false)\" onmouseout=\"highlightSetter('63S130I10',true)\">层内神经元相互之间有连接的分层网络;</em>有反馈连接的分层网络。21互联网络模型这是一种在任","datatype":"webpage","clcs":[],"similarityPercentage":"55.6%","self":false,"text":"隐含层)和输出层组成,隐含层可以由若干层组成。在这种网络中,每一层的神经元只接受前一层神经元的输出,并输出给下一层,<em class='similar'>同层神经元之间没有连接;</em><em class='similar'>层内神经元相互之间有连接的分层网络;</em>有反馈连接的分层网络。21互联网络模型这是一种在任"}],"textWithDynamicClass":"每层的单个神经元与下一层神经元之间实现全部连接,<em class='similar T62I2' onmouseover=\"highlightSetter('T62I2',false)\" onmouseout=\"highlightSetter('T62I2',true)\">同层的神经元间也不会出现相互之间的连接,</em><em class='similar T62I3' onmouseover=\"highlightSetter('T62I3',false)\" onmouseout=\"highlightSetter('T62I3',true)\">跨层的神将元之间也不存在连接关系。</em>","similar_word_count":35,"text":"每层的单个神经元与下一层神经元之间实现全部连接,<em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em>","suggest":{"synonyms":[],"keyword":["神经元","同层","相互之间","跨层","连接关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":315.9511,"teacher":"","textWithDynamicClass":"也不存在跨层链接,<em class='similar 63S127I9' onmouseover=\"highlightSetter('63S127I9',false)\" onmouseout=\"highlightSetter('63S127I9',true)\">这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而","datatype":"webpage","clcs":[],"similarityPercentage":"75.3%","self":false,"text":"也不存在跨层链接,<em class='similar'>这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而"},{"profession":false,"keywords":[],"year":"","docid":"9000207992963011","author":"","university":"","source":"网页","title":"基于BP神经网络的煤矿配电网故障测距研究","url":"http://wenku.baidu.com/view/0057c0e0667d27284b73f242336c1eb91b3733f6.html","reference":false,"similarScore":45.000004,"teacher":"","textWithDynamicClass":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar 63S132I8' onmouseover=\"highlightSetter('63S132I8',false)\" onmouseout=\"highlightSetter('63S132I8',true)\">是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。","datatype":"webpage","clcs":[],"similarityPercentage":"64.0%","self":false,"text":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar'>是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":575.8405,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。<em class='similar 63S128I1' onmouseover=\"highlightSetter('63S128I1',false)\" onmouseout=\"highlightSetter('63S128I1',true)\">常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar 63S128I2' onmouseover=\"highlightSetter('63S128I2',false)\" onmouseout=\"highlightSetter('63S128I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar 63S128I3' onmouseover=\"highlightSetter('63S128I3',false)\" onmouseout=\"highlightSetter('63S128I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 63S128I4' onmouseover=\"highlightSetter('63S128I4',false)\" onmouseout=\"highlightSetter('63S128I4',true)\">也不存在跨层相互连接。</em><em class='similar 63S128I5' onmouseover=\"highlightSetter('63S128I5',false)\" onmouseout=\"highlightSetter('63S128I5',true)\">这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar 63S128I6' onmouseover=\"highlightSetter('63S128I6',false)\" onmouseout=\"highlightSetter('63S128I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 63S128I7' onmouseover=\"highlightSetter('63S128I7',false)\" onmouseout=\"highlightSetter('63S128I7',true)\">隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar 63S128I10' onmouseover=\"highlightSetter('63S128I10',false)\" onmouseout=\"highlightSetter('63S128I10',true)\">输入层神经元只负责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"56.7%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。<em class='similar'>常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em><em class='similar'>这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"}],"textWithDynamicClass":"同层的神经元间也不会出现相互之间的连接,跨层的神将元之间也不存在连接关系。<em class='similar T62I4' onmouseover=\"highlightSetter('T62I4',false)\" onmouseout=\"highlightSetter('T62I4',true)\">这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>","similar_word_count":18,"text":"同层的神经元间也不会出现相互之间的连接,跨层的神将元之间也不存在连接关系。<em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>","suggest":{"synonyms":[],"keyword":["网络结构","多层前馈神经网络"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":575.8405,"teacher":"","textWithDynamicClass":"这样的神经网络通常被称为\"多层前馈神经网络\"。<em class='similar 63S128I6' onmouseover=\"highlightSetter('63S128I6',false)\" onmouseout=\"highlightSetter('63S128I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 63S128I7' onmouseover=\"highlightSetter('63S128I7',false)\" onmouseout=\"highlightSetter('63S128I7',true)\">隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar 63S128I10' onmouseover=\"highlightSetter('63S128I10',false)\" onmouseout=\"highlightSetter('63S128I10',true)\">输入层神经元只负责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.4%","self":false,"text":"这样的神经网络通常被称为\"多层前馈神经网络\"。<em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"}],"textWithDynamicClass":"即多层感知器,<em class='similar T62I6' onmouseover=\"highlightSetter('T62I6',false)\" onmouseout=\"highlightSetter('T62I6',true)\">其中输入层神经元用以输入外部输入,</em><em class='similar T62I7' onmouseover=\"highlightSetter('T62I7',false)\" onmouseout=\"highlightSetter('T62I7',true)\">隐藏层和输出层用以处理神经信号,</em>","similar_word_count":31,"text":"即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em>","suggest":{"synonyms":[],"keyword":["神经元","输入层","用以","外部输入","隐藏层","输出层","神经信号"]}},{"sources":[{"profession":false,"keywords":[],"year":"2020","docid":"1000029294544411","author":"赵海涛；程慧玲；丁仪；张晖；朱洪波","university":"教育部泛在网络健康服务系统工程研究中心\r\n                        江苏省无线通信重点实验室\r\n                        南京邮电大学通信与信息工程学院","source":"电子与信息学报","title":"基于深度学习的车联边缘网络交通事故风险预测算法研究","url":"","reference":false,"similarScore":124.5238,"teacher":"","textWithDynamicClass":"经网络的基本计算单元为神经元。两层功能神经元组成一层感知层,感知层的输入层用于接收外界输入信号,<em class='similar 64S133I7' onmouseover=\"highlightSetter('64S133I7',false)\" onmouseout=\"highlightSetter('64S133I7',true)\">输出层输出预测结果。</em>输入层具有3个神经元的感知机建模如图1所示。感知机","datatype":"journal","clcs":["TP399"],"similarityPercentage":"80.2%","self":false,"text":"经网络的基本计算单元为神经元。两层功能神经元组成一层感知层,感知层的输入层用于接收外界输入信号,<em class='similar'>输出层输出预测结果。</em>输入层具有3个神经元的感知机建模如图1所示。感知机"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000497294611","author":"刘芳","university":"","source":"大学生论文联合库","title":"基于program的电力系统软件设计与实现","url":"","reference":false,"similarScore":114.09523,"teacher":"","textWithDynamicClass":"连接的方式,但是神经元之间不存在同层或者跨层的的连接。其中,输入层的神经元接收外界的输入,隐藏层以及输出层进行运算、处理(通过权重和阈值表示运算关系)<em class='similar 64S136I10' onmouseover=\"highlightSetter('64S136I10',false)\" onmouseout=\"highlightSetter('64S136I10',true)\">,最后由输出层输出最终结果。</em>通过修改权重,MLP可以学会多种函数,实际上,具有","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"77.2%","self":false,"text":"连接的方式,但是神经元之间不存在同层或者跨层的的连接。其中,输入层的神经元接收外界的输入,隐藏层以及输出层进行运算、处理(通过权重和阈值表示运算关系)<em class='similar'>,最后由输出层输出最终结果。</em>通过修改权重,MLP可以学会多种函数,实际上,具有"}],"textWithDynamicClass":"即多层感知器,其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,<em class='similar T63I0' onmouseover=\"highlightSetter('T63I0',false)\" onmouseout=\"highlightSetter('T63I0',true)\">最终结果由输出层输出预测结果;</em>","similar_word_count":14,"text":"即多层感知器,其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,<em class='similar'>最终结果由输出层输出预测结果;</em>","suggest":{"synonyms":[],"keyword":["输出层","预测结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"2020","docid":"1000029294544411","author":"赵海涛；程慧玲；丁仪；张晖；朱洪波","university":"教育部泛在网络健康服务系统工程研究中心\r\n                        江苏省无线通信重点实验室\r\n                        南京邮电大学通信与信息工程学院","source":"电子与信息学报","title":"基于深度学习的车联边缘网络交通事故风险预测算法研究","url":"","reference":false,"similarScore":124.5238,"teacher":"","textWithDynamicClass":"经网络的基本计算单元为神经元。两层功能神经元组成一层感知层,<em class='similar 64S133I6' onmouseover=\"highlightSetter('64S133I6',false)\" onmouseout=\"highlightSetter('64S133I6',true)\">感知层的输入层用于接收外界输入信号,</em>输出层输出预测结果。","datatype":"journal","clcs":["TP399"],"similarityPercentage":"69.2%","self":false,"text":"经网络的基本计算单元为神经元。两层功能神经元组成一层感知层,<em class='similar'>感知层的输入层用于接收外界输入信号,</em>输出层输出预测结果。"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000497294611","author":"刘芳","university":"","source":"大学生论文联合库","title":"基于program的电力系统软件设计与实现","url":"","reference":false,"similarScore":114.09523,"teacher":"","textWithDynamicClass":"连接的方式,但是神经元之间不存在同层或者跨层的的连接。其中,<em class='similar 64S136I6' onmouseover=\"highlightSetter('64S136I6',false)\" onmouseout=\"highlightSetter('64S136I6',true)\">输入层的神经元接收外界的输入,</em>隐藏层以及输出层进行运算、处理(通过权重和阈值表示运算关系),最后由输出层输出最终结果。","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"65.6%","self":false,"text":"连接的方式,但是神经元之间不存在同层或者跨层的的连接。其中,<em class='similar'>输入层的神经元接收外界的输入,</em>隐藏层以及输出层进行运算、处理(通过权重和阈值表示运算关系),最后由输出层输出最终结果。"},{"profession":false,"keywords":[],"year":"","docid":"9000143376093611","author":"","university":"","source":"网页","title":"深度学习技术的发展与应用","url":"https://wenku.baidu.com/view/27aefaa80aa1284ac850ad02de80d4d8d15a01b9","reference":false,"similarScore":66.666664,"teacher":"","textWithDynamicClass":"一种连接方式包括三层,分别为:输入层、隐藏层和输出层。其中,<em class='similar 64S137I8' onmouseover=\"highlightSetter('64S137I8',false)\" onmouseout=\"highlightSetter('64S137I8',true)\">输入层的各神经元用于接收输入信号,</em>并传输到隐藏层的各神经元,之后隐藏层中的神经元通过","datatype":"webpage","clcs":[],"similarityPercentage":"64.5%","self":false,"text":"一种连接方式包括三层,分别为:输入层、隐藏层和输出层。其中,<em class='similar'>输入层的各神经元用于接收输入信号,</em>并传输到隐藏层的各神经元,之后隐藏层中的神经元通过"},{"profession":false,"keywords":[],"year":"","docid":"9000134130400211","author":"","university":"","source":"网页","title":"深度学习入门整理学习（二）_joker-smart的博客-CSDN博客","url":"https://blog.csdn.net/qq_42746595/article/details/104074152","reference":false,"similarScore":181.8772,"teacher":"","textWithDynamicClass":",同层神经元之间无连接,上层与下层实现全连接,但无跨层连接。<em class='similar 64S134I6' onmouseover=\"highlightSetter('64S134I6',false)\" onmouseout=\"highlightSetter('64S134I6',true)\">输入层只负责接收信号输入,</em>无数据处理功能,隐藏层和输出层是由具有信号处理功能的神经元组成。<em class='similar 64S134I9' onmouseover=\"highlightSetter('64S134I9',false)\" onmouseout=\"highlightSetter('64S134I9',true)\">神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们","datatype":"webpage","clcs":[],"similarityPercentage":"51.0%","self":false,"text":",同层神经元之间无连接,上层与下层实现全连接,但无跨层连接。<em class='similar'>输入层只负责接收信号输入,</em>无数据处理功能,隐藏层和输出层是由具有信号处理功能的神经元组成。<em class='similar'>神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们"}],"textWithDynamicClass":"换句话说,<em class='similar T63I2' onmouseover=\"highlightSetter('T63I2',false)\" onmouseout=\"highlightSetter('T63I2',true)\">输入层只用于接收样本数据的输入,</em><em class='similar T63I3' onmouseover=\"highlightSetter('T63I3',false)\" onmouseout=\"highlightSetter('T63I3',true)\">隐藏层和输出层包含函数神经元来对输入的数据进行学习。</em><em class='similar T63I4' onmouseover=\"highlightSetter('T63I4',false)\" onmouseout=\"highlightSetter('T63I4',true)\">神经网络的学习过程是根据训</em>","similar_word_count":53,"text":"换句话说,<em class='similar'>输入层只用于接收样本数据的输入,</em><em class='similar'>隐藏层和输出层包含函数神经元来对输入的数据进行学习。</em><em class='similar'>神经网络的学习过程是根据训</em>","suggest":{"synonyms":[],"keyword":["输出层","输入层","样本数据","隐藏层","神经元","神经网络","学习过程"]}},{"sources":[{"profession":false,"keywords":[],"year":"2021","docid":"1000030899951411","author":"韩璐；宋海亮；宋佳；刘太豪","university":"西南石油大学电气信息学院,四川 成都610500；","source":"南昌大学学报（工科版）","title":"基于特征提取的FA-BP短期光伏发电预测","url":"","reference":false,"similarScore":208.33331,"teacher":"","textWithDynamicClass":"网络模型的方法对光伏发电进行功率预测研究。就非线性系统而言,<em class='similar 65S138I3' onmouseover=\"highlightSetter('65S138I3',false)\" onmouseout=\"highlightSetter('65S138I3',true)\">使用 BP 神经网络能够很好地调整系统内各神经元之间的权重值。</em><em class='similar 65S138I4' onmouseover=\"highlightSetter('65S138I4',false)\" onmouseout=\"highlightSetter('65S138I4',true)\"> BP 神经网络是一种能够以样本的输入和目标的输出为依据来初始化其权值和阈值,</em>并进行网络训练的多层前馈型神经网络。 BP 神经网","datatype":"journal","clcs":["TM615"],"similarityPercentage":"46.3%","self":false,"text":"网络模型的方法对光伏发电进行功率预测研究。就非线性系统而言,<em class='similar'>使用 BP 神经网络能够很好地调整系统内各神经元之间的权重值。</em><em class='similar'> BP 神经网络是一种能够以样本的输入和目标的输出为依据来初始化其权值和阈值,</em>并进行网络训练的多层前馈型神经网络。 BP 神经网"}],"textWithDynamicClass":"隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,输入层只用于接收样本数据的输入,隐藏层和输出层包含函数神经元来对输入的数据进行学习。神经网络的学习过程是根据训<em class='similar T64I0' onmouseover=\"highlightSetter('T64I0',false)\" onmouseout=\"highlightSetter('T64I0',true)\">练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>","similar_word_count":30,"text":"隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,输入层只用于接收样本数据的输入,隐藏层和输出层包含函数神经元来对输入的数据进行学习。神经网络的学习过程是根据训<em class='similar'>练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>","suggest":{"synonyms":[],"keyword":["神经元","权重值","阈值","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000696980311","author":"张甜甜","university":"","source":"大学生论文联合库","title":"无偏估计量的定义","url":"","reference":false,"similarScore":201.66663,"teacher":"","textWithDynamicClass":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar 66S140I8' onmouseover=\"highlightSetter('66S140I8',false)\" onmouseout=\"highlightSetter('66S140I8',true)\">均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此时用均方误差评价点估计与用","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"95.7%","self":false,"text":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar'>均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此时用均方误差评价点估计与用"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023576188911","author":"赵喜林，李德宜，龚谊承主编","university":"","source":"","title":"应用数理统计","url":"","reference":false,"similarScore":183.74998,"teacher":"","textWithDynamicClass":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar 66S141I17' onmouseover=\"highlightSetter('66S141I17',false)\" onmouseout=\"highlightSetter('66S141I17',true)\">均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误","datatype":"book","clcs":[],"similarityPercentage":"93.5%","self":false,"text":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar'>均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误"}],"textWithDynamicClass":"式(2-11)说明,<em class='similar T65I2' onmouseover=\"highlightSetter('T65I2',false)\" onmouseout=\"highlightSetter('T65I2',true)\">均方误差 由点估计的方差 与偏差 的和的平方两部分组成。</em>","similar_word_count":24,"text":"式(2-11)说明,<em class='similar'>均方误差 由点估计的方差 与偏差 的和的平方两部分组成。</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["均方误差","点估计","方差","偏差","平方"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000531686611","author":"南夷非","university":"","source":"大学生论文联合库","title":"图像处理技术","url":"","reference":false,"similarScore":700.1182,"teacher":"","textWithDynamicClass":"示:(3-17)我们将利用上述原理在第四章进行结果分析。2)<em class='similar 67S145I4' onmouseover=\"highlightSetter('67S145I4',false)\" onmouseout=\"highlightSetter('67S145I4',true)\">均方根误差均方根误差</em>(RMSE)<em class='similar 67S145I6' onmouseover=\"highlightSetter('67S145I6',false)\" onmouseout=\"highlightSetter('67S145I6',true)\">是观测值与真值偏差的平方和观测次数n比值的平方根,</em>在实际测量中,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"84.1%","self":false,"text":"示:(3-17)我们将利用上述原理在第四章进行结果分析。2)<em class='similar'>均方根误差均方根误差</em>(RMSE)<em class='similar'>是观测值与真值偏差的平方和观测次数n比值的平方根,</em>在实际测量中,"},{"profession":false,"keywords":[],"year":"","docid":"9000015110431211","author":"","university":"","source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881","reference":false,"similarScore":410.33328,"teacher":"","textWithDynamicClass":")也称作为效值,它的计算方法是先平方、再平均、然后开方。2、<em class='similar 67S146I7' onmouseover=\"highlightSetter('67S146I7',false)\" onmouseout=\"highlightSetter('67S146I7',true)\">均方根误差,</em><em class='similar 67S146I8' onmouseover=\"highlightSetter('67S146I8',false)\" onmouseout=\"highlightSetter('67S146I8',true)\">它是观测值与真值偏差的平方和观测次数n比值的平方根,</em>在实际测量中,","datatype":"webpage","clcs":[],"similarityPercentage":"74.1%","self":false,"text":")也称作为效值,它的计算方法是先平方、再平均、然后开方。2、<em class='similar'>均方根误差,</em><em class='similar'>它是观测值与真值偏差的平方和观测次数n比值的平方根,</em>在实际测量中,"},{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":777.3533,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar 67S143I1' onmouseover=\"highlightSetter('67S143I1',false)\" onmouseout=\"highlightSetter('67S143I1',true)\">标准误差</em><em class='similar 67S143I2' onmouseover=\"highlightSetter('67S143I2',false)\" onmouseout=\"highlightSetter('67S143I2',true)\">(又称均方根误差)</em><em class='similar 67S143I3' onmouseover=\"highlightSetter('67S143I3',false)\" onmouseout=\"highlightSetter('67S143I3',true)\">它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em><em class='similar 67S143I4' onmouseover=\"highlightSetter('67S143I4',false)\" onmouseout=\"highlightSetter('67S143I4',true)\">在实际测量中,</em><em class='similar 67S143I5' onmouseover=\"highlightSetter('67S143I5',false)\" onmouseout=\"highlightSetter('67S143I5',true)\">观测次数 n 总是有限的,</em><em class='similar 67S143I6' onmouseover=\"highlightSetter('67S143I6',false)\" onmouseout=\"highlightSetter('67S143I6',true)\">真值只能用最可信赖</em><em class='similar 67S143I7' onmouseover=\"highlightSetter('67S143I7',false)\" onmouseout=\"highlightSetter('67S143I7',true)\">(最佳)</em><em class='similar 67S143I8' onmouseover=\"highlightSetter('67S143I8',false)\" onmouseout=\"highlightSetter('67S143I8',true)\">值来代替.</em><em class='similar 67S143I9' onmouseover=\"highlightSetter('67S143I9',false)\" onmouseout=\"highlightSetter('67S143I9',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar 67S143I10' onmouseover=\"highlightSetter('67S143I10',false)\" onmouseout=\"highlightSetter('67S143I10',true)\">所以,</em><em class='similar 67S143I11' onmouseover=\"highlightSetter('67S143I11',false)\" onmouseout=\"highlightSetter('67S143I11',true)\">标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的","datatype":"webpage","clcs":[],"similarityPercentage":"65.5%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar'>标准误差</em><em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数 n 总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em><em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的"},{"profession":false,"keywords":[],"year":"","docid":"9000188062025211","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html","reference":false,"similarScore":527.1804,"teacher":"","textWithDynamicClass":"值属于粗大误差应予剔除。标准差与标准误差是什么关系标准误差<em class='similar 67S142I2' onmouseover=\"highlightSetter('67S142I2',false)\" onmouseout=\"highlightSetter('67S142I2',true)\">(又称均方根误差)</em><em class='similar 67S142I3' onmouseover=\"highlightSetter('67S142I3',false)\" onmouseout=\"highlightSetter('67S142I3',true)\">它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖</em><em class='similar 67S142I4' onmouseover=\"highlightSetter('67S142I4',false)\" onmouseout=\"highlightSetter('67S142I4',true)\">(最佳)</em><em class='similar 67S142I5' onmouseover=\"highlightSetter('67S142I5',false)\" onmouseout=\"highlightSetter('67S142I5',true)\">值来代替.</em><em class='similar 67S142I6' onmouseover=\"highlightSetter('67S142I6',false)\" onmouseout=\"highlightSetter('67S142I6',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。<em class='similar 67S142I8' onmouseover=\"highlightSetter('67S142I8',false)\" onmouseout=\"highlightSetter('67S142I8',true)\">标准误差</em><em class='similar 67S142I9' onmouseover=\"highlightSetter('67S142I9',false)\" onmouseout=\"highlightSetter('67S142I9',true)\">(均方误差)</em>在相同测量条件下进行的测量称为等精度测量例如在同","datatype":"webpage","clcs":[],"similarityPercentage":"58.8%","self":false,"text":"值属于粗大误差应予剔除。标准差与标准误差是什么关系标准误差<em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em><em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。<em class='similar'>标准误差</em><em class='similar'>(均方误差)</em>在相同测量条件下进行的测量称为等精度测量例如在同"},{"profession":false,"keywords":[],"year":"","docid":"9000189662307611","author":"","university":"","source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html","reference":false,"similarScore":441.48993,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar 67S144I1' onmouseover=\"highlightSetter('67S144I1',false)\" onmouseout=\"highlightSetter('67S144I1',true)\">标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。","datatype":"webpage","clcs":[],"similarityPercentage":"45.4%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar'>标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。"}],"textWithDynamicClass":"<em class='similar T66I0' onmouseover=\"highlightSetter('T66I0',false)\" onmouseout=\"highlightSetter('T66I0',true)\">均方根误差,</em><em class='similar T66I1' onmouseover=\"highlightSetter('T66I1',false)\" onmouseout=\"highlightSetter('T66I1',true)\">也称做标准误差,</em><em class='similar T66I2' onmouseover=\"highlightSetter('T66I2',false)\" onmouseout=\"highlightSetter('T66I2',true)\">均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,</em>","similar_word_count":42,"text":"<em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["均方根误差","标准误差","预测值","真实值","偏差","平方","采样次数","比值","平方根"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000531686611","author":"南夷非","university":"","source":"大学生论文联合库","title":"图像处理技术","url":"","reference":false,"similarScore":700.1182,"teacher":"","textWithDynamicClass":"(RMSE)是观测值与真值偏差的平方和观测次数n比值的平方根,<em class='similar 67S145I7' onmouseover=\"highlightSetter('67S145I7',false)\" onmouseout=\"highlightSetter('67S145I7',true)\">在实际测量中,</em><em class='similar 67S145I8' onmouseover=\"highlightSetter('67S145I8',false)\" onmouseout=\"highlightSetter('67S145I8',true)\">观测次数n总是有限的,</em><em class='similar 67S145I9' onmouseover=\"highlightSetter('67S145I9',false)\" onmouseout=\"highlightSetter('67S145I9',true)\">真值只能用最可信赖</em><em class='similar 67S145I10' onmouseover=\"highlightSetter('67S145I10',false)\" onmouseout=\"highlightSetter('67S145I10',true)\">(最佳)</em><em class='similar 67S145I11' onmouseover=\"highlightSetter('67S145I11',false)\" onmouseout=\"highlightSetter('67S145I11',true)\">值来代替。</em>方根误差对一组测量中的特大或特小误差反映非常敏感,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"90.8%","self":false,"text":"(RMSE)是观测值与真值偏差的平方和观测次数n比值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数n总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em>方根误差对一组测量中的特大或特小误差反映非常敏感,"},{"profession":false,"keywords":[],"year":"","docid":"9000015110431211","author":"","university":"","source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881","reference":false,"similarScore":410.33328,"teacher":"","textWithDynamicClass":"它是观测值与真值偏差的平方和观测次数n比值的平方根,<em class='similar 67S146I9' onmouseover=\"highlightSetter('67S146I9',false)\" onmouseout=\"highlightSetter('67S146I9',true)\">在实际测量中,</em><em class='similar 67S146I10' onmouseover=\"highlightSetter('67S146I10',false)\" onmouseout=\"highlightSetter('67S146I10',true)\">观测次数n总是有限的,</em><em class='similar 67S146I11' onmouseover=\"highlightSetter('67S146I11',false)\" onmouseout=\"highlightSetter('67S146I11',true)\">真值只能用最可信赖博文来自:</em>charlene_bo的博客弹性反向传播05-2","datatype":"webpage","clcs":[],"similarityPercentage":"81.4%","self":false,"text":"它是观测值与真值偏差的平方和观测次数n比值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数n总是有限的,</em><em class='similar'>真值只能用最可信赖博文来自:</em>charlene_bo的博客弹性反向传播05-2"},{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":777.3533,"teacher":"","textWithDynamicClass":"它是观测值与真值偏差的平方和观测次数 n 比值的平方根,<em class='similar 67S143I4' onmouseover=\"highlightSetter('67S143I4',false)\" onmouseout=\"highlightSetter('67S143I4',true)\">在实际测量中,</em><em class='similar 67S143I5' onmouseover=\"highlightSetter('67S143I5',false)\" onmouseout=\"highlightSetter('67S143I5',true)\">观测次数 n 总是有限的,</em><em class='similar 67S143I6' onmouseover=\"highlightSetter('67S143I6',false)\" onmouseout=\"highlightSetter('67S143I6',true)\">真值只能用最可信赖</em><em class='similar 67S143I7' onmouseover=\"highlightSetter('67S143I7',false)\" onmouseout=\"highlightSetter('67S143I7',true)\">(最佳)</em><em class='similar 67S143I8' onmouseover=\"highlightSetter('67S143I8',false)\" onmouseout=\"highlightSetter('67S143I8',true)\">值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,","datatype":"webpage","clcs":[],"similarityPercentage":"78.6%","self":false,"text":"它是观测值与真值偏差的平方和观测次数 n 比值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数 n 总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感,"},{"profession":false,"keywords":[],"year":"","docid":"9000188062025211","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html","reference":false,"similarScore":527.1804,"teacher":"","textWithDynamicClass":"值属于粗大误差应予剔除。标准差与标准误差是什么关系标准误差(又称均方根误差)<em class='similar 67S142I3' onmouseover=\"highlightSetter('67S142I3',false)\" onmouseout=\"highlightSetter('67S142I3',true)\">它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖</em><em class='similar 67S142I4' onmouseover=\"highlightSetter('67S142I4',false)\" onmouseout=\"highlightSetter('67S142I4',true)\">(最佳)</em><em class='similar 67S142I5' onmouseover=\"highlightSetter('67S142I5',false)\" onmouseout=\"highlightSetter('67S142I5',true)\">值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。","datatype":"webpage","clcs":[],"similarityPercentage":"51.6%","self":false,"text":"值属于粗大误差应予剔除。标准差与标准误差是什么关系标准误差(又称均方根误差)<em class='similar'>它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。"},{"profession":false,"keywords":[],"year":"","docid":"9000189662307611","author":"","university":"","source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html","reference":false,"similarScore":441.48993,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar 67S144I1' onmouseover=\"highlightSetter('67S144I1',false)\" onmouseout=\"highlightSetter('67S144I1',true)\">标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。","datatype":"webpage","clcs":[],"similarityPercentage":"40.9%","self":false,"text":"总���标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar'>标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.</em>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。"}],"textWithDynamicClass":"均方根误差,也称做标准误差,均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,<em class='similar T66I3' onmouseover=\"highlightSetter('T66I3',false)\" onmouseout=\"highlightSetter('T66I3',true)\">在实际测量中,</em><em class='similar T66I4' onmouseover=\"highlightSetter('T66I4',false)\" onmouseout=\"highlightSetter('T66I4',true)\">观测次数 总是有限的,</em><em class='similar T66I5' onmouseover=\"highlightSetter('T66I5',false)\" onmouseout=\"highlightSetter('T66I5',true)\">真值只能用最可信赖</em><em class='similar T66I6' onmouseover=\"highlightSetter('T66I6',false)\" onmouseout=\"highlightSetter('T66I6',true)\">(最佳)</em><em class='similar T66I7' onmouseover=\"highlightSetter('T66I7',false)\" onmouseout=\"highlightSetter('T66I7',true)\">值来代替。</em>","similar_word_count":30,"text":"均方根误差,也称做标准误差,均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,<em class='similar'>在实际测量中,</em><em class='similar'>观测次数 总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em>","suggest":{"synonyms":[{"synonyms":["视察"],"keyword":"观测"},{"synonyms":["信任"],"keyword":"信赖"}],"keyword":["实际测量","观测","有限的","真值","信赖"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000531686611","author":"南夷非","university":"","source":"大学生论文联合库","title":"图像处理技术","url":"","reference":false,"similarScore":700.1182,"teacher":"","textWithDynamicClass":"值来代替。<em class='similar 67S145I12' onmouseover=\"highlightSetter('67S145I12',false)\" onmouseout=\"highlightSetter('67S145I12',true)\">方根误差对一组测量中的特大或特小误差反映非常敏感,</em>所以,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"84.4%","self":false,"text":"值来代替。<em class='similar'>方根误差对一组测量中的特大或特小误差反映非常敏感,</em>所以,"},{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":777.3533,"teacher":"","textWithDynamicClass":"值来代替.<em class='similar 67S143I9' onmouseover=\"highlightSetter('67S143I9',false)\" onmouseout=\"highlightSetter('67S143I9',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感,</em>所以,","datatype":"webpage","clcs":[],"similarityPercentage":"78.8%","self":false,"text":"值来代替.<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em>所以,"},{"profession":false,"keywords":[],"year":"","docid":"9000188062025211","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html","reference":false,"similarScore":527.1804,"teacher":"","textWithDynamicClass":"值来代替.<em class='similar 67S142I6' onmouseover=\"highlightSetter('67S142I6',false)\" onmouseout=\"highlightSetter('67S142I6',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。标准误差","datatype":"webpage","clcs":[],"similarityPercentage":"55.8%","self":false,"text":"值来代替.<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。标准误差"},{"profession":false,"keywords":[],"year":"","docid":"9000189662307611","author":"","university":"","source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html","reference":false,"similarScore":441.48993,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.<em class='similar 67S144I2' onmouseover=\"highlightSetter('67S144I2',false)\" onmouseout=\"highlightSetter('67S144I2',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。在相同","datatype":"webpage","clcs":[],"similarityPercentage":"47.5%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。在相同"}],"textWithDynamicClass":"在实际测量中,观测次数 总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar T66I8' onmouseover=\"highlightSetter('T66I8',false)\" onmouseout=\"highlightSetter('T66I8',true)\">标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,</em>","similar_word_count":31,"text":"在实际测量中,观测次数 总是有限的,真值只能用最可信赖(最佳)值来代替。<em class='similar'>标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,</em>","suggest":{"synonyms":[],"keyword":["标准误差","超大","错误值"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000531686611","author":"南夷非","university":"","source":"大学生论文联合库","title":"图像处理技术","url":"","reference":false,"similarScore":700.1182,"teacher":"","textWithDynamicClass":"方根误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar 67S145I13' onmouseover=\"highlightSetter('67S145I13',false)\" onmouseout=\"highlightSetter('67S145I13',true)\">所以,</em><em class='similar 67S145I14' onmouseover=\"highlightSetter('67S145I14',false)\" onmouseout=\"highlightSetter('67S145I14',true)\">均方根误差能够很好地反映出测量的精密度。</em>其值越小表示前后差异越高,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"82.2%","self":false,"text":"方根误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar'>所以,</em><em class='similar'>均方根误差能够很好地反映出测量的精密度。</em>其值越小表示前后差异越高,"},{"profession":false,"keywords":[],"year":"","docid":"9000015110431211","author":"","university":"","source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881","reference":false,"similarScore":410.33328,"teacher":"","textWithDynamicClass":")也称作为效值,它的计算方法是先平方、再平均、然后开方。2、<em class='similar 67S146I7' onmouseover=\"highlightSetter('67S146I7',false)\" onmouseout=\"highlightSetter('67S146I7',true)\">均方根误差,</em>它是观测值与真值偏差的平方和观测次数n比值的平方根,","datatype":"webpage","clcs":[],"similarityPercentage":"79.8%","self":false,"text":")也称作为效值,它的计算方法是先平方、再平均、然后开方。2、<em class='similar'>均方根误差,</em>它是观测值与真值偏差的平方和观测次数n比值的平方根,"},{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":777.3533,"teacher":"","textWithDynamicClass":"标准误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar 67S143I10' onmouseover=\"highlightSetter('67S143I10',false)\" onmouseout=\"highlightSetter('67S143I10',true)\">所以,</em><em class='similar 67S143I11' onmouseover=\"highlightSetter('67S143I11',false)\" onmouseout=\"highlightSetter('67S143I11',true)\">标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的","datatype":"webpage","clcs":[],"similarityPercentage":"79.7%","self":false,"text":"标准误差对一组测量中的特大或特小误差反映非常敏感,<em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的"},{"profession":false,"keywords":[],"year":"","docid":"9000188062025211","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html","reference":false,"similarScore":527.1804,"teacher":"","textWithDynamicClass":"值来代替.<em class='similar 67S142I6' onmouseover=\"highlightSetter('67S142I6',false)\" onmouseout=\"highlightSetter('67S142I6',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。标准误差","datatype":"webpage","clcs":[],"similarityPercentage":"52.2%","self":false,"text":"值来代替.<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。标准误差"},{"profession":false,"keywords":[],"year":"","docid":"9000189662307611","author":"","university":"","source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html","reference":false,"similarScore":441.48993,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.<em class='similar 67S144I2' onmouseover=\"highlightSetter('67S144I2',false)\" onmouseout=\"highlightSetter('67S144I2',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。在相同","datatype":"webpage","clcs":[],"similarityPercentage":"45.6%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.<em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。在相同"}],"textWithDynamicClass":"标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,<em class='similar T66I9' onmouseover=\"highlightSetter('T66I9',false)\" onmouseout=\"highlightSetter('T66I9',true)\">所以,</em><em class='similar T66I10' onmouseover=\"highlightSetter('T66I10',false)\" onmouseout=\"highlightSetter('T66I10',true)\">标准误差能够很好地反映出机器学习预测的精度。</em><em class='similar T66I11' onmouseover=\"highlightSetter('T66I11',false)\" onmouseout=\"highlightSetter('T66I11',true)\">这也是均方根误差在工</em>","similar_word_count":33,"text":"标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,<em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习预测的精度。</em><em class='similar'>这也是均方根误差在工</em>","suggest":{"synonyms":[],"keyword":["均方根误差","标准误差","机器学习","精度"]}},{"sources":[{"profession":false,"keywords":[],"year":"2020","docid":"1000030759336411","author":"周如意；丰文浩；邓宗全；高海波；丁亮；李楠","university":"哈尔滨工业大学机器人技术与系统国家重点实验室；；","source":"航空学报","title":"轮地力学模型参数灵敏度分析与主参数估计","url":"","reference":false,"similarScore":123.999985,"teacher":"","textWithDynamicClass":"改变;均值滤波与中值滤波相比计算复杂度低,可在车体平稳运行时<em class='similar 71S150I5' onmouseover=\"highlightSetter('71S150I5',false)\" onmouseout=\"highlightSetter('71S150I5',true)\">加快计算速度</em>。<em class='similar 71S150I6' onmouseover=\"highlightSetter('71S150I6',false)\" onmouseout=\"highlightSetter('71S150I6',true)\">对应伪代码如算法1所示。</em>算法l主导参数估计输入:沉陷量序列s:一{。],。","datatype":"journal","clcs":["V476"],"similarityPercentage":"84.9%","self":false,"text":"改变;均值滤波与中值滤波相比计算复杂度低,可在车体平稳运行时<em class='similar'>加快计算速度</em>。<em class='similar'>对应伪代码如算法1所示。</em>算法l主导参数估计输入:沉陷量序列s:一{。],。"}],"textWithDynamicClass":"在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而<em class='similar T70I5' onmouseover=\"highlightSetter('T70I5',false)\" onmouseout=\"highlightSetter('T70I5',true)\">加快计算速度</em><em class='similar'>。</em><em class='similar T70I6' onmouseover=\"highlightSetter('T70I6',false)\" onmouseout=\"highlightSetter('T70I6',true)\">算法伪代码如图3.15所示。</em>","similar_word_count":17,"text":"在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而<em class='similar'>加快计算速度</em><em class='similar'>。</em><em class='similar'>算法伪代码如图3.15所示。</em>","suggest":{"synonyms":[],"keyword":["计算速度","伪代码","3.15所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":450.66666,"teacher":"","textWithDynamicClass":" a+。。.<em class='similar 73S153I1' onmouseover=\"highlightSetter('73S153I1',false)\" onmouseout=\"highlightSetter('73S153I1',true)\">相同运算符,</em><em class='similar 73S153I2' onmouseover=\"highlightSetter('73S153I2',false)\" onmouseout=\"highlightSetter('73S153I2',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar 73S153I7' onmouseover=\"highlightSetter('73S153I7',false)\" onmouseout=\"highlightSetter('73S153I7',true)\">.不同的运算符,</em><em class='similar 73S153I8' onmouseover=\"highlightSetter('73S153I8',false)\" onmouseout=\"highlightSetter('73S153I8',true)\">相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar 73S153I13' onmouseover=\"highlightSetter('73S153I13',false)\" onmouseout=\"highlightSetter('73S153I13',true)\">.不同运算符,</em>仅有一个公共操作数,<em class='similar 73S153I15' onmouseover=\"highlightSetter('73S153I15',false)\" onmouseout=\"highlightSetter('73S153I15',true)\">通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar 73S153I20' onmouseover=\"highlightSetter('73S153I20',false)\" onmouseout=\"highlightSetter('73S153I20',true)\">不同运算符,</em><em class='similar 73S153I21' onmouseover=\"highlightSetter('73S153I21',false)\" onmouseout=\"highlightSetter('73S153I21',true)\">不同的操作数,</em><em class='similar 73S153I22' onmouseover=\"highlightSetter('73S153I22',false)\" onmouseout=\"highlightSetter('73S153I22',true)\">通过引入两个多路开关,</em>可以实现ALU单元的共享。例如:a+b , c一d","datatype":"book","clcs":[],"similarityPercentage":"64.0%","self":false,"text":" a+。。.<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar'>.不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em>可以实现ALU单元的共享。例如:a+b , c一d"},{"profession":false,"keywords":[],"year":"","docid":"9000136703132111","author":"","university":"","source":"网页","title":"Verilog HDL代码优化技巧_Guchen666的博客-CSDN博客","url":"https://blog.csdn.net/Guchen666/article/details/106386201","reference":false,"similarScore":450.66666,"teacher":"","textWithDynamicClass":"a + c。<em class='similar 73S154I1' onmouseover=\"highlightSetter('73S154I1',false)\" onmouseout=\"highlightSetter('73S154I1',true)\">相同运算符,</em><em class='similar 73S154I2' onmouseover=\"highlightSetter('73S154I2',false)\" onmouseout=\"highlightSetter('73S154I2',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar 73S154I7' onmouseover=\"highlightSetter('73S154I7',false)\" onmouseout=\"highlightSetter('73S154I7',true)\">不同的运算符,</em><em class='similar 73S154I8' onmouseover=\"highlightSetter('73S154I8',false)\" onmouseout=\"highlightSetter('73S154I8',true)\">相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar 73S154I13' onmouseover=\"highlightSetter('73S154I13',false)\" onmouseout=\"highlightSetter('73S154I13',true)\">不同运算符,</em>仅有一个公共操作数,<em class='similar 73S154I15' onmouseover=\"highlightSetter('73S154I15',false)\" onmouseout=\"highlightSetter('73S154I15',true)\">通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar 73S154I20' onmouseover=\"highlightSetter('73S154I20',false)\" onmouseout=\"highlightSetter('73S154I20',true)\">不同运算符,</em><em class='similar 73S154I21' onmouseover=\"highlightSetter('73S154I21',false)\" onmouseout=\"highlightSetter('73S154I21',true)\">不同的操作数,</em><em class='similar 73S154I22' onmouseover=\"highlightSetter('73S154I22',false)\" onmouseout=\"highlightSetter('73S154I22',true)\">通过引入两个多路开关,</em>可以实现ALU单元的共享。例如: a+ b,c-d","datatype":"webpage","clcs":[],"similarityPercentage":"64.0%","self":false,"text":"a + c。<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar'>不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em>可以实现ALU单元的共享。例如: a+ b,c-d"}],"textWithDynamicClass":"<em class='similar T72I0' onmouseover=\"highlightSetter('T72I0',false)\" onmouseout=\"highlightSetter('T72I0',true)\">不同运算符、</em><em class='similar T72I1' onmouseover=\"highlightSetter('T72I1',false)\" onmouseout=\"highlightSetter('T72I1',true)\">不同操作数,</em><em class='similar T72I2' onmouseover=\"highlightSetter('T72I2',false)\" onmouseout=\"highlightSetter('T72I2',true)\">可以通过引入两个多路开关,</em>","similar_word_count":22,"text":"<em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em>","suggest":{"synonyms":[],"keyword":["运算符","操作数","多路开关"]}},{"sources":[{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":218,"teacher":"","textWithDynamicClass":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar 75S156I11' onmouseover=\"highlightSetter('75S156I11',false)\" onmouseout=\"highlightSetter('75S156I11',true)\">运算符:</em><em class='similar 75S156I12' onmouseover=\"highlightSetter('75S156I12',false)\" onmouseout=\"highlightSetter('75S156I12',true)\">包括算术运算符、</em><em class='similar 75S156I13' onmouseover=\"highlightSetter('75S156I13',false)\" onmouseout=\"highlightSetter('75S156I13',true)\">逻辑运算符、</em><em class='similar 75S156I14' onmouseover=\"highlightSetter('75S156I14',false)\" onmouseout=\"highlightSetter('75S156I14',true)\">关系运算符、</em><em class='similar 75S156I15' onmouseover=\"highlightSetter('75S156I15',false)\" onmouseout=\"highlightSetter('75S156I15',true)\">相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、","datatype":"book","clcs":[],"similarityPercentage":"88.9%","self":false,"text":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar'>运算符:</em><em class='similar'>包括算术运算符、</em><em class='similar'>逻辑运算符、</em><em class='similar'>关系运算符、</em><em class='similar'>相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、"}],"textWithDynamicClass":"<em class='similar T74I0' onmouseover=\"highlightSetter('T74I0',false)\" onmouseout=\"highlightSetter('T74I0',true)\">逻辑运算符、</em><em class='similar T74I1' onmouseover=\"highlightSetter('T74I1',false)\" onmouseout=\"highlightSetter('T74I1',true)\">算术运算符、</em><em class='similar T74I2' onmouseover=\"highlightSetter('T74I2',false)\" onmouseout=\"highlightSetter('T74I2',true)\">关系运算符\t+ - * / ^ | &amp;</em>","similar_word_count":15,"text":"<em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符\t+ - * / ^ | &amp;</em>","suggest":{"synonyms":[],"keyword":["逻辑运算符","算术运算符","运算符"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000108417201011","author":"","university":"","source":"网页","title":"3.verilog hdl语言基础 - 道客巴巴","url":"http://www.doc88.com/p-1048585004872.html","reference":false,"similarScore":57.857147,"teacher":"","textWithDynamicClass":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar 76S160I3' onmouseover=\"highlightSetter('76S160I3',false)\" onmouseout=\"highlightSetter('76S160I3',true)\">通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog","datatype":"webpage","clcs":[],"similarityPercentage":"53.0%","self":false,"text":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar'>通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog"}],"textWithDynamicClass":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar T75I2' onmouseover=\"highlightSetter('T75I2',false)\" onmouseout=\"highlightSetter('T75I2',true)\">通过运算符或操作符进行结合运算的表达式,</em>","similar_word_count":19,"text":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行结合运算的表达式,</em>","suggest":{"synonyms":[],"keyword":["表达式","运算符","操作符","结合运算","运算"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":204.63199,"teacher":"","textWithDynamicClass":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar 76S159I7' onmouseover=\"highlightSetter('76S159I7',false)\" onmouseout=\"highlightSetter('76S159I7',true)\">通过运算得到一个结果;</em><em class='similar 76S159I8' onmouseover=\"highlightSetter('76S159I8',false)\" onmouseout=\"highlightSetter('76S159I8',true)\">从语义上说,</em><em class='similar 76S159I9' onmouseover=\"highlightSetter('76S159I9',false)\" onmouseout=\"highlightSetter('76S159I9',true)\">这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,","datatype":"book","clcs":[],"similarityPercentage":"69.8%","self":false,"text":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar'>通过运算得到一个结果;</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,"},{"profession":false,"keywords":[],"year":"","docid":"9000108417201011","author":"","university":"","source":"网页","title":"3.verilog hdl语言基础 - 道客巴巴","url":"http://www.doc88.com/p-1048585004872.html","reference":false,"similarScore":57.857147,"teacher":"","textWithDynamicClass":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar 76S160I3' onmouseover=\"highlightSetter('76S160I3',false)\" onmouseout=\"highlightSetter('76S160I3',true)\">通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog","datatype":"webpage","clcs":[],"similarityPercentage":"57.1%","self":false,"text":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar'>通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog"}],"textWithDynamicClass":"所以在Verilog HDL语言结构中可理解为一致,<em class='similar T75I4' onmouseover=\"highlightSetter('T75I4',false)\" onmouseout=\"highlightSetter('T75I4',true)\">即通过运算符运算得到一个结果,</em><em class='similar T75I5' onmouseover=\"highlightSetter('T75I5',false)\" onmouseout=\"highlightSetter('T75I5',true)\">从语义上说,</em><em class='similar T75I6' onmouseover=\"highlightSetter('T75I6',false)\" onmouseout=\"highlightSetter('T75I6',true)\">这个结果即为运算后得到的的函数值;</em>","similar_word_count":35,"text":"所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>","suggest":{"synonyms":[],"keyword":["运算符","运算","语义","函数值"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":397.4322,"teacher":"","textWithDynamicClass":"<em class='similar 78S164I0' onmouseover=\"highlightSetter('78S164I0',false)\" onmouseout=\"highlightSetter('78S164I0',true)\">3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句","datatype":"book","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"<em class='similar'>3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句"}],"textWithDynamicClass":"<em class='similar T77I0' onmouseover=\"highlightSetter('T77I0',false)\" onmouseout=\"highlightSetter('T77I0',true)\">Verilog HDL语法中的过程机构体,</em>","similar_word_count":12,"text":"<em class='similar'>Verilog HDL语法中的过程机构体,</em>","suggest":{"synonyms":[],"keyword":["语法"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139313011911","author":"","university":"","source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html","reference":false,"similarScore":417.03552,"teacher":"","textWithDynamicClass":"句中进行调用。6.1过程块每个过程块是由&quot;过程语句<em class='similar 78S165I2' onmouseover=\"highlightSetter('78S165I2',false)\" onmouseout=\"highlightSetter('78S165I2',true)\">(initial或always)</em><em class='similar 78S165I3' onmouseover=\"highlightSetter('78S165I3',false)\" onmouseout=\"highlightSetter('78S165I3',true)\">&quot;和块语句所组成的,</em>而块语句主要是由过程赋值语句和高级程序语句","datatype":"webpage","clcs":[],"similarityPercentage":"51.6%","self":false,"text":"句中进行调用。6.1过程块每个过程块是由&quot;过程语句<em class='similar'>(initial或always)</em><em class='similar'>&quot;和块语句所组成的,</em>而块语句主要是由过程赋值语句和高级程序语句"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":343.99203,"teacher":"","textWithDynamicClass":"者只包含连续赋值语句。5.1.1过程块每个过程块是由过程语句<em class='similar 78S163I4' onmouseover=\"highlightSetter('78S163I4',false)\" onmouseout=\"highlightSetter('78S163I4',true)\">(initial 或 always)</em><em class='similar 78S163I5' onmouseover=\"highlightSetter('78S163I5',false)\" onmouseout=\"highlightSetter('78S163I5',true)\">和语句块所组成的,</em>而语句块主要是由过程性赋值语句","datatype":"book","clcs":[],"similarityPercentage":"51.6%","self":false,"text":"者只包含连续赋值语句。5.1.1过程块每个过程块是由过程语句<em class='similar'>(initial 或 always)</em><em class='similar'>和语句块所组成的,</em>而语句块主要是由过程性赋值语句"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":397.91302,"teacher":"","textWithDynamicClass":"块中进行调用。过程块过程块每个过程块是由&quot;过程语句<em class='similar 78S166I3' onmouseover=\"highlightSetter('78S166I3',false)\" onmouseout=\"highlightSetter('78S166I3',true)\">(initial或always)</em><em class='similar 78S166I4' onmouseover=\"highlightSetter('78S166I4',false)\" onmouseout=\"highlightSetter('78S166I4',true)\">&quot;语句块所组成的,</em>而块语句主要是由过程赋值语句和高级程序语句","datatype":"webpage","clcs":[],"similarityPercentage":"47.3%","self":false,"text":"块中进行调用。过程块过程块每个过程块是由&quot;过程语句<em class='similar'>(initial或always)</em><em class='similar'>&quot;语句块所组成的,</em>而块语句主要是由过程赋值语句和高级程序语句"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":397.4322,"teacher":"","textWithDynamicClass":"<em class='similar 78S164I0' onmouseover=\"highlightSetter('78S164I0',false)\" onmouseout=\"highlightSetter('78S164I0',true)\">3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句","datatype":"book","clcs":[],"similarityPercentage":"46.5%","self":false,"text":"<em class='similar'>3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em>而语句块主要是由过程性赋值语句"}],"textWithDynamicClass":"Verilog HDL语法中的过程机构体,<em class='similar T77I1' onmouseover=\"highlightSetter('T77I1',false)\" onmouseout=\"highlightSetter('T77I1',true)\">都是由语法关键字initial或always和其块内内容语句所构成的,</em>","similar_word_count":25,"text":"Verilog HDL语法中的过程机构体,<em class='similar'>都是由语法关键字initial或always和其块内内容语句所构成的,</em>","suggest":{"synonyms":[],"keyword":["语法","关键字","initial","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139313011911","author":"","university":"","source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html","reference":false,"similarScore":417.03552,"teacher":"","textWithDynamicClass":"\"和块语句所组成的,<em class='similar 78S165I4' onmouseover=\"highlightSetter('78S165I4',false)\" onmouseout=\"highlightSetter('78S165I4',true)\">而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")","datatype":"webpage","clcs":[],"similarityPercentage":"68.4%","self":false,"text":"\"和块语句所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":397.91302,"teacher":"","textWithDynamicClass":"\"语句块所组成的,<em class='similar 78S166I5' onmouseover=\"highlightSetter('78S166I5',false)\" onmouseout=\"highlightSetter('78S166I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")","datatype":"webpage","clcs":[],"similarityPercentage":"66.9%","self":false,"text":"\"语句块所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")"},{"profession":false,"keywords":[],"year":"2018","docid":"1900023759582811","author":"丁磊主编；张海笑，冯永晋，江志文编著","university":"","source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":"","reference":false,"similarScore":313.971,"teacher":"","textWithDynamicClass":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar 78S167I7' onmouseover=\"highlightSetter('78S167I7',false)\" onmouseout=\"highlightSetter('78S167I7',true)\">分支语句过程块主要是由过程性赋值语句及高级程序语句</em>(包括分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar'>分支语句过程块主要是由过程性赋值语句及高级程序语句</em>(包括分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"","docid":"1900023885801611","author":"杨全胜主编","university":"","source":"","title":"计算机系统综合课程设计","url":"","reference":false,"similarScore":165.27534,"teacher":"","textWithDynamicClass":"过程模块都从属于always和initial这两种过程语句,<em class='similar 78S168I3' onmouseover=\"highlightSetter('78S168I3',false)\" onmouseout=\"highlightSetter('78S168I3',true)\">而语句块主要是由过程赋值语句、</em>条件分支语句和循环控制语句构成。","datatype":"book","clcs":[],"similarityPercentage":"61.3%","self":false,"text":"过程模块都从属于always和initial这两种过程语句,<em class='similar'>而语句块主要是由过程赋值语句、</em>条件分支语句和循环控制语句构成。"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":343.99203,"teacher":"","textWithDynamicClass":"和语句块所组成的,<em class='similar 78S163I6' onmouseover=\"highlightSetter('78S163I6',false)\" onmouseout=\"highlightSetter('78S163I6',true)\">而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句(包括条件分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"58.4%","self":false,"text":"和语句块所组成的,<em class='similar'>而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句(包括条件分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":397.4322,"teacher":"","textWithDynamicClass":"3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。<em class='similar 78S164I1' onmouseover=\"highlightSetter('78S164I1',false)\" onmouseout=\"highlightSetter('78S164I1',true)\">而语句块主要是由过程性赋值语句</em>(包括过程赋值语句和过程连续赋值语句)和高级程序语句(包括条件分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"58.1%","self":false,"text":"3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。<em class='similar'>而语句块主要是由过程性赋值语句</em>(包括过程赋值语句和过程连续赋值语句)和高级程序语句(包括条件分支语句和循环控制语句)"}],"textWithDynamicClass":"由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar T77I5' onmouseover=\"highlightSetter('T77I5',false)\" onmouseout=\"highlightSetter('T77I5',true)\">always语句块中的内容块主要由赋值语句和高级程序语句</em>","similar_word_count":24,"text":"由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em>","suggest":{"synonyms":[],"keyword":["语句","内容块","赋值语句","程序语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2018","docid":"1900023759582811","author":"丁磊主编；张海笑，冯永晋，江志文编著","university":"","source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":"","reference":false,"similarScore":313.971,"teacher":"","textWithDynamicClass":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7分支语句过程块主要是由过程性赋值语句及高级程序语句<em class='similar 78S167I8' onmouseover=\"highlightSetter('78S167I8',false)\" onmouseout=\"highlightSetter('78S167I8',true)\">(包括分支语句和循环控制语句)</em><em class='similar 78S167I9' onmouseover=\"highlightSetter('78S167I9',false)\" onmouseout=\"highlightSetter('78S167I9',true)\">这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入","datatype":"book","clcs":[],"similarityPercentage":"80.9%","self":false,"text":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7分支语句过程块主要是由过程性赋值语句及高级程序语句<em class='similar'>(包括分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":397.91302,"teacher":"","textWithDynamicClass":"而块语句主要是由过程赋值语句和高级程序语句<em class='similar 78S166I6' onmouseover=\"highlightSetter('78S166I6',false)\" onmouseout=\"highlightSetter('78S166I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar 78S166I7' onmouseover=\"highlightSetter('78S166I7',false)\" onmouseout=\"highlightSetter('78S166I7',true)\">这两种行为语句构</em>过程块的形式定义过程块的形式定义过程语句(事件控制","datatype":"webpage","clcs":[],"similarityPercentage":"78.7%","self":false,"text":"而块语句主要是由过程赋值语句和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar'>这两种行为语句构</em>过程块的形式定义过程块的形式定义过程语句(事件控制"},{"profession":false,"keywords":[],"year":"","docid":"9000139313011911","author":"","university":"","source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html","reference":false,"similarScore":417.03552,"teacher":"","textWithDynamicClass":"而块语句主要是由过程赋值语句和高级程序语句<em class='similar 78S165I5' onmouseover=\"highlightSetter('78S165I5',false)\" onmouseout=\"highlightSetter('78S165I5',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar 78S165I6' onmouseover=\"highlightSetter('78S165I6',false)\" onmouseout=\"highlightSetter('78S165I6',true)\">这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变","datatype":"webpage","clcs":[],"similarityPercentage":"76.5%","self":false,"text":"而块语句主要是由过程赋值语句和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar'>这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":343.99203,"teacher":"","textWithDynamicClass":"而语句块主要是由过程性赋值语句(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar 78S163I9' onmouseover=\"highlightSetter('78S163I9',false)\" onmouseout=\"highlightSetter('78S163I9',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar 78S163I10' onmouseover=\"highlightSetter('78S163I10',false)\" onmouseout=\"highlightSetter('78S163I10',true)\">这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个","datatype":"book","clcs":[],"similarityPercentage":"75.9%","self":false,"text":"而语句块主要是由过程性赋值语句(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个"},{"profession":false,"keywords":[],"year":"","docid":"1900023885801611","author":"杨全胜主编","university":"","source":"","title":"计算机系统综合课程设计","url":"","reference":false,"similarScore":165.27534,"teacher":"","textWithDynamicClass":"过程模块都从属于always和initial这两种过程语句,而语句块主要是由过程赋值语句、<em class='similar 78S168I4' onmouseover=\"highlightSetter('78S168I4',false)\" onmouseout=\"highlightSetter('78S168I4',true)\">条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway","datatype":"book","clcs":[],"similarityPercentage":"72.3%","self":false,"text":"过程模块都从属于always和initial这两种过程语句,而语句块主要是由过程赋值语句、<em class='similar'>条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":397.4322,"teacher":"","textWithDynamicClass":"而语句块主要是由过程性赋值语句(包括过程赋值语句和过程连续赋值语句)和高级程序语句<em class='similar 78S164I4' onmouseover=\"highlightSetter('78S164I4',false)\" onmouseout=\"highlightSetter('78S164I4',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar 78S164I5' onmouseover=\"highlightSetter('78S164I5',false)\" onmouseout=\"highlightSetter('78S164I5',true)\">这两种行为语句构成的。</em>过程块具有如下特点。.在行为描述模块中出现的每个过","datatype":"book","clcs":[],"similarityPercentage":"70.0%","self":false,"text":"而语句块主要是由过程性赋值语句(包括过程赋值语句和过程连续赋值语句)和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成的。</em>过程块具有如下特点。.在行为描述模块中出现的每个过"}],"textWithDynamicClass":"always语句块中的内容块主要由赋值语句和高级程序语句<em class='similar T77I6' onmouseover=\"highlightSetter('T77I6',false)\" onmouseout=\"highlightSetter('T77I6',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar T77I7' onmouseover=\"highlightSetter('T77I7',false)\" onmouseout=\"highlightSetter('T77I7',true)\">这两种行为语句构成</em>","similar_word_count":24,"text":"always语句块中的内容块主要由赋值语句和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>","suggest":{"synonyms":[],"keyword":["语句","分支语句","控制语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000179218349411","author":"","university":"","source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html","reference":false,"similarScore":329.03796,"teacher":"","textWithDynamicClass":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 80S173I5' onmouseover=\"highlightSetter('80S173I5',false)\" onmouseout=\"highlightSetter('80S173I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 80S173I6' onmouseover=\"highlightSetter('80S173I6',false)\" onmouseout=\"highlightSetter('80S173I6',true)\">其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em>他们分别代表了阻塞型赋值和非阻塞性赋值类型。","datatype":"webpage","clcs":[],"similarityPercentage":"68.2%","self":false,"text":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em>他们分别代表了阻塞型赋值和非阻塞性赋值类型。"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000544119911","author":"杜建国","university":"","source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":"","reference":false,"similarScore":372.44318,"teacher":"","textWithDynamicClass":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 80S172I6' onmouseover=\"highlightSetter('80S172I6',false)\" onmouseout=\"highlightSetter('80S172I6',true)\">过程赋值语句的基本格式为:</em>168其中是\"=\"或\"<=\",它们分别代表了阻塞型赋值和非阻塞型赋值类型。","datatype":"book","clcs":["TP312","VH/13"],"similarityPercentage":"65.0%","self":false,"text":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em>168其中是\"=\"或\"<=\",它们分别代表了阻塞型赋值和非阻塞型赋值类型。"},{"profession":false,"keywords":[],"year":"","docid":"9000183507262511","author":"","university":"","source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10","reference":false,"similarScore":124.80769,"teacher":"","textWithDynamicClass":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar 80S174I4' onmouseover=\"highlightSetter('80S174I4',false)\" onmouseout=\"highlightSetter('80S174I4',true)\">过程赋值语句语法格式:</em><em class='similar 80S174I5' onmouseover=\"highlightSetter('80S174I5',false)\" onmouseout=\"highlightSetter('80S174I5',true)\">赋值操作符:</em><em class='similar 80S174I6' onmouseover=\"highlightSetter('80S174I6',false)\" onmouseout=\"highlightSetter('80S174I6',true)\">可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)","datatype":"webpage","clcs":[],"similarityPercentage":"63.1%","self":false,"text":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar'>过程赋值语句语法格式:</em><em class='similar'>赋值操作符:</em><em class='similar'>可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)"},{"profession":false,"keywords":[],"year":"","docid":"9000135249839711","author":"","university":"","source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html","reference":false,"similarScore":419.82077,"teacher":"","textWithDynamicClass":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 80S171I5' onmouseover=\"highlightSetter('80S171I5',false)\" onmouseout=\"highlightSetter('80S171I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 80S171I6' onmouseover=\"highlightSetter('80S171I6',false)\" onmouseout=\"highlightSetter('80S171I6',true)\">值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>它们分别代表了阻塞型赋值和非阻塞型赋值类型。","datatype":"webpage","clcs":[],"similarityPercentage":"61.4%","self":false,"text":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>它们分别代表了阻塞型赋值和非阻塞型赋值类型。"}],"textWithDynamicClass":"<em class='similar T79I0' onmouseover=\"highlightSetter('T79I0',false)\" onmouseout=\"highlightSetter('T79I0',true)\">过程赋值语句的语法格式如图4.7所示,</em><em class='similar T79I1' onmouseover=\"highlightSetter('T79I1',false)\" onmouseout=\"highlightSetter('T79I1',true)\">其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>","similar_word_count":30,"text":"<em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","语法格式","4.7所","赋值","操作符","赋值操作"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135249839711","author":"","university":"","source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html","reference":false,"similarScore":419.82077,"teacher":"","textWithDynamicClass":"值变量>值操作符>值表达式>其中值操作符>是\"=\"或\"<=\"之一,<em class='similar 80S171I7' onmouseover=\"highlightSetter('80S171I7',false)\" onmouseout=\"highlightSetter('80S171I7',true)\">它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar 80S171I10' onmouseover=\"highlightSetter('80S171I10',false)\" onmouseout=\"highlightSetter('80S171I10',true)\">时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整型 integer、实型real","datatype":"webpage","clcs":[],"similarityPercentage":"74.3%","self":false,"text":"值变量>值操作符>值表达式>其中值操作符>是\"=\"或\"<=\"之一,<em class='similar'>它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar'>时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整型 integer、实型real"},{"profession":false,"keywords":[],"year":"","docid":"9000179218349411","author":"","university":"","source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html","reference":false,"similarScore":329.03796,"teacher":"","textWithDynamicClass":"其中赋值操作符是\"=\"戒者\"《=\"乊一,<em class='similar 80S173I7' onmouseover=\"highlightSetter('80S173I7',false)\" onmouseout=\"highlightSetter('80S173I7',true)\">他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar 80S173I9' onmouseover=\"highlightSetter('80S173I9',false)\" onmouseout=\"highlightSetter('80S173I9',true)\">过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、","datatype":"webpage","clcs":[],"similarityPercentage":"71.9%","self":false,"text":"其中赋值操作符是\"=\"戒者\"《=\"乊一,<em class='similar'>他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar'>过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000544119911","author":"杜建国","university":"","source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":"","reference":false,"similarScore":372.44318,"teacher":"","textWithDynamicClass":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。过程赋值语句的基本格式为:168其中是&quot;=&quot;或&quot;&lt;=&quot;,<em class='similar 80S172I8' onmouseover=\"highlightSetter('80S172I8',false)\" onmouseout=\"highlightSetter('80S172I8',true)\">它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em><em class='similar 80S172I9' onmouseover=\"highlightSetter('80S172I9',false)\" onmouseout=\"highlightSetter('80S172I9',true)\">过程赋值语句只能用于对寄存器类的变量</em>(寄存器 reg、整型 integer、实型 real 或时间型 time 变量)进行赋值操作。在经过过程赋值后,上面这些变量的取值将保持不变,<em class='similar 80S172I16' onmouseover=\"highlightSetter('80S172I16',false)\" onmouseout=\"highlightSetter('80S172I16',true)\">直到另一条过程赋值语句对变量重新赋值为止。</em>","datatype":"book","clcs":["TP312","VH/13"],"similarityPercentage":"71.0%","self":false,"text":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。过程赋值语句的基本格式为:168其中是&quot;=&quot;或&quot;&lt;=&quot;,<em class='similar'>它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对寄存器类的变量</em>(寄存器 reg、整型 integer、实型 real 或时间型 time 变量)进行赋值操作。在经过过程赋值后,上面这些变量的取值将保持不变,<em class='similar'>直到另一条过程赋值语句对变量重新赋值为止。</em>"}],"textWithDynamicClass":"过程赋值语句的语法格式如图4.7所示,其中赋值操作符可以是\"=\"或\"<=\"之一,<em class='similar T79I2' onmouseover=\"highlightSetter('T79I2',false)\" onmouseout=\"highlightSetter('T79I2',true)\">它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar T79I3' onmouseover=\"highlightSetter('T79I3',false)\" onmouseout=\"highlightSetter('T79I3',true)\">过程赋值语句只能用于对变量型数据进行赋值操作,</em>","similar_word_count":41,"text":"过程赋值语句的语法格式如图4.7所示,其中赋值操作符可以是\"=\"或\"<=\"之一,<em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","赋值","阻塞型","赋值操作"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":203.46156,"teacher":"","textWithDynamicClass":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar 81S176I4' onmouseover=\"highlightSetter('81S176I4',false)\" onmouseout=\"highlightSetter('81S176I4',true)\">二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中","datatype":"book","clcs":[],"similarityPercentage":"67.2%","self":false,"text":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar'>二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中"},{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar 81S175I5' onmouseover=\"highlightSetter('81S175I5',false)\" onmouseout=\"highlightSetter('81S175I5',true)\">刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&(由);所给","datatype":"book","clcs":[],"similarityPercentage":"64.3%","self":false,"text":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar'>刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&(由);所给"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar 81S177I3' onmouseover=\"highlightSetter('81S177I3',false)\" onmouseout=\"highlightSetter('81S177I3',true)\"> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&(~b","datatype":"book","clcs":[],"similarityPercentage":"62.9%","self":false,"text":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar'> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&(~b"}],"textWithDynamicClass":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar T80I1' onmouseover=\"highlightSetter('T80I1',false)\" onmouseout=\"highlightSetter('T80I1',true)\">由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>","similar_word_count":26,"text":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>","suggest":{"synonyms":[],"keyword":["赋值语句","赋值","表达式","合法的"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)&quot;语句块所组成的,<em class='similar 82S180I5' onmouseover=\"highlightSetter('82S180I5',false)\" onmouseout=\"highlightSetter('82S180I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")","datatype":"webpage","clcs":[],"similarityPercentage":"54.9%","self":false,"text":"(initial或always)&quot;语句块所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar 82S178I4' onmouseover=\"highlightSetter('82S178I4',false)\" onmouseout=\"highlightSetter('82S178I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 82S178I5' onmouseover=\"highlightSetter('82S178I5',false)\" onmouseout=\"highlightSetter('82S178I5',true)\">及高级程序语句</em>(包括分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"47.5%","self":false,"text":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>及高级程序语句</em>(包括分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar 82S179I4' onmouseover=\"highlightSetter('82S179I4',false)\" onmouseout=\"highlightSetter('82S179I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 82S179I5' onmouseover=\"highlightSetter('82S179I5',false)\" onmouseout=\"highlightSetter('82S179I5',true)\">和高级程序语句</em>(包括条件分支语句和循环控制语句)","datatype":"book","clcs":[],"similarityPercentage":"40.7%","self":false,"text":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em>(包括条件分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar 82S181I2' onmouseover=\"highlightSetter('82S181I2',false)\" onmouseout=\"highlightSetter('82S181I2',true)\">(包括过程赋值语句和过程连续赋值语句)</em><em class='similar 82S181I3' onmouseover=\"highlightSetter('82S181I3',false)\" onmouseout=\"highlightSetter('82S181I3',true)\">和高级程序语句</em>(包括条件分支语句和循环控制语句)","datatype":"webpage","clcs":[],"similarityPercentage":"40.7%","self":false,"text":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar'>(包括过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em>(包括条件分支语句和循环控制语句)"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar 82S182I8' onmouseover=\"highlightSetter('82S182I8',false)\" onmouseout=\"highlightSetter('82S182I8',true)\">(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar 82S182I9' onmouseover=\"highlightSetter('82S182I9',false)\" onmouseout=\"highlightSetter('82S182I9',true)\">和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")","datatype":"webpage","clcs":[],"similarityPercentage":"40.7%","self":false,"text":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar'>(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar'>和高级程序语句</em>(包括\"条件分支语句\"和\"循环控制语句\")"}],"textWithDynamicClass":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar T81I2' onmouseover=\"highlightSetter('T81I2',false)\" onmouseout=\"highlightSetter('T81I2',true)\">图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em>","similar_word_count":32,"text":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em>","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"}],"keyword":["语句","4.5","提及","赋值语句","程序语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)&quot;语句块所组成的,<em class='similar 82S180I5' onmouseover=\"highlightSetter('82S180I5',false)\" onmouseout=\"highlightSetter('82S180I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar 82S180I6' onmouseover=\"highlightSetter('82S180I6',false)\" onmouseout=\"highlightSetter('82S180I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过","datatype":"webpage","clcs":[],"similarityPercentage":"65.3%","self":false,"text":"(initial或always)&quot;语句块所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"及高级程序语句<em class='similar 82S178I6' onmouseover=\"highlightSetter('82S178I6',false)\" onmouseout=\"highlightSetter('82S178I6',true)\">(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了","datatype":"book","clcs":[],"similarityPercentage":"59.5%","self":false,"text":"及高级程序语句<em class='similar'>(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":144.5,"teacher":"","textWithDynamicClass":"/deassign 或 force/release 语句组)<em class='similar 82S183I7' onmouseover=\"highlightSetter('82S183I7',false)\" onmouseout=\"highlightSetter('82S183I7',true)\">141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for","datatype":"book","clcs":[],"similarityPercentage":"58.6%","self":false,"text":"/deassign 或 force/release 语句组)<em class='similar'>141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 82S179I6' onmouseover=\"highlightSetter('82S179I6',false)\" onmouseout=\"highlightSetter('82S179I6',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关","datatype":"book","clcs":[],"similarityPercentage":"53.7%","self":false,"text":"和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 82S181I4' onmouseover=\"highlightSetter('82S181I4',false)\" onmouseout=\"highlightSetter('82S181I4',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块","datatype":"webpage","clcs":[],"similarityPercentage":"53.7%","self":false,"text":"和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 82S182I10' onmouseover=\"highlightSetter('82S182I10',false)\" onmouseout=\"highlightSetter('82S182I10',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的","datatype":"webpage","clcs":[],"similarityPercentage":"53.7%","self":false,"text":"和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的"}],"textWithDynamicClass":"图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,<em class='similar T81I3' onmouseover=\"highlightSetter('T81I3',false)\" onmouseout=\"highlightSetter('T81I3',true)\">高级程序语句就包含分支语句和循环控制语句,</em>","similar_word_count":20,"text":"图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,<em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em>","suggest":{"synonyms":[],"keyword":["语句","程序语句","分支语句","控制语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":144.5,"teacher":"","textWithDynamicClass":"/deassign 或 force/release 语句组)<em class='similar 82S183I7' onmouseover=\"highlightSetter('82S183I7',false)\" onmouseout=\"highlightSetter('82S183I7',true)\">141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for","datatype":"book","clcs":[],"similarityPercentage":"70.8%","self":false,"text":"/deassign 或 force/release 语句组)<em class='similar'>141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)\"语句块所组成的,而块语句主要是由过程赋值语句和高级程序语句<em class='similar 82S180I6' onmouseover=\"highlightSetter('82S180I6',false)\" onmouseout=\"highlightSetter('82S180I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过","datatype":"webpage","clcs":[],"similarityPercentage":"68.1%","self":false,"text":"(initial或always)\"语句块所组成的,而块语句主要是由过程赋值语句和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 82S179I6' onmouseover=\"highlightSetter('82S179I6',false)\" onmouseout=\"highlightSetter('82S179I6',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关","datatype":"book","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 82S181I4' onmouseover=\"highlightSetter('82S181I4',false)\" onmouseout=\"highlightSetter('82S181I4',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块","datatype":"webpage","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"和高级程序语句<em class='similar 82S182I10' onmouseover=\"highlightSetter('82S182I10',false)\" onmouseout=\"highlightSetter('82S182I10',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的","datatype":"webpage","clcs":[],"similarityPercentage":"60.5%","self":false,"text":"和高级程序语句<em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"及高级程序语句<em class='similar 82S178I6' onmouseover=\"highlightSetter('82S178I6',false)\" onmouseout=\"highlightSetter('82S178I6',true)\">(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了","datatype":"book","clcs":[],"similarityPercentage":"57.8%","self":false,"text":"及高级程序语句<em class='similar'>(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了"}],"textWithDynamicClass":"高级程序语句就包含分支语句和循环控制语句,<em class='similar T81I4' onmouseover=\"highlightSetter('T81I4',false)\" onmouseout=\"highlightSetter('T81I4',true)\">分支语句包含条件分支语句及case条件控制语句,</em>","similar_word_count":20,"text":"高级程序语句就包含分支语句和循环控制语句,<em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>","suggest":{"synonyms":[],"keyword":["语句","分支语句","控制语句","case","条件控制语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar 85S188I4' onmouseover=\"highlightSetter('85S188I4',false)\" onmouseout=\"highlightSetter('85S188I4',true)\">与条件分支语句一样,</em><em class='similar 85S188I5' onmouseover=\"highlightSetter('85S188I5',false)\" onmouseout=\"highlightSetter('85S188I5',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了4种类型的循环语句,","datatype":"book","clcs":[],"similarityPercentage":"84.9%","self":false,"text":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar'>与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了4种类型的循环语句,"},{"profession":false,"keywords":[],"year":"2012","docid":"1900023738091111","author":"张晓飞，秦刚刚，杨阳等编著","university":"","source":"","title":"FPGA技术入门与典型项目开发实例","url":"","reference":false,"similarScore":192.91864,"teacher":"","textWithDynamicClass":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar 85S189I2' onmouseover=\"highlightSetter('85S189I2',false)\" onmouseout=\"highlightSetter('85S189I2',true)\">说明语句与条件分支语句一样</em>,<em class='similar 85S189I3' onmouseover=\"highlightSetter('85S189I3',false)\" onmouseout=\"highlightSetter('85S189I3',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另","datatype":"book","clcs":[],"similarityPercentage":"78.8%","self":false,"text":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar'>说明语句与条件分支语句一样</em>,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar 85S186I4' onmouseover=\"highlightSetter('85S186I4',false)\" onmouseout=\"highlightSetter('85S186I4',true)\">&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar 85S186I5' onmouseover=\"highlightSetter('85S186I5',false)\" onmouseout=\"highlightSetter('85S186I5',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。Verilog HDL语言提供了如下几种循环控制语句。","datatype":"book","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar'>&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。Verilog HDL语言提供了如下几种循环控制语句。"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar 85S187I5' onmouseover=\"highlightSetter('85S187I5',false)\" onmouseout=\"highlightSetter('85S187I5',true)\">6.4循环控制语句与条件分支语句一样,</em><em class='similar 85S187I6' onmouseover=\"highlightSetter('85S187I6',false)\" onmouseout=\"highlightSetter('85S187I6',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了如下几种循环控制语句:","datatype":"book","clcs":[],"similarityPercentage":"75.0%","self":false,"text":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar'>6.4循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。Verilog HDL语言中提供了如下几种循环控制语句:"},{"profession":false,"keywords":[],"year":"","docid":"9000208266954811","author":"","university":"","source":"网页","title":"第三、四讲  Verilog HDL 行为语句","url":"http://wenku.baidu.com/view/476f25fdf705cc17552709c5.html","reference":false,"similarScore":38.130257,"teacher":"","textWithDynamicClass":"mp;b;end endmoduleendmodule(五)<em class='similar 85S191I3' onmouseover=\"highlightSetter('85S191I3',false)\" onmouseout=\"highlightSetter('85S191I3',true)\">循环语句Verilog HDL中有四类循环语句:</em> forever循环语句 repeat循环语句","datatype":"webpage","clcs":[],"similarityPercentage":"49.1%","self":false,"text":"mp;b;end endmoduleendmodule(五)<em class='similar'>循环语句Verilog HDL中有四类循环语句:</em> forever循环语句 repeat循环语句"},{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar 85S190I11' onmouseover=\"highlightSetter('85S190I11',false)\" onmouseout=\"highlightSetter('85S190I11',true)\">循环语句:</em><em class='similar 85S190I12' onmouseover=\"highlightSetter('85S190I12',false)\" onmouseout=\"highlightSetter('85S190I12',true)\">verilog中有四种循环语句:</em>while、","datatype":"webpage","clcs":[],"similarityPercentage":"45.9%","self":false,"text":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar'>循环语句:</em><em class='similar'>verilog中有四种循环语句:</em>while、"}],"textWithDynamicClass":"<em class='similar T84I0' onmouseover=\"highlightSetter('T84I0',false)\" onmouseout=\"highlightSetter('T84I0',true)\">与条件分支语句表达含义一致,</em><em class='similar T84I1' onmouseover=\"highlightSetter('T84I1',false)\" onmouseout=\"highlightSetter('T84I1',true)\">循环控制语句也是高级Verilog HDL程序语句的一种,</em>","similar_word_count":33,"text":"<em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em>","suggest":{"synonyms":[{"synonyms":["寄义"],"keyword":"含义"}],"keyword":["条件分支","语句表达","含义","控制语句","程序语句","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar 85S188I7' onmouseover=\"highlightSetter('85S188I7',false)\" onmouseout=\"highlightSetter('85S188I7',true)\">Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。 forever循环语句:","datatype":"book","clcs":[],"similarityPercentage":"74.3%","self":false,"text":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。 forever循环语句:"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"循环控制语句也是一种高级程序语句,它在verilog HDL中被用来进行行为描述。<em class='similar 85S186I7' onmouseover=\"highlightSetter('85S186I7',false)\" onmouseout=\"highlightSetter('85S186I7',true)\">Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,","datatype":"book","clcs":[],"similarityPercentage":"70.8%","self":false,"text":"循环控制语句也是一种高级程序语句,它在verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar 85S187I8' onmouseover=\"highlightSetter('85S187I8',false)\" onmouseout=\"highlightSetter('85S187I8',true)\">Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1 forever循环语句 forever 循环语句实现的是一种无限的循环,","datatype":"book","clcs":[],"similarityPercentage":"70.1%","self":false,"text":"循环控制语句也是一种高级程序语句,它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1 forever循环语句 forever 循环语句实现的是一种无限的循环,"},{"profession":false,"keywords":[],"year":"","docid":"9000208266954811","author":"","university":"","source":"网页","title":"第三、四讲  Verilog HDL 行为语句","url":"http://wenku.baidu.com/view/476f25fdf705cc17552709c5.html","reference":false,"similarScore":38.130257,"teacher":"","textWithDynamicClass":"mp;b;end endmoduleendmodule(五)<em class='similar 85S191I3' onmouseover=\"highlightSetter('85S191I3',false)\" onmouseout=\"highlightSetter('85S191I3',true)\">循环语句Verilog HDL中有四类循环语句:</em> forever循环语句 repeat循环语句","datatype":"webpage","clcs":[],"similarityPercentage":"45.4%","self":false,"text":"mp;b;end endmoduleendmodule(五)<em class='similar'>循环语句Verilog HDL中有四类循环语句:</em> forever循环语句 repeat循环语句"}],"textWithDynamicClass":"与条件分支语句表达含义一致,循环控制语句也是高级Verilog HDL程序语句的一种,<em class='similar T84I2' onmouseover=\"highlightSetter('T84I2',false)\" onmouseout=\"highlightSetter('T84I2',true)\">Verilog提供的循环控制语句关键字有forever、</em>","similar_word_count":17,"text":"与条件分支语句表达含义一致,循环控制语句也是高级Verilog HDL程序语句的一种,<em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>","suggest":{"synonyms":[],"keyword":["控制语句","关键字","forever","语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"verilog中有四种循环语句:<em class='similar 85S190I13' onmouseover=\"highlightSetter('85S190I13',false)\" onmouseout=\"highlightSetter('85S190I13',true)\">while、</em>for、<em class='similar 85S190I15' onmouseover=\"highlightSetter('85S190I15',false)\" onmouseout=\"highlightSetter('85S190I15',true)\">repeat和forever,</em><em class='similar 85S190I16' onmouseover=\"highlightSetter('85S190I16',false)\" onmouseout=\"highlightSetter('85S190I16',true)\">其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar 85S190I22' onmouseover=\"highlightSetter('85S190I22',false)\" onmouseout=\"highlightSetter('85S190I22',true)\">while</em>(条件表达式)begin各行为语句end;(b)f","datatype":"webpage","clcs":[],"similarityPercentage":"49.5%","self":false,"text":"verilog中有四种循环语句:<em class='similar'>while、</em>for、<em class='similar'>repeat和forever,</em><em class='similar'>其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar'>while</em>(条件表达式)begin各行为语句end;(b)f"}],"textWithDynamicClass":"repeat、<em class='similar T84I4' onmouseover=\"highlightSetter('T84I4',false)\" onmouseout=\"highlightSetter('T84I4',true)\">while、</em>","similar_word_count":2,"text":"repeat、<em class='similar'>while、</em>","suggest":{"synonyms":[],"keyword":[]}},{"sources":[{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"分支对应的语句\"out=(~b)+1\"。6.4循环控制语句与条件分支语句一样,<em class='similar 85S187I6' onmouseover=\"highlightSetter('85S187I6',false)\" onmouseout=\"highlightSetter('85S187I6',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 85S187I8' onmouseover=\"highlightSetter('85S187I8',false)\" onmouseout=\"highlightSetter('85S187I8',true)\">Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar 85S187I19' onmouseover=\"highlightSetter('85S187I19',false)\" onmouseout=\"highlightSetter('85S187I19',true)\"> forever循环语句 forever 循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。","datatype":"book","clcs":[],"similarityPercentage":"73.6%","self":false,"text":"分支对应的语句\"out=(~b)+1\"。6.4循环控制语句与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar'> forever循环语句 forever 循环语句实现的是��种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"01\"时,才执行第4分支项对应的操作‘out=的;\"。3.6循环控制语句与条件分支语句一样,<em class='similar 85S186I5' onmouseover=\"highlightSetter('85S186I5',false)\" onmouseout=\"highlightSetter('85S186I5',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar 85S186I7' onmouseover=\"highlightSetter('85S186I7',false)\" onmouseout=\"highlightSetter('85S186I7',true)\">Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar 85S186I13' onmouseover=\"highlightSetter('85S186I13',false)\" onmouseout=\"highlightSetter('85S186I13',true)\">3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f","datatype":"book","clcs":[],"similarityPercentage":"72.1%","self":false,"text":"01\"时,才执行第4分支项对应的操作‘out=的;\"。3.6循环控制语句与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar'>3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。与条件分支语句一样,<em class='similar 85S188I5' onmouseover=\"highlightSetter('85S188I5',false)\" onmouseout=\"highlightSetter('85S188I5',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 85S188I7' onmouseover=\"highlightSetter('85S188I7',false)\" onmouseout=\"highlightSetter('85S188I7',true)\">Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar 85S188I9' onmouseover=\"highlightSetter('85S188I9',false)\" onmouseout=\"highlightSetter('85S188I9',true)\"> forever循环语句:</em><em class='similar 85S188I10' onmouseover=\"highlightSetter('85S188I10',false)\" onmouseout=\"highlightSetter('85S188I10',true)\">无限连续执行的语句,</em>","datatype":"book","clcs":[],"similarityPercentage":"71.2%","self":false,"text":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar'> forever循环语句:</em><em class='similar'>无限连续执行的语句,</em>"},{"profession":false,"keywords":[],"year":"2012","docid":"1900023738091111","author":"张晓飞，秦刚刚，杨阳等编著","university":"","source":"","title":"FPGA技术入门与典型项目开发实例","url":"","reference":false,"similarScore":192.91864,"teacher":"","textWithDynamicClass":"这种情况的方法。2.6 verilog HDL循环语句与结构说明语句与条件分支语句一样,<em class='similar 85S189I3' onmouseover=\"highlightSetter('85S189I3',false)\" onmouseout=\"highlightSetter('85S189I3',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另","datatype":"book","clcs":[],"similarityPercentage":"69.6%","self":false,"text":"这种情况的方法。2.6 verilog HDL循环语句与结构说明语句与条件分支语句一样,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另"},{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar 85S190I11' onmouseover=\"highlightSetter('85S190I11',false)\" onmouseout=\"highlightSetter('85S190I11',true)\">循环语句:</em><em class='similar 85S190I12' onmouseover=\"highlightSetter('85S190I12',false)\" onmouseout=\"highlightSetter('85S190I12',true)\">verilog中有四种循环语句:</em><em class='similar 85S190I13' onmouseover=\"highlightSetter('85S190I13',false)\" onmouseout=\"highlightSetter('85S190I13',true)\">while、</em>for、<em class='similar 85S190I15' onmouseover=\"highlightSetter('85S190I15',false)\" onmouseout=\"highlightSetter('85S190I15',true)\">repeat和forever,</em><em class='similar 85S190I16' onmouseover=\"highlightSetter('85S190I16',false)\" onmouseout=\"highlightSetter('85S190I16',true)\">其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:while","datatype":"webpage","clcs":[],"similarityPercentage":"51.9%","self":false,"text":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar'>循环语句:</em><em class='similar'>verilog中有四种循环语句:</em><em class='similar'>while、</em>for、<em class='similar'>repeat和forever,</em><em class='similar'>其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:while"}],"textWithDynamicClass":"for四种,<em class='similar T84I6' onmouseover=\"highlightSetter('T84I6',false)\" onmouseout=\"highlightSetter('T84I6',true)\">其中除去forever语句是一种无限的循环语句外,</em>","similar_word_count":19,"text":"for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>","suggest":{"synonyms":[{"synonyms":["无尽"],"keyword":"无限"}],"keyword":["forever","语句","无限","循环语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar 88S198I4' onmouseover=\"highlightSetter('88S198I4',false)\" onmouseout=\"highlightSetter('88S198I4',true)\">函数</em><em class='similar 88S198I5' onmouseover=\"highlightSetter('88S198I5',false)\" onmouseout=\"highlightSetter('88S198I5',true)\">(function)</em><em class='similar 88S198I6' onmouseover=\"highlightSetter('88S198I6',false)\" onmouseout=\"highlightSetter('88S198I6',true)\">函数</em>(functinn)<em class='similar 88S198I8' onmouseover=\"highlightSetter('88S198I8',false)\" onmouseout=\"highlightSetter('88S198I8',true)\">类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用","datatype":"book","clcs":[],"similarityPercentage":"76.2%","self":false,"text":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(functinn)<em class='similar'>类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000544119911","author":"杜建国","university":"","source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":"个持续时间将是 tic time 个时钟周期长度。6.5.2<em class='similar 88S199I3' onmouseover=\"highlightSetter('88S199I3',false)\" onmouseout=\"highlightSetter('88S199I3',true)\">函数</em><em class='similar 88S199I4' onmouseover=\"highlightSetter('88S199I4',false)\" onmouseout=\"highlightSetter('88S199I4',true)\">(function)</em><em class='similar 88S199I5' onmouseover=\"highlightSetter('88S199I5',false)\" onmouseout=\"highlightSetter('88S199I5',true)\">函数</em>(funcion)<em class='similar 88S199I7' onmouseover=\"highlightSetter('88S199I7',false)\" onmouseout=\"highlightSetter('88S199I7',true)\">类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL 语言中的函数使","datatype":"book","clcs":["TP312","VH/13"],"similarityPercentage":"76.2%","self":false,"text":"个持续时间将是 tic time 个时钟周期长度。6.5.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(funcion)<em class='similar'>类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL 语言中的函数使"},{"profession":false,"keywords":[],"year":"","docid":"9000181939983411","author":"","university":"","source":"网页","title":"verilog任务和函数ppt课件","url":"https://www.docin.com/p%2D2480211351.html","reference":false,"similarScore":70.35714,"teacher":"","textWithDynamicClass":"14 Verilog Verilog function 函数<em class='similar 88S200I4' onmouseover=\"highlightSetter('88S200I4',false)\" onmouseout=\"highlightSetter('88S200I4',true)\">(function)</em><em class='similar 88S200I5' onmouseover=\"highlightSetter('88S200I5',false)\" onmouseout=\"highlightSetter('88S200I5',true)\">类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用","datatype":"webpage","clcs":[],"similarityPercentage":"65.0%","self":false,"text":"14 Verilog Verilog function 函数<em class='similar'>(function)</em><em class='similar'>类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用"}],"textWithDynamicClass":"<em class='similar T87I0' onmouseover=\"highlightSetter('T87I0',false)\" onmouseout=\"highlightSetter('T87I0',true)\">Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar T87I1' onmouseover=\"highlightSetter('T87I1',false)\" onmouseout=\"highlightSetter('T87I1',true)\">函数</em><em class='similar T87I2' onmouseover=\"highlightSetter('T87I2',false)\" onmouseout=\"highlightSetter('T87I2',true)\">(Function)</em>","similar_word_count":33,"text":"<em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>","suggest":{"synonyms":[],"keyword":["编程语言","函数概念","语法"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 89S201I4' onmouseover=\"highlightSetter('89S201I4',false)\" onmouseout=\"highlightSetter('89S201I4',true)\">5.16函数的综合在Verilog HDL语句中,</em><em class='similar 89S201I5' onmouseover=\"highlightSetter('89S201I5',false)\" onmouseout=\"highlightSetter('89S201I5',true)\">函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,","datatype":"book","clcs":[],"similarityPercentage":"85.3%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,"}],"textWithDynamicClass":"<em class='similar T88I0' onmouseover=\"highlightSetter('T88I0',false)\" onmouseout=\"highlightSetter('T88I0',true)\">在Verilog HDL语句中,</em><em class='similar T88I1' onmouseover=\"highlightSetter('T88I1',false)\" onmouseout=\"highlightSetter('T88I1',true)\">函数代表了纯组合逻辑。</em>","similar_word_count":17,"text":"<em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em>","suggest":{"synonyms":[],"keyword":["语句","组合逻辑","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar 89S201I10' onmouseover=\"highlightSetter('89S201I10',false)\" onmouseout=\"highlightSetter('89S201I10',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar 89S201I11' onmouseover=\"highlightSetter('89S201I11',false)\" onmouseout=\"highlightSetter('89S201I11',true)\">仅被综合成导线。</em>例5一42给出了一个函数的实例,","datatype":"book","clcs":[],"similarityPercentage":"77.1%","self":false,"text":"函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar'>仅被综合成导线。</em>例5一42给出了一个函数的实例,"}],"textWithDynamicClass":"在Verilog HDL语句中,函数代表了纯组合逻辑。<em class='similar T88I2' onmouseover=\"highlightSetter('T88I2',false)\" onmouseout=\"highlightSetter('T88I2',true)\">在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar T88I3' onmouseover=\"highlightSetter('T88I3',false)\" onmouseout=\"highlightSetter('T88I3',true)\">仅被综合映射为成片上导线</em>","similar_word_count":40,"text":"在Verilog HDL语句中,函数代表了纯组合逻辑。<em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["语句","函数语句","临时","映射","成片","导线"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。5.16函数的综合在Verilog HDL语句中,<em class='similar 89S201I5' onmouseover=\"highlightSetter('89S201I5',false)\" onmouseout=\"highlightSetter('89S201I5',true)\">函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,","datatype":"book","clcs":[],"similarityPercentage":"75.8%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。5.16函数的综合在Verilog HDL语句中,<em class='similar'>函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。任何在函数中定义的局部变量都被当做纯粹的临时变量,"}],"textWithDynamicClass":"[16]。<em class='similar T88I5' onmouseover=\"highlightSetter('T88I5',false)\" onmouseout=\"highlightSetter('T88I5',true)\">由于Function内部代表了纯组合逻辑,</em>","similar_word_count":14,"text":"[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>","suggest":{"synonyms":[],"keyword":["组合逻辑","逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000131828806911","author":"","university":"","source":"网页","title":"浅谈Java中的数据_Hybeyond_的博客-CSDN博客","url":"https://blog.csdn.net/Hybeyond_/article/details/100088851","reference":false,"similarScore":201.72269,"teacher":"","textWithDynamicClass":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar 91S206I5' onmouseover=\"highlightSetter('91S206I5',false)\" onmouseout=\"highlightSetter('91S206I5',true)\">广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar 91S206I6' onmouseover=\"highlightSetter('91S206I6',false)\" onmouseout=\"highlightSetter('91S206I6',true)\">是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"82.6%","self":false,"text":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar'>广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"},{"profession":false,"keywords":[],"year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编；黄涛，吴强副主编；王社，魏郧华，胡凯，蔡振参编","university":"","source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":"","reference":false,"similarScore":237.46571,"teacher":"","textWithDynamicClass":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar 91S204I8' onmouseover=\"highlightSetter('91S204I8',false)\" onmouseout=\"highlightSetter('91S204I8',true)\">是事实或观察的结果,</em><em class='similar 91S204I9' onmouseover=\"highlightSetter('91S204I9',false)\" onmouseout=\"highlightSetter('91S204I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 91S204I10' onmouseover=\"highlightSetter('91S204I10',false)\" onmouseout=\"highlightSetter('91S204I10',true)\">是用于表示客观事物的未经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字","datatype":"book","clcs":["TP311.138"],"similarityPercentage":"77.0%","self":false,"text":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字"},{"profession":false,"keywords":[],"year":"","docid":"9000118062415311","author":"","university":"","source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search","reference":false,"similarScore":237.4657,"teacher":"","textWithDynamicClass":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar 91S205I8' onmouseover=\"highlightSetter('91S205I8',false)\" onmouseout=\"highlightSetter('91S205I8',true)\">是事实或观察的结果,</em><em class='similar 91S205I9' onmouseover=\"highlightSetter('91S205I9',false)\" onmouseout=\"highlightSetter('91S205I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 91S205I10' onmouseover=\"highlightSetter('91S205I10',false)\" onmouseout=\"highlightSetter('91S205I10',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"76.0%","self":false,"text":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"},{"profession":false,"keywords":[],"year":"","docid":"9000108431821311","author":"","university":"","source":"网页","title":"数据分析的准备工作：从问题分析到数据清洗","url":"http://m.toutiao.com/i6643684078983840264/","reference":false,"similarScore":613.7815,"teacher":"","textWithDynamicClass":"<em class='similar 91S203I0' onmouseover=\"highlightSetter('91S203I0',false)\" onmouseout=\"highlightSetter('91S203I0',true)\">是对客观事物的逻辑归纳,</em><em class='similar 91S203I1' onmouseover=\"highlightSetter('91S203I1',false)\" onmouseout=\"highlightSetter('91S203I1',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar 91S203I11' onmouseover=\"highlightSetter('91S203I11',false)\" onmouseout=\"highlightSetter('91S203I11',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 91S203I12' onmouseover=\"highlightSetter('91S203I12',false)\" onmouseout=\"highlightSetter('91S203I12',true)\">如正相关,</em><em class='similar 91S203I13' onmouseover=\"highlightSetter('91S203I13',false)\" onmouseout=\"highlightSetter('91S203I13',true)\">负相关。</em><em class='similar 91S203I14' onmouseover=\"highlightSetter('91S203I14',false)\" onmouseout=\"highlightSetter('91S203I14',true)\">数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发","datatype":"webpage","clcs":[],"similarityPercentage":"47.5%","self":false,"text":"<em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em><em class='similar'>数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发"}],"textWithDynamicClass":"<em class='similar T90I0' onmouseover=\"highlightSetter('T90I0',false)\" onmouseout=\"highlightSetter('T90I0',true)\">数据是对事实进行观察后产生的结果的描述,</em><em class='similar T90I1' onmouseover=\"highlightSetter('T90I1',false)\" onmouseout=\"highlightSetter('T90I1',true)\">是对客观事物一种数学逻辑归纳,</em><em class='similar T90I2' onmouseover=\"highlightSetter('T90I2',false)\" onmouseout=\"highlightSetter('T90I2',true)\">是用于表示客观事物的最好的原始素材</em>","similar_word_count":50,"text":"<em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>","suggest":{"synonyms":[{"synonyms":["事例"],"keyword":"事实"},{"synonyms":["总结"],"keyword":"归纳"}],"keyword":["事实","客观事物","数学逻辑","归纳","原始素材"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000188274078611","author":"","university":"","source":"网页","title":"数据标签生成、模型训练、事件识别方法和装置","url":"http://www.doc88.com/p%2D99729934791774.html","reference":false,"similarScore":240,"teacher":"","textWithDynamicClass":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar 91S207I3' onmouseover=\"highlightSetter('91S207I3',false)\" onmouseout=\"highlightSetter('91S207I3',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 91S207I4' onmouseover=\"highlightSetter('91S207I4',false)\" onmouseout=\"highlightSetter('91S207I4',true)\">如正相关,</em><em class='similar 91S207I5' onmouseover=\"highlightSetter('91S207I5',false)\" onmouseout=\"highlightSetter('91S207I5',true)\">负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。","datatype":"webpage","clcs":[],"similarityPercentage":"98.0%","self":false,"text":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。"},{"profession":false,"keywords":[],"year":"","docid":"9000108431821311","author":"","university":"","source":"网页","title":"数据分析的准备工作：从问题分析到数据清洗","url":"http://m.toutiao.com/i6643684078983840264/","reference":false,"similarScore":613.7815,"teacher":"","textWithDynamicClass":"是用于表示客观事物的未经加工的的原始素材。数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar 91S203I11' onmouseover=\"highlightSetter('91S203I11',false)\" onmouseout=\"highlightSetter('91S203I11',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 91S203I12' onmouseover=\"highlightSetter('91S203I12',false)\" onmouseout=\"highlightSetter('91S203I12',true)\">如正相关,</em><em class='similar 91S203I13' onmouseover=\"highlightSetter('91S203I13',false)\" onmouseout=\"highlightSetter('91S203I13',true)\">负相关。</em><em class='similar 91S203I14' onmouseover=\"highlightSetter('91S203I14',false)\" onmouseout=\"highlightSetter('91S203I14',true)\">数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发","datatype":"webpage","clcs":[],"similarityPercentage":"71.1%","self":false,"text":"是用于表示客观事物的未经加工的的原始素材。数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em><em class='similar'>数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发"}],"textWithDynamicClass":"[3]。<em class='similar T90I4' onmouseover=\"highlightSetter('T90I4',false)\" onmouseout=\"highlightSetter('T90I4',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar T90I5' onmouseover=\"highlightSetter('T90I5',false)\" onmouseout=\"highlightSetter('T90I5',true)\">如正相关,</em><em class='similar T90I6' onmouseover=\"highlightSetter('T90I6',false)\" onmouseout=\"highlightSetter('T90I6',true)\">负相关。</em>","similar_word_count":24,"text":"[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>","suggest":{"synonyms":[],"keyword":["数据相关性","指数","正相关","负相关"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000187461126911","author":"","university":"","source":"网页","title":"油藏经营管理","url":"https://www.docin.com/p%2D920724272.html","reference":false,"similarScore":104,"teacher":"","textWithDynamicClass":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar 92S209I4' onmouseover=\"highlightSetter('92S209I4',false)\" onmouseout=\"highlightSetter('92S209I4',true)\">量纲一般也不同,</em><em class='similar 92S209I5' onmouseover=\"highlightSetter('92S209I5',false)\" onmouseout=\"highlightSetter('92S209I5',true)\">数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或","datatype":"webpage","clcs":[],"similarityPercentage":"75.9%","self":false,"text":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar'>量纲一般也不同,</em><em class='similar'>数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或"}],"textWithDynamicClass":"本研究共计提取了67项特征,<em class='similar T91I1' onmouseover=\"highlightSetter('T91I1',false)\" onmouseout=\"highlightSetter('T91I1',true)\">这些特征的数据取值范围差别很大,</em><em class='similar T91I2' onmouseover=\"highlightSetter('T91I2',false)\" onmouseout=\"highlightSetter('T91I2',true)\">量纲也不同,</em>","similar_word_count":20,"text":"本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>","suggest":{"synonyms":[],"keyword":["取值范围","量纲"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117476774611","author":"csdn","university":"","source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596","reference":false,"similarScore":320.97223,"teacher":"","textWithDynamicClass":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar 93S211I2' onmouseover=\"highlightSetter('93S211I2',false)\" onmouseout=\"highlightSetter('93S211I2',true)\">最重要也最需要应用到数据上的转换器,</em><em class='similar 93S211I3' onmouseover=\"highlightSetter('93S211I3',false)\" onmouseout=\"highlightSetter('93S211I3',true)\">就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,往往导致机器学习算法的性能表现不佳,","datatype":"webpage","clcs":[],"similarityPercentage":"50.0%","self":false,"text":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar'>最重要也最需要应用到数据上的转换器,</em><em class='similar'>就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,往往导致机器学习算法的性能表现不佳,"}],"textWithDynamicClass":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar T92I2' onmouseover=\"highlightSetter('T92I2',false)\" onmouseout=\"highlightSetter('T92I2',true)\">所以需要对特征数据进行的一项重要操作就是特征缩放。</em>","similar_word_count":24,"text":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em>","suggest":{"synonyms":[],"keyword":["特征数据","特征缩放"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000143881533411","author":"","university":"","source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments","reference":false,"similarScore":311.05557,"teacher":"","textWithDynamicClass":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar 93S210I3' onmouseover=\"highlightSetter('93S210I3',false)\" onmouseout=\"highlightSetter('93S210I3',true)\">特征缩放,</em><em class='similar 93S210I4' onmouseover=\"highlightSetter('93S210I4',false)\" onmouseout=\"highlightSetter('93S210I4',true)\">如果输入的数值属性具有非常大的比例差异,</em>往往导致机器学习算法的性能表现不佳,","datatype":"webpage","clcs":[],"similarityPercentage":"46.2%","self":false,"text":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar'>特征缩放,</em><em class='similar'>如果输入的数值属性具有非常大的比例差异,</em>往往导致机器学习算法的性能表现不佳,"}],"textWithDynamicClass":"所以需要对特征数据进行的一项重要操作就是特征缩放。<em class='similar T92I3' onmouseover=\"highlightSetter('T92I3',false)\" onmouseout=\"highlightSetter('T92I3',true)\">若输入的样本的特征数据存在较大的数值差异,</em>","similar_word_count":20,"text":"所以需要对特征数据进行的一项重要操作就是特征缩放。<em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em>","suggest":{"synonyms":[],"keyword":["特征数据"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117476774611","author":"csdn","university":"","source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596","reference":false,"similarScore":320.97223,"teacher":"","textWithDynamicClass":"就是特征缩放。如果输入的数值属性具有非常大的比例差异,<em class='similar 93S211I5' onmouseover=\"highlightSetter('93S211I5',false)\" onmouseout=\"highlightSetter('93S211I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 93S211I6' onmouseover=\"highlightSetter('93S211I6',false)\" onmouseout=\"highlightSetter('93S211I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39","datatype":"webpage","clcs":[],"similarityPercentage":"79.2%","self":false,"text":"就是特征缩放。如果输入的数值属性具有非常大的比例差异,<em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39"},{"profession":false,"keywords":[],"year":"","docid":"9000143881533411","author":"","university":"","source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments","reference":false,"similarScore":311.05557,"teacher":"","textWithDynamicClass":"如果输入的数值属性具有非常大的比例差异,<em class='similar 93S210I5' onmouseover=\"highlightSetter('93S210I5',false)\" onmouseout=\"highlightSetter('93S210I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 93S210I6' onmouseover=\"highlightSetter('93S210I6',false)\" onmouseout=\"highlightSetter('93S210I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393","datatype":"webpage","clcs":[],"similarityPercentage":"76.1%","self":false,"text":"如果输入的数值属性具有非常大的比例差异,<em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393"}],"textWithDynamicClass":"若输入的样本的特征数据存在较大的数值差异,<em class='similar T92I4' onmouseover=\"highlightSetter('T92I4',false)\" onmouseout=\"highlightSetter('T92I4',true)\">往往会导致机器学习算法的性能表现不佳,</em><em class='similar T92I5' onmouseover=\"highlightSetter('T92I5',false)\" onmouseout=\"highlightSetter('T92I5',true)\">当然也有极少数特例,</em>","similar_word_count":27,"text":"若输入的样本的特征数据存在较大的数值差异,<em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>","suggest":{"synonyms":[],"keyword":["机器学习算法","性能表现","特例"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110791518511","author":"csdn","university":"","source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516","reference":false,"similarScore":80.35715,"teacher":"","textWithDynamicClass":"ng)和标准化(standardization)转换流水线:<em class='similar 94S212I13' onmouseover=\"highlightSetter('94S212I13',false)\" onmouseout=\"highlightSetter('94S212I13',true)\">利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们","datatype":"webpage","clcs":[],"similarityPercentage":"61.9%","self":false,"text":"ng)和标准化(standardization)转换流水线:<em class='similar'>利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们"}],"textWithDynamicClass":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar T93I1' onmouseover=\"highlightSetter('T93I1',false)\" onmouseout=\"highlightSetter('T93I1',true)\">所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>","similar_word_count":31,"text":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>","suggest":{"synonyms":[],"keyword":["scikit","learn","pipeline"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000123319620811","author":"","university":"","source":"网页","title":"基于神经网络的磁瓦表面缺陷检测识别_刘畅 - 道客巴巴","url":"https://www.doc88.com/p%2D6129946121758.html","reference":false,"similarScore":62.592594,"teacher":"","textWithDynamicClass":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar 97S215I8' onmouseover=\"highlightSetter('97S215I8',false)\" onmouseout=\"highlightSetter('97S215I8',true)\">使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中","datatype":"webpage","clcs":[],"similarityPercentage":"64.6%","self":false,"text":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar'>使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中"}],"textWithDynamicClass":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar T96I0' onmouseover=\"highlightSetter('T96I0',false)\" onmouseout=\"highlightSetter('T96I0',true)\">,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>","similar_word_count":27,"text":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>","suggest":{"synonyms":[],"keyword":["5折","交叉验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120755765111","author":"","university":"","source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search","reference":false,"similarScore":75.73964,"teacher":"","textWithDynamicClass":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar 98S216I9' onmouseover=\"highlightSetter('98S216I9',false)\" onmouseout=\"highlightSetter('98S216I9',true)\">模型训练,</em><em class='similar 98S216I10' onmouseover=\"highlightSetter('98S216I10',false)\" onmouseout=\"highlightSetter('98S216I10',true)\">输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar 98S216I11' onmouseover=\"highlightSetter('98S216I11',false)\" onmouseout=\"highlightSetter('98S216I11',true)\">训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心","datatype":"webpage","clcs":[],"similarityPercentage":"32.0%","self":false,"text":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar'>模型训练,</em><em class='similar'>输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar'>训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心"},{"profession":false,"keywords":[],"year":"","docid":"9000206973298911","author":"","university":"","source":"网页","title":"一种高空抛物的检测方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011159027.html","reference":false,"similarScore":92.5641,"teacher":"","textWithDynamicClass":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar 98S217I4' onmouseover=\"highlightSetter('98S217I4',false)\" onmouseout=\"highlightSetter('98S217I4',true)\">重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar 98S217I5' onmouseover=\"highlightSetter('98S217I5',false)\" onmouseout=\"highlightSetter('98S217I5',true)\">达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可","datatype":"webpage","clcs":[],"similarityPercentage":"26.7%","self":false,"text":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar'>重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar'>达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可"}],"textWithDynamicClass":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar T97I4' onmouseover=\"highlightSetter('T97I4',false)\" onmouseout=\"highlightSetter('T97I4',true)\">所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","similar_word_count":39,"text":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","suggest":{"synonyms":[{"synonyms":["注意"],"keyword":"着重"}],"keyword":["随机森林","着重","神经网络","模型训练","参数调整"]}}],"word_count":39759,"similarity":0.133,"similarity_copy":0.133,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"总结与展望","word_similar_count":0,"word_ref_count":0,"sources":[],"similarity_pro":0,"word_copy_count":0,"word_self_count":0,"similar_paragraphs":[],"word_count":1545,"similarity":0,"similarity_copy":0,"similarity_self":0}],"similarity_custom":0,"similarity_pro":0,"last_part_similar_count":4024,"word_copy_count":5285,"chapter_similar_count":1,"max_source_info":{"source_max_similar_docid":"1900023715219511","source_max_similar_url":"","source_max_similar_title":"Verilog HDL应用程序设计实例精讲","source_max_similar_count":934},"chapter_min_similar_word_count":5285,"front_part_similar_count":1261,"chapter_max_similar_word_count":5285,"word_self_count":0,"TSetForS_Str":"{◑31S58I6◑:[◑T30I0◑],◑67S146I11◑:[◑T66I5◑],◑91S205I9◑:[◑T90I1◑],◑48S99I6◑:[◑T47I3◑,◑T47I7◑],◑24S40I5◑:[◑T23I3◑],◑48S99I5◑:[◑T47I6◑],◑80S174I5◑:[◑T79I1◑],◑24S40I4◑:[◑T23I4◑],◑48S99I4◑:[◑T47I5◑],◑80S174I4◑:[◑T79I0◑],◑48S99I3◑:[◑T47I4◑],◑91S205I8◑:[◑T90I0◑],◑24S40I6◑:[◑T23I5◑,◑T23I4◑],◑48S99I2◑:[◑T47I1◑],◑44S89I8◑:[◑T43I2◑],◑48S99I1◑:[◑T47I0◑],◑44S89I7◑:[◑T43I1◑],◑48S99I0◑:[◑T47I6◑],◑24S40I3◑:[◑T23I3◑],◑44S89I6◑:[◑T43I0◑],◑67S146I10◑:[◑T66I4◑],◑44S89I9◑:[◑T43I2◑],◑42S81I5◑:[◑T41I4◑],◑42S81I6◑:[◑T41I5◑],◑42S81I3◑:[◑T41I2◑,◑T41I7◑],◑42S81I4◑:[◑T41I3◑],◑42S81I9◑:[◑T41I6◑],◑42S81I7◑:[◑T41I5◑],◑58S116I13◑:[◑T57I4◑],◑42S81I8◑:[◑T41I6◑],◑63S132I8◑:[◑T62I4◑],◑19S30I6◑:[◑T18I6◑],◑19S30I5◑:[◑T18I5◑],◑19S30I3◑:[◑T18I3◑],◑23S37I11◑:[◑T22I5◑,◑T22I4◑],◑36S64I9◑:[◑T35I1◑],◑36S64I7◑:[◑T35I0◑],◑36S64I8◑:[◑T35I0◑],◑23S37I14◑:[◑T22I5◑],◑33S60I6◑:[◑T32I1◑],◑33S60I5◑:[◑T32I0◑],◑80S174I6◑:[◑T79I1◑],◑31S57I5◑:[◑T30I0◑],◑91S204I9◑:[◑T90I1◑],◑31S57I4◑:[◑T30I0◑],◑91S204I8◑:[◑T90I0◑],◑75S156I15◑:[◑T74I2◑],◑44S88I6◑:[◑T43I2◑],◑75S156I12◑:[◑T74I1◑],◑75S156I11◑:[◑T74I1◑,◑T74I0◑,◑T74I2◑],◑75S156I14◑:[◑T74I2◑],◑75S156I13◑:[◑T74I0◑],◑85S186I7◑:[◑T84I2◑],◑85S186I5◑:[◑T84I1◑,◑T84I6◑],◑85S186I4◑:[◑T84I1◑,◑T84I0◑],◑19S31I7◑:[◑T18I6◑],◑19S31I6◑:[◑T18I5◑],◑19S31I4◑:[◑T18I3◑],◑8S13I4◑:[◑T7I4◑],◑8S13I6◑:[◑T7I5◑],◑8S13I7◑:[◑T7I6◑],◑44S88I5◑:[◑T43I1◑],◑44S88I4◑:[◑T43I0◑],◑36S63I4◑:[◑T35I2◑],◑36S63I3◑:[◑T35I1◑],◑8S13I0◑:[◑T7I0◑],◑8S13I2◑:[◑T7I2◑],◑8S13I3◑:[◑T7I3◑],◑31S56I8◑:[◑T30I0◑],◑78S168I3◑:[◑T77I5◑],◑82S179I6◑:[◑T81I4◑,◑T81I3◑],◑82S179I5◑:[◑T81I2◑],◑82S179I4◑:[◑T81I2◑],◑91S207I4◑:[◑T90I5◑],◑91S207I3◑:[◑T90I4◑],◑78S168I4◑:[◑T77I6◑],◑91S207I5◑:[◑T90I6◑],◑20S32I6◑:[◑T19I1◑],◑20S32I5◑:[◑T19I0◑],◑20S32I8◑:[◑T19I4◑],◑44S87I7◑:[◑T43I2◑],◑20S32I9◑:[◑T19I5◑],◑39S69I9◑:[◑T38I2◑],◑22S34I10◑:[◑T21I2◑],◑5S9I5◑:[◑T4I0◑],◑5S9I7◑:[◑T4I2◑],◑3S7I11◑:[◑T2I3◑],◑53S109I16◑:[◑T52I1◑],◑53S109I15◑:[◑T52I0◑],◑1S5I1◑:[◑T0I10◑],◑53S109I18◑:[◑T52I2◑],◑3S7I10◑:[◑T2I2◑],◑53S109I17◑:[◑T52I3◑],◑1S5I3◑:[◑T0I8◑],◑1S5I2◑:[◑T0I9◑],◑53S109I19◑:[◑T52I4◑],◑39S68I7◑:[◑T38I4◑],◑39S68I6◑:[◑T38I3◑],◑39S68I8◑:[◑T38I5◑],◑39S68I3◑:[◑T38I0◑],◑44S87I6◑:[◑T43I1◑],◑44S87I5◑:[◑T43I0◑],◑39S68I5◑:[◑T38I2◑],◑39S68I4◑:[◑T38I1◑],◑58S119I8◑:[◑T57I1◑,◑T57I2◑,◑T57I3◑,◑T57I4◑],◑31S55I9◑:[◑T30I1◑],◑53S110I15◑:[◑T52I1◑],◑82S178I6◑:[◑T81I4◑,◑T81I3◑],◑82S178I5◑:[◑T81I2◑],◑82S178I4◑:[◑T81I2◑],◑31S55I5◑:[◑T30I0◑],◑78S167I8◑:[◑T77I6◑],◑91S206I5◑:[◑T90I1◑],◑12S18I9◑:[◑T11I5◑,◑T11I4◑],◑31S55I4◑:[◑T30I0◑],◑78S167I7◑:[◑T77I5◑],◑91S206I6◑:[◑T90I2◑],◑12S18I5◑:[◑T11I1◑],◑12S18I6◑:[◑T11I2◑],◑62S125I11◑:[◑T61I3◑],◑12S18I7◑:[◑T11I3◑],◑62S125I12◑:[◑T61I3◑],◑62S125I10◑:[◑T61I3◑],◑27S47I13◑:[◑T26I1◑],◑88S200I4◑:[◑T87I2◑],◑27S47I12◑:[◑T26I2◑],◑88S200I5◑:[◑T87I0◑],◑78S167I9◑:[◑T77I7◑],◑10S15I4◑:[◑T9I1◑],◑46S92I6◑:[◑T45I1◑],◑10S15I7◑:[◑T9I5◑],◑10S15I6◑:[◑T9I4◑],◑46S92I7◑:[◑T45I0◑],◑39S69I8◑:[◑T38I1◑],◑39S69I7◑:[◑T38I0◑],◑66S140I8◑:[◑T65I2◑],◑61S122I7◑:[◑T60I2◑],◑61S122I6◑:[◑T60I1◑],◑39S72I10◑:[◑T38I2◑],◑78S166I5◑:[◑T77I5◑],◑39S72I11◑:[◑T38I3◑],◑78S166I4◑:[◑T77I1◑],◑27S47I6◑:[◑T26I1◑],◑39S72I12◑:[◑T38I4◑],◑78S166I3◑:[◑T77I1◑],◑27S47I7◑:[◑T26I1◑],◑38S67I5◑:[◑T37I3◑],◑39S72I13◑:[◑T38I5◑],◑31S54I6◑:[◑T30I1◑],◑38S67I7◑:[◑T37I0◑],◑38S67I8◑:[◑T37I1◑],◑78S166I7◑:[◑T77I7◑],◑31S54I7◑:[◑T30I2◑],◑38S67I9◑:[◑T37I6◑],◑78S166I6◑:[◑T77I6◑],◑48S101I3◑:[◑T47I4◑],◑56S114I9◑:[◑T55I1◑],◑62S123I10◑:[◑T61I3◑],◑48S101I5◑:[◑T47I6◑],◑48S101I4◑:[◑T47I5◑],◑56S114I8◑:[◑T55I0◑],◑62S123I14◑:[◑T61I5◑,◑T61I4◑],◑48S101I6◑:[◑T47I3◑,◑T47I7◑],◑62S123I13◑:[◑T61I5◑,◑T61I4◑],◑62S123I16◑:[◑T61I6◑],◑62S123I15◑:[◑T61I6◑],◑24S39I11◑:[◑T23I5◑,◑T23I4◑],◑20S32I10◑:[◑T19I7◑],◑20S32I11◑:[◑T19I4◑,◑T19I8◑],◑85S189I3◑:[◑T84I1◑,◑T84I6◑],◑85S189I2◑:[◑T84I0◑],◑62S124I3◑:[◑T61I3◑],◑62S124I2◑:[◑T61I2◑],◑62S124I8◑:[◑T61I6◑],◑41S78I7◑:[◑T40I0◑],◑62S124I7◑:[◑T61I5◑,◑T61I4◑],◑41S78I8◑:[◑T40I1◑],◑62S124I6◑:[◑T61I5◑,◑T61I4◑],◑62S124I5◑:[◑T61I4◑],◑62S124I9◑:[◑T61I6◑],◑22S34I8◑:[◑T21I2◑],◑22S34I7◑:[◑T21I1◑],◑58S117I6◑:[◑T57I2◑,◑T57I3◑,◑T57I4◑],◑55S113I5◑:[◑T54I2◑,◑T54I4◑],◑31S54I4◑:[◑T30I0◑],◑31S54I3◑:[◑T30I0◑],◑55S113I1◑:[◑T54I0◑],◑27S48I3◑:[◑T26I1◑],◑78S165I6◑:[◑T77I7◑],◑27S48I4◑:[◑T26I1◑],◑78S165I5◑:[◑T77I6◑],◑27S48I5◑:[◑T26I1◑],◑54S112I7◑:[◑T53I0◑],◑78S165I4◑:[◑T77I5◑],◑78S165I3◑:[◑T77I1◑],◑31S53I7◑:[◑T30I1◑],◑48S96I8◑:[◑T47I7◑],◑9S14I5◑:[◑T8I4◑],◑31S53I6◑:[◑T30I0◑],◑48S96I7◑:[◑T47I6◑],◑80S171I7◑:[◑T79I2◑],◑9S14I6◑:[◑T8I5◑],◑48S96I6◑:[◑T47I5◑],◑80S171I6◑:[◑T79I1◑],◑9S14I7◑:[◑T8I7◑],◑31S53I8◑:[◑T30I2◑],◑48S96I5◑:[◑T47I4◑],◑80S171I5◑:[◑T79I0◑],◑48S96I4◑:[◑T47I3◑],◑48S100I4◑:[◑T47I3◑,◑T47I6◑,◑T47I7◑],◑48S100I3◑:[◑T47I6◑],◑48S96I2◑:[◑T47I1◑],◑9S14I3◑:[◑T8I2◑,◑T8I1◑],◑48S96I1◑:[◑T47I0◑],◑78S165I2◑:[◑T77I1◑],◑48S100I2◑:[◑T47I5◑],◑52S108I14◑:[◑T51I1◑],◑52S108I13◑:[◑T51I2◑],◑56S114I12◑:[◑T55I4◑],◑41S77I0◑:[◑T40I0◑],◑41S77I1◑:[◑T40I1◑],◑82S182I10◑:[◑T81I4◑,◑T81I3◑],◑15S22I8◑:[◑T14I1◑],◑15S22I7◑:[◑T14I1◑],◑32S59I3◑:[◑T31I3◑],◑34S61I8◑:[◑T33I0◑],◑32S59I4◑:[◑T31I4◑],◑34S61I9◑:[◑T33I0◑],◑85S186I13◑:[◑T84I6◑],◑32S59I5◑:[◑T31I5◑],◑39S71I10◑:[◑T38I0◑],◑56S114I10◑:[◑T55I3◑],◑64S137I8◑:[◑T63I2◑],◑53S111I4◑:[◑T52I1◑],◑1S0I6◑:[◑T0I5◑],◑1S0I7◑:[◑T0I4◑],◑1S0I8◑:[◑T0I5◑],◑7S12I5◑:[◑T6I2◑],◑7S12I4◑:[◑T6I2◑],◑41S77I3◑:[◑T40I2◑],◑53S111I6◑:[◑T52I4◑],◑62S125I9◑:[◑T61I3◑],◑53S111I5◑:[◑T52I1◑,◑T52I2◑,◑T52I3◑],◑62S125I8◑:[◑T61I2◑],◑33S60I13◑:[◑T32I5◑,◑T32I4◑],◑33S60I12◑:[◑T32I2◑],◑58S118I2◑:[◑T57I2◑],◑4S8I11◑:[◑T3I6◑],◑92S209I4◑:[◑T91I2◑],◑4S8I12◑:[◑T3I7◑],◑92S209I5◑:[◑T91I1◑],◑31S53I5◑:[◑T30I0◑],◑65S138I3◑:[◑T64I0◑],◑65S138I4◑:[◑T64I0◑],◑48S97I9◑:[◑T47I3◑,◑T47I6◑,◑T47I7◑],◑78S164I5◑:[◑T77I7◑],◑48S97I8◑:[◑T47I6◑],◑78S164I4◑:[◑T77I6◑],◑48S97I7◑:[◑T47I5◑],◑63S127I6◑:[◑T62I1◑],◑48S97I6◑:[◑T47I4◑],◑80S172I6◑:[◑T79I0◑],◑48S97I5◑:[◑T47I3◑],◑63S127I8◑:[◑T62I3◑],◑63S127I7◑:[◑T62I2◑,◑T62I3◑],◑48S97I3◑:[◑T47I1◑],◑48S97I2◑:[◑T47I0◑],◑78S164I1◑:[◑T77I5◑],◑78S164I0◑:[◑T77I0◑,◑T77I1◑],◑30S51I13◑:[◑T29I7◑],◑85S187I8◑:[◑T84I2◑],◑41S76I3◑:[◑T40I1◑],◑42S81I10◑:[◑T41I7◑],◑63S127I9◑:[◑T62I4◑],◑24S39I8◑:[◑T23I2◑],◑30S51I11◑:[◑T29I6◑],◑85S187I6◑:[◑T84I1◑,◑T84I6◑],◑30S51I10◑:[◑T29I6◑],◑85S187I5◑:[◑T84I1◑,◑T84I0◑],◑42S81I12◑:[◑T41I7◑],◑67S145I10◑:[◑T66I6◑],◑67S145I11◑:[◑T66I7◑],◑24S38I2◑:[◑T23I2◑],◑67S145I12◑:[◑T66I8◑],◑67S145I13◑:[◑T66I9◑],◑67S145I14◑:[◑T66I10◑],◑17S24I7◑:[◑T16I3◑],◑62S126I6◑:[◑T61I4◑],◑62S126I5◑:[◑T61I4◑],◑41S76I4◑:[◑T40I2◑],◑50S103I12◑:[◑T49I0◑],◑50S103I13◑:[◑T49I0◑],◑17S24I5◑:[◑T16I2◑,◑T16I1◑],◑62S126I8◑:[◑T61I5◑],◑62S126I7◑:[◑T61I5◑],◑22S36I5◑:[◑T21I0◑],◑80S172I9◑:[◑T79I3◑],◑80S172I8◑:[◑T79I2◑],◑85S187I19◑:[◑T84I6◑],◑63S128I1◑:[◑T62I4◑,◑T62I0◑],◑48S98I8◑:[◑T47I7◑],◑63S128I3◑:[◑T62I2◑,◑T62I3◑],◑78S163I6◑:[◑T77I5◑],◑48S98I7◑:[◑T47I6◑],◑63S128I2◑:[◑T62I1◑],◑78S163I5◑:[◑T77I1◑],◑48S98I6◑:[◑T47I5◑],◑63S128I5◑:[◑T62I4◑],◑80S173I6◑:[◑T79I1◑],◑48S98I5◑:[◑T47I4◑],◑63S128I4◑:[◑T62I3◑],◑80S173I5◑:[◑T79I0◑],◑48S98I4◑:[◑T47I3◑],◑63S128I7◑:[◑T62I7◑],◑63S128I6◑:[◑T62I6◑],◑78S163I9◑:[◑T77I6◑],◑48S98I2◑:[◑T47I1◑],◑48S98I1◑:[◑T47I0◑],◑78S163I4◑:[◑T77I1◑],◑85S188I9◑:[◑T84I6◑],◑43S82I11◑:[◑T42I5◑],◑85S188I7◑:[◑T84I2◑],◑43S82I14◑:[◑T42I7◑],◑42S80I0◑:[◑T41I0◑],◑43S82I12◑:[◑T42I5◑],◑43S82I13◑:[◑T42I6◑],◑42S80I6◑:[◑T41I2◑,◑T41I7◑],◑42S80I7◑:[◑T41I3◑],◑85S188I5◑:[◑T84I1◑,◑T84I6◑],◑85S188I4◑:[◑T84I0◑],◑42S80I8◑:[◑T41I4◑],◑42S80I9◑:[◑T41I5◑],◑19S29I12◑:[◑T18I6◑],◑19S29I13◑:[◑T18I6◑],◑1S2I5◑:[◑T0I8◑],◑1S2I6◑:[◑T0I10◑,◑T0I5◑,◑T0I6◑],◑34S61I10◑:[◑T33I2◑,◑T33I1◑],◑19S29I10◑:[◑T18I5◑],◑19S29I11◑:[◑T18I6◑],◑58S116I7◑:[◑T57I2◑],◑80S173I9◑:[◑T79I3◑],◑80S173I7◑:[◑T79I2◑],◑27S47I8◑:[◑T26I1◑],◑63S129I4◑:[◑T62I1◑],◑85S188I10◑:[◑T84I6◑],◑63S129I6◑:[◑T62I2◑,◑T62I3◑],◑63S129I5◑:[◑T62I2◑,◑T62I1◑,◑T62I3◑],◑43S85I2◑:[◑T42I2◑],◑25S44I9◑:[◑T24I2◑,◑T24I1◑,◑T24I0◑],◑82S180I5◑:[◑T81I3◑,◑T81I2◑],◑82S180I6◑:[◑T81I4◑,◑T81I3◑],◑39S70I8◑:[◑T38I4◑],◑25S41I17◑:[◑T24I6◑,◑T24I4◑],◑39S70I7◑:[◑T38I3◑],◑47S95I0◑:[◑T46I0◑],◑25S41I16◑:[◑T24I5◑,◑T24I3◑],◑64S134I6◑:[◑T63I2◑],◑39S70I9◑:[◑T38I5◑],◑39S70I4◑:[◑T38I0◑],◑64S134I9◑:[◑T63I3◑,◑T63I4◑],◑39S70I6◑:[◑T38I2◑],◑39S70I5◑:[◑T38I1◑],◑25S41I10◑:[◑T24I1◑],◑81S175I5◑:[◑T80I1◑],◑67S142I3◑:[◑T66I2◑,◑T66I4◑,◑T66I3◑,◑T66I5◑],◑25S41I13◑:[◑T24I5◑,◑T24I3◑],◑67S142I2◑:[◑T66I0◑],◑25S41I12◑:[◑T24I2◑],◑25S41I11◑:[◑T24I0◑],◑67S142I6◑:[◑T66I8◑,◑T66I9◑,◑T66I10◑],◑67S142I5◑:[◑T66I7◑],◑67S142I4◑:[◑T66I6◑],◑39S69I11◑:[◑T38I4◑],◑39S69I10◑:[◑T38I3◑],◑25S43I6◑:[◑T24I2◑,◑T24I1◑,◑T24I0◑],◑39S69I13◑:[◑T38I5◑],◑63S128I10◑:[◑T62I6◑],◑67S142I9◑:[◑T66I0◑],◑39S69I12◑:[◑T38I4◑],◑67S142I8◑:[◑T66I1◑],◑16S23I1◑:[◑T15I1◑],◑16S23I3◑:[◑T15I0◑],◑42S80I10◑:[◑T41I6◑],◑42S80I13◑:[◑T41I7◑],◑11S17I9◑:[◑T10I0◑],◑42S80I11◑:[◑T41I6◑],◑42S80I12◑:[◑T41I7◑],◑98S216I11◑:[◑T97I4◑],◑91S203I11◑:[◑T90I4◑],◑98S216I10◑:[◑T97I4◑],◑43S86I6◑:[◑T42I7◑],◑39S68I12◑:[◑T38I0◑],◑39S71I7◑:[◑T38I4◑],◑91S203I14◑:[◑T90I4◑],◑24S38I7◑:[◑T23I5◑,◑T23I4◑],◑39S71I6◑:[◑T38I3◑],◑50S105I8◑:[◑T49I1◑],◑64S133I6◑:[◑T63I2◑],◑64S133I7◑:[◑T63I0◑],◑91S203I12◑:[◑T90I5◑],◑39S71I8◑:[◑T38I5◑],◑91S203I13◑:[◑T90I6◑],◑24S38I4◑:[◑T23I2◑],◑24S38I3◑:[◑T23I2◑],◑21S33I5◑:[◑T20I0◑],◑39S71I5◑:[◑T38I2◑],◑39S71I4◑:[◑T38I1◑,◑T38I0◑],◑71S150I6◑:[◑T70I6◑],◑81S176I4◑:[◑T80I1◑],◑21S33I4◑:[◑T20I0◑],◑88S199I7◑:[◑T87I0◑],◑67S143I2◑:[◑T66I0◑],◑88S199I5◑:[◑T87I1◑],◑67S143I1◑:[◑T66I1◑],◑88S199I3◑:[◑T87I1◑],◑88S199I4◑:[◑T87I2◑],◑25S42I5◑:[◑T24I5◑,◑T24I3◑],◑67S143I6◑:[◑T66I5◑],◑25S42I6◑:[◑T24I6◑,◑T24I4◑],◑67S143I5◑:[◑T66I4◑],◑67S143I4◑:[◑T66I3◑],◑25S42I4◑:[◑T24I2◑],◑67S143I3◑:[◑T66I2◑],◑67S143I9◑:[◑T66I8◑],◑25S42I7◑:[◑T24I5◑,◑T24I3◑],◑67S143I8◑:[◑T66I7◑],◑25S42I8◑:[◑T24I6◑,◑T24I4◑],◑67S143I7◑:[◑T66I6◑],◑43S83I11◑:[◑T42I7◑],◑43S83I10◑:[◑T42I6◑],◑76S160I3◑:[◑T75I2◑,◑T75I4◑,◑T75I6◑],◑35S62I5◑:[◑T34I1◑],◑35S62I4◑:[◑T34I1◑,◑T34I0◑],◑43S83I0◑:[◑T42I2◑],◑73S154I15◑:[◑T72I2◑],◑35S62I6◑:[◑T34I1◑],◑97S215I8◑:[◑T96I0◑],◑73S154I13◑:[◑T72I0◑],◑85S190I11◑:[◑T84I1◑,◑T84I6◑],◑43S83I9◑:[◑T42I5◑],◑85S190I15◑:[◑T84I6◑],◑43S83I8◑:[◑T42I5◑],◑85S190I13◑:[◑T84I4◑],◑43S83I6◑:[◑T42I4◑],◑85S190I12◑:[◑T84I1◑,◑T84I6◑],◑35S62I3◑:[◑T34I1◑],◑85S190I16◑:[◑T84I6◑],◑47S93I9◑:[◑T46I0◑],◑47S93I7◑:[◑T46I1◑],◑47S93I8◑:[◑T46I0◑],◑18S28I3◑:[◑T17I5◑],◑39S72I9◑:[◑T38I1◑],◑18S28I5◑:[◑T17I3◑],◑44S90I3◑:[◑T43I0◑],◑44S90I4◑:[◑T43I1◑],◑44S90I5◑:[◑T43I2◑],◑64S136I6◑:[◑T63I2◑],◑47S93I6◑:[◑T46I1◑],◑71S150I5◑:[◑T70I5◑],◑81S177I3◑:[◑T80I1◑],◑88S198I8◑:[◑T87I0◑],◑63S130I10◑:[◑T62I2◑,◑T62I1◑],◑73S154I8◑:[◑T72I1◑],◑85S190I22◑:[◑T84I4◑],◑88S198I6◑:[◑T87I1◑],◑7S11I3◑:[◑T6I2◑],◑25S41I3◑:[◑T24I3◑],◑25S41I0◑:[◑T24I0◑],◑73S154I22◑:[◑T72I2◑],◑88S198I4◑:[◑T87I1◑],◑15S22I10◑:[◑T14I1◑],◑88S198I5◑:[◑T87I2◑],◑91S204I10◑:[◑T90I2◑],◑82S183I7◑:[◑T81I4◑,◑T81I3◑],◑73S154I7◑:[◑T72I0◑],◑73S154I1◑:[◑T72I0◑],◑25S41I8◑:[◑T24I1◑,◑T24I0◑],◑73S154I2◑:[◑T72I1◑],◑25S41I9◑:[◑T24I1◑],◑73S154I3◑:[◑T72I2◑],◑43S85I12◑:[◑T42I7◑],◑73S154I20◑:[◑T72I0◑],◑93S210I3◑:[◑T92I3◑],◑73S154I21◑:[◑T72I1◑],◑93S210I4◑:[◑T92I3◑],◑56S114I20◑:[◑T55I3◑],◑19S29I7◑:[◑T18I2◑,◑T18I1◑],◑93S210I5◑:[◑T92I4◑],◑19S29I8◑:[◑T18I3◑],◑24S38I13◑:[◑T23I0◑],◑93S210I6◑:[◑T92I5◑],◑25S43I20◑:[◑T24I5◑],◑73S153I22◑:[◑T72I2◑],◑73S153I21◑:[◑T72I1◑],◑43S84I6◑:[◑T42I7◑],◑43S84I5◑:[◑T42I2◑],◑43S84I1◑:[◑T42I6◑],◑47S94I8◑:[◑T46I1◑],◑47S94I9◑:[◑T46I0◑],◑82S181I2◑:[◑T81I2◑],◑82S181I3◑:[◑T81I2◑],◑39S73I9◑:[◑T38I5◑],◑82S181I4◑:[◑T81I4◑,◑T81I3◑],◑39S73I8◑:[◑T38I5◑],◑37S66I5◑:[◑T36I3◑],◑39S73I5◑:[◑T38I3◑],◑37S66I4◑:[◑T36I2◑],◑39S73I4◑:[◑T38I2◑,◑T38I1◑],◑37S66I3◑:[◑T36I1◑],◑39S73I7◑:[◑T38I4◑],◑73S153I20◑:[◑T72I0◑],◑39S73I6◑:[◑T38I4◑],◑50S103I6◑:[◑T49I3◑],◑37S66I7◑:[◑T36I5◑,◑T36I4◑],◑39S73I3◑:[◑T38I0◑],◑25S43I14◑:[◑T24I6◑],◑62S123I9◑:[◑T61I3◑],◑62S123I8◑:[◑T61I3◑],◑82S182I8◑:[◑T81I2◑],◑62S123I7◑:[◑T61I3◑],◑73S153I7◑:[◑T72I0◑],◑82S182I9◑:[◑T81I2◑],◑62S123I6◑:[◑T61I2◑],◑73S153I8◑:[◑T72I1◑],◑41S79I1◑:[◑T40I1◑],◑67S143I11◑:[◑T66I10◑],◑73S153I1◑:[◑T72I0◑],◑41S79I2◑:[◑T40I1◑],◑67S143I10◑:[◑T66I9◑],◑73S153I2◑:[◑T72I1◑],◑73S153I3◑:[◑T72I2◑],◑93S211I2◑:[◑T92I2◑],◑93S211I3◑:[◑T92I2◑],◑93S211I6◑:[◑T92I5◑],◑93S211I5◑:[◑T92I4◑],◑22S35I26◑:[◑T21I2◑],◑25S44I10◑:[◑T24I5◑,◑T24I3◑],◑25S44I11◑:[◑T24I5◑,◑T24I3◑],◑6S10I5◑:[◑T5I2◑],◑91S205I10◑:[◑T90I2◑],◑22S35I22◑:[◑T21I2◑],◑6S10I4◑:[◑T5I0◑,◑T5I1◑],◑80S171I10◑:[◑T79I3◑],◑23S37I8◑:[◑T22I5◑],◑22S35I20◑:[◑T21I1◑],◑22S35I21◑:[◑T21I1◑],◑60S121I8◑:[◑T59I1◑,◑T59I2◑],◑18S26I4◑:[◑T17I3◑],◑60S121I6◑:[◑T59I0◑],◑18S26I3◑:[◑T17I2◑],◑73S153I15◑:[◑T72I2◑],◑2S6I9◑:[◑T1I6◑],◑2S6I8◑:[◑T1I5◑],◑73S153I13◑:[◑T72I0◑],◑2S6I4◑:[◑T1I2◑],◑14S20I7◑:[◑T13I0◑],◑67S146I7◑:[◑T66I0◑,◑T66I11◑],◑14S20I6◑:[◑T13I0◑],◑30S51I7◑:[◑T29I4◑],◑30S51I8◑:[◑T29I4◑],◑67S146I9◑:[◑T66I3◑],◑89S201I4◑:[◑T88I0◑],◑67S146I8◑:[◑T66I2◑],◑89S201I5◑:[◑T88I1◑,◑T88I5◑],◑29S50I4◑:[◑T28I4◑],◑29S50I2◑:[◑T28I1◑],◑29S50I3◑:[◑T28I2◑],◑4S8I6◑:[◑T3I1◑],◑4S8I5◑:[◑T3I0◑],◑89S201I11◑:[◑T88I3◑],◑89S201I10◑:[◑T88I2◑],◑4S8I9◑:[◑T3I4◑],◑43S82I5◑:[◑T42I2◑],◑30S51I6◑:[◑T29I0◑],◑18S27I3◑:[◑T17I2◑],◑18S27I4◑:[◑T17I3◑],◑41S78I10◑:[◑T40I2◑],◑98S216I9◑:[◑T97I4◑],◑14S21I2◑:[◑T13I0◑],◑14S21I3◑:[◑T13I0◑],◑80S172I16◑:[◑T79I3◑],◑30S52I6◑:[◑T29I0◑],◑66S141I17◑:[◑T65I2◑],◑11S17I10◑:[◑T10I1◑],◑1S0I12◑:[◑T0I9◑],◑25S44I18◑:[◑T24I5◑,◑T24I3◑],◑1S0I11◑:[◑T0I8◑],◑78S163I10◑:[◑T77I7◑],◑51S106I11◑:[◑T50I0◑,◑T50I1◑],◑91S203I0◑:[◑T90I1◑],◑51S106I12◑:[◑T50I3◑],◑91S203I1◑:[◑T90I2◑],◑28S49I9◑:[◑T27I4◑],◑26S45I8◑:[◑T25I1◑],◑26S45I7◑:[◑T25I0◑],◑26S45I6◑:[◑T25I0◑],◑54S112I10◑:[◑T53I3◑],◑63S130I9◑:[◑T62I2◑],◑67S144I1◑:[◑T66I2◑,◑T66I1◑,◑T66I3◑],◑98S217I5◑:[◑T97I4◑],◑67S144I2◑:[◑T66I8◑,◑T66I9◑,◑T66I10◑],◑94S212I13◑:[◑T93I1◑],◑28S49I3◑:[◑T27I0◑],◑63S130I7◑:[◑T62I1◑],◑98S217I4◑:[◑T97I4◑],◑64S136I10◑:[◑T63I0◑],◑31S56I14◑:[◑T30I2◑],◑85S191I3◑:[◑T84I2◑,◑T84I1◑],◑76S159I8◑:[◑T75I5◑],◑76S159I9◑:[◑T75I6◑],◑76S159I6◑:[◑T75I3◑],◑76S159I7◑:[◑T75I4◑],◑17S24I10◑:[◑T16I4◑],◑18S25I7◑:[◑T17I3◑],◑18S25I6◑:[◑T17I2◑],◑26S46I7◑:[◑T25I0◑],◑26S46I6◑:[◑T25I1◑],◑26S46I5◑:[◑T25I0◑],◑1S1I11◑:[◑T0I8◑],◑1S1I10◑:[◑T0I9◑,◑T0I10◑],◑63S131I9◑:[◑T62I2◑,◑T62I3◑],◑63S131I8◑:[◑T62I2◑],◑59S120I8◑:[◑T58I3◑],◑59S120I4◑:[◑T58I0◑,◑T58I1◑],◑1S1I18◑:[◑T0I6◑],◑67S145I4◑:[◑T66I0◑],◑67S145I8◑:[◑T66I4◑],◑67S145I7◑:[◑T66I3◑],◑2S6I10◑:[◑T1I7◑],◑67S145I6◑:[◑T66I2◑],◑67S145I9◑:[◑T66I5◑],◑3S7I5◑:[◑T2I1◑],◑3S7I4◑:[◑T2I0◑]}","similarity":0.131,"similarity_copy":0.128,"similarity_self":0,"similarityPercentage":"12.8%","SSetForT_Str":"{◑T1I2◑:[◑2S6I4◑],◑T52I0◑:[◑53S109I15◑],◑T52I1◑:[◑53S109I16◑,◑53S111I4◑,◑53S110I15◑,◑53S111I5◑],◑T52I2◑:[◑53S109I18◑,◑53S111I5◑],◑T75I2◑:[◑76S160I3◑],◑T90I6◑:[◑91S207I5◑,◑91S203I13◑],◑T52I3◑:[◑53S109I17◑,◑53S111I5◑],◑T52I4◑:[◑53S109I19◑,◑53S111I6◑],◑T75I4◑:[◑76S159I7◑,◑76S160I3◑],◑T75I3◑:[◑76S159I6◑],◑T75I6◑:[◑76S160I3◑,◑76S159I9◑],◑T75I5◑:[◑76S159I8◑],◑T37I0◑:[◑38S67I7◑],◑T90I0◑:[◑91S205I8◑,◑91S204I8◑],◑T14I1◑:[◑15S22I8◑,◑15S22I7◑,◑15S22I10◑],◑T90I1◑:[◑91S205I9◑,◑91S206I5◑,◑91S204I9◑,◑91S203I0◑],◑T9I1◑:[◑10S15I4◑],◑T1I6◑:[◑2S6I9◑],◑T90I4◑:[◑91S203I11◑,◑91S207I3◑,◑91S203I14◑],◑T1I7◑:[◑2S6I10◑],◑T90I5◑:[◑91S207I4◑,◑91S203I12◑],◑T90I2◑:[◑91S204I10◑,◑91S205I10◑,◑91S206I6◑,◑91S203I1◑],◑T1I5◑:[◑2S6I8◑],◑T9I5◑:[◑10S15I7◑],◑T26I2◑:[◑27S47I12◑],◑T9I4◑:[◑10S15I6◑],◑T26I1◑:[◑27S47I13◑,◑27S48I3◑,◑27S48I4◑,◑27S47I6◑,◑27S48I5◑,◑27S47I7◑,◑27S47I8◑],◑T49I0◑:[◑50S103I12◑,◑50S103I13◑],◑T49I1◑:[◑50S105I8◑],◑T49I3◑:[◑50S103I6◑],◑T41I0◑:[◑42S80I0◑],◑T64I0◑:[◑65S138I3◑,◑65S138I4◑],◑T87I0◑:[◑88S198I8◑,◑88S199I7◑,◑88S200I5◑],◑T87I1◑:[◑88S198I6◑,◑88S199I5◑,◑88S198I4◑,◑88S199I3◑],◑T41I2◑:[◑42S80I6◑,◑42S81I3◑],◑T41I3◑:[◑42S80I7◑,◑42S81I4◑],◑T41I4◑:[◑42S81I5◑,◑42S80I8◑],◑T41I5◑:[◑42S81I6◑,◑42S81I7◑,◑42S80I9◑],◑T41I6◑:[◑42S80I10◑,◑42S81I9◑,◑42S80I11◑,◑42S81I8◑],◑T87I2◑:[◑88S200I4◑,◑88S198I5◑,◑88S199I4◑],◑T41I7◑:[◑42S80I6◑,◑42S81I10◑,◑42S81I3◑,◑42S80I13◑,◑42S80I12◑,◑42S81I12◑],◑T38I5◑:[◑39S68I8◑,◑39S72I13◑,◑39S73I9◑,◑39S73I8◑,◑39S70I9◑,◑39S71I8◑,◑39S69I13◑],◑T38I4◑:[◑39S68I7◑,◑39S72I12◑,◑39S70I8◑,◑39S71I7◑,◑39S73I7◑,◑39S73I6◑,◑39S69I11◑,◑39S69I12◑],◑T38I3◑:[◑39S68I6◑,◑39S72I11◑,◑39S73I5◑,◑39S70I7◑,◑39S71I6◑,◑39S69I10◑],◑T38I2◑:[◑39S72I10◑,◑39S68I5◑,◑39S73I4◑,◑39S69I9◑,◑39S70I6◑,◑39S71I5◑],◑T15I1◑:[◑16S23I1◑],◑T38I1◑:[◑39S69I8◑,◑39S72I9◑,◑39S68I4◑,◑39S73I4◑,◑39S70I5◑,◑39S71I4◑],◑T38I0◑:[◑39S69I7◑,◑39S68I3◑,◑39S70I4◑,◑39S71I10◑,◑39S73I3◑,◑39S68I12◑,◑39S71I4◑],◑T51I1◑:[◑52S108I14◑],◑T74I1◑:[◑75S156I12◑,◑75S156I11◑],◑T0I4◑:[◑1S0I7◑],◑T51I2◑:[◑52S108I13◑],◑T74I0◑:[◑75S156I11◑,◑75S156I13◑],◑T74I2◑:[◑75S156I11◑,◑75S156I14◑,◑75S156I15◑],◑T59I0◑:[◑60S121I6◑],◑T97I4◑:[◑98S216I11◑,◑98S217I4◑,◑98S216I10◑,◑98S217I5◑,◑98S216I9◑],◑T8I4◑:[◑9S14I5◑],◑T36I1◑:[◑37S66I3◑],◑T0I9◑:[◑1S5I2◑,◑1S0I12◑,◑1S1I10◑],◑T8I2◑:[◑9S14I3◑],◑T8I1◑:[◑9S14I3◑],◑T13I0◑:[◑14S20I7◑,◑14S20I6◑],◑T0I8◑:[◑1S2I5◑,◑1S5I3◑,◑1S1I11◑,◑1S0I11◑],◑T0I5◑:[◑1S0I6◑,◑1S0I8◑,◑1S2I6◑],◑T0I6◑:[◑1S2I6◑,◑1S1I18◑],◑T8I7◑:[◑9S14I7◑],◑T8I5◑:[◑9S14I6◑],◑T40I1◑:[◑41S77I1◑,◑41S76I3◑,◑41S78I8◑,◑41S79I1◑,◑41S79I2◑],◑T40I2◑:[◑41S78I10◑,◑41S76I4◑,◑41S77I3◑],◑T63I0◑:[◑64S133I7◑,◑64S136I10◑],◑T63I3◑:[◑64S134I9◑],◑T63I2◑:[◑64S133I6◑,◑64S134I6◑,◑64S136I6◑,◑64S137I8◑],◑T63I4◑:[◑64S134I9◑],◑T25I1◑:[◑26S45I8◑,◑26S46I6◑],◑T25I0◑:[◑26S46I7◑,◑26S45I7◑,◑26S45I6◑,◑26S46I5◑],◑T40I0◑:[◑41S77I0◑,◑41S78I7◑],◑T37I6◑:[◑38S67I9◑],◑T37I3◑:[◑38S67I5◑],◑T37I1◑:[◑38S67I8◑],◑T54I0◑:[◑55S113I1◑],◑T77I0◑:[◑78S164I0◑],◑T92I4◑:[◑93S210I5◑,◑93S211I5◑],◑T92I5◑:[◑93S211I6◑,◑93S210I6◑],◑T54I2◑:[◑55S113I5◑],◑T77I1◑:[◑78S166I4◑,◑78S166I3◑,◑78S163I5◑,◑78S165I3◑,◑78S163I4◑,◑78S165I2◑,◑78S164I0◑],◑T54I4◑:[◑55S113I5◑],◑T7I5◑:[◑8S13I6◑],◑T7I4◑:[◑8S13I4◑],◑T31I5◑:[◑32S59I5◑],◑T7I3◑:[◑8S13I3◑],◑T31I4◑:[◑32S59I4◑],◑T7I2◑:[◑8S13I2◑],◑T31I3◑:[◑32S59I3◑],◑T92I2◑:[◑93S211I2◑,◑93S211I3◑],◑T7I0◑:[◑8S13I0◑],◑T92I3◑:[◑93S210I3◑,◑93S210I4◑],◑T28I4◑:[◑29S50I4◑],◑T28I2◑:[◑29S50I3◑],◑T28I1◑:[◑29S50I2◑],◑T7I6◑:[◑8S13I7◑],◑T66I6◑:[◑67S145I10◑,◑67S142I4◑,◑67S143I7◑],◑T66I5◑:[◑67S146I11◑,◑67S145I9◑,◑67S142I3◑,◑67S143I6◑],◑T66I8◑:[◑67S145I12◑,◑67S142I6◑,◑67S144I2◑,◑67S143I9◑],◑T66I7◑:[◑67S145I11◑,◑67S142I5◑,◑67S143I8◑],◑T66I9◑:[◑67S145I13◑,◑67S142I6◑,◑67S144I2◑,◑67S143I10◑],◑T81I4◑:[◑82S179I6◑,◑82S178I6◑,◑82S181I4◑,◑82S182I10◑,◑82S180I6◑,◑82S183I7◑],◑T43I0◑:[◑44S87I5◑,◑44S88I4◑,◑44S90I3◑,◑44S89I6◑],◑T66I0◑:[◑67S143I2◑,◑67S142I2◑,◑67S145I4◑,◑67S146I7◑,◑67S142I9◑],◑T43I1◑:[◑44S87I6◑,◑44S88I5◑,◑44S89I7◑,◑44S90I4◑],◑T43I2◑:[◑44S89I8◑,◑44S90I5◑,◑44S87I7◑,◑44S88I6◑,◑44S89I9◑],◑T66I2◑:[◑67S146I8◑,◑67S142I3◑,◑67S144I1◑,◑67S143I3◑,◑67S145I6◑],◑T66I1◑:[◑67S144I1◑,◑67S143I1◑,◑67S142I8◑],◑T66I4◑:[◑67S142I3◑,◑67S143I5◑,◑67S145I8◑,◑67S146I10◑],◑T66I3◑:[◑67S146I9◑,◑67S142I3◑,◑67S144I1◑,◑67S143I4◑,◑67S145I7◑],◑T20I0◑:[◑21S33I4◑,◑21S33I5◑],◑T81I3◑:[◑82S179I6◑,◑82S178I6◑,◑82S180I5◑,◑82S181I4◑,◑82S182I10◑,◑82S180I6◑,◑82S183I7◑],◑T81I2◑:[◑82S179I5◑,◑82S178I5◑,◑82S179I4◑,◑82S181I2◑,◑82S178I4◑,◑82S181I3◑,◑82S180I5◑,◑82S182I8◑,◑82S182I9◑],◑T17I5◑:[◑18S28I3◑],◑T17I3◑:[◑18S26I4◑,◑18S25I7◑,◑18S27I4◑,◑18S28I5◑],◑T17I2◑:[◑18S27I3◑,◑18S26I3◑,◑18S25I6◑],◑T53I0◑:[◑54S112I7◑],◑T53I3◑:[◑54S112I10◑],◑T15I0◑:[◑16S23I3◑],◑T6I2◑:[◑7S11I3◑,◑7S12I5◑,◑7S12I4◑],◑T30I2◑:[◑31S56I14◑,◑31S53I8◑,◑31S54I7◑],◑T30I1◑:[◑31S55I9◑,◑31S53I7◑,◑31S54I6◑],◑T91I1◑:[◑92S209I5◑],◑T30I0◑:[◑31S56I8◑,◑31S55I5◑,◑31S53I6◑,◑31S55I4◑,◑31S53I5◑,◑31S54I4◑,◑31S54I3◑],◑T91I2◑:[◑92S209I4◑],◑T27I4◑:[◑28S49I9◑],◑T27I0◑:[◑28S49I3◑],◑T42I7◑:[◑43S83I11◑,◑43S85I12◑,◑43S82I14◑,◑43S86I6◑,◑43S84I6◑],◑T88I5◑:[◑89S201I5◑],◑T88I0◑:[◑89S201I4◑],◑T42I2◑:[◑43S83I0◑,◑43S84I5◑,◑43S82I5◑,◑43S85I2◑],◑T88I3◑:[◑89S201I11◑],◑T42I4◑:[◑43S83I6◑],◑T65I2◑:[◑66S141I17◑,◑66S140I8◑],◑T42I5◑:[◑43S82I11◑,◑43S82I12◑,◑43S83I9◑,◑43S83I8◑],◑T88I1◑:[◑89S201I5◑],◑T42I6◑:[◑43S83I10◑,◑43S82I13◑,◑43S84I1◑],◑T88I2◑:[◑89S201I10◑],◑T80I1◑:[◑81S175I5◑,◑81S176I4◑,◑81S177I3◑],◑T16I4◑:[◑17S24I10◑],◑T16I2◑:[◑17S24I5◑],◑T16I3◑:[◑17S24I7◑],◑T16I1◑:[◑17S24I5◑],◑T77I6◑:[◑78S165I5◑,◑78S164I4◑,◑78S167I8◑,◑78S163I9◑,◑78S166I6◑,◑78S168I4◑],◑T77I5◑:[◑78S166I5◑,◑78S168I3◑,◑78S163I6◑,◑78S165I4◑,◑78S167I7◑,◑78S164I1◑],◑T0I10◑:[◑1S5I1◑,◑1S2I6◑,◑1S1I10◑],◑T77I7◑:[◑78S165I6◑,◑78S164I5◑,◑78S163I10◑,◑78S166I7◑,◑78S167I9◑],◑T79I0◑:[◑80S172I6◑,◑80S173I5◑,◑80S174I4◑,◑80S171I5◑],◑T79I2◑:[◑80S171I7◑,◑80S172I8◑,◑80S173I7◑],◑T79I1◑:[◑80S173I6◑,◑80S174I5◑,◑80S171I6◑,◑80S174I6◑],◑T33I2◑:[◑34S61I10◑],◑T33I1◑:[◑34S61I10◑],◑T5I2◑:[◑6S10I5◑],◑T10I0◑:[◑11S17I9◑],◑T33I0◑:[◑34S61I8◑,◑34S61I9◑],◑T10I1◑:[◑11S17I10◑],◑T5I0◑:[◑6S10I4◑],◑T5I1◑:[◑6S10I4◑],◑T22I5◑:[◑23S37I11◑,◑23S37I14◑,◑23S37I8◑],◑T45I0◑:[◑46S92I7◑],◑T45I1◑:[◑46S92I6◑],◑T22I4◑:[◑23S37I11◑],◑T60I1◑:[◑61S122I6◑],◑T60I2◑:[◑61S122I7◑],◑T19I4◑:[◑20S32I8◑,◑20S32I11◑],◑T19I1◑:[◑20S32I6◑],◑T19I0◑:[◑20S32I5◑],◑T11I5◑:[◑12S18I9◑],◑T57I3◑:[◑58S117I6◑,◑58S119I8◑],◑T57I4◑:[◑58S117I6◑,◑58S116I13◑,◑58S119I8◑],◑T19I7◑:[◑20S32I10◑],◑T19I8◑:[◑20S32I11◑],◑T19I5◑:[◑20S32I9◑],◑T70I5◑:[◑71S150I5◑],◑T4I0◑:[◑5S9I5◑],◑T55I0◑:[◑56S114I8◑],◑T70I6◑:[◑71S150I6◑],◑T55I1◑:[◑56S114I9◑],◑T55I3◑:[◑56S114I20◑,◑56S114I10◑],◑T55I4◑:[◑56S114I12◑],◑T32I5◑:[◑33S60I13◑],◑T32I4◑:[◑33S60I13◑],◑T32I2◑:[◑33S60I12◑],◑T32I1◑:[◑33S60I6◑],◑T93I1◑:[◑94S212I13◑],◑T32I0◑:[◑33S60I5◑],◑T4I2◑:[◑5S9I7◑],◑T29I4◑:[◑30S51I7◑,◑30S51I8◑],◑T29I0◑:[◑30S52I6◑,◑30S51I6◑],◑T29I7◑:[◑30S51I13◑],◑T29I6◑:[◑30S51I11◑,◑30S51I10◑],◑T21I2◑:[◑22S35I26◑,◑22S35I22◑],◑T21I1◑:[◑22S35I20◑,◑22S35I21◑],◑T21I0◑:[◑22S36I5◑],◑T18I5◑:[◑19S30I5◑,◑19S29I10◑],◑T18I2◑:[◑19S29I7◑],◑T18I3◑:[◑19S30I3◑,◑19S29I8◑],◑T18I1◑:[◑19S29I7◑],◑T79I3◑:[◑80S171I10◑,◑80S173I9◑,◑80S172I9◑,◑80S172I16◑],◑T18I6◑:[◑19S29I12◑,◑19S29I13◑,◑19S30I6◑,◑19S29I11◑],◑T3I0◑:[◑4S8I5◑],◑T3I1◑:[◑4S8I6◑],◑T50I3◑:[◑51S106I12◑],◑T96I0◑:[◑97S215I8◑],◑T58I0◑:[◑59S120I4◑],◑T58I1◑:[◑59S120I4◑],◑T35I2◑:[◑36S63I4◑],◑T35I1◑:[◑36S64I9◑,◑36S63I3◑],◑T3I6◑:[◑4S8I11◑],◑T35I0◑:[◑36S64I7◑,◑36S64I8◑],◑T3I7◑:[◑4S8I12◑],◑T3I4◑:[◑4S8I9◑],◑T50I0◑:[◑51S106I11◑],◑T50I1◑:[◑51S106I11◑],◑T24I6◑:[◑25S43I14◑,◑25S41I17◑,◑25S42I6◑,◑25S42I8◑],◑T24I5◑:[◑25S43I20◑,◑25S44I10◑,◑25S41I13◑,◑25S44I11◑,◑25S42I5◑,◑25S41I16◑,◑25S44I18◑,◑25S42I7◑],◑T24I4◑:[◑25S41I17◑,◑25S42I6◑,◑25S42I8◑],◑T24I3◑:[◑25S44I10◑,◑25S41I3◑,◑25S41I13◑,◑25S44I11◑,◑25S42I5◑,◑25S41I16◑,◑25S44I18◑,◑25S42I7◑],◑T47I3◑:[◑48S97I9◑,◑48S99I6◑,◑48S101I6◑,◑48S97I5◑,◑48S98I4◑,◑48S96I4◑,◑48S100I4◑],◑T47I4◑:[◑48S97I6◑,◑48S98I5◑,◑48S99I3◑,◑48S96I5◑,◑48S101I3◑],◑T47I5◑:[◑48S97I7◑,◑48S98I6◑,◑48S99I4◑,◑48S96I6◑,◑48S101I4◑,◑48S100I2◑],◑T47I6◑:[◑48S97I9◑,◑48S97I8◑,◑48S98I7◑,◑48S99I5◑,◑48S96I7◑,◑48S100I4◑,◑48S99I0◑,◑48S100I3◑,◑48S101I5◑],◑T47I7◑:[◑48S97I9◑,◑48S98I8◑,◑48S99I6◑,◑48S96I8◑,◑48S101I6◑,◑48S100I4◑],◑T62I2◑:[◑63S131I9◑,◑63S130I9◑,◑63S131I8◑,◑63S128I3◑,◑63S130I10◑,◑63S129I6◑,◑63S127I7◑,◑63S129I5◑],◑T62I1◑:[◑63S128I2◑,◑63S130I10◑,◑63S127I6◑,◑63S129I4◑,◑63S129I5◑,◑63S130I7◑],◑T62I4◑:[◑63S128I1◑,◑63S132I8◑,◑63S128I5◑,◑63S127I9◑],◑T62I3◑:[◑63S131I9◑,◑63S128I3◑,◑63S128I4◑,◑63S127I8◑,◑63S129I6◑,◑63S127I7◑,◑63S129I5◑],◑T62I6◑:[◑63S128I6◑,◑63S128I10◑],◑T47I0◑:[◑48S99I1◑,◑48S97I2◑,◑48S98I1◑,◑48S96I1◑],◑T47I1◑:[◑48S99I2◑,◑48S97I3◑,◑48S98I2◑,◑48S96I2◑],◑T62I7◑:[◑63S128I7◑],◑T24I2◑:[◑25S44I9◑,◑25S41I12◑,◑25S42I4◑,◑25S43I6◑],◑T24I1◑:[◑25S41I10◑,◑25S44I9◑,◑25S41I8◑,◑25S43I6◑,◑25S41I9◑],◑T24I0◑:[◑25S44I9◑,◑25S41I0◑,◑25S41I11◑,◑25S41I8◑,◑25S43I6◑],◑T62I0◑:[◑63S128I1◑],◑T36I5◑:[◑37S66I7◑],◑T36I4◑:[◑37S66I7◑],◑T36I3◑:[◑37S66I5◑],◑T36I2◑:[◑37S66I4◑],◑T59I1◑:[◑60S121I8◑],◑T59I2◑:[◑60S121I8◑],◑T2I1◑:[◑3S7I5◑],◑T2I2◑:[◑3S7I10◑],◑T72I2◑:[◑73S153I15◑,◑73S154I15◑,◑73S153I22◑,◑73S154I22◑,◑73S153I3◑,◑73S154I3◑],◑T2I0◑:[◑3S7I4◑],◑T57I1◑:[◑58S119I8◑],◑T57I2◑:[◑58S116I7◑,◑58S117I6◑,◑58S118I2◑,◑58S119I8◑],◑T11I3◑:[◑12S18I7◑],◑T11I4◑:[◑12S18I9◑],◑T11I1◑:[◑12S18I5◑],◑T34I1◑:[◑35S62I5◑,◑35S62I4◑,◑35S62I6◑,◑35S62I3◑],◑T11I2◑:[◑12S18I6◑],◑T34I0◑:[◑35S62I4◑],◑T2I3◑:[◑3S7I11◑],◑T72I1◑:[◑73S154I8◑,◑73S153I21◑,◑73S154I21◑,◑73S153I8◑,◑73S153I2◑,◑73S154I2◑],◑T72I0◑:[◑73S154I13◑,◑73S153I13◑,◑73S154I20◑,◑73S153I20◑,◑73S153I7◑,◑73S154I7◑,◑73S153I1◑,◑73S154I1◑],◑T23I5◑:[◑24S40I6◑,◑24S39I11◑,◑24S38I7◑],◑T23I4◑:[◑24S40I4◑,◑24S40I6◑,◑24S39I11◑,◑24S38I7◑],◑T61I3◑:[◑62S124I3◑,◑62S123I9◑,◑62S123I10◑,◑62S123I8◑,◑62S123I7◑,◑62S125I11◑,◑62S125I12◑,◑62S125I10◑,◑62S125I9◑],◑T84I2◑:[◑85S187I8◑,◑85S188I7◑,◑85S191I3◑,◑85S186I7◑],◑T61I2◑:[◑62S124I2◑,◑62S123I6◑,◑62S125I8◑],◑T84I1◑:[◑85S190I11◑,◑85S191I3◑,◑85S190I12◑,◑85S187I6◑,◑85S188I5◑,◑85S187I5◑,◑85S189I3◑,◑85S186I5◑,◑85S186I4◑],◑T61I5◑:[◑62S123I14◑,◑62S123I13◑,◑62S124I7◑,◑62S124I6◑,◑62S126I8◑,◑62S126I7◑],◑T84I4◑:[◑85S190I22◑,◑85S190I13◑],◑T61I4◑:[◑62S123I14◑,◑62S123I13◑,◑62S126I6◑,◑62S124I7◑,◑62S126I5◑,◑62S124I6◑,◑62S124I5◑],◑T84I6◑:[◑85S188I9◑,◑85S190I11◑,◑85S188I10◑,◑85S190I15◑,◑85S186I13◑,◑85S190I12◑,◑85S187I6◑,◑85S188I5◑,◑85S189I3◑,◑85S186I5◑,◑85S187I19◑,◑85S190I16◑],◑T46I0◑:[◑47S93I9◑,◑47S94I9◑,◑47S93I8◑,◑47S95I0◑],◑T61I6◑:[◑62S123I16◑,◑62S123I15◑,◑62S124I8◑,◑62S124I9◑],◑T46I1◑:[◑47S94I8◑,◑47S93I7◑,◑47S93I6◑],◑T23I3◑:[◑24S40I5◑,◑24S40I3◑],◑T23I2◑:[◑24S38I2◑,◑24S39I8◑,◑24S38I4◑,◑24S38I3◑],◑T23I0◑:[◑24S38I13◑],◑T84I0◑:[◑85S187I5◑,◑85S188I4◑,◑85S189I2◑,◑85S186I4◑],◑T58I3◑:[◑59S120I8◑],◑T66I11◑:[◑67S146I7◑],◑T66I10◑:[◑67S145I14◑,◑67S142I6◑,◑67S144I2◑,◑67S143I11◑]}"},"report_fulltext_comparison":{"word_pro_count":0,"similarity_ref":0,"word_ref_count":0,"word_similar_count":5285,"word_custom_count":0,"chapters":[{"word_pro_count":0,"similarity_ref":0,"chapter":"绪论","word_similar_count":5285,"word_ref_count":0,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.035,"self":false,"similar_word_count":1372,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.015,"self":false,"similar_word_count":591,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000544119911","author":"杜建国","similarity":0.014,"self":false,"similar_word_count":549,"source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.012,"self":false,"similar_word_count":496,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.012,"self":false,"similar_word_count":474,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.01,"self":false,"similar_word_count":414,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":279,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.004,"self":false,"similar_word_count":168,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.004,"self":false,"similar_word_count":157,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.003,"self":false,"similar_word_count":122,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000130331965511","author":"","similarity":0.002,"self":false,"similar_word_count":86,"source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000137225786211","author":"","similarity":0.002,"self":false,"similar_word_count":81,"source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.002,"self":false,"similar_word_count":76,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standard error,���方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":61,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139553504411","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030187211","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183507262511","author":"","similarity":0.001,"self":false,"similar_word_count":56,"source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000030209219211","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118062415311","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106062608311","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143881533411","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000531686611","author":"南夷非","similarity":0.001,"self":false,"similar_word_count":53,"source":"大学生论文联合库","title":"图像处理技术","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106764079211","author":"csdn","similarity":0.001,"self":false,"similar_word_count":52,"source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110791518511","author":"csdn","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000155397363111","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135795011511","author":"","similarity":0.001,"self":false,"similar_word_count":50,"source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310"},{"reference":false,"teacher":"","datatype":"journal","year":"2009","docid":"1000006719680711","author":"沈智芳","similarity":0.001,"self":false,"similar_word_count":50,"source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189662307611","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000570679811","author":"-","similarity":0.001,"self":false,"similar_word_count":49,"source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188062025211","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120580984311","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于FPGA的EPON ONU设计与实现.pdf - 豆丁网","url":"http://www.docin.com/p-1149984087.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186098081911","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于EDA的ALU设计","url":"https://wenku.baidu.com/view/7b0e2b7d1cb91a37f111f18583d049649b660e0c"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118992500811","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117476774611","author":"csdn","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030691609411","author":"邢岳;田正宏;杜辉","similarity":0.001,"self":false,"similar_word_count":48,"source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082078623411","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146790090711","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b"},{"reference":false,"teacher":"","datatype":"book","year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编;黄涛，吴强副主编;王社，魏郧华，胡凯，蔡振参编","similarity":0.001,"self":false,"similar_word_count":47,"source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016188337811","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177893423411","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18"},{"reference":false,"teacher":"","datatype":"book","year":"","docid":"1900023885801611","author":"杨全胜主编","similarity":0.001,"self":false,"similar_word_count":46,"source":"","title":"计算机系统综合课程设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143175526611","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000104784138911","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000187873307311","author":"","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"无线传感器网络节点SoC的原型验证","url":"http://www.doc88.com/p%2D89416909707401.html"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023720243711","author":"刘凡平编著","similarity":0.001,"self":false,"similar_word_count":43,"source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":""},{"reference":false,"teacher":"","datatype":"chinaMeeting","year":"2014","docid":"1300000198113911","author":"崔东文;金波","similarity":0.001,"self":false,"similar_word_count":43,"source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000113620987811","author":"csdn","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082145235511","author":"","similarity":0.001,"self":false,"similar_word_count":42,"source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015110431211","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000193345064111","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195285691911","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000198071294011","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190331742911","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000131832145111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"数字系统设计与Verilog HDL(第3版) - 道客巴巴","url":"http://www.doc88.com/p%2D0087332228399.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120755765111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search"}],"similarity_pro":0,"word_copy_count":5285,"word_self_count":0,"similar_paragraphs":[{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":169.99998,"teacher":"","textWithDynamicClass":"的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar 1S0I7' onmouseover=\"highlightSetter('1S0I7',false)\" onmouseout=\"highlightSetter('1S0I7',true)\">(Application Specific Integrated Circuit,</em><em class='similar 1S0I8' onmouseover=\"highlightSetter('1S0I8',false)\" onmouseout=\"highlightSetter('1S0I8',true)\">专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC<em class='similar 1S0I11' onmouseover=\"highlightSetter('1S0I11',false)\" onmouseout=\"highlightSetter('1S0I11',true)\">(System On Chip,</em><em class='similar 1S0I12' onmouseover=\"highlightSetter('1S0I12',false)\" onmouseout=\"highlightSetter('1S0I12',true)\">片上系统)</em>的技术在目前的业界已经得到广泛的应用[1]。","datatype":"webpage","clcs":[],"similarityPercentage":"58.6%","self":false,"text":"的复杂度与集成度也越来越高。目前的专用集成电路芯片 ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em>已经具备将一个完整的系统设计集成在一块芯片上,这项称为片上系统 SOC<em class='similar'>(System On Chip,</em><em class='similar'>片上系统)</em>的技术在目前的业界已经得到广泛的应用[1]。"},{"profession":false,"keywords":[],"year":"2009","docid":"1000006719680711","author":"沈智芳","university":"咸宁职业技术学院,湖北咸宁437100","source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":"","reference":false,"similarScore":143.33331,"teacher":"","textWithDynamicClass":"。随着微电子技术的发展,集成电路工艺进入亚微米乃至纳米时代,<em class='similar 1S1I10' onmouseover=\"highlightSetter('1S1I10',false)\" onmouseout=\"highlightSetter('1S1I10',true)\">集成电路设计技术也与之相适应地由 ASIC时代转向片上系统SoC</em><em class='similar 1S1I11' onmouseover=\"highlightSetter('1S1I11',false)\" onmouseout=\"highlightSetter('1S1I11',true)\">(System—on—Chip)</em>时代。在 SoC平台中,采用标准化的片上总线 OCB(on—chip bus)集成技术,有利于实现 IP核移植、<em class='similar 1S1I18' onmouseover=\"highlightSetter('1S1I18',false)\" onmouseout=\"highlightSetter('1S1I18',true)\">设计重用、</em>系统的时序分析和功能验证自动化等内容的实现,从而为","datatype":"journal","clcs":["TP391"],"similarityPercentage":"43.4%","self":false,"text":"。随着微电子技术的发展,集成电路工艺进入亚微米乃至纳米时代,<em class='similar'>集成电路设计技术也与之相适应地由 ASIC时代转向片上系统SoC</em><em class='similar'>(System—on—Chip)</em>时代。在 SoC平台中,采用标准化的片上总线 OCB(on—chip bus)集成技术,有利于实现 IP核移植、<em class='similar'>设计重用、</em>系统的时序分析和功能验证自动化等内容的实现,从而为"},{"profession":false,"keywords":[],"year":"","docid":"9000189613787711","author":"","university":"","source":"网页","title":"基于AMBA总线的DMA控制器的设计--《湖南大学》2012年硕士论文        ","url":"http://cdmd.cnki.com.cn/Article/CDMD-10532-1012481870.htm","reference":false,"similarScore":128.82352,"teacher":"","textWithDynamicClass":"[摘要]<em class='similar 1S5I1' onmouseover=\"highlightSetter('1S5I1',false)\" onmouseout=\"highlightSetter('1S5I1',true)\">:随着超大规模集成电路设计技术不断发展和应用,</em><em class='similar 1S5I2' onmouseover=\"highlightSetter('1S5I2',false)\" onmouseout=\"highlightSetter('1S5I2',true)\">片上系统</em><em class='similar 1S5I3' onmouseover=\"highlightSetter('1S5I3',false)\" onmouseout=\"highlightSetter('1S5I3',true)\">(System-on-Chip,</em>SoC)的设计方已经成为IC产业的主流。而直接存储","datatype":"webpage","clcs":[],"similarityPercentage":"46.0%","self":false,"text":"[摘要]<em class='similar'>:随着超大规模集成电路设计技术不断发展和应用,</em><em class='similar'>片上系统</em><em class='similar'>(System-on-Chip,</em>SoC)的设计方已经成为IC产业的主流。而直接存储"},{"profession":false,"keywords":[],"year":"","docid":"9000203564664811","author":"","university":"","source":"网页","title":"电子与信息工程学部 精品文档","url":"https://www.docin.com/p%2D74446623.html","reference":false,"similarScore":58.333344,"teacher":"","textWithDynamicClass":"的电子系统,这就是所谓&quot;片上系统&quot;SoC<em class='similar 1S2I5' onmouseover=\"highlightSetter('1S2I5',false)\" onmouseout=\"highlightSetter('1S2I5',true)\">(System Chip)</em><em class='similar 1S2I6' onmouseover=\"highlightSetter('1S2I6',false)\" onmouseout=\"highlightSetter('1S2I6',true)\">集成电路设计技术。</em>大规模专用集成电路的设计已经成为一个重要的高科技领","datatype":"webpage","clcs":[],"similarityPercentage":"58.3%","self":false,"text":"的电子系统,这就是所谓&quot;片上系统&quot;SoC<em class='similar'>(System Chip)</em><em class='similar'>集成电路设计技术。</em>大规模专用集成电路的设计已经成为一个重要的高科技领"}],"textWithDynamicClass":"随着市场环境的逐步晋级,市场对与IC功能的需求越来越严苛,IC的设计的集成度在工艺的进步下也逐步增加。目前的ASIC<em class='similar T0I4' onmouseover=\"highlightSetter('T0I4',false)\" onmouseout=\"highlightSetter('T0I4',true)\">(Application Specific Integrated Circuit,</em><em class='similar T0I5' onmouseover=\"highlightSetter('T0I5',false)\" onmouseout=\"highlightSetter('T0I5',true)\">专用集成电路)</em><em class='similar T0I6' onmouseover=\"highlightSetter('T0I6',false)\" onmouseout=\"highlightSetter('T0I6',true)\">设计,</em>也被称为SoC<em class='similar T0I8' onmouseover=\"highlightSetter('T0I8',false)\" onmouseout=\"highlightSetter('T0I8',true)\">(System on Chip,</em><em class='similar T0I9' onmouseover=\"highlightSetter('T0I9',false)\" onmouseout=\"highlightSetter('T0I9',true)\">片上系统)</em><em class='similar T0I10' onmouseover=\"highlightSetter('T0I10',false)\" onmouseout=\"highlightSetter('T0I10',true)\">的集成电路设计技术已得到认可与应用,</em>且当代的SoC设计也不再限制于一块芯片上。通常,ASIC设计拥有低功耗、流片成本低、迭代速度快等优势,","replaceMap":{},"similar_word_count":85,"text":"随着市场环境的逐步晋级,市场对与IC功能的需求越来越严苛,IC的设计的集成度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em><em class='similar'>设计,</em>也被称为SoC<em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的集成电路设计技术已得到认可与应用,</em>且当代的SoC设计也不再限制于一块芯片上。通常,ASIC设计拥有低功耗、流片成本低、迭代速度快等优势,","suggest":{"synonyms":[{"synonyms":["升级"],"keyword":"晋级"},{"synonyms":["严厉"],"keyword":"严苛"}],"keyword":["市场环境","晋级","ic","严苛","集成度","asic","application","specific","integrated","circuit","专用集成电路","soc","chip","片上系统","集成电路","设计技术"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":303,"teacher":"","textWithDynamicClass":"统)的技术在目前的业界已经得到广泛的应用[1]。一般情况下,<em class='similar 2S6I4' onmouseover=\"highlightSetter('2S6I4',false)\" onmouseout=\"highlightSetter('2S6I4',true)\">采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar 2S6I8' onmouseover=\"highlightSetter('2S6I8',false)\" onmouseout=\"highlightSetter('2S6I8',true)\">所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em><em class='similar 2S6I9' onmouseover=\"highlightSetter('2S6I9',false)\" onmouseout=\"highlightSetter('2S6I9',true)\">也正是由于 ASIC 的复杂性,</em><em class='similar 2S6I10' onmouseover=\"highlightSetter('2S6I10',false)\" onmouseout=\"highlightSetter('2S6I10',true)\">使得 ASIC 的设计风险也大幅增加。</em>一旦芯片设计失败,不仅会损失大量的研发成本,还可能","datatype":"webpage","clcs":[],"similarityPercentage":"59.4%","self":false,"text":"统)的技术在目前的业界已经得到广泛的应用[1]。一般情况下,<em class='similar'>采用 ASIC 的设计功耗更低,</em>尤其是在批量生产时,ASIC 的成本也更低,并且是针对专门应用而特别设计,<em class='similar'>所以 ASIC 可容纳更为复杂和灵活的逻辑设计。</em><em class='similar'>也正是由于 ASIC 的复杂性,</em><em class='similar'>使得 ASIC 的设计风险也大幅增加。</em>一旦芯片设计失败,不仅会损失大量的研发成本,还可能"}],"textWithDynamicClass":"设计,也被称为SoC(System on Chip,片上系统)的集成电路设计技术已得到认可与应用,且当代的SoC设计也不再限制于一块芯片上。通常,<em class='similar T1I2' onmouseover=\"highlightSetter('T1I2',false)\" onmouseout=\"highlightSetter('T1I2',true)\">ASIC设计拥有低功耗、</em>流片成本低、迭代速度快等优势,<em class='similar T1I5' onmouseover=\"highlightSetter('T1I5',false)\" onmouseout=\"highlightSetter('T1I5',true)\">所以ASIC可包含更为复杂和灵活的集成逻辑设计。</em><em class='similar T1I6' onmouseover=\"highlightSetter('T1I6',false)\" onmouseout=\"highlightSetter('T1I6',true)\">同样正是由于现代ASIC设计的高复杂度,</em><em class='similar T1I7' onmouseover=\"highlightSetter('T1I7',false)\" onmouseout=\"highlightSetter('T1I7',true)\">使得其研发设计的风险也在大幅增加。</em>一旦芯片设计失败,将会导致大量研发成本的损失,所以,","replaceMap":{},"similar_word_count":73,"text":"设计,也被称为SoC(System on Chip,片上系统)的集成电路设计技术已得到认可与应用,且当代的SoC设计也不再限制于一块芯片上。通常,<em class='similar'>ASIC设计拥有低功耗、</em>流片成本低、迭代速度快等优势,<em class='similar'>所以ASIC可包含更为复杂和灵活的集成逻辑设计。</em><em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em>一旦芯片设计失败,将会导致大量研发成本的损失,所以,","suggest":{"synonyms":[{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["一齐"],"keyword":"一块"}],"keyword":["当代","soc","一块","asic","低功耗","流片","成本低","迭代","速度快","逻辑设计","复杂度","研发设计"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":248.0342,"teacher":"","textWithDynamicClass":" ASIC 的复杂性,使得 ASIC 的设计风险也大幅增加。<em class='similar 3S7I4' onmouseover=\"highlightSetter('3S7I4',false)\" onmouseout=\"highlightSetter('3S7I4',true)\">一旦芯片设计失败,</em><em class='similar 3S7I5' onmouseover=\"highlightSetter('3S7I5',false)\" onmouseout=\"highlightSetter('3S7I5',true)\">不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯片公司的芯片研发出自己相应的产品,如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。<em class='similar 3S7I10' onmouseover=\"highlightSetter('3S7I10',false)\" onmouseout=\"highlightSetter('3S7I10',true)\">所以,</em><em class='similar 3S7I11' onmouseover=\"highlightSetter('3S7I11',false)\" onmouseout=\"highlightSetter('3S7I11',true)\">验证逐步变为复杂芯片研发过程中的关键环节。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"59.1%","self":false,"text":" ASIC 的复杂性,使得 ASIC 的设计风险也大幅增加。<em class='similar'>一旦芯片设计失败,</em><em class='similar'>不仅会损失大量的研发成本,</em>还可能导致客户对公司的产品失去信任。因为客户需要芯片公司的芯片研发出自己相应的产品,如果芯片公司无法如期交付合格的芯片,客户也会蒙受损失。<em class='similar'>所以,</em><em class='similar'>验证逐步变为复杂芯片研发过程中的关键环节。</em>"}],"textWithDynamicClass":"同样正是由于现代ASIC设计的高复杂度,使得其研发设计的风险也在大幅增加。<em class='similar T2I0' onmouseover=\"highlightSetter('T2I0',false)\" onmouseout=\"highlightSetter('T2I0',true)\">一旦芯片设计失败,</em><em class='similar T2I1' onmouseover=\"highlightSetter('T2I1',false)\" onmouseout=\"highlightSetter('T2I1',true)\">将会导致大量研发成本的损失,</em><em class='similar T2I2' onmouseover=\"highlightSetter('T2I2',false)\" onmouseout=\"highlightSetter('T2I2',true)\">所以,</em><em class='similar T2I3' onmouseover=\"highlightSetter('T2I3',false)\" onmouseout=\"highlightSetter('T2I3',true)\">IC的正确性验证正在逐步成为具有很高复杂度的IC研发流程中所必须且关键的环节。</em>现阶段集成电路设计中验证所占用的研发周期通常会占用到整体研发周期的半数以上,所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,虽然软件仿真具有简单易用且可行性高的优势,但是在处理较复杂的集成电路设计时,很难保证其验证效率[6]。","replaceMap":{},"similar_word_count":65,"text":"同样正是由于现代ASIC设计的高复杂度,使得其研发设计的风险也在大幅增加。<em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发成本的损失,</em><em class='similar'>所以,</em><em class='similar'>IC的正确性验证正在逐步成为具有很高复杂度的IC研发流程中所必须且关键的环节。</em>现阶段集成电路设计中验证所占用的研发周期通常会占用到整体研发周期的半数以上,所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,虽然软件仿真具有简单易用且可行性高的优势,但是在处理较复杂的集成电路设计时,很难保证其验证效率[6]。","suggest":{"synonyms":[{"synonyms":["对折"],"keyword":"半数"}],"keyword":["芯片设计","研发成本","ic","正确性验证","复杂度","研发流程","现阶段","集成电路设计","占用","研发周期","半数","验证方法","仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":548.125,"teacher":"","textWithDynamicClass":"证方法成为验证的关键。目前,最常见的验证方法是软件仿真技术,<em class='similar 4S8I5' onmouseover=\"highlightSetter('4S8I5',false)\" onmouseout=\"highlightSetter('4S8I5',true)\">但是软件仿真虽然简单易行,</em><em class='similar 4S8I6' onmouseover=\"highlightSetter('4S8I6',false)\" onmouseout=\"highlightSetter('4S8I6',true)\">在面对复杂的集成电路设计时,</em>其验证效率过低,最终可能影响到产品的及时发布。<em class='similar 4S8I9' onmouseover=\"highlightSetter('4S8I9',false)\" onmouseout=\"highlightSetter('4S8I9',true)\">而基于 FPGA 的原型验证方法,</em>凭借其可反复擦除、<em class='similar 4S8I11' onmouseover=\"highlightSetter('4S8I11',false)\" onmouseout=\"highlightSetter('4S8I11',true)\">可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar 4S8I12' onmouseover=\"highlightSetter('4S8I12',false)\" onmouseout=\"highlightSetter('4S8I12',true)\">被越来越多的验证团队所采用。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"67.7%","self":false,"text":"证方法成为验证的关键。目前,最常见的验证方法是软件仿真技术,<em class='similar'>但是软件仿真虽然简单易行,</em><em class='similar'>在面对复杂的集成电路设计时,</em>其验证效率过低,最终可能影响到产品的及时发布。<em class='similar'>而基于 FPGA 的原型验证方法,</em>凭借其可反复擦除、<em class='similar'>可真实的模拟设计中的硬件行为以及能够系统全面的反映设计功能等优势,</em><em class='similar'>被越来越多的验证团队所采用。</em>"}],"textWithDynamicClass":"所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,<em class='similar T3I0' onmouseover=\"highlightSetter('T3I0',false)\" onmouseout=\"highlightSetter('T3I0',true)\">虽然软件仿真具有简单易用且可行性高的优势,</em><em class='similar T3I1' onmouseover=\"highlightSetter('T3I1',false)\" onmouseout=\"highlightSetter('T3I1',true)\">但是在处理较复杂的集成电路设计时,</em>很难保证其验证效率[6]。<em class='similar T3I4' onmouseover=\"highlightSetter('T3I4',false)\" onmouseout=\"highlightSetter('T3I4',true)\">而基于FPGA的原型验证,</em>依靠其可反复刷写、<em class='similar T3I6' onmouseover=\"highlightSetter('T3I6',false)\" onmouseout=\"highlightSetter('T3I6',true)\">可真实模拟设计中的逻辑功能行为以及能够较为全面且系统的反映逻辑功能等优势,</em><em class='similar T3I7' onmouseover=\"highlightSetter('T3I7',false)\" onmouseout=\"highlightSetter('T3I7',true)\">被越来越多的验证团队所采用</em>[6]。","replaceMap":{},"similar_word_count":101,"text":"所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,<em class='similar'>虽然软件仿真具有简单易用且可行性高的优势,</em><em class='similar'>但是在处理较复杂的集成电路设计时,</em>很难保证其验证效率[6]。<em class='similar'>而基于FPGA的原型验证,</em>依靠其可反复刷写、<em class='similar'>可真实模拟设计中的逻辑功能行为以及能够较为全面且系统的反映逻辑功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>[6]。","suggest":{"synonyms":[],"keyword":["软件仿真","易用","可行性","集成电路","设计时","验证效率","fpga","原型验证","刷写","模拟设计","逻辑","功能行为","逻辑功能"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":356.48413,"teacher":"","textWithDynamicClass":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar 5S9I5' onmouseover=\"highlightSetter('5S9I5',false)\" onmouseout=\"highlightSetter('5S9I5',true)\">集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,<em class='similar 5S9I7' onmouseover=\"highlightSetter('5S9I7',false)\" onmouseout=\"highlightSetter('5S9I7',true)\">正确性验证已成为高性能芯片研发过程中的关键环节,</em>因此集成电路公司相继推出了许多高级的验证方法来保证","datatype":"webpage","clcs":[],"similarityPercentage":"58.4%","self":false,"text":"例,研究基于多 FPGA 原型验证的逻辑划分方法。1.1.2<em class='similar'>集成电路验证的发展目前随着高性能 ASIC 芯片设计复杂度的提升以及体系结构的不断创新,</em>其规模愈加庞大,<em class='similar'>正确性验证已成为高性能芯片研发过程中的关键环节,</em>因此集成电路公司相继推出了许多高级的验证方法来保证"}],"textWithDynamicClass":"<em class='similar T4I0' onmouseover=\"highlightSetter('T4I0',false)\" onmouseout=\"highlightSetter('T4I0',true)\">目前随着超常规性能ASIC芯片设计规模与电路复杂度的提升以及集成电路设计体系结构的不断升级与创新,</em>SoC设计的规模在急速膨胀,<em class='similar T4I2' onmouseover=\"highlightSetter('T4I2',false)\" onmouseout=\"highlightSetter('T4I2',true)\">研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,</em>因此为保证验证的高效性和准确性,许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。","replaceMap":{},"similar_word_count":78,"text":"<em class='similar'>目前随着超常规性能ASIC芯片设计规模与电路复杂度的提升以及集成电路设计体系结构的不断升级与创新,</em>SoC设计的规模在急速膨胀,<em class='similar'>研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,</em>因此为保证验证的高效性和准确性,许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。","suggest":{"synonyms":[{"synonyms":["晋级"],"keyword":"升级"},{"synonyms":["即速"],"keyword":"急速"},{"synonyms":["收缩"],"keyword":"膨胀"}],"keyword":["超常规","asic","设计规模","复杂度","集成电路设计","体系结构","升级","与创新","soc","急速","膨胀","研发流程","高性能","研发周期","关键环节"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":163.39392,"teacher":"","textWithDynamicClass":"模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,<em class='similar 6S10I4' onmouseover=\"highlightSetter('6S10I4',false)\" onmouseout=\"highlightSetter('6S10I4',true)\">因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em><em class='similar 6S10I5' onmouseover=\"highlightSetter('6S10I5',false)\" onmouseout=\"highlightSetter('6S10I5',true)\">在复杂的高性能芯片西安电</em>子科技大学硕士学位论文2验证方面,主要的验证方法分","datatype":"webpage","clcs":[],"similarityPercentage":"25.9%","self":false,"text":"模愈加庞大,正确性验证已成为高性能芯片研发过程中的关键环节,<em class='similar'>因此集成电路公司相继推出了许多高级的验证方法来保证验证的高效性和准确性。</em><em class='similar'>在复杂的高性能芯片西安电</em>子科技大学硕士学位论文2验证方面,主要的验证方法分"}],"textWithDynamicClass":"SoC设计的规模在急速膨胀,研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,<em class='similar T5I0' onmouseover=\"highlightSetter('T5I0',false)\" onmouseout=\"highlightSetter('T5I0',true)\">因此为保证验证的高效性和准确性,</em><em class='similar T5I1' onmouseover=\"highlightSetter('T5I1',false)\" onmouseout=\"highlightSetter('T5I1',true)\">许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。</em>在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,","replaceMap":{},"similar_word_count":47,"text":"SoC设计的规模在急速膨胀,研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,<em class='similar'>因此为保证验证的高效性和准确性,</em><em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。</em>在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,","suggest":{"synonyms":[{"synonyms":["接踵"],"keyword":"相继"}],"keyword":["高效性","准确性","eda","集成电路设计公司","相继","超高","高性能","ic","主流","软件仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000058639272611","author":"","university":"","source":"网页","title":"算法举例_学习资料共享网","url":"http://www.87994.com/read/7351734a28277d64c6e20de8.html","reference":false,"similarScore":100.52172,"teacher":"","textWithDynamicClass":"理和上传给上位机显示。程序部分是用VerilogHDL语言,<em class='similar 7S12I4' onmouseover=\"highlightSetter('7S12I4',false)\" onmouseout=\"highlightSetter('7S12I4',true)\">并利用QuartusⅡ等EDA软件进行仿真,</em><em class='similar 7S12I5' onmouseover=\"highlightSetter('7S12I5',false)\" onmouseout=\"highlightSetter('7S12I5',true)\">验证了设计功能的正确性。</em>基于FPGA的视觉电生理图像刺激系统的设计FPGA","datatype":"webpage","clcs":[],"similarityPercentage":"41.9%","self":false,"text":"理和上传给上位机显示。程序部分是用VerilogHDL语言,<em class='similar'>并利用QuartusⅡ等EDA软件进行仿真,</em><em class='similar'>验证了设计功能的正确性。</em>基于FPGA的视觉电生理图像刺激系统的设计FPGA"},{"profession":false,"keywords":[],"year":"","docid":"9000187873307311","author":"","university":"","source":"网页","title":"无线传感器网络节点SoC的原型验证","url":"http://www.doc88.com/p%2D89416909707401.html","reference":false,"similarScore":85.33333,"teacher":"","textWithDynamicClass":"性。然而随着 SoC 复杂度的提高,由于软件仿真速度的限制,<em class='similar 7S11I3' onmouseover=\"highlightSetter('7S11I3',false)\" onmouseout=\"highlightSetter('7S11I3',true)\">仅通过软件仿真很难验证硬件设计功能的正确性,</em>而通过 FPGA 实现 SoC 设计原型进行原型验","datatype":"webpage","clcs":[],"similarityPercentage":"40.6%","self":false,"text":"性。然而随着 SoC 复杂度的提高,由于软件仿真速度的限制,<em class='similar'>仅通过软件仿真很难验证硬件设计功能的正确性,</em>而通过 FPGA 实现 SoC 设计原型进行原型验"}],"textWithDynamicClass":"在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。<em class='similar T6I2' onmouseover=\"highlightSetter('T6I2',false)\" onmouseout=\"highlightSetter('T6I2',true)\">通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,</em>因为其具有仿真数据精确、使用方便灵活等优势,因此对于集成规模或复杂度较小的IC模块的正确性验证通常会采用Simulation的方法。但是,当芯片整体复杂与集成度的提升,软件仿真与模拟的效率也在不断下降,同时也将难以覆盖整体IC功能的验证,验证所追求的时间和性能效率也将难以保证,从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,","replaceMap":{},"similar_word_count":31,"text":"在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。<em class='similar'>通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,</em>因为其具有仿真数据精确、使用方便灵活等优势,因此对于集成规模或复杂度较小的IC模块的正确性验证通常会采用Simulation的方法。但是,当芯片整体复杂与集成度的提升,软件仿真与模拟的效率也在不断下降,同时也将难以覆盖整体IC功能的验证,验证所追求的时间和性能效率也将难以保证,从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"}],"keyword":["硬件加速仿真","fpga","原型验证","仿真","集成电路","设计功能","正确性","仿真数据","精确","使用方便","复杂度","ic","正确性验证","simulation","集成度","软件仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":517.748,"teacher":"","textWithDynamicClass":"<em class='similar 8S13I0' onmouseover=\"highlightSetter('8S13I0',false)\" onmouseout=\"highlightSetter('8S13I0',true)\">,各大集成电路公司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,<em class='similar 8S13I2' onmouseover=\"highlightSetter('8S13I2',false)\" onmouseout=\"highlightSetter('8S13I2',true)\">将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar 8S13I3' onmouseover=\"highlightSetter('8S13I3',false)\" onmouseout=\"highlightSetter('8S13I3',true)\">最后硬件加速器将运算结果传回仿真软件,</em><em class='similar 8S13I4' onmouseover=\"highlightSetter('8S13I4',false)\" onmouseout=\"highlightSetter('8S13I4',true)\">最终从整体上提升验证效率</em>[3]。<em class='similar 8S13I6' onmouseover=\"highlightSetter('8S13I6',false)\" onmouseout=\"highlightSetter('8S13I6',true)\">而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar 8S13I7' onmouseover=\"highlightSetter('8S13I7',false)\" onmouseout=\"highlightSetter('8S13I7',true)\">相比于软件去实现芯片电路</em>的模型构建,硬件加速器采用真实的硬件仿真环境,可以","datatype":"webpage","clcs":[],"similarityPercentage":"47.9%","self":false,"text":"<em class='similar'>,各大集成电路公司提出了硬件加速器仿真验证,</em>主要思想是做出专门的硬件加速器,<em class='similar'>将软件模拟中的某些复杂运算交给硬件加速器计算,</em><em class='similar'>最后硬件加速器将运算结果传回仿真软件,</em><em class='similar'>最终从整体上提升验证效率</em>[3]。<em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar'>相比于软件去实现芯片电路</em>的模型构建,硬件加速器采用真实的硬件仿真环境,可以"}],"textWithDynamicClass":"从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,<em class='similar T7I0' onmouseover=\"highlightSetter('T7I0',false)\" onmouseout=\"highlightSetter('T7I0',true)\">各大EDA厂家与集成电路研发厂家进而通过使用硬件加速器来实现仿真验证,</em>其主要思想是基于硬件运算速度远高于软件的原理,<em class='similar T7I2' onmouseover=\"highlightSetter('T7I2',false)\" onmouseout=\"highlightSetter('T7I2',true)\">将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,</em><em class='similar T7I3' onmouseover=\"highlightSetter('T7I3',false)\" onmouseout=\"highlightSetter('T7I3',true)\">最后硬件将加速计算后的结果反馈给上位机即EDA软件,</em><em class='similar T7I4' onmouseover=\"highlightSetter('T7I4',false)\" onmouseout=\"highlightSetter('T7I4',true)\">从而提升整体的验证效率。</em><em class='similar T7I5' onmouseover=\"highlightSetter('T7I5',false)\" onmouseout=\"highlightSetter('T7I5',true)\">而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar T7I6' onmouseover=\"highlightSetter('T7I6',false)\" onmouseout=\"highlightSetter('T7I6',true)\">相比于完全使用软件来实现</em>仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、真实、","replaceMap":{},"similar_word_count":137,"text":"从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,<em class='similar'>各大EDA厂家与集成电路研发厂家进而通过使用硬件加速器来实现仿真验证,</em>其主要思想是基于硬件运算速度远高于软件的原理,<em class='similar'>将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,</em><em class='similar'>最后硬件将加速计算后的结果反馈给上位机即EDA软件,</em><em class='similar'>从而提升整体的验证效率。</em><em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar'>相比于完全使用软件来实现</em>仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、真实、","suggest":{"synonyms":[],"keyword":["eda","厂家","集成电路","硬件加速器","仿真验证","主要思想","硬件","运算速度","软件仿真","运算逻辑","加速计算","结果反馈","上位机","验证效率","仿真环境","仿真"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":481.60864,"teacher":"","textWithDynamicClass":"去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,<em class='similar 9S14I3' onmouseover=\"highlightSetter('9S14I3',false)\" onmouseout=\"highlightSetter('9S14I3',true)\">可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar 9S14I5' onmouseover=\"highlightSetter('9S14I5',false)\" onmouseout=\"highlightSetter('9S14I5',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar 9S14I6' onmouseover=\"highlightSetter('9S14I6',false)\" onmouseout=\"highlightSetter('9S14I6',true)\">典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em><em class='similar 9S14I7' onmouseover=\"highlightSetter('9S14I7',false)\" onmouseout=\"highlightSetter('9S14I7',true)\">但是硬件加速仿真验证也</em>存在缺陷,因为这种方法需要专门的团队进行硬件加速器","datatype":"webpage","clcs":[],"similarityPercentage":"69.8%","self":false,"text":"去实现芯片电路的模型构建,硬件加速器采用真实的硬件仿真环境,<em class='similar'>可以真正的反映系统设计中的各种问题,</em>有能力检测出许多软件模拟方法很难检测的设计缺陷,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有 Cadence 公司的 Palladium 和 Mentor 公司的 Veloce 系列。</em><em class='similar'>但是硬件加速仿真验证也</em>存在缺陷,因为这种方法需要专门的团队进行硬件加速器"}],"textWithDynamicClass":"相比于完全使用软件来实现仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、<em class='similar T8I1' onmouseover=\"highlightSetter('T8I1',false)\" onmouseout=\"highlightSetter('T8I1',true)\">真实、</em><em class='similar T8I2' onmouseover=\"highlightSetter('T8I2',false)\" onmouseout=\"highlightSetter('T8I2',true)\">有效的反馈集成电路设计系统所存在的各种问题,</em>进而可以帮助集成电路开发人员精确的发现使用软件仿真无法捕获的异常数据,<em class='similar T8I4' onmouseover=\"highlightSetter('T8I4',false)\" onmouseout=\"highlightSetter('T8I4',true)\">这对于验证工程师的调试很有帮助,</em><em class='similar T8I5' onmouseover=\"highlightSetter('T8I5',false)\" onmouseout=\"highlightSetter('T8I5',true)\">典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar T8I7' onmouseover=\"highlightSetter('T8I7',false)\" onmouseout=\"highlightSetter('T8I7',true)\">但是硬件仿真器也并不是</em>完美的,因为实现硬件加速仿真需要适配不同的集成电路设计结构,","replaceMap":{},"similar_word_count":102,"text":"相比于完全使用软件来实现仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、<em class='similar'>真实、</em><em class='similar'>有效的反馈集成电路设计系统所存在的各种问题,</em>进而可以帮助集成电路开发人员精确的发现使用软件仿真无法捕获的异常数据,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar'>但是硬件仿真器也并不是</em>完美的,因为实现硬件加速仿真需要适配不同的集成电路设计结构,","suggest":{"synonyms":[{"synonyms":["反应"],"keyword":"反馈"},{"synonyms":["精准"],"keyword":"精确"},{"synonyms":["捉拿"],"keyword":"捕获"}],"keyword":["反馈","集成电路","设计系统","各种问题","开发人员","精确","软件仿真","捕获","异常数据","工程师","调试","硬件仿真器","cadence","palladium","mentor","veloce","35","完美的"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000138222351111","author":"","university":"","source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html","reference":false,"similarScore":388.39996,"teacher":"","textWithDynamicClass":"原型验证也可以通过硬件仿真器实现,但硬件仿真器的价格太昂贵,<em class='similar 10S15I4' onmouseover=\"highlightSetter('10S15I4',false)\" onmouseout=\"highlightSetter('10S15I4',true)\">而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。<em class='similar 10S15I6' onmouseover=\"highlightSetter('10S15I6',false)\" onmouseout=\"highlightSetter('10S15I6',true)\">随着 FPGA 性能的不断提升,</em><em class='similar 10S15I7' onmouseover=\"highlightSetter('10S15I7',false)\" onmouseout=\"highlightSetter('10S15I7',true)\">基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG","datatype":"webpage","clcs":[],"similarityPercentage":"77.7%","self":false,"text":"原型验证也可以通过硬件仿真器实现,但硬件仿真器的价格太昂贵,<em class='similar'>而且由于 FPGA 的技术积累已经比较成熟,</em>所以本文采用 FPGA 实现原型验证。<em class='similar'>随着 FPGA 性能的不断提升,</em><em class='similar'>基于 FPGA 的原型验证逐渐成为大规模复杂芯片验证的选择。</em>FPGA原型验证是指利用FPGA实现设计并在FPG"}],"textWithDynamicClass":"从实现本质出发,本文的所提及的高密度原型验证系统也可基于硬件仿真器来实现,但硬件仿真器的生产或因设计变更发生的调整成本高昂,<em class='similar T9I1' onmouseover=\"highlightSetter('T9I1',false)\" onmouseout=\"highlightSetter('T9I1',true)\">而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar T9I4' onmouseover=\"highlightSetter('T9I4',false)\" onmouseout=\"highlightSetter('T9I4',true)\">随着FPGA性能的不断提升,</em><em class='similar T9I5' onmouseover=\"highlightSetter('T9I5',false)\" onmouseout=\"highlightSetter('T9I5',true)\">基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","replaceMap":{},"similar_word_count":71,"text":"从实现本质出发,本文的所提及的高密度原型验证系统也可基于硬件仿真器来实现,但硬件仿真器的生产或因设计变更发生的调整成本高昂,<em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em>","suggest":{"synonyms":[{"synonyms":["高亢"],"keyword":"高昂"},{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["完好"],"keyword":"完备"}],"keyword":["硬件仿真器","设计变更","调整成本","高昂","当代","fpga","技术发展","配套软件","完备","擦除","高密度","原型验证","集成电路","设计验证","芯片验证"]}},{"sources":[{"profession":false,"keywords":[],"year":"2016","docid":"2200000798956911","author":"JXT","university":"","source":"大学生论文联合库","title":"纳米工艺与集成电路设计","url":"","reference":false,"similarScore":91.25,"teacher":"","textWithDynamicClass":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar 11S17I9' onmouseover=\"highlightSetter('11S17I9',false)\" onmouseout=\"highlightSetter('11S17I9',true)\">设计者将要通过硬件描述语言在寄存器传输级</em><em class='similar 11S17I10' onmouseover=\"highlightSetter('11S17I10',false)\" onmouseout=\"highlightSetter('11S17I10',true)\">(Register Transfer Level,</em> RTL)进行逻辑设计[13],进而在逻辑级定义芯","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"39.7%","self":false,"text":"就是每个模块的输入、输出和时延信息。在完成高层次的综合之后,<em class='similar'>设计者将要通过硬件描述语言在寄存器传输级</em><em class='similar'>(Register Transfer Level,</em> RTL)进行逻辑设计[13],进而在逻辑级定义芯"}],"textWithDynamicClass":"<em class='similar T10I0' onmouseover=\"highlightSetter('T10I0',false)\" onmouseout=\"highlightSetter('T10I0',true)\">当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级</em><em class='similar T10I1' onmouseover=\"highlightSetter('T10I1',false)\" onmouseout=\"highlightSetter('T10I1',true)\">(Register Transfer Level,</em>RTL)的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,包括逻辑综合、逻辑优化、技术映射、布局、布线等[2]。","replaceMap":{},"similar_word_count":55,"text":"<em class='similar'>当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级</em><em class='similar'>(Register Transfer Level,</em>RTL)的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,包括逻辑综合、逻辑优化、技术映射、布局、布线等[2]。","suggest":{"synonyms":[],"keyword":["集成电路","开发人员","硬件描述语言","寄存器传输级","register","transfer","level","rtl","软件编码","级设计","基本步骤","fpga","内部结构","比特","流文件"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190331742911","author":"","university":"","source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html","reference":false,"similarScore":138.66666,"teacher":"","textWithDynamicClass":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar 12S18I5' onmouseover=\"highlightSetter('12S18I5',false)\" onmouseout=\"highlightSetter('12S18I5',true)\">逻辑综合、</em><em class='similar 12S18I6' onmouseover=\"highlightSetter('12S18I6',false)\" onmouseout=\"highlightSetter('12S18I6',true)\">逻辑优化、</em><em class='similar 12S18I7' onmouseover=\"highlightSetter('12S18I7',false)\" onmouseout=\"highlightSetter('12S18I7',true)\">技术映射、</em>打包、<em class='similar 12S18I9' onmouseover=\"highlightSetter('12S18I9',false)\" onmouseout=\"highlightSetter('12S18I9',true)\">布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节","datatype":"webpage","clcs":[],"similarityPercentage":"81.6%","self":false,"text":"到了广泛的应用。 F P G A 设计流程主要包括设计输入、<em class='similar'>逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em>打包、<em class='similar'>布局和布线。</em>在F P G A 设计中,布局是极为重要的一个环节"}],"textWithDynamicClass":"的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar T11I1' onmouseover=\"highlightSetter('T11I1',false)\" onmouseout=\"highlightSetter('T11I1',true)\">包括逻辑综合、</em><em class='similar T11I2' onmouseover=\"highlightSetter('T11I2',false)\" onmouseout=\"highlightSetter('T11I2',true)\">逻辑优化、</em><em class='similar T11I3' onmouseover=\"highlightSetter('T11I3',false)\" onmouseout=\"highlightSetter('T11I3',true)\">技术映射、</em><em class='similar T11I4' onmouseover=\"highlightSetter('T11I4',false)\" onmouseout=\"highlightSetter('T11I4',true)\">布局、</em><em class='similar T11I5' onmouseover=\"highlightSetter('T11I5',false)\" onmouseout=\"highlightSetter('T11I5',true)\">布线等</em>[2]。","replaceMap":{},"similar_word_count":23,"text":"的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>布局、</em><em class='similar'>布线等</em>[2]。","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["构造"],"keyword":"布局"}],"keyword":["rtl","设计步骤","逻辑综合","逻辑优化","映射","布局","布线"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190765717911","author":"","university":"","source":"网页","title":"2019年12月_oyzy_Sean的篝火_SeanOY_CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/month/2019/12","reference":false,"similarScore":97.99999,"teacher":"","textWithDynamicClass":")FPGA概要一、FPGA组成要素FPGA主要由三部分组成:<em class='similar 14S20I6' onmouseover=\"highlightSetter('14S20I6',false)\" onmouseout=\"highlightSetter('14S20I6',true)\">实现逻辑电路的逻辑要素</em><em class='similar 14S20I7' onmouseover=\"highlightSetter('14S20I7',false)\" onmouseout=\"highlightSetter('14S20I7',true)\">(逻辑块,</em>Logical Block,LB)、与外部进行信号","datatype":"webpage","clcs":[],"similarityPercentage":"70.0%","self":false,"text":")FPGA概要一、FPGA组成要素FPGA主要由三部分组成:<em class='similar'>实现逻辑电路的逻辑要素</em><em class='similar'>(逻辑块,</em>Logical Block,LB)、与外部进行信号"}],"textWithDynamicClass":"<em class='similar T13I0' onmouseover=\"highlightSetter('T13I0',false)\" onmouseout=\"highlightSetter('T13I0',true)\">第一部分是实现逻辑电路的逻辑要素即逻辑块</em>(Logic Block,LB)也就是我们常说的基本逻辑单元,可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,","replaceMap":{},"similar_word_count":20,"text":"<em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em>(Logic Block,LB)也就是我们常说的基本逻辑单元,可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,","suggest":{"synonyms":[],"keyword":["第一部分","逻辑电路","逻辑要素","逻辑块","logic","block","lb","常说","逻辑单元","可编程逻辑","实现方式","最早的","乘积项","查找表","数据选择器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000190761327111","author":"","university":"","source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox","reference":false,"similarScore":164.88371,"teacher":"","textWithDynamicClass":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar 15S22I7' onmouseover=\"highlightSetter('15S22I7',false)\" onmouseout=\"highlightSetter('15S22I7',true)\">逻辑要素逻辑要素由可以实现任意逻辑电路的可编程部分触发器</em><em class='similar 15S22I8' onmouseover=\"highlightSetter('15S22I8',false)\" onmouseout=\"highlightSetter('15S22I8',true)\">(Flip-Flop,</em>FF)<em class='similar 15S22I10' onmouseover=\"highlightSetter('15S22I10',false)\" onmouseout=\"highlightSetter('15S22I10',true)\">等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/","datatype":"webpage","clcs":[],"similarityPercentage":"36.6%","self":false,"text":"还会有处理器、块存储器、乘法器等固定功能的硬核电路。(一)、<em class='similar'>逻辑要素逻辑要素由可以实现任意逻辑电路的可编程部分触发器</em><em class='similar'>(Flip-Flop,</em>FF)<em class='similar'>等数据存储电路和数据选择器组成。</em>(二)、输入/输出要素输入/输出要素是具有连接I/"}],"textWithDynamicClass":"可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,<em class='similar T14I1' onmouseover=\"highlightSetter('T14I1',false)\" onmouseout=\"highlightSetter('T14I1',true)\">其本质都是由可以实现任意电路逻辑的可编程部分触发器即Flip-Flop等数据存储电路和数据选择器组成</em>[43]。逻辑块是在FPGA设计开发或原型验证流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB(","replaceMap":{},"similar_word_count":50,"text":"可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,<em class='similar'>其本质都是由可以实现任意电路逻辑的可编程部分触发器即Flip-Flop等数据存储电路和数据选择器组成</em>[43]。逻辑块是在FPGA设计开发或原型验证流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB(","suggest":{"synonyms":[],"keyword":["底层","逻辑块","逻辑的","可编程","触发器","flip","flop","存储电路","数据选择器","43","fpga","设计开发","原型验证","紧俏","资源种类","厂商","逻辑","块结构","基本原理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135795011511","author":"","university":"","source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310","reference":false,"similarScore":77.61903,"teacher":"","textWithDynamicClass":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar 16S23I1' onmouseover=\"highlightSetter('16S23I1',false)\" onmouseout=\"highlightSetter('16S23I1',true)\">(Configurable Logic Block)</em>来介绍,<em class='similar 16S23I3' onmouseover=\"highlightSetter('16S23I3',false)\" onmouseout=\"highlightSetter('16S23I3',true)\">把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把","datatype":"webpage","clcs":[],"similarityPercentage":"48.5%","self":false,"text":"linx的官方文档在介绍FPGA的逻辑资源时通常是按照CLB<em class='similar'>(Configurable Logic Block)</em>来介绍,<em class='similar'>把CLB作为FPGA里的最小逻辑单元。</em>但是CLB是由2个slice构成,因此平时大家都把"}],"textWithDynamicClass":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar T15I0' onmouseover=\"highlightSetter('T15I0',false)\" onmouseout=\"highlightSetter('T15I0',true)\">如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar T15I1' onmouseover=\"highlightSetter('T15I1',false)\" onmouseout=\"highlightSetter('T15I1',true)\">(Configurable Logic Block)</em>,是以LUT来构成的。","replaceMap":{},"similar_word_count":55,"text":"各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar'>(Configurable Logic Block)</em>,是以LUT来构成的。","suggest":{"synonyms":[],"keyword":["xilinx","设计研发","fpga","逻辑单元","clb","configurable","logic","block","lut"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139141171711","author":"","university":"","source":"网页","title":"多FPGA验证平台的SoC逻辑划分方法及应用 - 道客巴巴","url":"http://www.doc88.com/p%2D9942184587640.html","reference":false,"similarScore":127.85715,"teacher":"","textWithDynamicClass":"A原型验证方法的关键挑战FPGA芯片是由各项硬件资源构成的,<em class='similar 17S24I5' onmouseover=\"highlightSetter('17S24I5',false)\" onmouseout=\"highlightSetter('17S24I5',true)\">其中包括可编程输入输出资源</em>( I/OBl ock)<em class='similar 17S24I7' onmouseover=\"highlightSetter('17S24I7',false)\" onmouseout=\"highlightSetter('17S24I7',true)\">、基本可编程逻辑单元</em>( LUT)、嵌入式块RAM、<em class='similar 17S24I10' onmouseover=\"highlightSetter('17S24I10',false)\" onmouseout=\"highlightSetter('17S24I10',true)\">布线资源、</em>底层嵌入功能单元、内嵌专用硬核等等。因为FPGA芯","datatype":"webpage","clcs":[],"similarityPercentage":"49.2%","self":false,"text":"A原型验证方法的关键挑战FPGA芯片是由各项硬件资源构成的,<em class='similar'>其中包括可编程输入输出资源</em>( I/OBl ock)<em class='similar'>、基本可编程逻辑单元</em>( LUT)、嵌入式块RAM、<em class='similar'>布线资源、</em>底层嵌入功能单元、内嵌专用硬核等等。因为FPGA芯"}],"textWithDynamicClass":"上述FPGA三部分主要组成具体包括以下内容:<em class='similar T16I1' onmouseover=\"highlightSetter('T16I1',false)\" onmouseout=\"highlightSetter('T16I1',true)\">输入输出块、</em><em class='similar T16I2' onmouseover=\"highlightSetter('T16I2',false)\" onmouseout=\"highlightSetter('T16I2',true)\">可编程的内嵌式RAM块、</em><em class='similar T16I3' onmouseover=\"highlightSetter('T16I3',false)\" onmouseout=\"highlightSetter('T16I3',true)\">可编程逻辑单元、</em><em class='similar T16I4' onmouseover=\"highlightSetter('T16I4',false)\" onmouseout=\"highlightSetter('T16I4',true)\">内部布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更先进的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在上述FPGA的结构中,","replaceMap":{},"similar_word_count":34,"text":"上述FPGA三部分主要组成具体包括以下内容:<em class='similar'>输入输出块、</em><em class='similar'>可编程的内嵌式RAM块、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>内部布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更先进的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在上述FPGA的结构中,","suggest":{"synonyms":[],"keyword":["fpga","输入输出","可编程","内嵌式","ram","逻辑单元","布线","逻辑功能","链接","内嵌","可配置","存储形式","外部模块","dsp","lutram"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000030209219211","author":"","university":"","source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html","reference":false,"similarScore":205.42018,"teacher":"","textWithDynamicClass":"rdwareDescriptionLanguage,HDL)<em class='similar 18S28I3' onmouseover=\"highlightSetter('18S28I3',false)\" onmouseout=\"highlightSetter('18S28I3',true)\">是一种用形式化方法来描述数字电路和系统的语言。</em>VerilogHDL和VHDL是目前世界上最流行的两种硬件描述语言,<em class='similar 18S28I5' onmouseover=\"highlightSetter('18S28I5',false)\" onmouseout=\"highlightSetter('18S28I5',true)\">都是在20世纪80年代中期开发出来的,</em>两种HDL均为IEEE标准。但是Veriolg语言","datatype":"webpage","clcs":[],"similarityPercentage":"54.1%","self":false,"text":"rdwareDescriptionLanguage,HDL)<em class='similar'>是一种用形式化方法来描述数字电路和系统的语言。</em>VerilogHDL和VHDL是目前世界上最流行的两种硬件描述语言,<em class='similar'>都是在20世纪80年代中期开发出来的,</em>两种HDL均为IEEE标准。但是Veriolg语言"},{"profession":false,"keywords":[],"year":"","docid":"9000186098081911","author":"","university":"","source":"网页","title":"基于EDA的ALU设计","url":"https://wenku.baidu.com/view/7b0e2b7d1cb91a37f111f18583d049649b660e0c","reference":false,"similarScore":194.35065,"teacher":"","textWithDynamicClass":"电子系统进行描述。VerilogHDL和VHDL是目前世界上<em class='similar 18S25I6' onmouseover=\"highlightSetter('18S25I6',false)\" onmouseout=\"highlightSetter('18S25I6',true)\">最流行的两种硬件描述语言</em>,<em class='similar 18S25I7' onmouseover=\"highlightSetter('18S25I7',false)\" onmouseout=\"highlightSetter('18S25I7',true)\">都是在20世纪80年代中期开发出来的。</em>前者由GatewayDesignAutomatio","datatype":"webpage","clcs":[],"similarityPercentage":"51.1%","self":false,"text":"电子系统进行描述。VerilogHDL和VHDL是目前世界上<em class='similar'>最流行的两种硬件描述语言</em>,<em class='similar'>都是在20世纪80年代中期开发出来的。</em>前者由GatewayDesignAutomatio"},{"profession":false,"keywords":[],"year":"","docid":"9000105919985711","author":"","university":"","source":"网页","title":"基于FPGA的豆浆机控制电路设计与实现 - 道客巴巴","url":"http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f7356186da1f68d4e419ce3b4603506695bc21271704d6c1776203ae4a5afdf04128715c7ea3de95c81cd2ace22c38f82c23006a913263&p=9060c016d9c11cb508e2947f5f08&newp=8b2a970e86cc41ae17f587625f0092695803ed6239d7c44324b9d71fd325001c1b69e7b121261205d2c6786d03a54e5eeaf633763c1766dada9fca458ae7c463&s=cfcd208495d565ef&user=baidu&fm=sc&query=dashuju+site%3Adoc88%2Ecom&qid=cb8178880014014e&p1=9","reference":false,"similarScore":188.89609,"teacher":"","textWithDynamicClass":"出逻辑表达式,其还可以用来表示数字逻辑系统所完成的逻辑功能。<em class='similar 18S26I3' onmouseover=\"highlightSetter('18S26I3',false)\" onmouseout=\"highlightSetter('18S26I3',true)\"> Verilog HDL 和 VHDL 是世界上使用最广泛的两种硬件描述语言,</em><em class='similar 18S26I4' onmouseover=\"highlightSetter('18S26I4',false)\" onmouseout=\"highlightSetter('18S26I4',true)\">这两种语言都是在20世纪80年代中期被开发出来的。</em>前者由 Gateway Design Automa","datatype":"webpage","clcs":[],"similarityPercentage":"42.9%","self":false,"text":"出逻辑表达式,其还可以用来表示数字逻辑系统所完成的逻辑功能。<em class='similar'> Verilog HDL 和 VHDL 是世界上使用最广泛的两种硬件描述语言,</em><em class='similar'>这两种语言都是在20世纪80年代中期被开发出来的。</em>前者由 Gateway Design Automa"},{"profession":false,"keywords":[],"year":"","docid":"9000120580984311","author":"","university":"","source":"网页","title":"基于FPGA的EPON ONU设计与实现.pdf - 豆丁网","url":"http://www.docin.com/p-1149984087.html","reference":false,"similarScore":180.10822,"teacher":"","textWithDynamicClass":"用于从算法级、门级到开关级的多种抽象设计层次的数字系统建模。<em class='similar 18S27I3' onmouseover=\"highlightSetter('18S27I3',false)\" onmouseout=\"highlightSetter('18S27I3',true)\">VHDL和Verilog HDL 是目前世界上最流行的两种硬件描述语言,</em><em class='similar 18S27I4' onmouseover=\"highlightSetter('18S27I4',false)\" onmouseout=\"highlightSetter('18S27I4',true)\">两者都是在20世纪80年代中期开发出来的。</em>两种 HDL 语言均为IEEE 标准。Verilo","datatype":"webpage","clcs":[],"similarityPercentage":"45.0%","self":false,"text":"用于从算法级、门级到开关级的多种抽象设计层次的数字系统建模。<em class='similar'>VHDL和Verilog HDL 是目前世界上最流行的两种硬件描述语言,</em><em class='similar'>两者都是在20世纪80年代中期开发出来的。</em>两种 HDL 语言均为IEEE 标准。Verilo"}],"textWithDynamicClass":"Verilog HDL是以软件编码的形式来表达硬件行为级的一种高级硬件描述语言,其通常以文本或字符的形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示所期望的电路实现的行为逻辑或复杂的逻辑运算表达等。<em class='similar T17I2' onmouseover=\"highlightSetter('T17I2',false)\" onmouseout=\"highlightSetter('T17I2',true)\">Verilog HDL是当前集成电路开发与设计环境中最常使用的的两种硬件描述语言之一,</em><em class='similar T17I3' onmouseover=\"highlightSetter('T17I3',false)\" onmouseout=\"highlightSetter('T17I3',true)\">其在20世纪80年代中期开发出来。</em>根据IEEE标准所说明的,<em class='similar T17I5' onmouseover=\"highlightSetter('T17I5',false)\" onmouseout=\"highlightSetter('T17I5',true)\">Verilog HDL是一种用来描述和创建电路系统所</em>有阶段的表示形式,由于Verilog HDL是机器可读的、人类可读的,","replaceMap":{},"similar_word_count":84,"text":"Verilog HDL是以软件编码的形式来表达硬件行为级的一种高级硬件描述语言,其通常以文本或字符的形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示所期望的电路实现的行为逻辑或复杂的逻辑运算表达等。<em class='similar'>Verilog HDL是当前集成电路开发与设计环境中最常使用的的两种硬件描述语言之一,</em><em class='similar'>其在20世纪80年代中期开发出来。</em>根据IEEE标准所说明的,<em class='similar'>Verilog HDL是一种用来描述和创建电路系统所</em>有阶段的表示形式,由于Verilog HDL是机器可读的、人类可读的,","suggest":{"synonyms":[],"keyword":["文本","字符","数字逻辑系统","逻辑行为","系统结构","电路实现","行为逻辑","逻辑","运算表","verilog","hdl","集成电路","设计环境","硬件描述语言","20","80","中期","ieee","电路系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000437751211","author":"","university":"","source":"大学生论文联合库","title":"数字频率发生器","url":"","reference":false,"similarScore":321.09988,"teacher":"","textWithDynamicClass":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar 19S29I7' onmouseover=\"highlightSetter('19S29I7',false)\" onmouseout=\"highlightSetter('19S29I7',true)\">由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar 19S29I8' onmouseover=\"highlightSetter('19S29I8',false)\" onmouseout=\"highlightSetter('19S29I8',true)\">因此它支持硬件设计的开发、</em>验证、<em class='similar 19S29I10' onmouseover=\"highlightSetter('19S29I10',false)\" onmouseout=\"highlightSetter('19S29I10',true)\">综合和测试;</em><em class='similar 19S29I11' onmouseover=\"highlightSetter('19S29I11',false)\" onmouseout=\"highlightSetter('19S29I11',true)\">硬件数据之间的通信;</em><em class='similar 19S29I12' onmouseover=\"highlightSetter('19S29I12',false)\" onmouseout=\"highlightSetter('19S29I12',true)\">硬件的设计、</em><em class='similar 19S29I13' onmouseover=\"highlightSetter('19S29I13',false)\" onmouseout=\"highlightSetter('19S29I13',true)\">维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"54.4%","self":false,"text":"抽象层次上以标准文本格式描述数字系统,简单、直观并富有效率。<em class='similar'>由于Verilog HDL既是机器可读的语言也是人类可读的语言,</em><em class='similar'>因此它支持硬件设计的开发、</em>验证、<em class='similar'>综合和测试;</em><em class='similar'>硬件数据之间的通信;</em><em class='similar'>硬件的设计、</em><em class='similar'>维护和修改。</em>现在,Verilog HDL已经成为数字系统设计的"},{"profession":false,"keywords":[],"year":"","docid":"9000118992500811","author":"","university":"","source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html","reference":false,"similarScore":155.05556,"teacher":"","textWithDynamicClass":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar 19S30I3' onmouseover=\"highlightSetter('19S30I3',false)\" onmouseout=\"highlightSetter('19S30I3',true)\">所以它支持硬件设计的开发、</em>验证、<em class='similar 19S30I5' onmouseover=\"highlightSetter('19S30I5',false)\" onmouseout=\"highlightSetter('19S30I5',true)\">综合和测试;</em><em class='similar 19S30I6' onmouseover=\"highlightSetter('19S30I6',false)\" onmouseout=\"highlightSetter('19S30I6',true)\">支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的","datatype":"webpage","clcs":[],"similarityPercentage":"55.4%","self":false,"text":"。因为它既是一种机器能识别的语言,也是一种人可以阅读的语言,<em class='similar'>所以它支持硬件设计的开发、</em>验证、<em class='similar'>综合和测试;</em><em class='similar'>支持硬件设计数据的通信;</em>支持硬件的维护、修改与生成。主要用于描述数字系统的"}],"textWithDynamicClass":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar T18I1' onmouseover=\"highlightSetter('T18I1',false)\" onmouseout=\"highlightSetter('T18I1',true)\">由于Verilog HDL是机器可读的、</em><em class='similar T18I2' onmouseover=\"highlightSetter('T18I2',false)\" onmouseout=\"highlightSetter('T18I2',true)\">人类可读的,</em><em class='similar T18I3' onmouseover=\"highlightSetter('T18I3',false)\" onmouseout=\"highlightSetter('T18I3',true)\">所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar T18I5' onmouseover=\"highlightSetter('T18I5',false)\" onmouseout=\"highlightSetter('T18I5',true)\">合成和测试、</em><em class='similar T18I6' onmouseover=\"highlightSetter('T18I6',false)\" onmouseout=\"highlightSetter('T18I6',true)\">硬件设计数据的通信和维护、</em>修改[16]。","replaceMap":{},"similar_word_count":63,"text":"根据IEEE标准所说明的,Verilog HDL是一种用来描述和创建电路系统所有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>修改[16]。","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"}],"keyword":["表示形式","verilog","hdl","机器","可读","硬件设计","正确性验证","硬件","设计数据","16"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000669311311","author":"戚薏","university":"","source":"大学生论文联合库","title":"全数字锁相环的设计与实现","url":"","reference":false,"similarScore":362.06055,"teacher":"","textWithDynamicClass":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar 20S32I5' onmouseover=\"highlightSetter('20S32I5',false)\" onmouseout=\"highlightSetter('20S32I5',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar 20S32I6' onmouseover=\"highlightSetter('20S32I6',false)\" onmouseout=\"highlightSetter('20S32I6',true)\">连续赋值语句,</em>在此表达式中寄存器和线网都可以连续驱动线网,<em class='similar 20S32I8' onmouseover=\"highlightSetter('20S32I8',false)\" onmouseout=\"highlightSetter('20S32I8',true)\">实现基本的结构化建模:</em><em class='similar 20S32I9' onmouseover=\"highlightSetter('20S32I9',false)\" onmouseout=\"highlightSetter('20S32I9',true)\">过程赋值语句,</em><em class='similar 20S32I10' onmouseover=\"highlightSetter('20S32I10',false)\" onmouseout=\"highlightSetter('20S32I10',true)\">在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar 20S32I11' onmouseover=\"highlightSetter('20S32I11',false)\" onmouseout=\"highlightSetter('20S32I11',true)\">实现基本的行为建模。</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"55.7%","self":false,"text":"过定义两种数据类型(线网型和寄存器型)体现了混合的抽象层次。<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>连续赋值语句,</em>在此表达式中寄存器和线网都可以连续驱动线网,<em class='similar'>实现基本的结构化建模:</em><em class='similar'>过程赋值语句,</em><em class='similar'>在此表达式中寄存器和线网都将运算结果存入寄存器,</em><em class='similar'>实现基本的行为建模。</em>"}],"textWithDynamicClass":"<em class='similar T19I0' onmouseover=\"highlightSetter('T19I0',false)\" onmouseout=\"highlightSetter('T19I0',true)\">在Verilog HDL中有两种基本语句:</em><em class='similar T19I1' onmouseover=\"highlightSetter('T19I1',false)\" onmouseout=\"highlightSetter('T19I1',true)\">一种是连续型赋值语句,</em>通过使用连续性赋值表达式,用于在实际运行中驱动FPGA中的连续线网,<em class='similar T19I4' onmouseover=\"highlightSetter('T19I4',false)\" onmouseout=\"highlightSetter('T19I4',true)\">从而实现基本建模;</em><em class='similar T19I5' onmouseover=\"highlightSetter('T19I5',false)\" onmouseout=\"highlightSetter('T19I5',true)\">另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar T19I7' onmouseover=\"highlightSetter('T19I7',false)\" onmouseout=\"highlightSetter('T19I7',true)\">将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar T19I8' onmouseover=\"highlightSetter('T19I8',false)\" onmouseout=\"highlightSetter('T19I8',true)\">从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,每个模块的内部代码将用于描述该模块所对应的逻辑功能或行为描述[16]。这些模块将被开发者进行抽象,","replaceMap":{},"similar_word_count":87,"text":"<em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>通过使用连续性赋值表达式,用于在实际运行中驱动FPGA中的连续线网,<em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,每个模块的内部代码将用于描述该模块所对应的逻辑功能或行为描述[16]。这些模块将被开发者进行抽象,","suggest":{"synonyms":[],"keyword":["verilog","hdl","语句","连续型","赋值语句","连续性","赋值","表达式","运行中","fpga","线网","建模","另一种","过程性","行为级","寄存器","网间","运算结果","rtl","行为描述"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000639003511","author":"欧阳廷炳","university":"","source":"大学生论文联合库","title":"数字集成电路设计","url":"","reference":false,"similarScore":173.55933,"teacher":"","textWithDynamicClass":"4.5.1 DC综合综合是数字前端模块设计中的重要步骤之一,<em class='similar 21S33I4' onmouseover=\"highlightSetter('21S33I4',false)\" onmouseout=\"highlightSetter('21S33I4',true)\">综合的过程是将我们用硬件描述语言描述的行为级的电路、</em><em class='similar 21S33I5' onmouseover=\"highlightSetter('21S33I5',false)\" onmouseout=\"highlightSetter('21S33I5',true)\">RTL 级的电路转换到门级电路网表的过程。</em>我们需要用到Design Compiler工具是S","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"41.3%","self":false,"text":"4.5.1 DC综合综合是数字前端模块设计中的重要步骤之一,<em class='similar'>综合的过程是将我们用硬件描述语言描述的行为级的电路、</em><em class='similar'>RTL 级的电路转换到门级电路网表的过程。</em>我们需要用到Design Compiler工具是S"}],"textWithDynamicClass":"<em class='similar T20I0' onmouseover=\"highlightSetter('T20I0',false)\" onmouseout=\"highlightSetter('T20I0',true)\">对于FPGA数字电路设计而言综合简而言之就是从使用硬件描述语言构造的行为级描述电路的抽象级模型构造出对应的门级电路网表的过程。</em>","replaceMap":{},"similar_word_count":63,"text":"<em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从使用硬件描述语言构造的行为级描述电路的抽象级模型构造出对应的门级电路网表的过程。</em>","suggest":{"synonyms":[{"synonyms":["笼统"],"keyword":"抽象"}],"keyword":["fpga","数字电路设计","硬件描述语言","行为级","抽象","模型构造","电路网表"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000146036562311","author":"","university":"","source":"网页","title":"选择题   数字系统设计","url":"https://wenku.baidu.com/view/dd29f7e9b8f67c1cfad6b8c1","reference":false,"similarScore":206.55554,"teacher":"","textWithDynamicClass":"PROM,HDL,PAL,GAL70.以下说法错误的是BA.<em class='similar 22S35I20' onmouseover=\"highlightSetter('22S35I20',false)\" onmouseout=\"highlightSetter('22S35I20',true)\">行为综合:</em><em class='similar 22S35I21' onmouseover=\"highlightSetter('22S35I21',false)\" onmouseout=\"highlightSetter('22S35I21',true)\">从算法表示、</em><em class='similar 22S35I22' onmouseover=\"highlightSetter('22S35I22',false)\" onmouseout=\"highlightSetter('22S35I22',true)\">行为描述转换到寄存器传输级</em>(RTL)B.逻辑综合:<em class='similar 22S35I26' onmouseover=\"highlightSetter('22S35I26',false)\" onmouseout=\"highlightSetter('22S35I26',true)\">RTL级描述转换到逻辑门级</em>(包括触发器)C.版图综合或结构综合:从逻辑门表示","datatype":"webpage","clcs":[],"similarityPercentage":"62.6%","self":false,"text":"PROM,HDL,PAL,GAL70.以下说法错误的是BA.<em class='similar'>行为综合:</em><em class='similar'>从算法表示、</em><em class='similar'>行为描述转换到寄存器传输级</em>(RTL)B.逻辑综合:<em class='similar'>RTL级描述转换到逻辑门级</em>(包括触发器)C.版图综合或结构综合:从逻辑门表示"},{"profession":false,"keywords":[],"year":"","docid":"9000098888088811","author":"","university":"","source":"网页","title":"形式化验证技术在EDA软件开发中的应用","url":"http://cache.baiducontent.com/c?m=9d78d513d99417fc4fece4697c1cc0116f43f0122ba3a7013894cd47c9221d03506790a63a675541c4c50b315cfe4356fdf041236a5c3df58cc8fe4adfbe922a2b8d2234761d8c4705d36ef58d197b&p=9b63892984904ead0dbd9b7a46&newp=8767c64ad4934eab13b5db354d53d8224216ed6938c3864e1290c408d23f061d4862e7bd26281306d1c178650aad4d56e0f7357323454df6cc8a871d81ed&user=baidu&fm=sc&query=site%3Adoc88%2Ecom+EDA%C8%ED%BC%FE&qid=deefeeeb00006b19&p1=26","reference":false,"similarScore":110.769226,"teacher":"","textWithDynamicClass":"件后,设计者还必须进行一次R T L 级功能仿真。1.2.3<em class='similar 22S36I5' onmouseover=\"highlightSetter('22S36I5',false)\" onmouseout=\"highlightSetter('22S36I5',true)\">综合优化综合可细分为行为综合和逻辑综合。</em>是指把}玎)L 语言翻译成最基本的与或非门的连接关","datatype":"webpage","clcs":[],"similarityPercentage":"58.3%","self":false,"text":"件后,设计者还必须进行一次R T L 级功能仿真。1.2.3<em class='similar'>综合优化综合可细分为行为综合和逻辑综合。</em>是指把}玎)L 语言翻译成最基本的与或非门的连接关"}],"textWithDynamicClass":"<em class='similar T21I0' onmouseover=\"highlightSetter('T21I0',false)\" onmouseout=\"highlightSetter('T21I0',true)\">综合细分行为综合与逻辑综合,</em><em class='similar T21I1' onmouseover=\"highlightSetter('T21I1',false)\" onmouseout=\"highlightSetter('T21I1',true)\">行为综合是从算法表示、</em><em class='similar T21I2' onmouseover=\"highlightSetter('T21I2',false)\" onmouseout=\"highlightSetter('T21I2',true)\">行为描述转换到RTL级,</em>如HLS综合;本文将重点关注逻辑综合的基本原理,而逻辑综合是将开发者编写的RTL级描述代码转换至包含有多级触发的逻辑门级的过程,也是在FPGA片上资源估算过程中关注的重要步骤之一,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。","replaceMap":{},"similar_word_count":37,"text":"<em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>如HLS综合;本文将重点关注逻辑综合的基本原理,而逻辑综合是将开发者编写的RTL级描述代码转换至包含有多级触发的逻辑门级的过程,也是在FPGA片上资源估算过程中关注的重要步骤之一,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。","suggest":{"synonyms":[{"synonyms":["编辑"],"keyword":"编写"},{"synonyms":["一双"],"keyword":"一对"}],"keyword":["细分","逻辑综合","行为描述","rtl","hls","重点关注","逻辑","综合的","基本原理","开发者","编写","代码转换","多级","触发","逻辑门","fpga","资源估算","重要步骤","后续","一对","高密度","原型验证系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":222.8977,"teacher":"","textWithDynamicClass":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar 23S37I8' onmouseover=\"highlightSetter('23S37I8',false)\" onmouseout=\"highlightSetter('23S37I8',true)\">是如何转换成硬件的;</em>.常量(oonstants)<em class='similar 23S37I11' onmouseover=\"highlightSetter('23S37I11',false)\" onmouseout=\"highlightSetter('23S37I11',true)\">是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar 23S37I14' onmouseover=\"highlightSetter('23S37I14',false)\" onmouseout=\"highlightSetter('23S37I14',true)\">是如何转换成硬件的。</em>常量数据类型(net、register、param","datatype":"book","clcs":[],"similarityPercentage":"76.9%","self":false,"text":"下的章节将会回答下面的问题:.数据类型(data type)<em class='similar'>是如何转换成硬件的;</em>.常量(oonstants)<em class='similar'>是如何转换成逻辑数值的;</em>.语句(statement)<em class='similar'>是如何转换成硬件的。</em>常量数据类型(net、register、param"}],"textWithDynamicClass":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,更加关注于Verilog HDL语句是如何被映射成实际硬件器件的,如:数据类型将被映射成为何种硬件,<em class='similar T22I4' onmouseover=\"highlightSetter('T22I4',false)\" onmouseout=\"highlightSetter('T22I4',true)\">常量是如何进一步转换成逻辑数值的,</em><em class='similar T22I5' onmouseover=\"highlightSetter('T22I5',false)\" onmouseout=\"highlightSetter('T22I5',true)\">语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。","replaceMap":{},"similar_word_count":29,"text":"所以当我们聚焦于本文所述的基于机器学习资源估算模型,更加关注于Verilog HDL语句是如何被映射成实际硬件器件的,如:数据类型将被映射成为何种硬件,<em class='similar'>常量是如何进一步转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。","suggest":{"synonyms":[{"synonyms":["机械"],"keyword":"机器"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["聚焦","机器","学习资源","估算模型","verilog","hdl","语句","映射","硬件","器件","数据类型","何种","常量","逻辑","详细分析","综合原则"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":227.94736,"teacher":"","textWithDynamicClass":"叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值<em class='similar 24S38I2' onmouseover=\"highlightSetter('24S38I2',false)\" onmouseout=\"highlightSetter('24S38I2',true)\">(Procedural Assignment)</em><em class='similar 24S38I3' onmouseover=\"highlightSetter('24S38I3',false)\" onmouseout=\"highlightSetter('24S38I3',true)\">语句的硬件实现是:</em><em class='similar 24S38I4' onmouseover=\"highlightSetter('24S38I4',false)\" onmouseout=\"highlightSetter('24S38I4',true)\">从赋值语句</em>(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar 24S38I7' onmouseover=\"highlightSetter('24S38I7',false)\" onmouseout=\"highlightSetter('24S38I7',true)\">用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar 24S38I13' onmouseover=\"highlightSetter('24S38I13',false)\" onmouseout=\"highlightSetter('24S38I13',true)\">有两种类型的过程赋值语句:</em>.","datatype":"book","clcs":[],"similarityPercentage":"54.3%","self":false,"text":"叼月OL胶角拴序粉姚翻风瞥浑5.3过程赋值语句的综合过程赋值<em class='similar'>(Procedural Assignment)</em><em class='similar'>语句的硬件实现是:</em><em class='similar'>从赋值语句</em>(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,<em class='similar'>用于驱动赋值语句左边的变量</em>(必须是reg类型)。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中(仅用于仿真),也可出现在&quot;always&quot;块语句中,但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。<em class='similar'>有两种类型的过程赋值语句:</em>."},{"profession":false,"keywords":[],"year":"","docid":"9000100889763911","author":"","university":"","source":"网页","title":"学习FPGA verilog的心得 ","url":"","reference":false,"similarScore":202.49998,"teacher":"","textWithDynamicClass":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar 24S40I3' onmouseover=\"highlightSetter('24S40I3',false)\" onmouseout=\"highlightSetter('24S40I3',true)\">从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net 过程赋值语句的综合:<em class='similar 24S40I5' onmouseover=\"highlightSetter('24S40I5',false)\" onmouseout=\"highlightSetter('24S40I5',true)\">从赋值语句右边提取出的逻辑,</em><em class='similar 24S40I6' onmouseover=\"highlightSetter('24S40I6',false)\" onmouseout=\"highlightSetter('24S40I6',true)\">用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a","datatype":"webpage","clcs":[],"similarityPercentage":"33.2%","self":false,"text":"),所以需要生成一个寄存器来保存C的值.连续赋值语句的综合:<em class='similar'>从赋值语句右边提取出逻辑,</em>用于驱动赋值语句左边的net 过程赋值语句的综合:<em class='similar'>从赋值语句右边提取出的逻辑,</em><em class='similar'>用于驱动赋值语句左边的reg型变量。</em>注意:initia语句仅用于仿真,不综合。只有在a"},{"profession":false,"keywords":[],"year":"","docid":"9000010354498311","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449","reference":false,"similarScore":172.63155,"teacher":"","textWithDynamicClass":"uta,b;outputc;assignc=a&amp;b;<em class='similar 24S39I8' onmouseover=\"highlightSetter('24S39I8',false)\" onmouseout=\"highlightSetter('24S39I8',true)\">endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或&lt;=)<em class='similar 24S39I11' onmouseover=\"highlightSetter('24S39I11',false)\" onmouseout=\"highlightSetter('24S39I11',true)\">右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句","datatype":"webpage","clcs":[],"similarityPercentage":"50.8%","self":false,"text":"uta,b;outputc;assignc=a&amp;b;<em class='similar'>endmodule过程赋值语句的硬件实现是,</em>从赋值语句的(=或&lt;=)<em class='similar'>右边提取出的逻辑用于驱动赋值语句左边的变量</em>(必需是reg类型)。必须注意的是虽然过程赋值语句"}],"textWithDynamicClass":"<em class='similar T23I0' onmouseover=\"highlightSetter('T23I0',false)\" onmouseout=\"highlightSetter('T23I0',true)\">过程过程赋值语句</em>(Procejural Assignment)<em class='similar T23I2' onmouseover=\"highlightSetter('T23I2',false)\" onmouseout=\"highlightSetter('T23I2',true)\">语句对应的FPGA的硬件实现与连续性赋值相似,</em><em class='similar T23I3' onmouseover=\"highlightSetter('T23I3',false)\" onmouseout=\"highlightSetter('T23I3',true)\">即从赋值运算符即‘=’或‘&lt;=’的右侧计算后抽取出逻辑,</em><em class='similar T23I4' onmouseover=\"highlightSetter('T23I4',false)\" onmouseout=\"highlightSetter('T23I4',true)\">用于驱动赋值语句左边的变量,</em><em class='similar T23I5' onmouseover=\"highlightSetter('T23I5',false)\" onmouseout=\"highlightSetter('T23I5',true)\">但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,</em>且只有Always语句块中的过程赋值语句才可以被综合器综合,若出现在initial语句块中将被仅用于仿真。","replaceMap":{},"similar_word_count":104,"text":"<em class='similar'>过程过程赋值语句</em>(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现与连续性赋值相似,</em><em class='similar'>即从赋值运算符即‘=’或‘&lt;=’的右侧计算后抽取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em><em class='similar'>但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,</em>且只有Always语句块中的过程赋值语句才可以被综合器综合,若出现在initial语句块中将被仅用于仿真。","suggest":{"synonyms":[],"keyword":["赋值语句","procejural","assignment","语句","fpga","硬件实现","连续性","赋值","运算符","右侧","抽取","逻辑","左边","语法","reg"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":546.7894,"teacher":"","textWithDynamicClass":"<em class='similar 25S41I0' onmouseover=\"highlightSetter('25S41I0',false)\" onmouseout=\"highlightSetter('25S41I0',true)\">3过程赋值语句的综合过程赋值</em>(Procedural Assignment)语句的硬件实现是:从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,用于驱动赋值语句左边的变量(必须是reg类型)<em class='similar 25S41I8' onmouseover=\"highlightSetter('25S41I8',false)\" onmouseout=\"highlightSetter('25S41I8',true)\">。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar 25S41I9' onmouseover=\"highlightSetter('25S41I9',false)\" onmouseout=\"highlightSetter('25S41I9',true)\">(仅用于仿真)</em><em class='similar 25S41I10' onmouseover=\"highlightSetter('25S41I10',false)\" onmouseout=\"highlightSetter('25S41I10',true)\">,也可出现在&quot;always&quot;块语句中,</em><em class='similar 25S41I11' onmouseover=\"highlightSetter('25S41I11',false)\" onmouseout=\"highlightSetter('25S41I11',true)\">但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em><em class='similar 25S41I12' onmouseover=\"highlightSetter('25S41I12',false)\" onmouseout=\"highlightSetter('25S41I12',true)\">有两种类型的过程赋值语句:</em><em class='similar 25S41I13' onmouseover=\"highlightSetter('25S41I13',false)\" onmouseout=\"highlightSetter('25S41I13',true)\">.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar 25S41I16' onmouseover=\"highlightSetter('25S41I16',false)\" onmouseout=\"highlightSetter('25S41I16',true)\">非阻塞赋值语句</em><em class='similar 25S41I17' onmouseover=\"highlightSetter('25S41I17',false)\" onmouseout=\"highlightSetter('25S41I17',true)\">(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在","datatype":"book","clcs":[],"similarityPercentage":"49.7%","self":false,"text":"<em class='similar'>3过程赋值语句的综合过程赋值</em>(Procedural Assignment)语句的硬件实现是:从赋值语句(即&quot;=&quot;或&quot;&lt;=&quot;)右边提取出的逻辑,用于驱动赋值语句左边的变量(必须是reg类型)<em class='similar'>。必须注意的是虽然过程赋值语句可以出现在&quot;initial&quot;语句中</em><em class='similar'>(仅用于仿真)</em><em class='similar'>,也可出现在&quot;always&quot;块语句中,</em><em class='similar'>但是只有&quot;always&quot;块语句中的过程赋值语句才能被综合。</em><em class='similar'>有两种类型的过程赋值语句:</em><em class='similar'>.阻塞赋值语句</em>(Blocking Assi即ment statement);.<em class='similar'>非阻塞赋值语句</em><em class='similar'>(Non一blocking Assignment statement)</em>。5.3.1阻塞赋值语句阻塞赋值语句可以简述为:在"},{"profession":false,"keywords":[],"year":"","docid":"9000136258023511","author":"","university":"","source":"网页","title":"verilog hdl【ppt】 - 道客巴巴","url":"http://www.doc88.com/p%2D6981151970021.html","reference":false,"similarScore":261.27274,"teacher":"","textWithDynamicClass":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar 25S44I9' onmouseover=\"highlightSetter('25S44I9',false)\" onmouseout=\"highlightSetter('25S44I9',true)\">过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar 25S44I10' onmouseover=\"highlightSetter('25S44I10',false)\" onmouseout=\"highlightSetter('25S44I10',true)\">包括阻塞赋值语句、</em><em class='similar 25S44I11' onmouseover=\"highlightSetter('25S44I11',false)\" onmouseout=\"highlightSetter('25S44I11',true)\">非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar 25S44I18' onmouseover=\"highlightSetter('25S44I18',false)\" onmouseout=\"highlightSetter('25S44I18',true)\">阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是&quot;=&quot","datatype":"webpage","clcs":[],"similarityPercentage":"56.8%","self":false,"text":"p;b&amp;c&amp;d);燕山大学电子实验中心(3)<em class='similar'>过程赋值语句过程赋值语句出现在initial和always块语句中,</em><em class='similar'>包括阻塞赋值语句、</em><em class='similar'>非阻塞赋值语句。</em>在过程赋值语句中,赋值变量必须是寄存器型变量( reg、 integer、 real)。i)<em class='similar'>阻塞赋值语句i)</em>阻塞赋值语句阻塞赋值符号是&quot;=&quot"},{"profession":false,"keywords":[],"year":"","docid":"9000079599488811","author":"","university":"","source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html","reference":false,"similarScore":257.85715,"teacher":"","textWithDynamicClass":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar 25S42I4' onmouseover=\"highlightSetter('25S42I4',false)\" onmouseout=\"highlightSetter('25S42I4',true)\">(=或有两种类型的过程赋值语句:</em><em class='similar 25S42I5' onmouseover=\"highlightSetter('25S42I5',false)\" onmouseout=\"highlightSetter('25S42I5',true)\">阻塞赋值语句</em><em class='similar 25S42I6' onmouseover=\"highlightSetter('25S42I6',false)\" onmouseout=\"highlightSetter('25S42I6',true)\">(Blocking Assignment STatement)</em><em class='similar 25S42I7' onmouseover=\"highlightSetter('25S42I7',false)\" onmouseout=\"highlightSetter('25S42I7',true)\">、非阻塞赋值语句</em><em class='similar 25S42I8' onmouseover=\"highlightSetter('25S42I8',false)\" onmouseout=\"highlightSetter('25S42I8',true)\">(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在","datatype":"webpage","clcs":[],"similarityPercentage":"78.1%","self":false,"text":"b简单驱动2、过程赋值过程赋值语句的硬件实现是,从赋值语句的<em class='similar'>(=或有两种类型的过程赋值语句:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment STatement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(non-Blocking Assignment statement)</em>2.1、阻塞赋值语句阻塞赋值语句可以简单描述为,在"},{"profession":false,"keywords":[],"year":"","docid":"9000138922963611","author":"","university":"","source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html","reference":false,"similarScore":119.214294,"teacher":"","textWithDynamicClass":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar 25S43I6' onmouseover=\"highlightSetter('25S43I6',false)\" onmouseout=\"highlightSetter('25S43I6',true)\">过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar 25S43I14' onmouseover=\"highlightSetter('25S43I14',false)\" onmouseout=\"highlightSetter('25S43I14',true)\">(non-blocking)</em>赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar 25S43I20' onmouseover=\"highlightSetter('25S43I20',false)\" onmouseout=\"highlightSetter('25S43I20',true)\">非阻塞赋值方式 </em>","datatype":"webpage","clcs":[],"similarityPercentage":"44.2%","self":false,"text":"563、过程赋值语句3、过程赋值语句用于对reg型变量赋值,<em class='similar'>过程赋值语句出现在initial和always块语句中,</em>有两种赋值方式:阻塞(blocking)赋值方式:赋值符号为=,如b 赋值变量=表达式;非阻塞<em class='similar'>(non-blocking)</em>赋值方式:赋值符号为&lt;=,如b 赋值变量&lt;=表达式;57非阻塞赋值与阻塞赋值的区别(1)<em class='similar'>非阻塞赋值方式 </em>"}],"textWithDynamicClass":"但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,且只有Always语<em class='similar T24I0' onmouseover=\"highlightSetter('T24I0',false)\" onmouseout=\"highlightSetter('T24I0',true)\">句块中的过程赋值语句才可以被综合器综合,</em><em class='similar T24I1' onmouseover=\"highlightSetter('T24I1',false)\" onmouseout=\"highlightSetter('T24I1',true)\">若出现在initial语句块中将被仅用于仿真。</em><em class='similar T24I2' onmouseover=\"highlightSetter('T24I2',false)\" onmouseout=\"highlightSetter('T24I2',true)\">过程赋值语句有以下两种分别为:</em><em class='similar T24I3' onmouseover=\"highlightSetter('T24I3',false)\" onmouseout=\"highlightSetter('T24I3',true)\">阻塞赋值语句</em><em class='similar T24I4' onmouseover=\"highlightSetter('T24I4',false)\" onmouseout=\"highlightSetter('T24I4',true)\">(Blocking Assignment Statement)</em><em class='similar T24I5' onmouseover=\"highlightSetter('T24I5',false)\" onmouseout=\"highlightSetter('T24I5',true)\">、非阻塞赋值语句</em><em class='similar T24I6' onmouseover=\"highlightSetter('T24I6',false)\" onmouseout=\"highlightSetter('T24I6',true)\">(Non-blocking Assignment Statement)</em>","replaceMap":{},"similar_word_count":134,"text":"但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,且只有Always语<em class='similar'>句块中的过程赋值语句才可以被综合器综合,</em><em class='similar'>若出现在initial语句块中将被仅用于仿真。</em><em class='similar'>过程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(Non-blocking Assignment Statement)</em>","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["赋值语句","综合器","initial","语句","中将","仿真","阻塞","blocking","assignment","statement","非阻塞"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000057340942311","author":"","university":"","source":"网页","title":"第5章 Verilog设计深入_学习资料共享网","url":"http://www.87994.com/read/c7d9314411a81aba08ab68ee.html","reference":false,"similarScore":180,"teacher":"","textWithDynamicClass":"言,执行时间为,从效果上中的顺序语句具有并行执行的特征,看,<em class='similar 26S46I5' onmouseover=\"highlightSetter('26S46I5',false)\" onmouseout=\"highlightSetter('26S46I5',true)\">always中的顺序语句具有并行执行的特征,</em><em class='similar 26S46I6' onmouseover=\"highlightSetter('26S46I6',false)\" onmouseout=\"highlightSetter('26S46I6',true)\">包括阻塞与非阻塞赋值语句。</em><em class='similar 26S46I7' onmouseover=\"highlightSetter('26S46I7',false)\" onmouseout=\"highlightSetter('26S46I7',true)\">中的顺序语句具有并行执行的特征包括阻塞与非阻塞赋值语句。</em>3.过程语句本身是并行语句过程语句引导的语句属于顺","datatype":"webpage","clcs":[],"similarityPercentage":"32.7%","self":false,"text":"言,执行时间为,从效果上中的顺序语句具有并行执行的特征,看,<em class='similar'>always中的顺序语句具有并行执行的特征,</em><em class='similar'>包括阻塞与非阻塞赋值语句。</em><em class='similar'>中的顺序语句具有并行执行的特征包括阻塞与非阻塞赋值语句。</em>3.过程语句本身是并行语句过程语句引导的语句属于顺"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":131.14282,"teacher":"","textWithDynamicClass":"新后的值。5.3.2非阻塞赋值语句非阻塞赋值语句可以简述为:<em class='similar 26S45I6' onmouseover=\"highlightSetter('26S45I6',false)\" onmouseout=\"highlightSetter('26S45I6',true)\">在一个always块中,</em><em class='similar 26S45I7' onmouseover=\"highlightSetter('26S45I7',false)\" onmouseout=\"highlightSetter('26S45I7',true)\">语句是并行执行的。</em><em class='similar 26S45I8' onmouseover=\"highlightSetter('26S45I8',false)\" onmouseout=\"highlightSetter('26S45I8',true)\">例5一3描述了一个非阻塞赋值语句</em>的实例。[例5一3】非阻塞赋值语句。 module","datatype":"book","clcs":[],"similarityPercentage":"38.6%","self":false,"text":"新后的值。5.3.2非阻塞赋值语句非阻塞赋值语句可以简述为:<em class='similar'>在一个always块中,</em><em class='similar'>语句是并行执行的。</em><em class='similar'>例5一3描述了一个非阻塞赋值语句</em>的实例。[例5一3】非阻塞赋值语句。 module"}],"textWithDynamicClass":"<em class='similar T25I0' onmouseover=\"highlightSetter('T25I0',false)\" onmouseout=\"highlightSetter('T25I0',true)\">非阻塞赋值是在always块中的语句都是并行执行的,</em><em class='similar T25I1' onmouseover=\"highlightSetter('T25I1',false)\" onmouseout=\"highlightSetter('T25I1',true)\">非阻塞赋值语句RTL级描述与电路映射图2.9所示,</em>对比上图可以得到对于一个always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。","replaceMap":{},"similar_word_count":51,"text":"<em class='similar'>非阻塞赋值是在always块中的语句都是并行执行的,</em><em class='similar'>非阻塞赋值语句RTL级描述与电路映射图2.9所示,</em>对比上图可以得到对于一个always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。","suggest":{"synonyms":[{"synonyms":["阻碍"],"keyword":"阻塞"}],"keyword":["非阻塞赋值","语句","并行执行","非阻塞","赋值语句","rtl","映射图","2.9所","上图","阻塞","并行","器件","资源数量","主要影响","右边","逻辑的"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":245.85153,"teacher":"","textWithDynamicClass":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar 27S47I6' onmouseover=\"highlightSetter('27S47I6',false)\" onmouseout=\"highlightSetter('27S47I6',true)\">(case expression)</em><em class='similar 27S47I7' onmouseover=\"highlightSetter('27S47I7',false)\" onmouseout=\"highlightSetter('27S47I7',true)\">和选择项表达式</em><em class='similar 27S47I8' onmouseover=\"highlightSetter('27S47I8',false)\" onmouseout=\"highlightSetter('27S47I8',true)\">(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar 27S47I12' onmouseover=\"highlightSetter('27S47I12',false)\" onmouseout=\"highlightSetter('27S47I12',true)\">case语句可以看做是嵌套的if语句,</em><em class='similar 27S47I13' onmouseover=\"highlightSetter('27S47I13',false)\" onmouseout=\"highlightSetter('27S47I13',true)\">从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可","datatype":"book","clcs":[],"similarityPercentage":"44.7%","self":false,"text":"现一个。.&quot;case&quot;语句中,条件表达式<em class='similar'>(case expression)</em><em class='similar'>和选择项表达式</em><em class='similar'>(case item expression)</em>可以使用常量表达式(co攀stant expression),但是只能在其中一个使用。<em class='similar'>case语句可以看做是嵌套的if语句,</em><em class='similar'>从第一个选择项表达式开始往下搜索与条件表达式相匹配的项,</em>然后执行第一个满足条件的语句,而不考虑其余任何的可"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":97.64706,"teacher":"","textWithDynamicClass":"verilog HDL语言中,允许把常量(constant)<em class='similar 27S48I3' onmouseover=\"highlightSetter('27S48I3',false)\" onmouseout=\"highlightSetter('27S48I3',true)\">作为case语句的条件表达式,</em><em class='similar 27S48I4' onmouseover=\"highlightSetter('27S48I4',false)\" onmouseout=\"highlightSetter('27S48I4',true)\">而在选择项表达式中使用变量。</em><em class='similar 27S48I5' onmouseover=\"highlightSetter('27S48I5',false)\" onmouseout=\"highlightSetter('27S48I5',true)\">常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代","datatype":"book","clcs":[],"similarityPercentage":"28.7%","self":false,"text":"verilog HDL语言中,允许把常量(constant)<em class='similar'>作为case语句的条件表达式,</em><em class='similar'>而在选择项表达式中使用变量。</em><em class='similar'>常量表达式常和位选择</em>(bit一selects)运算一起使用,使得程序代"}],"textWithDynamicClass":"在Verilog HDL语句种,<em class='similar T26I1' onmouseover=\"highlightSetter('T26I1',false)\" onmouseout=\"highlightSetter('T26I1',true)\">case包含两类条件表达式和选择项表达式,</em><em class='similar T26I2' onmouseover=\"highlightSetter('T26I2',false)\" onmouseout=\"highlightSetter('T26I2',true)\">case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。","replaceMap":{},"similar_word_count":40,"text":"在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。","suggest":{"synonyms":[],"keyword":["verilog","hdl","语句","case","两类","条件表达式","选择项","表达式","看作","嵌套","综合原则","条件语句","2.13所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":280.41663,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 28S49I3' onmouseover=\"highlightSetter('28S49I3',false)\" onmouseout=\"highlightSetter('28S49I3',true)\">5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar 28S49I9' onmouseover=\"highlightSetter('28S49I9',false)\" onmouseout=\"highlightSetter('28S49I9',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函","datatype":"book","clcs":[],"similarityPercentage":"77.9%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em>函数代表了纯组合逻辑。函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em>仅被综合成导线。例5一42给出了一个函数的实例,函"}],"textWithDynamicClass":"<em class='similar T27I0' onmouseover=\"highlightSetter('T27I0',false)\" onmouseout=\"highlightSetter('T27I0',true)\">在verilog HDL语句中。</em>function如C++的内联函数一样,进行逻辑综合时,将会被直接展开成对应代码放在对应的模块中。<em class='similar T27I4' onmouseover=\"highlightSetter('T27I4',false)\" onmouseout=\"highlightSetter('T27I4',true)\">任何在函数中定义的局部变量都被当做单纯的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。","replaceMap":{},"similar_word_count":40,"text":"<em class='similar'>在verilog HDL语句中。</em>function如C++的内联函数一样,进行逻辑综合时,将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做单纯的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"}],"keyword":["verilog","hdl","语句","function","内联函数","逻辑综合","局部变量","当做","临时","表述","行为级","逻辑","时序控制","组合逻辑","2.15所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135879019911","author":"","university":"","source":"网页","title":"基于LUT的FPGA工艺映射直优化 - 道客巴巴","url":"http://www.doc88.com/p%2D2436617741784.html","reference":false,"similarScore":441.08435,"teacher":"","textWithDynamicClass":"一个功能相同的简化电路的过程,它主要包含逻辑综合和工艺映射。<em class='similar 29S50I2' onmouseover=\"highlightSetter('29S50I2',false)\" onmouseout=\"highlightSetter('29S50I2',true)\">工艺映射作为综合优化的重要组成部分,</em><em class='similar 29S50I3' onmouseover=\"highlightSetter('29S50I3',false)\" onmouseout=\"highlightSetter('29S50I3',true)\">也是FPGA 支持软件工具中最为关键的部分,</em><em class='similar 29S50I4' onmouseover=\"highlightSetter('29S50I4',false)\" onmouseout=\"highlightSetter('29S50I4',true)\">其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。在国外,研究机构","datatype":"webpage","clcs":[],"similarityPercentage":"63.9%","self":false,"text":"一个功能相同的简化电路的过程,它主要包含逻辑综合和工艺映射。<em class='similar'>工艺映射作为综合优化的重要组成部分,</em><em class='similar'>也是FPGA 支持软件工具中最为关键的部分,</em><em class='similar'>其优化结果对综合后下一阶段的布局布线第一章绪论3等步骤有着决定性的作用,</em>进而影响最终电路芯片的性能和成本。在国外,研究机构"}],"textWithDynamicClass":"在综合优化过程中,<em class='similar T28I1' onmouseover=\"highlightSetter('T28I1',false)\" onmouseout=\"highlightSetter('T28I1',true)\">技术映射是将技术映射作为综合优化的重要组成部分,</em><em class='similar T28I2' onmouseover=\"highlightSetter('T28I2',false)\" onmouseout=\"highlightSetter('T28I2',true)\">也是FPGA支持软件工具EDA中最为关键的部分,</em>技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar T28I4' onmouseover=\"highlightSetter('T28I4',false)\" onmouseout=\"highlightSetter('T28I4',true)\">其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>由于其重要性,国内外也研发出了一些列针对不同目标的工艺映射办法,面向面积优化、面向时序约束等","replaceMap":{},"similar_word_count":89,"text":"在综合优化过程中,<em class='similar'>技术映射是将技术映射作为综合优化的重要组成部分,</em><em class='similar'>也是FPGA支持软件工具EDA中最为关键的部分,</em>技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>由于其重要性,国内外也研发出了一些列针对不同目标的工艺映射办法,面向面积优化、面向时序约束等","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"}],"keyword":["优化过程","映射","优化的","重要组成部分","fpga","软件工具","eda","至关重要","优化结果","设计流程","布局布线","决定性","一些列","工艺映射","面积优化","时序约束"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000203566665711","author":"","university":"","source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html","reference":false,"similarScore":617.14276,"teacher":"","textWithDynamicClass":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar 30S51I6' onmouseover=\"highlightSetter('30S51I6',false)\" onmouseout=\"highlightSetter('30S51I6',true)\">02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em><em class='similar 30S51I7' onmouseover=\"highlightSetter('30S51I7',false)\" onmouseout=\"highlightSetter('30S51I7',true)\">这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar 30S51I8' onmouseover=\"highlightSetter('30S51I8',false)\" onmouseout=\"highlightSetter('30S51I8',true)\">是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar 30S51I10' onmouseover=\"highlightSetter('30S51I10',false)\" onmouseout=\"highlightSetter('30S51I10',true)\">因此对最终电路实现的质量</em><em class='similar 30S51I11' onmouseover=\"highlightSetter('30S51I11',false)\" onmouseout=\"highlightSetter('30S51I11',true)\">(面积、</em>速度、<em class='similar 30S51I13' onmouseover=\"highlightSetter('30S51I13',false)\" onmouseout=\"highlightSetter('30S51I13',true)\">功耗等)</em>至关重要。","datatype":"webpage","clcs":[],"similarityPercentage":"59.3%","self":false,"text":"理进行详细介绍,具体包括上述的工艺映射、逻辑打包、布局布线。<em class='similar'>02工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em><em class='similar'>这里所说的逻辑单元依赖于特定的FPGA架构,</em><em class='similar'>是由查找表或MUX等逻辑电路实现的FPGA上的最小逻辑单位。</em>工艺映射是从HDL开始的逻辑转换的最后一步,<em class='similar'>因此对最终电路实现的质量</em><em class='similar'>(面积、</em>速度、<em class='similar'>功耗等)</em>至关重要。"},{"profession":false,"keywords":[],"year":"","docid":"9000195223375811","author":"","university":"","source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07","reference":false,"similarScore":400,"teacher":"","textWithDynamicClass":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar 30S52I6' onmouseover=\"highlightSetter('30S52I6',false)\" onmouseout=\"highlightSetter('30S52I6',true)\">10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是","datatype":"webpage","clcs":[],"similarityPercentage":"66.7%","self":false,"text":"技术。当被控对象的结构和参数具有一2020-07-0318:<em class='similar'>10:173011原创 FPGA设计原理以及代表性工具工艺映射工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程。</em>代表性工具:FlowMap工艺映射相关术语:节点是"}],"textWithDynamicClass":"<em class='similar T29I0' onmouseover=\"highlightSetter('T29I0',false)\" onmouseout=\"highlightSetter('T29I0',true)\">工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar T29I4' onmouseover=\"highlightSetter('T29I4',false)\" onmouseout=\"highlightSetter('T29I4',true)\">FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为实际转换为FPGA片上器件的重要步骤,<em class='similar T29I6' onmouseover=\"highlightSetter('T29I6',false)\" onmouseout=\"highlightSetter('T29I6',true)\">因此对FPGA片上最终实现的电路的面积、</em><em class='similar T29I7' onmouseover=\"highlightSetter('T29I7',false)\" onmouseout=\"highlightSetter('T29I7',true)\">功耗、</em>运行速度等方面相当重要。","replaceMap":{},"similar_word_count":92,"text":"<em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为实际转换为FPGA片上器件的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>运行速度等方面相当重要。","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["工艺映射","网表","fpga","逻辑单元","43","提及","lut","mux","ff","逻辑","映射","rtl","描述的","硬件","器件","重要步骤","功耗"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000192630159511","author":"","university":"","source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html","reference":false,"similarScore":336.14178,"teacher":"","textWithDynamicClass":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar 31S54I3' onmouseover=\"highlightSetter('31S54I3',false)\" onmouseout=\"highlightSetter('31S54I3',true)\">第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar 31S54I4' onmouseover=\"highlightSetter('31S54I4',false)\" onmouseout=\"highlightSetter('31S54I4',true)\">输出是实际工艺下可实现的门级网表,</em>���具体流程如图2—2所示。<em class='similar 31S54I6' onmouseover=\"highlightSetter('31S54I6',false)\" onmouseout=\"highlightSetter('31S54I6',true)\">图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em><em class='similar 31S54I7' onmouseover=\"highlightSetter('31S54I7',false)\" onmouseout=\"highlightSetter('31S54I7',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路","datatype":"webpage","clcs":[],"similarityPercentage":"35.4%","self":false,"text":"接影响到最终实现电路的性能成本,在数字设计中占有重要的位置。<em class='similar'>第二章FPGA及其工艺映射概述图2-l电子设计流程图工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表,</em>其具体流程如图2—2所示。<em class='similar'>图2—2工艺映射流程图布尔网络表示的是一组逻辑表达式,</em><em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>划分通常是将电路进行功能上的划分。逻辑分解是将电路"},{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":277.25287,"teacher":"","textWithDynamicClass":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar 31S53I5' onmouseover=\"highlightSetter('31S53I5',false)\" onmouseout=\"highlightSetter('31S53I5',true)\">工艺映射的输入是布尔网络,</em><em class='similar 31S53I6' onmouseover=\"highlightSetter('31S53I6',false)\" onmouseout=\"highlightSetter('31S53I6',true)\">输出是实际工艺下可实现的门级网表。</em><em class='similar 31S53I7' onmouseover=\"highlightSetter('31S53I7',false)\" onmouseout=\"highlightSetter('31S53I7',true)\">布尔网络表示的是一组逻辑表达式,</em><em class='similar 31S53I8' onmouseover=\"highlightSetter('31S53I8',false)\" onmouseout=\"highlightSetter('31S53I8',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步","datatype":"webpage","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"中占有重要的位置。图2-2工艺映射流程图由图2.2可以看出,<em class='similar'>工艺映射的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em><em class='similar'>布尔网络表示的是一组逻辑表达式,</em><em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>由上图可以看出划分是FPGA工艺映射流程的第一个步"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003386423011","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所! 上海200030；上海交通大学大规模集成电路研究所! 上海200030","source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":"","reference":false,"similarScore":208.49808,"teacher":"","textWithDynamicClass":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar 31S55I4' onmouseover=\"highlightSetter('31S55I4',false)\" onmouseout=\"highlightSetter('31S55I4',true)\">工艺映射自动化过程的输入是布尔网络,</em><em class='similar 31S55I5' onmouseover=\"highlightSetter('31S55I5',false)\" onmouseout=\"highlightSetter('31S55I5',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar 31S55I9' onmouseover=\"highlightSetter('31S55I9',false)\" onmouseout=\"highlightSetter('31S55I9',true)\">1工艺映射所谓的布尔网络是一组逻辑表达式,</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"39.3%","self":false,"text":"以看出,工艺映射自动化过程在整个流程中占据着非常重要的地位。<em class='similar'>工艺映射自动化过程的输入是布尔网络,</em><em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图2所示。下面将简要介绍工艺映射中每一步流程的作用,并分析现有过程中存在的问题。<em class='similar'>1工艺映射所谓的布尔网络是一组逻辑表达式,</em>"},{"profession":false,"keywords":[],"year":"2001","docid":"1000003389855311","author":"罗晓春；林争辉","university":"上海交通大学大规模集成电路研究所!上海200030；上海交通大学大规模集成电路研究所!上海200030","source":"微电子学","title":"速度优化再分解设计方法","url":"","reference":false,"similarScore":138.55557,"teacher":"","textWithDynamicClass":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar 31S56I8' onmouseover=\"highlightSetter('31S56I8',false)\" onmouseout=\"highlightSetter('31S56I8',true)\">输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar 31S56I14' onmouseover=\"highlightSetter('31S56I14',false)\" onmouseout=\"highlightSetter('31S56I14',true)\">它的各个结点可以是任意的逻辑功能组合单元。</em>","datatype":"journal","clcs":["TN402；"],"similarityPercentage":"38.5%","self":false,"text":"占据着非常重要的地位。库单元绑定自动化过程的输入是布尔网络,<em class='similar'>输出是实际工艺下可实现的门级网表。</em>其具体流程如图1(b)中的实线框图所示。下面简要介绍库单元绑定的基本概念和每一步流程的作用。2现有库单元绑定过程分析所谓的布尔网络是一组逻辑表达式,<em class='similar'>它的各个结点可以是任意的逻辑功能组合单元。</em>"}],"textWithDynamicClass":"<em class='similar T30I0' onmouseover=\"highlightSetter('T30I0',false)\" onmouseout=\"highlightSetter('T30I0',true)\">由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar T30I1' onmouseover=\"highlightSetter('T30I1',false)\" onmouseout=\"highlightSetter('T30I1',true)\">门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar T30I2' onmouseover=\"highlightSetter('T30I2',false)\" onmouseout=\"highlightSetter('T30I2',true)\">该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","replaceMap":{},"similar_word_count":104,"text":"<em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em>","suggest":{"synonyms":[],"keyword":["2.16","工艺映射","网表","可实现","这一个","为是","一组组","逻辑表达式","布尔网络","布尔","网络图","逻辑功能","组合单元"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":240.18208,"teacher":"","textWithDynamicClass":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar 32S59I3' onmouseover=\"highlightSetter('32S59I3',false)\" onmouseout=\"highlightSetter('32S59I3',true)\">原电路可由一组单输出布尔子网络表示。</em><em class='similar 32S59I4' onmouseover=\"highlightSetter('32S59I4',false)\" onmouseout=\"highlightSetter('32S59I4',true)\">根据工艺映射算法的不同需要,</em><em class='similar 32S59I5' onmouseover=\"highlightSetter('32S59I5',false)\" onmouseout=\"highlightSetter('32S59I5',true)\">原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻","datatype":"webpage","clcs":[],"similarityPercentage":"51.1%","self":false,"text":"出的网络转化为一组单输出的子网来简化映射过程。划分完成以后,<em class='similar'>原电路可由一组单输出布尔子网络表示。</em><em class='similar'>根据工艺映射算法的不同需要,</em><em class='similar'>原电路可由有向无环图或一组树来表示。</em>逻辑分解是将电路进行逻辑上的变化,目的是将复杂的逻"}],"textWithDynamicClass":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar T31I3' onmouseover=\"highlightSetter('T31I3',false)\" onmouseout=\"highlightSetter('T31I3',true)\">原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar T31I4' onmouseover=\"highlightSetter('T31I4',false)\" onmouseout=\"highlightSetter('T31I4',true)\">根据工艺映射算法的不同,</em><em class='similar T31I5' onmouseover=\"highlightSetter('T31I5',false)\" onmouseout=\"highlightSetter('T31I5',true)\">原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。","replaceMap":{},"similar_word_count":70,"text":"划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["完成"],"keyword":"完毕"}],"keyword":["布尔图","提升技术","映射","完毕","原始","布尔网络","逻辑电路","一个个","布尔","子网络","映射算法","一张","dag","15"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":355.65686,"teacher":"","textWithDynamicClass":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar 33S60I5' onmouseover=\"highlightSetter('33S60I5',false)\" onmouseout=\"highlightSetter('33S60I5',true)\">逻辑分解是将电路进行逻辑上的变化,</em><em class='similar 33S60I6' onmouseover=\"highlightSetter('33S60I6',false)\" onmouseout=\"highlightSetter('33S60I6',true)\">目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar 33S60I12' onmouseover=\"highlightSetter('33S60I12',false)\" onmouseout=\"highlightSetter('33S60I12',true)\">以便于以后的匹配和映射。</em><em class='similar 33S60I13' onmouseover=\"highlightSetter('33S60I13',false)\" onmouseout=\"highlightSetter('33S60I13',true)\">经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分","datatype":"webpage","clcs":[],"similarityPercentage":"45.6%","self":false,"text":"工艺映射算法的不同需要,原电路可由有向无环图或一组树来表示。<em class='similar'>逻辑分解是将电路进行逻辑上的变化,</em><em class='similar'>目的是将复杂的逻辑单元用基本函数的形式</em>(两输入的与门,与非门,或门,单输入的非门等)表达,<em class='similar'>以便于以后的匹配和映射。</em><em class='similar'>经过逻辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。</em>经过划分和逻辑分解之后,下一步就是匹配。之前的划分"}],"textWithDynamicClass":"<em class='similar T32I0' onmouseover=\"highlightSetter('T32I0',false)\" onmouseout=\"highlightSetter('T32I0',true)\">逻辑分解是则将电路进行在逻辑上等价的一种转换,</em><em class='similar T32I1' onmouseover=\"highlightSetter('T32I1',false)\" onmouseout=\"highlightSetter('T32I1',true)\">其根本目的是将复杂的逻辑单元用最基本的逻辑形式来进行表达,</em><em class='similar T32I2' onmouseover=\"highlightSetter('T32I2',false)\" onmouseout=\"highlightSetter('T32I2',true)\">以便于后续的器件匹配和映射</em>[45]。<em class='similar T32I4' onmouseover=\"highlightSetter('T32I4',false)\" onmouseout=\"highlightSetter('T32I4',true)\">布尔网络在经过逻辑分解操作后,</em><em class='similar T32I5' onmouseover=\"highlightSetter('T32I5',false)\" onmouseout=\"highlightSetter('T32I5',true)\">其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","replaceMap":{},"similar_word_count":111,"text":"<em class='similar'>逻辑分解是则将电路进行在逻辑上等价的一种转换,</em><em class='similar'>其根本目的是将复杂的逻辑单元用最基本的逻辑形式来进行表达,</em><em class='similar'>以便于后续的器件匹配和映射</em>[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的原本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em>","suggest":{"synonyms":[{"synonyms":["上乘"],"keyword":"上等"},{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["其实"],"keyword":"原本"}],"keyword":["逻辑分解","逻辑","上等","根本目的","逻辑单元","逻辑形式","后续","器件","匹配","映射","45","布尔网络","原本","逻辑关系"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":250.31253,"teacher":"","textWithDynamicClass":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar 34S61I8' onmouseover=\"highlightSetter('34S61I8',false)\" onmouseout=\"highlightSetter('34S61I8',true)\">经过划分和逻辑分解之后,</em><em class='similar 34S61I9' onmouseover=\"highlightSetter('34S61I9',false)\" onmouseout=\"highlightSetter('34S61I9',true)\">下一步就是匹配。</em><em class='similar 34S61I10' onmouseover=\"highlightSetter('34S61I10',false)\" onmouseout=\"highlightSetter('34S61I10',true)\">之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是","datatype":"webpage","clcs":[],"similarityPercentage":"56.9%","self":false,"text":"辑分解后的布尔网络由各节点组成且每个节点都只有基本函数关系。<em class='similar'>经过划分和逻辑分解之后,</em><em class='similar'>下一步就是匹配。</em><em class='similar'>之前的划分和分解都是对布尔网络进行与工艺无关的处理的,</em>而匹配则是要把布尔网络和实际的单元库相联系了。就是"}],"textWithDynamicClass":"<em class='similar T33I0' onmouseover=\"highlightSetter('T33I0',false)\" onmouseout=\"highlightSetter('T33I0',true)\">经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar T33I1' onmouseover=\"highlightSetter('T33I1',false)\" onmouseout=\"highlightSetter('T33I1',true)\">而匹配则是在划分与逻辑分解后,</em><em class='similar T33I2' onmouseover=\"highlightSetter('T33I2',false)\" onmouseout=\"highlightSetter('T33I2',true)\">将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,","replaceMap":{},"similar_word_count":53,"text":"<em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["逻辑分解","匹配","无关","布尔网络","工艺库","fpga","厂商"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":399.961,"teacher":"","textWithDynamicClass":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar 35S62I4' onmouseover=\"highlightSetter('35S62I4',false)\" onmouseout=\"highlightSetter('35S62I4',true)\">就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar 35S62I5' onmouseover=\"highlightSetter('35S62I5',false)\" onmouseout=\"highlightSetter('35S62I5',true)\">也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar 35S62I6' onmouseover=\"highlightSetter('35S62I6',false)\" onmouseout=\"highlightSetter('35S62I6',true)\">FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结","datatype":"webpage","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"无关的处理的,而匹配则是要把布尔网络和实际的单元库相联系了。<em class='similar'>就是用实际工艺下可实现的单元库对布尔图进行匹配,</em><em class='similar'>也就是把理想的布尔网络用库中的实际单元实现的过程。</em><em class='similar'>FPGA工艺库中的实际单元要实现划分的子网络的功能。</em>匹配还可以分为结构匹配和布尔匹配。结构匹配是利用结"}],"textWithDynamicClass":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar T34I0' onmouseover=\"highlightSetter('T34I0',false)\" onmouseout=\"highlightSetter('T34I0',true)\">提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar T34I1' onmouseover=\"highlightSetter('T34I1',false)\" onmouseout=\"highlightSetter('T34I1',true)\">是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。","replaceMap":{},"similar_word_count":58,"text":"而匹配则是在划分与逻辑分解后,将与工艺无关的布尔网络与工艺库相结合。其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["可实现","逻辑单元","器件","布尔图","等效","匹配","理想的","布尔网络","45","fpga","表述","电路逻辑"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":440.76923,"teacher":"","textWithDynamicClass":"于树或图的结构匹配算法。工艺映射自动化过程的最后一步是覆盖,<em class='similar 36S63I3' onmouseover=\"highlightSetter('36S63I3',false)\" onmouseout=\"highlightSetter('36S63I3',true)\">它的作用是根据实际电路���要求,</em><em class='similar 36S63I4' onmouseover=\"highlightSetter('36S63I4',false)\" onmouseout=\"highlightSetter('36S63I4',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹","datatype":"webpage","clcs":[],"similarityPercentage":"93.8%","self":false,"text":"于树或图的结构匹配算法。工艺映射自动化过程的最后一步是覆盖,<em class='similar'>它的作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点。</em>也就是依据一定的规则分隔出部分网表进行匹配,并从匹"},{"profession":false,"keywords":[],"year":"","docid":"9000190283878711","author":"","university":"","source":"网页","title":"多级逻辑面积优化设计方法","url":"http://www.doc88.com/p%2D4943406875941.html","reference":false,"similarScore":152.30771,"teacher":"","textWithDynamicClass":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar 36S64I7' onmouseover=\"highlightSetter('36S64I7',false)\" onmouseout=\"highlightSetter('36S64I7',true)\">工艺映射自动化过程的最后一步是疆盖。</em><em class='similar 36S64I8' onmouseover=\"highlightSetter('36S64I8',false)\" onmouseout=\"highlightSetter('36S64I8',true)\">它的作用就是在多种可行的匹配中,</em><em class='similar 36S64I9' onmouseover=\"highlightSetter('36S64I9',false)\" onmouseout=\"highlightSetter('36S64I9',true)\">根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出","datatype":"webpage","clcs":[],"similarityPercentage":"37.1%","self":false,"text":"现,每个四■^门可以实现 d , b+d  c 的逻辑功能。<em class='similar'>工艺映射自动化过程的最后一步是疆盖。</em><em class='similar'>它的作用就是在多种可行的匹配中,</em><em class='similar'>根据实际电路的要求,</em>找到符台性能需要的最优方案,并以实际网表的形式辘出"}],"textWithDynamicClass":"<em class='similar T35I0' onmouseover=\"highlightSetter('T35I0',false)\" onmouseout=\"highlightSetter('T35I0',true)\">在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,</em><em class='similar T35I1' onmouseover=\"highlightSetter('T35I1',false)\" onmouseout=\"highlightSetter('T35I1',true)\">其作用是根据实际电路的要求,</em><em class='similar T35I2' onmouseover=\"highlightSetter('T35I2',false)\" onmouseout=\"highlightSetter('T35I2',true)\">在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。分离出满足器件要求、用户约束的部分子图来进行匹配,并从匹配集中选出对应的器件库单元,","replaceMap":{},"similar_word_count":86,"text":"<em class='similar'>在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,</em><em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。分离出满足器件要求、用户约束的部分子图来进行匹配,并从匹配集中选出对应的器件库单元,","suggest":{"synonyms":[{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["结婚"],"keyword":"匹配"}],"keyword":["eda","映射","逻辑","匹配","可行","47"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":292.16345,"teacher":"","textWithDynamicClass":"来覆盖整个网络的所有节点。也就是依据一定的规则分隔出部分网表<em class='similar 37S66I3' onmouseover=\"highlightSetter('37S66I3',false)\" onmouseout=\"highlightSetter('37S66I3',true)\">进行匹配</em>,<em class='similar 37S66I4' onmouseover=\"highlightSetter('37S66I4',false)\" onmouseout=\"highlightSetter('37S66I4',true)\">并从匹配集中选出库单元,</em><em class='similar 37S66I5' onmouseover=\"highlightSetter('37S66I5',false)\" onmouseout=\"highlightSetter('37S66I5',true)\">完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,<em class='similar 37S66I7' onmouseover=\"highlightSetter('37S66I7',false)\" onmouseout=\"highlightSetter('37S66I7',true)\">要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库","datatype":"webpage","clcs":[],"similarityPercentage":"41.7%","self":false,"text":"来覆盖整个网络的所有节点。也就是依据一定的规则分隔出部分网表<em class='similar'>进行匹配</em>,<em class='similar'>并从匹配集中选出库单元,</em><em class='similar'>完成布尔网表到工艺网表的实现。</em>对每一个选出的匹配,<em class='similar'>要保证每个单元库的输入和其它匹配库单元的输出相连,</em>即覆盖完成后,整个网络都被匹配库单元覆盖而且匹配库"}],"textWithDynamicClass":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。分离出满足器件要求、用户约束的部分子图来<em class='similar T36I1' onmouseover=\"highlightSetter('T36I1',false)\" onmouseout=\"highlightSetter('T36I1',true)\">进行匹配</em>,<em class='similar T36I2' onmouseover=\"highlightSetter('T36I2',false)\" onmouseout=\"highlightSetter('T36I2',true)\">并从匹配集中选出对应的器件库单元,</em><em class='similar T36I3' onmouseover=\"highlightSetter('T36I3',false)\" onmouseout=\"highlightSetter('T36I3',true)\">完成布尔网图到工艺网表的实际映射。</em><em class='similar T36I4' onmouseover=\"highlightSetter('T36I4',false)\" onmouseout=\"highlightSetter('T36I4',true)\">要保证每完成的一组匹配单元,</em><em class='similar T36I5' onmouseover=\"highlightSetter('T36I5',false)\" onmouseout=\"highlightSetter('T36I5',true)\">其每个单元的扇入和其他组的匹配后的单元的扇出进行相通,</em>且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向是如何在满足一定约束的条件下分割布尔网表、如何选取最合适的匹配集,从而满足用户所期望的对面积、功耗、","replaceMap":{},"similar_word_count":80,"text":"在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点[47]。分离出满足器件要求、用户约束的部分子图来<em class='similar'>进行匹配</em>,<em class='similar'>并从匹配集中选出对应的器件库单元,</em><em class='similar'>完成布尔网图到工艺网表的实际映射。</em><em class='similar'>要保证每完成的一组匹配单元,</em><em class='similar'>其每个单元的扇入和其他组的匹配后的单元的扇出进行相通,</em>且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向是如何在满足一定约束的条件下分割布尔网表、如何选取最合适的匹配集,从而满足用户所期望的对面积、功耗、","suggest":{"synonyms":[{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["沟通"],"keyword":"相通"}],"keyword":["器件","分子图","匹配","布尔","网图","网表","映射","扇入","扇出","相通","叠加","工艺映射","核心算法","优化方向"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000120761737511","author":"","university":"","source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html","reference":false,"similarScore":173.369,"teacher":"","textWithDynamicClass":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,<em class='similar 38S67I5' onmouseover=\"highlightSetter('38S67I5',false)\" onmouseout=\"highlightSetter('38S67I5',true)\">功耗等)</em>最优的一组匹配。<em class='similar 38S67I7' onmouseover=\"highlightSetter('38S67I7',false)\" onmouseout=\"highlightSetter('38S67I7',true)\">覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar 38S67I8' onmouseover=\"highlightSetter('38S67I8',false)\" onmouseout=\"highlightSetter('38S67I8',true)\">如何选取匹配集。</em><em class='similar 38S67I9' onmouseover=\"highlightSetter('38S67I9',false)\" onmouseout=\"highlightSetter('38S67I9',true)\">最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程","datatype":"webpage","clcs":[],"similarityPercentage":"43.3%","self":false,"text":"具体情况,从可完成覆盖的各组匹配中选出优化目标(面积,深度,<em class='similar'>功耗等)</em>最优的一组匹配。<em class='similar'>覆盖的核心优化算法是如何分割布尔网表、</em><em class='similar'>如何选取匹配集。</em><em class='similar'>最后以实际网表的形式输出。</em>2.2 FPGA的体系结构 FPGA主要是由可编程"}],"textWithDynamicClass":"且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向<em class='similar T37I0' onmouseover=\"highlightSetter('T37I0',false)\" onmouseout=\"highlightSetter('T37I0',true)\">是如何在满足一定约束的条件下分割布尔网表、</em><em class='similar T37I1' onmouseover=\"highlightSetter('T37I1',false)\" onmouseout=\"highlightSetter('T37I1',true)\">如何选取最合适的匹配集,</em>从而满足用户所期望的对面积、<em class='similar T37I3' onmouseover=\"highlightSetter('T37I3',false)\" onmouseout=\"highlightSetter('T37I3',true)\">功耗、</em>速度的需求。当完成技术映射后,<em class='similar T37I6' onmouseover=\"highlightSetter('T37I6',false)\" onmouseout=\"highlightSetter('T37I6',true)\">EDA工具将以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。","replaceMap":{},"similar_word_count":56,"text":"且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向<em class='similar'>是如何在满足一定约束的条件下分割布尔网表、</em><em class='similar'>如何选取最合适的匹配集,</em>从而满足用户所期望的对面积、<em class='similar'>功耗、</em>速度的需求。当完成技术映射后,<em class='similar'>EDA工具将以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。","suggest":{"synonyms":[{"synonyms":["割据"],"keyword":"分割"},{"synonyms":["结婚"],"keyword":"匹配"},{"synonyms":["映照"],"keyword":"映射"}],"keyword":["分割","布尔","网表","匹配","功耗","映射","eda","高密度","fpga","原型验证系统"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000195285691911","author":"","university":"","source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880","reference":false,"similarScore":688.83325,"teacher":"","textWithDynamicClass":"身的性能。它是人工智能的核心,是使计算机具有智能的根本途径。<em class='similar 39S68I3' onmouseover=\"highlightSetter('39S68I3',false)\" onmouseout=\"highlightSetter('39S68I3',true)\">机器学习是一门多学科交叉专业,</em><em class='similar 39S68I4' onmouseover=\"highlightSetter('39S68I4',false)\" onmouseout=\"highlightSetter('39S68I4',true)\">涵盖概率论知识,</em><em class='similar 39S68I5' onmouseover=\"highlightSetter('39S68I5',false)\" onmouseout=\"highlightSetter('39S68I5',true)\">统计学知识,</em><em class='similar 39S68I6' onmouseover=\"highlightSetter('39S68I6',false)\" onmouseout=\"highlightSetter('39S68I6',true)\">近似理论知识和复杂算法知识,</em><em class='similar 39S68I7' onmouseover=\"highlightSetter('39S68I7',false)\" onmouseout=\"highlightSetter('39S68I7',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar 39S68I8' onmouseover=\"highlightSetter('39S68I8',false)\" onmouseout=\"highlightSetter('39S68I8',true)\">并将现有内容进行知识结构划分来有效提高学习效率。</em>[1]机器学习有下面几种定义:(1)<em class='similar 39S68I12' onmouseover=\"highlightSetter('39S68I12',false)\" onmouseout=\"highlightSetter('39S68I12',true)\">机器学习是一门人工智能的科学,</em>该领域的主要研究对象是人工智能,特别是如何在经验学","datatype":"webpage","clcs":[],"similarityPercentage":"67.5%","self":false,"text":"身的性能。它是人工智能的核心,是使计算机具有智能的根本途径。<em class='similar'>机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率论知识,</em><em class='similar'>统计学知识,</em><em class='similar'>近似理论知识和复杂算法知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行知识结构划分来有效提高学习效率。</em>[1]机器学习有下面几种定义:(1)<em class='similar'>机器学习是一门人工智能的科学,</em>该领域的主要研究对象是人工智能,特别是如何在经验学"},{"profession":false,"keywords":[],"year":"","docid":"9000105741580511","author":"","university":"","source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/","reference":false,"similarScore":633.0512,"teacher":"","textWithDynamicClass":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar 39S70I4' onmouseover=\"highlightSetter('39S70I4',false)\" onmouseout=\"highlightSetter('39S70I4',true)\">但机器学习是一门多学科的交叉专业,</em><em class='similar 39S70I5' onmouseover=\"highlightSetter('39S70I5',false)\" onmouseout=\"highlightSetter('39S70I5',true)\">涵盖概率论,</em><em class='similar 39S70I6' onmouseover=\"highlightSetter('39S70I6',false)\" onmouseout=\"highlightSetter('39S70I6',true)\">统计学,</em><em class='similar 39S70I7' onmouseover=\"highlightSetter('39S70I7',false)\" onmouseout=\"highlightSetter('39S70I7',true)\">近似理论和复杂算法等知识,</em><em class='similar 39S70I8' onmouseover=\"highlightSetter('39S70I8',false)\" onmouseout=\"highlightSetter('39S70I8',true)\">使用计算机为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar 39S70I9' onmouseover=\"highlightSetter('39S70I9',false)\" onmouseout=\"highlightSetter('39S70I9',true)\">并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会","datatype":"webpage","clcs":[],"similarityPercentage":"75.4%","self":false,"text":"学习就是真正把知识技术转化为生产力和产品的重要实用型环节了。<em class='similar'>但机器学习是一门多学科的交叉专业,</em><em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行实时结构划分来有效提高学习效率。</em>算法决定了机器如何解释大数据。执行机器学习的算法会"},{"profession":false,"keywords":[],"year":"","docid":"9000193345064111","author":"","university":"","source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html","reference":false,"similarScore":632.4524,"teacher":"","textWithDynamicClass":"Deepfake 技术合成的假视频[21]相关词条机器学习:<em class='similar 39S71I4' onmouseover=\"highlightSetter('39S71I4',false)\" onmouseout=\"highlightSetter('39S71I4',true)\">机器学习是涵盖概率论知识,</em><em class='similar 39S71I5' onmouseover=\"highlightSetter('39S71I5',false)\" onmouseout=\"highlightSetter('39S71I5',true)\">统计学知识,</em><em class='similar 39S71I6' onmouseover=\"highlightSetter('39S71I6',false)\" onmouseout=\"highlightSetter('39S71I6',true)\">近似理论知识和复杂算法知识,</em><em class='similar 39S71I7' onmouseover=\"highlightSetter('39S71I7',false)\" onmouseout=\"highlightSetter('39S71I7',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar 39S71I8' onmouseover=\"highlightSetter('39S71I8',false)\" onmouseout=\"highlightSetter('39S71I8',true)\">并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。</em>深度学习:<em class='similar 39S71I10' onmouseover=\"highlightSetter('39S71I10',false)\" onmouseout=\"highlightSetter('39S71I10',true)\">深度学习是机器学习的一种,</em>使用深层神经网络组合低层特征形成更加抽象的高层表示","datatype":"webpage","clcs":[],"similarityPercentage":"63.9%","self":false,"text":"Deepfake 技术合成的假视频[21]相关词条机器学习:<em class='similar'>机器学习是涵盖概率论知识,</em><em class='similar'>统计学知识,</em><em class='similar'>近似理论知识和复杂算法知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行知识结构划分来有效提高学习效率的多学科交叉专业。</em>深度学习:<em class='similar'>深度学习是机器学习的一种,</em>使用深层神经网络组合低层特征形成更加抽象的高层表示"},{"profession":false,"keywords":[],"year":"","docid":"9000146790090711","author":"","university":"","source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b","reference":false,"similarScore":586.37177,"teacher":"","textWithDynamicClass":"预测模型为特征。预测方法的种类很多,各有相应的预测模型。⑵、<em class='similar 39S69I7' onmouseover=\"highlightSetter('39S69I7',false)\" onmouseout=\"highlightSetter('39S69I7',true)\">机器学习机器学习是一门多学科交叉科学,</em><em class='similar 39S69I8' onmouseover=\"highlightSetter('39S69I8',false)\" onmouseout=\"highlightSetter('39S69I8',true)\">涵盖概率论知识、</em><em class='similar 39S69I9' onmouseover=\"highlightSetter('39S69I9',false)\" onmouseout=\"highlightSetter('39S69I9',true)\">统计学知识、</em><em class='similar 39S69I10' onmouseover=\"highlightSetter('39S69I10',false)\" onmouseout=\"highlightSetter('39S69I10',true)\">近似理论知识和复杂算法知识;</em><em class='similar 39S69I11' onmouseover=\"highlightSetter('39S69I11',false)\" onmouseout=\"highlightSetter('39S69I11',true)\">使用计算机作为工具;</em><em class='similar 39S69I12' onmouseover=\"highlightSetter('39S69I12',false)\" onmouseout=\"highlightSetter('39S69I12',true)\">致力于真实实时地模拟人类学习方式,</em><em class='similar 39S69I13' onmouseover=\"highlightSetter('39S69I13',false)\" onmouseout=\"highlightSetter('39S69I13',true)\">并通过将现有内容进行知识结构划分来有效提高</em>","datatype":"webpage","clcs":[],"similarityPercentage":"65.9%","self":false,"text":"预测模型为特征。预测方法的种类很多,各有相应的预测模型。⑵、<em class='similar'>机器学习机器学习是一门多学科交叉科学,</em><em class='similar'>涵盖概率论知识、</em><em class='similar'>统计学知识、</em><em class='similar'>近似理论知识和复杂算法知识;</em><em class='similar'>使用计算机作为工具;</em><em class='similar'>致力于真实实时地模拟人类学习方式,</em><em class='similar'>并通过将现有内容进行知识结构划分来有效提高</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000188228535911","author":"融智学双通课","university":"","source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935","reference":false,"similarScore":540.0513,"teacher":"","textWithDynamicClass":"的核心,也就是使计算机具有人工智能的根本途径。��(机器学习)<em class='similar 39S72I9' onmouseover=\"highlightSetter('39S72I9',false)\" onmouseout=\"highlightSetter('39S72I9',true)\">涵盖概率论,</em><em class='similar 39S72I10' onmouseover=\"highlightSetter('39S72I10',false)\" onmouseout=\"highlightSetter('39S72I10',true)\">统计学,</em><em class='similar 39S72I11' onmouseover=\"highlightSetter('39S72I11',false)\" onmouseout=\"highlightSetter('39S72I11',true)\">近似理论和复杂算法等多学科知识,</em><em class='similar 39S72I12' onmouseover=\"highlightSetter('39S72I12',false)\" onmouseout=\"highlightSetter('39S72I12',true)\">使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em><em class='similar 39S72I13' onmouseover=\"highlightSetter('39S72I13',false)\" onmouseout=\"highlightSetter('39S72I13',true)\">将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,","datatype":"webpage","clcs":[],"similarityPercentage":"74.0%","self":false,"text":"的核心,也就是使计算机具有人工智能的根本途径。它(机器学习)<em class='similar'>涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等多学科知识,</em><em class='similar'>使用计算机软硬件作为工具致力于真实实时的模拟人类学习方式,</em><em class='similar'>将数据内容进行知识结构划分来有效提高学习效率。</em>它是用数据或经验优化计算机程序的性能的标准。因此,"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030899588211","author":"谢雨桐","university":"华中科技大学中欧清洁与可再生能源学院；","source":"城市住宅","title":"机器学习在建筑节能中的应用","url":"","reference":false,"similarScore":525.8931,"teacher":"","textWithDynamicClass":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar 39S73I3' onmouseover=\"highlightSetter('39S73I3',false)\" onmouseout=\"highlightSetter('39S73I3',true)\">1机器学习机器学习是一门多学科交叉专业,</em><em class='similar 39S73I4' onmouseover=\"highlightSetter('39S73I4',false)\" onmouseout=\"highlightSetter('39S73I4',true)\">涵盖概率学与统计学知识,</em><em class='similar 39S73I5' onmouseover=\"highlightSetter('39S73I5',false)\" onmouseout=\"highlightSetter('39S73I5',true)\">近似理论和复杂算法知识,</em><em class='similar 39S73I6' onmouseover=\"highlightSetter('39S73I6',false)\" onmouseout=\"highlightSetter('39S73I6',true)\">用计算机作为工具,</em><em class='similar 39S73I7' onmouseover=\"highlightSetter('39S73I7',false)\" onmouseout=\"highlightSetter('39S73I7',true)\">致力于实时模拟人类学习方式,</em><em class='similar 39S73I8' onmouseover=\"highlightSetter('39S73I8',false)\" onmouseout=\"highlightSetter('39S73I8',true)\">将现有内容进行知识结构划分,</em><em class='similar 39S73I9' onmouseover=\"highlightSetter('39S73I9',false)\" onmouseout=\"highlightSetter('39S73I9',true)\">有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域","datatype":"journal","clcs":[],"similarityPercentage":"63.4%","self":false,"text":"源消耗刻不容缓,而将机器学习运用到建筑节能中可极大提高效率。<em class='similar'>1机器学习机器学习是一门多学科交叉专业,</em><em class='similar'>涵盖概率学与统计学知识,</em><em class='similar'>近似理论和复杂算法知识,</em><em class='similar'>用计算机作为工具,</em><em class='similar'>致力于实时模拟人类学习方式,</em><em class='similar'>将现有内容进行知识结构划分,</em><em class='similar'>有效提高学习效率。</em>机器学习是人工智能中最具智能特征和最前沿的研究领域"}],"textWithDynamicClass":"<em class='similar T38I0' onmouseover=\"highlightSetter('T38I0',false)\" onmouseout=\"highlightSetter('T38I0',true)\">机器学习是面向多学科的交叉学科,</em><em class='similar T38I1' onmouseover=\"highlightSetter('T38I1',false)\" onmouseout=\"highlightSetter('T38I1',true)\">其涵盖概率论,</em><em class='similar T38I2' onmouseover=\"highlightSetter('T38I2',false)\" onmouseout=\"highlightSetter('T38I2',true)\">统计学,</em><em class='similar T38I3' onmouseover=\"highlightSetter('T38I3',false)\" onmouseout=\"highlightSetter('T38I3',true)\">近似理论和复杂算法等知识,</em><em class='similar T38I4' onmouseover=\"highlightSetter('T38I4',false)\" onmouseout=\"highlightSetter('T38I4',true)\">使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar T38I5' onmouseover=\"highlightSetter('T38I5',false)\" onmouseout=\"highlightSetter('T38I5',true)\">并将现有内容进行对应知识体系的划分来有效的提高学习效率的方法</em>[3]。","replaceMap":{},"similar_word_count":97,"text":"<em class='similar'>机器学习是面向多学科的交叉学科,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行对应知识体系的划分来有效的提高学习效率的方法</em>[3]。","suggest":{"synonyms":[{"synonyms":["尽力"],"keyword":"致力"},{"synonyms":["及时"],"keyword":"实时"}],"keyword":["机器学习","多学科","交叉学科","涵盖","概率论","统计学","近似理论","复杂算法","致力","实时","学习方式","知识体系","提高学习效率"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9100000975023511","author":"aaz7428135","university":"","source":"百科","title":"随机森林","url":"http://baike.so.com/doc/31116.html","reference":false,"similarScore":215.16196,"teacher":"","textWithDynamicClass":"<em class='similar 41S77I0' onmouseover=\"highlightSetter('41S77I0',false)\" onmouseout=\"highlightSetter('41S77I0',true)\">在机器学习中,</em><em class='similar 41S77I1' onmouseover=\"highlightSetter('41S77I1',false)\" onmouseout=\"highlightSetter('41S77I1',true)\">随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar 41S77I3' onmouseover=\"highlightSetter('41S77I3',false)\" onmouseout=\"highlightSetter('41S77I3',true)\"> Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em>而&quot;Random Forests&quo","datatype":"wiki","clcs":[],"similarityPercentage":"51.2%","self":false,"text":"<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar'> Leo Breiman和Adele Cutler发展出推论出随机森林的算法。</em>而&quot;Random Forests&quo"},{"profession":false,"keywords":[],"year":"","docid":"9000205787700011","author":"","university":"","source":"网页","title":"干货丨大数据基础术语精粹来袭","url":"https://www.docin.com/p%2D2290152325.html","reference":false,"similarScore":215.16196,"teacher":"","textWithDynamicClass":"f(key)为哈希(Hash)函数。四十九、随机森林英文名:<em class='similar 41S78I7' onmouseover=\"highlightSetter('41S78I7',false)\" onmouseout=\"highlightSetter('41S78I7',true)\">Random forest 在机器学习中,</em><em class='similar 41S78I8' onmouseover=\"highlightSetter('41S78I8',false)\" onmouseout=\"highlightSetter('41S78I8',true)\">随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar 41S78I10' onmouseover=\"highlightSetter('41S78I10',false)\" onmouseout=\"highlightSetter('41S78I10',true)\"> Leo Breiman 和Adele Cutler 发展出推论出随机森林的算法。</em>&quot;RandomForests&quot;","datatype":"webpage","clcs":[],"similarityPercentage":"48.9%","self":false,"text":"f(key)为哈希(Hash)函数。四十九、随机森林英文名:<em class='similar'>Random forest 在机器学习中,</em><em class='similar'>随机森林是一个包含多个决策树的分类器,</em>并且其输出的类别是由个别树输出的类别的众数而定。<em class='similar'> Leo Breiman 和Adele Cutler 发展出推论出随机森林的算法。</em>&quot;RandomForests&quot;"},{"profession":false,"keywords":[],"year":"2017","docid":"1900023720243711","author":"刘凡平编著","university":"","source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":"","reference":false,"similarScore":186.45767,"teacher":"","textWithDynamicClass":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar 41S76I3' onmouseover=\"highlightSetter('41S76I3',false)\" onmouseout=\"highlightSetter('41S76I3',true)\">8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em><em class='similar 41S76I4' onmouseover=\"highlightSetter('41S76I4',false)\" onmouseout=\"highlightSetter('41S76I4',true)\">随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em>随机森林,顾名思义就是用随机的方式建立一个森林,森","datatype":"book","clcs":[],"similarityPercentage":"35.9%","self":false,"text":"imum Tree),在剪枝之后都能够保留最重要的属性划分。<em class='similar'>8.4基于随机森林的决策分类随机森林是一种一个包含多个决策树的分类器。</em><em class='similar'>随机森林的算法是由Leo Breiman和Adele Cutler发展推论出的。</em>随机森林,顾名思义就是用随机的方式建立一个森林,森"},{"profession":false,"keywords":[],"year":"2019","docid":"1000031673706911","author":"","university":"","source":"人文杂志","title":"领投人特征对股权众筹融资绩效影响的实证研究","url":"","reference":false,"similarScore":166.89655,"teacher":"","textWithDynamicClass":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar 41S79I1' onmouseover=\"highlightSetter('41S79I1',false)\" onmouseout=\"highlightSetter('41S79I1',true)\">随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar 41S79I2' onmouseover=\"highlightSetter('41S79I2',false)\" onmouseout=\"highlightSetter('41S79I2',true)\">通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文","datatype":"journal","clcs":[],"similarityPercentage":"37.9%","self":false,"text":"为→融资绩效0.5350.1980.181**0.1283.<em class='similar'>随机森林预测模型随机森林是以决策树为基学习器的机器学习集成算法,</em><em class='similar'>通过对多个弱分类器加以组合,</em>使得模型的预测结果达到较高的精确度和泛化性能。本文"}],"textWithDynamicClass":"<em class='similar T40I0' onmouseover=\"highlightSetter('T40I0',false)\" onmouseout=\"highlightSetter('T40I0',true)\">在机器学习中,</em><em class='similar T40I1' onmouseover=\"highlightSetter('T40I1',false)\" onmouseout=\"highlightSetter('T40I1',true)\">随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar T40I2' onmouseover=\"highlightSetter('T40I2',false)\" onmouseout=\"highlightSetter('T40I2',true)\">随机森林是Leo Breiman和Adele Cutler发展出推行出的一种比较先进的面向机器学习的算法。</em>这个算法是多学习集成学习的典型模型之一。","replaceMap":{},"similar_word_count":88,"text":"<em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推行出的一种比较先进的面向机器学习的算法。</em>这个算法是多学习集成学习的典型模型之一。","suggest":{"synonyms":[{"synonyms":["奉行"],"keyword":"推行"}],"keyword":["机器学习","随机森林","决策树","学习器","leo","breiman","adele","cutler","推行","集成学习","典型模型"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000082078623411","author":"","university":"","source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282","reference":false,"similarScore":495.49124,"teacher":"","textWithDynamicClass":"自助采样法(bootstrap sampling)采样数据。<em class='similar 42S81I3' onmouseover=\"highlightSetter('42S81I3',false)\" onmouseout=\"highlightSetter('42S81I3',true)\">给定包含m个样本的数据集,</em><em class='similar 42S81I4' onmouseover=\"highlightSetter('42S81I4',false)\" onmouseout=\"highlightSetter('42S81I4',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 42S81I5' onmouseover=\"highlightSetter('42S81I5',false)\" onmouseout=\"highlightSetter('42S81I5',true)\">再把该样本放回初始数据集,</em><em class='similar 42S81I6' onmouseover=\"highlightSetter('42S81I6',false)\" onmouseout=\"highlightSetter('42S81I6',true)\">使得下次采样时,</em><em class='similar 42S81I7' onmouseover=\"highlightSetter('42S81I7',false)\" onmouseout=\"highlightSetter('42S81I7',true)\">样本仍可能被选中,</em><em class='similar 42S81I8' onmouseover=\"highlightSetter('42S81I8',false)\" onmouseout=\"highlightSetter('42S81I8',true)\">这样,</em><em class='similar 42S81I9' onmouseover=\"highlightSetter('42S81I9',false)\" onmouseout=\"highlightSetter('42S81I9',true)\">经过m次随机采样操作,</em><em class='similar 42S81I10' onmouseover=\"highlightSetter('42S81I10',false)\" onmouseout=\"highlightSetter('42S81I10',true)\">我们得到包含m个样本的采样集。</em>按照此方式,<em class='similar 42S81I12' onmouseover=\"highlightSetter('42S81I12',false)\" onmouseout=\"highlightSetter('42S81I12',true)\">我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基本学","datatype":"webpage","clcs":[],"similarityPercentage":"48.6%","self":false,"text":"自助采样法(bootstrap sampling)采样数据。<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下次采样时,</em><em class='similar'>样本仍可能被选中,</em><em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到包含m个样本的采样集。</em>按照此方式,<em class='similar'>我们可以采样出T个含m个训练样本的采样集,</em>然后基于每个采样集训练出一个基本学"},{"profession":false,"keywords":[],"year":"","docid":"9000031722729511","author":"","university":"","source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958","reference":false,"similarScore":455.85236,"teacher":"","textWithDynamicClass":"<em class='similar 42S80I0' onmouseover=\"highlightSetter('42S80I0',false)\" onmouseout=\"highlightSetter('42S80I0',true)\">g是并行式集成学习方法最著名的代表。</em>从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。<em class='similar 42S80I6' onmouseover=\"highlightSetter('42S80I6',false)\" onmouseout=\"highlightSetter('42S80I6',true)\">给定包含m个样本的数据集,</em><em class='similar 42S80I7' onmouseover=\"highlightSetter('42S80I7',false)\" onmouseout=\"highlightSetter('42S80I7',true)\">我们先随机取出一个样本放入采样集中,</em><em class='similar 42S80I8' onmouseover=\"highlightSetter('42S80I8',false)\" onmouseout=\"highlightSetter('42S80I8',true)\">再把该样本放回初始数据集,</em><em class='similar 42S80I9' onmouseover=\"highlightSetter('42S80I9',false)\" onmouseout=\"highlightSetter('42S80I9',true)\">使得下次采样时该样本仍有可能被选中,</em><em class='similar 42S80I10' onmouseover=\"highlightSetter('42S80I10',false)\" onmouseout=\"highlightSetter('42S80I10',true)\">这样,</em><em class='similar 42S80I11' onmouseover=\"highlightSetter('42S80I11',false)\" onmouseout=\"highlightSetter('42S80I11',true)\">经过m次随机采样操作,</em><em class='similar 42S80I12' onmouseover=\"highlightSetter('42S80I12',false)\" onmouseout=\"highlightSetter('42S80I12',true)\">我们得到含。</em><em class='similar 42S80I13' onmouseover=\"highlightSetter('42S80I13',false)\" onmouseout=\"highlightSetter('42S80I13',true)\">个样本的采样集,</em>初始训练集中有的样本在采样集里多次出现,有的则从未","datatype":"webpage","clcs":[],"similarityPercentage":"46.0%","self":false,"text":"<em class='similar'>g是并行式集成学习方法最著名的代表。</em>从名字即可看出,它是直接基于自助采样法((bootstrapsampling)的。<em class='similar'>给定包含m个样本的数据集,</em><em class='similar'>我们先随机取出一个样本放入采样集中,</em><em class='similar'>再把该样本放回初始数据集,</em><em class='similar'>使得下次采样时该样本仍有可能被选中,</em><em class='similar'>这样,</em><em class='similar'>经过m次随机采样操作,</em><em class='similar'>我们得到含。</em><em class='similar'>个样本的采样集,</em>初始训练集中有的样本在采样集里多次出现,有的则从未"}],"textWithDynamicClass":"<em class='similar T41I0' onmouseover=\"highlightSetter('T41I0',false)\" onmouseout=\"highlightSetter('T41I0',true)\">Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>它的算法核心是基于自主采样法来构造的,<em class='similar T41I2' onmouseover=\"highlightSetter('T41I2',false)\" onmouseout=\"highlightSetter('T41I2',true)\">即给定一个数据集拥有固定m个数据样本,</em><em class='similar T41I3' onmouseover=\"highlightSetter('T41I3',false)\" onmouseout=\"highlightSetter('T41I3',true)\">学习算法先随机拿出一个样本放入采样集中,</em><em class='similar T41I4' onmouseover=\"highlightSetter('T41I4',false)\" onmouseout=\"highlightSetter('T41I4',true)\">再通过将该出去的样本放回数据集,</em><em class='similar T41I5' onmouseover=\"highlightSetter('T41I5',false)\" onmouseout=\"highlightSetter('T41I5',true)\">使得在每一次采样时均有可能取到之前的样本,</em><em class='similar T41I6' onmouseover=\"highlightSetter('T41I6',false)\" onmouseout=\"highlightSetter('T41I6',true)\">这样经过覆盖所有样本的次数的随机采样,</em><em class='similar T41I7' onmouseover=\"highlightSetter('T41I7',false)\" onmouseout=\"highlightSetter('T41I7',true)\">我们可以获得包含m个数据的采样样本集。</em>由式(2-1)可知采样集中将会出现训练集中约三分之二的数据[44]。","replaceMap":{},"similar_word_count":145,"text":"<em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>它的算法核心是基于自主采样法来构造的,<em class='similar'>即给定一个数据集拥有固定m个数据样本,</em><em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em><em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em><em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样样本集。</em>由式(2-1)可知采样集中将会出现训练集中约三分之二的数据[44]。","suggest":{"synonyms":[{"synonyms":["自助"],"keyword":"自主"},{"synonyms":["练习"],"keyword":"训练"}],"keyword":["bagging","并行式","集成学习","代表性","机器学习方法","自主","采样法","给定","数据集","数据样本","学习算法","采样","放回","随机采样","样本集","训练","三分"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"1900023845356311","author":"陈海虹","university":"","source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":"","reference":false,"similarScore":390.64706,"teacher":"","textWithDynamicClass":"<em class='similar 43S83I0' onmouseover=\"highlightSetter('43S83I0',false)\" onmouseout=\"highlightSetter('43S83I0',true)\">假定基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)+O(,)),<em class='similar 43S83I6' onmouseover=\"highlightSetter('43S83I6',false)\" onmouseout=\"highlightSetter('43S83I6',true)\">考虑到采样与投票/平均过程的复杂度O</em>(,)<em class='similar 43S83I8' onmouseover=\"highlightSetter('43S83I8',false)\" onmouseout=\"highlightSetter('43S83I8',true)\">很小,</em><em class='similar 43S83I9' onmouseover=\"highlightSetter('43S83I9',false)\" onmouseout=\"highlightSetter('43S83I9',true)\">而T通常是一个不太大的常数,</em><em class='similar 43S83I10' onmouseover=\"highlightSetter('43S83I10',false)\" onmouseout=\"highlightSetter('43S83I10',true)\">因此,</em><em class='similar 43S83I11' onmouseover=\"highlightSetter('43S83I11',false)\" onmouseout=\"highlightSetter('43S83I11',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>这说明Bagging是一个很高效的集成学习算法。另","datatype":"book","clcs":["TP181"],"similarityPercentage":"50.1%","self":false,"text":"<em class='similar'>假定基学习器的计算复杂度为O</em>(m),则Bagging的复杂度大致为T(O(m)+O(,)),<em class='similar'>考虑到采样与投票/平均过程的复杂度O</em>(,)<em class='similar'>很小,</em><em class='similar'>而T通常是一个不太大的常数,</em><em class='similar'>因此,</em><em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>这说明Bagging是一个很高效的集成学习算法。另"},{"profession":false,"keywords":[],"year":"","docid":"9000107466903911","author":"csdn","university":"","source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282","reference":false,"similarScore":311.82355,"teacher":"","textWithDynamicClass":"算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)<em class='similar 43S82I5' onmouseover=\"highlightSetter('43S82I5',false)\" onmouseout=\"highlightSetter('43S82I5',true)\">为基学习器的计算复杂度,</em>?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar 43S82I11' onmouseover=\"highlightSetter('43S82I11',false)\" onmouseout=\"highlightSetter('43S82I11',true)\">的复杂度较小,</em><em class='similar 43S82I12' onmouseover=\"highlightSetter('43S82I12',false)\" onmouseout=\"highlightSetter('43S82I12',true)\">?也是一个不太大的常数,</em><em class='similar 43S82I13' onmouseover=\"highlightSetter('43S82I13',false)\" onmouseout=\"highlightSetter('43S82I13',true)\">因此,</em><em class='similar 43S82I14' onmouseover=\"highlightSetter('43S82I14',false)\" onmouseout=\"highlightSetter('43S82I14',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等","datatype":"webpage","clcs":[],"similarityPercentage":"52.9%","self":false,"text":"算法,算法复杂度大致为?(?(?)+?(?)),其中?(?)<em class='similar'>为基学习器的计算复杂度,</em>?(?)是采样与投票/平均过程的复杂度,T是训练轮数。一般情况下,?(?)<em class='similar'>的复杂度较小,</em><em class='similar'>?也是一个不太大的常数,</em><em class='similar'>因此,</em><em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶。</em>3)Bagging能够不经修改地用于多分类、回归等"},{"profession":false,"keywords":[],"year":"2020","docid":"1000030691609411","author":"邢岳；田正宏；杜辉","university":"","source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":"","reference":false,"similarScore":257.15686,"teacher":"","textWithDynamicClass":"提高模型准确度。<em class='similar 43S84I1' onmouseover=\"highlightSetter('43S84I1',false)\" onmouseout=\"highlightSetter('43S84I1',true)\">因此,</em>Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)<em class='similar 43S84I5' onmouseover=\"highlightSetter('43S84I5',false)\" onmouseout=\"highlightSetter('43S84I5',true)\">由于基学习器结合过程的复杂度一般很小,</em><em class='similar 43S84I6' onmouseover=\"highlightSetter('43S84I6',false)\" onmouseout=\"highlightSetter('43S84I6',true)\">训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>所以Bagging算法非常高效。本文的目的是通过输","datatype":"journal","clcs":[],"similarityPercentage":"51.4%","self":false,"text":"提高模型准确度。<em class='similar'>因此,</em>Bagging算法更关注降低模型方差,尤其在神经网络等易受样本扰动的学习器上效用更为明显。(3)<em class='similar'>由于基学习器结合过程的复杂度一般很小,</em><em class='similar'>训练一个Bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶,</em>所以Bagging算法非常高效。本文的目的是通过输"},{"profession":false,"keywords":[],"year":"","docid":"9000130331965511","author":"","university":"","source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610","reference":false,"similarScore":223.08823,"teacher":"","textWithDynamicClass":"Bagging算法有以下优点:(1)<em class='similar 43S85I2' onmouseover=\"highlightSetter('43S85I2',false)\" onmouseout=\"highlightSetter('43S85I2',true)\">假定一个基学习器的计算复杂度为O</em>(m),Bagging的复杂度为T(O(m)+O(s)),由于采样过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar 43S85I12' onmouseover=\"highlightSetter('43S85I12',false)\" onmouseout=\"highlightSetter('43S85I12',true)\">训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任","datatype":"webpage","clcs":[],"similarityPercentage":"50.7%","self":false,"text":"Bagging算法有以下优点:(1)<em class='similar'>假定一个基学习器的计算复杂度为O</em>(m),Bagging的复杂度为T(O(m)+O(s)),由于采样过程和投票平均过程的复杂度O(s)很小,T是一个不大的常数,<em class='similar'>训练一个Bagging与直接使用基学习算法训练一个学习器的复杂度同阶。</em>(2)与标准的Adaboost算法只能用于二分类任"},{"profession":false,"keywords":[],"year":"","docid":"9000016188337811","author":"","university":"","source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449","reference":false,"similarScore":214.41183,"teacher":"","textWithDynamicClass":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar 43S86I6' onmouseover=\"highlightSetter('43S86I6',false)\" onmouseout=\"highlightSetter('43S86I6',true)\"> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由","datatype":"webpage","clcs":[],"similarityPercentage":"41.2%","self":false,"text":"则从未出现。照这样,我们可采样出T个含m个训练样本的采样集。<em class='similar'> bagging的特点训练一个bagging集成与直接使用基学习算法训练一个学习器的复杂度同阶与标准的adboost只适用于二分类任务不同的是,</em>bagging能不经修改地用于多分类、回归等任务由"}],"textWithDynamicClass":"���后使用每个采样集对弱学习器进行训练,再通过将这些弱学习器的预测结果进行进一步的数据结合,从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar T42I2' onmouseover=\"highlightSetter('T42I2',false)\" onmouseout=\"highlightSetter('T42I2',true)\">若基学习器的时间复杂度为,</em>则通过上述方法可知该算法的复杂度约为,<em class='similar T42I4' onmouseover=\"highlightSetter('T42I4',false)\" onmouseout=\"highlightSetter('T42I4',true)\">考虑到采样与决策时的时间复杂度很小,</em><em class='similar T42I5' onmouseover=\"highlightSetter('T42I5',false)\" onmouseout=\"highlightSetter('T42I5',true)\">而通常是较大样本数据而言是一个较小的常数,</em><em class='similar T42I6' onmouseover=\"highlightSetter('T42I6',false)\" onmouseout=\"highlightSetter('T42I6',true)\">因此,</em><em class='similar T42I7' onmouseover=\"highlightSetter('T42I7',false)\" onmouseout=\"highlightSetter('T42I7',true)\">训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、较高学习效率的集成学习算法[49]。","replaceMap":{"则通过上述方法可知该算法的复杂度约为,":"则通过上述方法可知该算法的复杂度约为 ,","考虑到采样与决策时的时间复杂度很小,":"考虑到采样与决策时的时间复杂度 很小,","若基学习器的时间复杂度为,":"若基学习器的时间复杂度为 ,","而通常是较大样本数据而言是一个较小的常数,":"而 通常是较大样本数据而言是一个较小的常数,"},"similar_word_count":96,"text":"随后使用每个采样集对弱学习器进行训练,再通过将这些弱学习器的预测结果进行进一步的数据结合,从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的时间复杂度为,</em>则通过上述方法可知该算法的复杂度约为,<em class='similar'>考虑到采样与决策时的时间复杂度很小,</em><em class='similar'>而通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em><em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、较高学习效率的集成学习算法[49]。","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["bagging","算法复杂度","学习效率","学习器","时间复杂度","复杂度","采样","很小","大样本数据","常数","训练","学习算法","训练所","同阶"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000155397363111","author":"","university":"","source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/","reference":false,"similarScore":245.27971,"teacher":"","textWithDynamicClass":"可以用来做包外估计(out-of-bag estimate)<em class='similar 44S88I4' onmouseover=\"highlightSetter('44S88I4',false)\" onmouseout=\"highlightSetter('44S88I4',true)\">。从偏差-方差分解的角度来看,</em><em class='similar 44S88I5' onmouseover=\"highlightSetter('44S88I5',false)\" onmouseout=\"highlightSetter('44S88I5',true)\">Bagging主要关注降低方差,</em><em class='similar 44S88I6' onmouseover=\"highlightSetter('44S88I6',false)\" onmouseout=\"highlightSetter('44S88I6',true)\">因此它在易受样本扰动的学习器上效果更明显。</em>其实这里的Bagging主要就是做了一个数据扰动的","datatype":"webpage","clcs":[],"similarityPercentage":"59.8%","self":false,"text":"可以用来做包外估计(out-of-bag estimate)<em class='similar'>。从偏差-方差分解的角度来看,</em><em class='similar'>Bagging主要关注降低方差,</em><em class='similar'>因此它在易受样本扰动的学习器上效果更明显。</em>其实这里的Bagging主要就是做了一个数据扰动的"},{"profession":false,"keywords":[],"year":"","docid":"9000192363721811","author":"","university":"","source":"网页","title":"快速了解Bagging算法_chicken_shit_bro的博客-CSDN博客","url":"https://blog.csdn.net/weixin_43179522/article/details/106063938","reference":false,"similarScore":226.18881,"teacher":"","textWithDynamicClass":"包外样本评估(即:不同于训练数据的样本)&quot;。 4.<em class='similar 44S89I6' onmouseover=\"highlightSetter('44S89I6',false)\" onmouseout=\"highlightSetter('44S89I6',true)\">从偏差-方差分解角度看,</em><em class='similar 44S89I7' onmouseover=\"highlightSetter('44S89I7',false)\" onmouseout=\"highlightSetter('44S89I7',true)\">Bagging主要关注降低方差,</em><em class='similar 44S89I8' onmouseover=\"highlightSetter('44S89I8',false)\" onmouseout=\"highlightSetter('44S89I8',true)\">因此他在不剪枝决策树、</em><em class='similar 44S89I9' onmouseover=\"highlightSetter('44S89I9',false)\" onmouseout=\"highlightSetter('44S89I9',true)\">神经网络等易受样本扰动的学习器上效果更为明显。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"44.4%","self":false,"text":"包外样本评估(即:不同于训练数据的样本)&quot;。 4.<em class='similar'>从偏差-方差分解角度看,</em><em class='similar'>Bagging主要关注降低方差,</em><em class='similar'>因此他在不剪枝决策树、</em><em class='similar'>神经网络等易受样本扰动的学习器上效果更为明显。</em>"},{"profession":false,"keywords":[],"year":"2017","docid":"1000027401097911","author":"黄海平；徐宁；朱毅凯；王汝传","university":"南京邮电大学计算机学院,江苏南京210023；江苏省无线传感网高技术研究重点实验室,江苏南京210003；南京大学网络信息中心,江苏南京,210023","source":"南京邮电大学学报（自然科学版）","title":"基于智能眼镜触控行为的隐式身份认证方案","url":"","reference":false,"similarScore":200.81815,"teacher":"","textWithDynamicClass":"训练集的特征值。使用Bagging算法来完成机器学习的任务。<em class='similar 44S90I3' onmouseover=\"highlightSetter('44S90I3',false)\" onmouseout=\"highlightSetter('44S90I3',true)\">从偏差-方差分解的角度看,</em><em class='similar 44S90I4' onmouseover=\"highlightSetter('44S90I4',false)\" onmouseout=\"highlightSetter('44S90I4',true)\">Bagging算法主要任务为降低方差,</em><em class='similar 44S90I5' onmouseover=\"highlightSetter('44S90I5',false)\" onmouseout=\"highlightSetter('44S90I5',true)\">因此使用样本对结果影响较大的学习</em>方法作为基学习器会有较好的效果。本文将使用神经网络","datatype":"journal","clcs":["TP393.08"],"similarityPercentage":"37.2%","self":false,"text":"训练集的特征值。使用Bagging算法来完成机器学习的任务。<em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>Bagging算法主要任务为降低方差,</em><em class='similar'>因此使用样本对结果影响较大的学习</em>方法作为基学习器会有较好的效果。本文将使用神经网络"},{"profession":false,"keywords":[],"year":"","docid":"9000106764079211","author":"csdn","university":"","source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819","reference":false,"similarScore":150.38461,"teacher":"","textWithDynamicClass":"习器进行结合.对分类任务使用投票法,对回归任务采用平均值法.<em class='similar 44S87I5' onmouseover=\"highlightSetter('44S87I5',false)\" onmouseout=\"highlightSetter('44S87I5',true)\">从偏差-方差的角度,</em><em class='similar 44S87I6' onmouseover=\"highlightSetter('44S87I6',false)\" onmouseout=\"highlightSetter('44S87I6',true)\">Bagging主要关注降低方差,</em><em class='similar 44S87I7' onmouseover=\"highlightSetter('44S87I7',false)\" onmouseout=\"highlightSetter('44S87I7',true)\">因此它在容易受到样本扰动的学习器</em>(如不剪枝的决策树、神经网络)中效果更明显.5.B","datatype":"webpage","clcs":[],"similarityPercentage":"45.6%","self":false,"text":"习器进行结合.对分类任务使用投票法,对回归任务采用平均值法.<em class='similar'>从偏差-方差的角度,</em><em class='similar'>Bagging主要关注降低方差,</em><em class='similar'>因此它在容易受到样本扰动的学习器</em>(如不剪枝的决策树、神经网络)中效果更明显.5.B"}],"textWithDynamicClass":"<em class='similar T43I0' onmouseover=\"highlightSetter('T43I0',false)\" onmouseout=\"highlightSetter('T43I0',true)\">从偏差-方差分解的角度看,</em><em class='similar T43I1' onmouseover=\"highlightSetter('T43I1',false)\" onmouseout=\"highlightSetter('T43I1',true)\">如何预测结果的降低方差是Bagging算法主要关注的方向,</em><em class='similar T43I2' onmouseover=\"highlightSetter('T43I2',false)\" onmouseout=\"highlightSetter('T43I2',true)\">因此它在受样本的干扰较大的学习器上的优秀表现更为明显</em>[50]。Bagging的算法伪代码如图2.22所示。","replaceMap":{},"similar_word_count":68,"text":"<em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>如何预测结果的降低方差是Bagging算法主要关注的方向,</em><em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显</em>[50]。Bagging的算法伪代码如图2.22所示。","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["偏差","方差分解","预测结果","降低方差","bagging","学习器","50","伪代码","2.22所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000503259011","author":"","university":"","source":"大学生论文联合库","title":"贝叶斯分类器的性能比较","url":"","reference":false,"similarScore":139.23076,"teacher":"","textWithDynamicClass":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar 46S92I6' onmouseover=\"highlightSetter('46S92I6',false)\" onmouseout=\"highlightSetter('46S92I6',true)\">这就是Bagging算法的基本思路。</em><em class='similar 46S92I7' onmouseover=\"highlightSetter('46S92I7',false)\" onmouseout=\"highlightSetter('46S92I7',true)\">随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"58.0%","self":false,"text":"样集,基于每一个采样集训练一个分类器,再将这些基分类器结合,<em class='similar'>这就是Bagging算法的基本思路。</em><em class='similar'>随机森林是Bagging的一个扩展变体,</em>在随机选择样本的基础上,加入了随机属性选择。随机森"}],"textWithDynamicClass":"<em class='similar T45I0' onmouseover=\"highlightSetter('T45I0',false)\" onmouseout=\"highlightSetter('T45I0',true)\">随机森林是Bagging的变体,</em><em class='similar T45I1' onmouseover=\"highlightSetter('T45I1',false)\" onmouseout=\"highlightSetter('T45I1',true)\">是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器所集成的强学习器。RF在通过在训练过程中引入一种随机特征选择机制,","replaceMap":{},"similar_word_count":36,"text":"<em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器所集成的强学习器。RF在通过在训练过程中引入一种随机特征选择机制,","suggest":{"synonyms":[],"keyword":["随机森林","bagging","变体","学习器"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000143175526611","author":"","university":"","source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html","reference":false,"similarScore":222.54498,"teacher":"","textWithDynamicClass":"练子集建立个体学习器,最后将其组合为整体。代表算法是 RF,<em class='similar 47S93I6' onmouseover=\"highlightSetter('47S93I6',false)\" onmouseout=\"highlightSetter('47S93I6',true)\">其是在 Bagging 基础上,</em><em class='similar 47S93I7' onmouseover=\"highlightSetter('47S93I7',false)\" onmouseout=\"highlightSetter('47S93I7',true)\">以决策树为基学习器,</em><em class='similar 47S93I8' onmouseover=\"highlightSetter('47S93I8',false)\" onmouseout=\"highlightSetter('47S93I8',true)\">进一步在训练过程中引入了随机特征的选择,</em><em class='similar 47S93I9' onmouseover=\"highlightSetter('47S93I9',false)\" onmouseout=\"highlightSetter('47S93I9',true)\">即在每个节点分裂过程中的特征随机选择,</em>泛化能力强且实现简单[26]。而 Treebag ","datatype":"webpage","clcs":[],"similarityPercentage":"41.2%","self":false,"text":"练子集建立个体学习器,最后将其组合为整体。代表算法是 RF,<em class='similar'>其是在 Bagging 基础上,</em><em class='similar'>以决策树为基学习器,</em><em class='similar'>进一步在训练过程中引入了随机特征的选择,</em><em class='similar'>即在每个节点分裂过程中的特征随机选择,</em>泛化能力强且实现简单[26]。而 Treebag "},{"profession":false,"keywords":[],"year":"","docid":"9000082132296211","author":"","university":"","source":"网页","title":"集成学习（Ensemble Learning）","url":"https://blog.csdn.net/qq_32690999/article/details/78759463","reference":false,"similarScore":197.23485,"teacher":"","textWithDynamicClass":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar 47S94I8' onmouseover=\"highlightSetter('47S94I8',false)\" onmouseout=\"highlightSetter('47S94I8',true)\">其在以决策树作为基学习器构建Bagging集成的基础上,</em><em class='similar 47S94I9' onmouseover=\"highlightSetter('47S94I9',false)\" onmouseout=\"highlightSetter('47S94I9',true)\">进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的","datatype":"webpage","clcs":[],"similarityPercentage":"45.9%","self":false,"text":"m Forest,简称RF)是Bagging的一个扩展变体。<em class='similar'>其在以决策树作为基学习器构建Bagging集成的基础上,</em><em class='similar'>进一步在决策树的训练过程中引入了随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的"},{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合���验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":76.81818,"teacher":"","textWithDynamicClass":"<em class='similar 47S95I0' onmouseover=\"highlightSetter('47S95I0',false)\" onmouseout=\"highlightSetter('47S95I0',true)\">进一步在决策树的训练过程中引入随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的","datatype":"webpage","clcs":[],"similarityPercentage":"36.6%","self":false,"text":"<em class='similar'>进一步在决策树的训练过程中引入随机属性选择。</em>具体来说,传统决策树在选择划分属性时是在当前结点的"}],"textWithDynamicClass":"是基于Bagging的算法思路扩展而来,其本质也是一种由多个弱学习器所集成的强学习器。<em class='similar T46I0' onmouseover=\"highlightSetter('T46I0',false)\" onmouseout=\"highlightSetter('T46I0',true)\">RF在通过在训练过程中引入一种随机特征选择机制,</em><em class='similar T46I1' onmouseover=\"highlightSetter('T46I1',false)\" onmouseout=\"highlightSetter('T46I1',true)\">并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>具体来说,传统决策树在选择划分属性时是在当前树节点的特征集合(假定有个特征)中选择一个最优属性;","replaceMap":{},"similar_word_count":55,"text":"是基于Bagging的算法思路扩展而来,其本质也是一种由多个弱学习器所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入一种随机特征选择机制,</em><em class='similar'>并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em>具体来说,传统决策树在选择划分属性时是在当前树节点的特征集合(假定有个特征)中选择一个最优属性;","suggest":{"synonyms":[],"keyword":["rf","训练过程","随机特征","选择机制","bagging","决策树","学习器","得来"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000160699485011","author":"","university":"","source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar 48S96I1' onmouseover=\"highlightSetter('48S96I1',false)\" onmouseout=\"highlightSetter('48S96I1',true)\">具体来说,</em><em class='similar 48S96I2' onmouseover=\"highlightSetter('48S96I2',false)\" onmouseout=\"highlightSetter('48S96I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar 48S96I4' onmouseover=\"highlightSetter('48S96I4',false)\" onmouseout=\"highlightSetter('48S96I4',true)\">中选择一个最优属性,</em><em class='similar 48S96I5' onmouseover=\"highlightSetter('48S96I5',false)\" onmouseout=\"highlightSetter('48S96I5',true)\">,而在RF中,</em><em class='similar 48S96I6' onmouseover=\"highlightSetter('48S96I6',false)\" onmouseout=\"highlightSetter('48S96I6',true)\">对基决策树的每个结点,</em><em class='similar 48S96I7' onmouseover=\"highlightSetter('48S96I7',false)\" onmouseout=\"highlightSetter('48S96I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S96I8' onmouseover=\"highlightSetter('48S96I8',false)\" onmouseout=\"highlightSetter('48S96I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"84.8%","self":false,"text":"进一步在决策树的训练过程中引入随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar'>中选择一个最优属性,</em><em class='similar'>,而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000055409152011","author":"","university":"","source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583","reference":false,"similarScore":831.1846,"teacher":"","textWithDynamicClass":"过程中引入了随机属性选择。<em class='similar 48S98I1' onmouseover=\"highlightSetter('48S98I1',false)\" onmouseout=\"highlightSetter('48S98I1',true)\">具体来说,</em><em class='similar 48S98I2' onmouseover=\"highlightSetter('48S98I2',false)\" onmouseout=\"highlightSetter('48S98I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar 48S98I4' onmouseover=\"highlightSetter('48S98I4',false)\" onmouseout=\"highlightSetter('48S98I4',true)\">中选择一个最优属性;</em><em class='similar 48S98I5' onmouseover=\"highlightSetter('48S98I5',false)\" onmouseout=\"highlightSetter('48S98I5',true)\">而在RF中,</em><em class='similar 48S98I6' onmouseover=\"highlightSetter('48S98I6',false)\" onmouseout=\"highlightSetter('48S98I6',true)\">对基决策树的每个结点,</em><em class='similar 48S98I7' onmouseover=\"highlightSetter('48S98I7',false)\" onmouseout=\"highlightSetter('48S98I7',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S98I8' onmouseover=\"highlightSetter('48S98I8',false)\" onmouseout=\"highlightSetter('48S98I8',true)\">然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、","datatype":"webpage","clcs":[],"similarityPercentage":"84.8%","self":false,"text":"过程中引入了随机属性选择。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分,</em>这里的参数k控制了随机性的引入程度。随机森林简单、"},{"profession":false,"keywords":[],"year":"","docid":"9000137225786211","author":"","university":"","source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551","reference":false,"similarScore":776.78455,"teacher":"","textWithDynamicClass":"多样性不仅来自样本扰动,还来自属性扰动。<em class='similar 48S97I2' onmouseover=\"highlightSetter('48S97I2',false)\" onmouseout=\"highlightSetter('48S97I2',true)\">具体来说:</em><em class='similar 48S97I3' onmouseover=\"highlightSetter('48S97I3',false)\" onmouseout=\"highlightSetter('48S97I3',true)\">传统的决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar 48S97I5' onmouseover=\"highlightSetter('48S97I5',false)\" onmouseout=\"highlightSetter('48S97I5',true)\">中选择一个最优秀的属性;</em><em class='similar 48S97I6' onmouseover=\"highlightSetter('48S97I6',false)\" onmouseout=\"highlightSetter('48S97I6',true)\">而在RF中,</em><em class='similar 48S97I7' onmouseover=\"highlightSetter('48S97I7',false)\" onmouseout=\"highlightSetter('48S97I7',true)\">对基决策树的每一个结点,</em><em class='similar 48S97I8' onmouseover=\"highlightSetter('48S97I8',false)\" onmouseout=\"highlightSetter('48S97I8',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S97I9' onmouseover=\"highlightSetter('48S97I9',false)\" onmouseout=\"highlightSetter('48S97I9',true)\">然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则","datatype":"webpage","clcs":[],"similarityPercentage":"78.5%","self":false,"text":"多样性不仅来自样本扰动,还来自属性扰动。<em class='similar'>具体来说:</em><em class='similar'>传统的决策树在选择划分属性时是在当前结点的属性集合</em>(假定有d个属性)<em class='similar'>中选择一个最优秀的属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每一个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再在这个子集中选择一个最优的属性。</em>这里的参数k控制了随机性的引入程度:若令k=d,则"},{"profession":false,"keywords":[],"year":"","docid":"9000139286381511","author":"","university":"","source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172","reference":false,"similarScore":741.1846,"teacher":"","textWithDynamicClass":"属性集合也引入了随机属性选择.<em class='similar 48S99I1' onmouseover=\"highlightSetter('48S99I1',false)\" onmouseout=\"highlightSetter('48S99I1',true)\">具体来说,</em><em class='similar 48S99I2' onmouseover=\"highlightSetter('48S99I2',false)\" onmouseout=\"highlightSetter('48S99I2',true)\">传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em><em class='similar 48S99I3' onmouseover=\"highlightSetter('48S99I3',false)\" onmouseout=\"highlightSetter('48S99I3',true)\">而在RF中,</em><em class='similar 48S99I4' onmouseover=\"highlightSetter('48S99I4',false)\" onmouseout=\"highlightSetter('48S99I4',true)\">对基决策树的每个结点,</em><em class='similar 48S99I5' onmouseover=\"highlightSetter('48S99I5',false)\" onmouseout=\"highlightSetter('48S99I5',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S99I6' onmouseover=\"highlightSetter('48S99I6',false)\" onmouseout=\"highlightSetter('48S99I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>    随机森林简单、容易实现、计算开销小.效果能","datatype":"webpage","clcs":[],"similarityPercentage":"66.2%","self":false,"text":"属性集合也引入了随机属性选择.<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前结点的属性集合中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>    随机森林简单、容易实现、计算开销小.效果能"},{"profession":false,"keywords":[],"year":"","docid":"9000139553504411","author":"","university":"","source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247","reference":false,"similarScore":524.78455,"teacher":"","textWithDynamicClass":"g集成的基础上,进一步在决策树的训练过程中引入随机属性选择。<em class='similar 48S101I3' onmouseover=\"highlightSetter('48S101I3',false)\" onmouseout=\"highlightSetter('48S101I3',true)\">而在RF 中,</em><em class='similar 48S101I4' onmouseover=\"highlightSetter('48S101I4',false)\" onmouseout=\"highlightSetter('48S101I4',true)\">对基决策树的每个结点,</em><em class='similar 48S101I5' onmouseover=\"highlightSetter('48S101I5',false)\" onmouseout=\"highlightSetter('48S101I5',true)\">先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar 48S101I6' onmouseover=\"highlightSetter('48S101I6',false)\" onmouseout=\"highlightSetter('48S101I6',true)\">然后再从这个子集中选择一个最优属性用于划分.</em>这里的参数k 控制了随机性的引入程度;若令 k =","datatype":"webpage","clcs":[],"similarityPercentage":"86.0%","self":false,"text":"g集成的基础上,进一步在决策树的训练过程中引入随机属性选择。<em class='similar'>而在RF 中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含 k个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优属性用于划分.</em>这里的参数k 控制了随机性的引入程度;若令 k ="},{"profession":false,"keywords":[],"year":"","docid":"9000082030187211","author":"","university":"","source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612","reference":false,"similarScore":484.78455,"teacher":"","textWithDynamicClass":"步在决策树的训练过程中引入随机属性选择。 RF在划分属性时,<em class='similar 48S100I2' onmouseover=\"highlightSetter('48S100I2',false)\" onmouseout=\"highlightSetter('48S100I2',true)\">对基决策树中的每个结点,</em><em class='similar 48S100I3' onmouseover=\"highlightSetter('48S100I3',false)\" onmouseout=\"highlightSetter('48S100I3',true)\">先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar 48S100I4' onmouseover=\"highlightSetter('48S100I4',false)\" onmouseout=\"highlightSetter('48S100I4',true)\">然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学","datatype":"webpage","clcs":[],"similarityPercentage":"83.6%","self":false,"text":"步在决策树的训练过程中引入随机属性选择。 RF在划分属性时,<em class='similar'>对基决策树中的每个结点,</em><em class='similar'>先从该结点的属性集合中随机选择一个包含k个属性的子集,</em><em class='similar'>然后从这个子集中选择一个最优的属性用于划分,</em>推荐k=log2d 优点:不容易过拟合 RF中基学"}],"textWithDynamicClass":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar T47I0' onmouseover=\"highlightSetter('T47I0',false)\" onmouseout=\"highlightSetter('T47I0',true)\">具体来说,</em><em class='similar T47I1' onmouseover=\"highlightSetter('T47I1',false)\" onmouseout=\"highlightSetter('T47I1',true)\">传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar T47I3' onmouseover=\"highlightSetter('T47I3',false)\" onmouseout=\"highlightSetter('T47I3',true)\">中选择一个最优属性;</em><em class='similar T47I4' onmouseover=\"highlightSetter('T47I4',false)\" onmouseout=\"highlightSetter('T47I4',true)\">而在RF中,</em><em class='similar T47I5' onmouseover=\"highlightSetter('T47I5',false)\" onmouseout=\"highlightSetter('T47I5',true)\">对基决策树的每个结点,</em><em class='similar T47I6' onmouseover=\"highlightSetter('T47I6',false)\" onmouseout=\"highlightSetter('T47I6',true)\">先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar T47I7' onmouseover=\"highlightSetter('T47I7',false)\" onmouseout=\"highlightSetter('T47I7',true)\">然后再从这个子集中选择一个最优特征用于下一步的划分</em>[30]。","replaceMap":{"先从该结点的属性的集合中随机选择一个包含个属性的子集,":"先从该结点的属性的集合中随机选择一个包含 个属性的子集,","(假定有个特征)":"(假定有 个特征)"},"similar_word_count":109,"text":"并以Bagging使用决策树作为基本弱学习器的基础上构建得来。<em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优特征用于下一步的划分</em>[30]。","suggest":{"synonyms":[{"synonyms":["假设"],"keyword":"假定"}],"keyword":["决策树","树节点","假定","最优","rf","结点","随机选择","子集","30"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000456857311","author":"张宇","university":"","source":"大学生论文联合库","title":"遥感影像在地球覆盖分类中的应用","url":"","reference":false,"similarScore":142.76924,"teacher":"老师","textWithDynamicClass":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar 50S103I6' onmouseover=\"highlightSetter('50S103I6',false)\" onmouseout=\"highlightSetter('50S103I6',true)\">泛化能力好,</em>鲁棒性强,(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar 50S103I12' onmouseover=\"highlightSetter('50S103I12',false)\" onmouseout=\"highlightSetter('50S103I12',true)\">研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar 50S103I13' onmouseover=\"highlightSetter('50S103I13',false)\" onmouseout=\"highlightSetter('50S103I13',true)\">并通过对该方法检测的云影区块进行形态学变换、</em>","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"29.7%","self":false,"text":"林是目前流行的机器学习算法之一,其分类精度优异,训练速度快,<em class='similar'>泛化能力好,</em>鲁棒性强,(Cutler等,2007)在遥感影像处理领域被大量应用。本文以实现遥感影像中云影信息的自动检测为目的,<em class='similar'>研究了基于随机森林的遥感影像云影信息检测方法,</em><em class='similar'>并通过对该方法检测的云影区块进行形态学变换、</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000131811984111","author":"","university":"","source":"网页","title":"            模型说明_文本分类_详细教程_NLP自学习平台_自然语言处理-阿里云    ","url":"https://help.aliyun.com/document_detail/162446.html","reference":false,"similarScore":57.600002,"teacher":"","textWithDynamicClass":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar 50S105I8' onmouseover=\"highlightSetter('50S105I8',false)\" onmouseout=\"highlightSetter('50S105I8',true)\">随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院","datatype":"webpage","clcs":[],"similarityPercentage":"44.3%","self":false,"text":"的场景,底层集成了朴素贝叶斯、FastText、支持向量机、<em class='similar'>随机森林等传统机器学习模型,</em>优点是训练速度快BERT 小样本分类阿里巴巴达摩院"}],"textWithDynamicClass":"<em class='similar T49I0' onmouseover=\"highlightSetter('T49I0',false)\" onmouseout=\"highlightSetter('T49I0',true)\">通过对随机森林算法进行研究,</em><em class='similar T49I1' onmouseover=\"highlightSetter('T49I1',false)\" onmouseout=\"highlightSetter('T49I1',true)\">发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar T49I3' onmouseover=\"highlightSetter('T49I3',false)\" onmouseout=\"highlightSetter('T49I3',true)\">泛化能力强、</em>鲁棒性强等多种优势,可以非常有效的避免模型在学习过程中过拟合的现象出现,适用于拥有高维度的样本数据的处理。","replaceMap":{},"similar_word_count":46,"text":"<em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar'>泛化能力强、</em>鲁棒性强等多种优势,可以非常有效的避免模型在学习过程中过拟合的现象出现,适用于拥有高维度的样本数据的处理。","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["随机森林算法","随机森林","机器学习模型","训练","速度快","效果好","泛化能力","鲁棒性强","学习过程","过拟合","高维度","数据的处理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000106062608311","author":"","university":"","source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html","reference":false,"similarScore":118.05556,"teacher":"","textWithDynamicClass":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar 51S106I11' onmouseover=\"highlightSetter('51S106I11',false)\" onmouseout=\"highlightSetter('51S106I11',true)\">�5�3即随机森林的泛化误差.</em><em class='similar 51S106I12' onmouseover=\"highlightSetter('51S106I12',false)\" onmouseout=\"highlightSetter('51S106I12',true)\">每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�","datatype":"webpage","clcs":[],"similarityPercentage":"43.7%","self":false,"text":"中�5�3式(5)中右边记为 PE �6�5(forest)<em class='similar'>�5�3即随机森林的泛化误差.</em><em class='similar'>每颗决策树的平均泛化误差定义为:</em>PE �6�5(tree)= E θ E X�5�"}],"textWithDynamicClass":"<em class='similar T50I0' onmouseover=\"highlightSetter('T50I0',false)\" onmouseout=\"highlightSetter('T50I0',true)\">式(2-5)</em><em class='similar T50I1' onmouseover=\"highlightSetter('T50I1',false)\" onmouseout=\"highlightSetter('T50I1',true)\">右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar T50I3' onmouseover=\"highlightSetter('T50I3',false)\" onmouseout=\"highlightSetter('T50I3',true)\">则表示一课决策树的平均泛化误差即</em>(2-6)","replaceMap":{"则表示一课决策树的平均泛化误差即":" 则表示一课决策树的平均泛化误差即","将其记为。":"将其记为 。","▲(2-6)":"\n\t  \t(2-6)"},"similar_word_count":38,"text":"<em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar'>则表示一课决策树的平均泛化误差即</em>(2-6)","suggest":{"synonyms":[],"keyword":["右侧","随机森林","泛化误差","决策树"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200005292737611","author":"张冰","university":"","source":"大学生论文联合库","title":"基于bp神经网络的短期负荷预测方法","url":"","reference":false,"similarScore":121.83334,"teacher":"","textWithDynamicClass":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar 52S108I13' onmouseover=\"highlightSetter('52S108I13',false)\" onmouseout=\"highlightSetter('52S108I13',true)\">;是残差与之间的加权相关系数,</em><em class='similar 52S108I14' onmouseover=\"highlightSetter('52S108I14',false)\" onmouseout=\"highlightSetter('52S108I14',true)\">与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"60.9%","self":false,"text":"生。定理2.3.4如果对所有的,都有,则:(2-42)式中,<em class='similar'>;是残差与之间的加权相关系数,</em><em class='similar'>与是相互独立的。</em>定理2.2.4说明随机森泛化误差比树的泛化误差降低"}],"textWithDynamicClass":"式(2-7)<em class='similar T51I1' onmouseover=\"highlightSetter('T51I1',false)\" onmouseout=\"highlightSetter('T51I1',true)\">中是在与相互独立的情况下,</em><em class='similar T51I2' onmouseover=\"highlightSetter('T51I2',false)\" onmouseout=\"highlightSetter('T51I2',true)\">残差和的加权相关系数。</em>","replaceMap":{"残差和的加权相关系数。":"残差 和 的加权相关系数。","中是在与相互独立的情况下,":"中 是在 与 相互独立的情况下,"},"similar_word_count":24,"text":"式(2-7)<em class='similar'>中是在与相互独立的情况下,</em><em class='similar'>残差和的加权相关系数。</em>","suggest":{"synonyms":[],"keyword":["相互独立","残差","加权","相关系数"]}},{"sources":[{"profession":false,"keywords":[],"year":"2014","docid":"1300000198113911","author":"崔东文；金波","university":"云南省文山州水务局","source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":"","reference":false,"similarScore":299.0189,"teacher":"","textWithDynamicClass":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar 53S109I15' onmouseover=\"highlightSetter('53S109I15',false)\" onmouseout=\"highlightSetter('53S109I15',true)\">定理2给出了精确回归森林的条件:</em><em class='similar 53S109I16' onmouseover=\"highlightSetter('53S109I16',false)\" onmouseout=\"highlightSetter('53S109I16',true)\">残差间的低相关性和低的错误决策树。</em><em class='similar 53S109I17' onmouseover=\"highlightSetter('53S109I17',false)\" onmouseout=\"highlightSetter('53S109I17',true)\">随机森林通过加权相关系数?</em><em class='similar 53S109I18' onmouseover=\"highlightSetter('53S109I18',false)\" onmouseout=\"highlightSetter('53S109I18',true)\">降低决策树的平均误差。</em><em class='similar 53S109I19' onmouseover=\"highlightSetter('53S109I19',false)\" onmouseout=\"highlightSetter('53S109I19',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"chinaMeeting","clcs":["TV213.4"],"similarityPercentage":"38.3%","self":false,"text":"&#39;,(?的加权相关系数,且?与?&#39;相互独立。<em class='similar'>定理2给出了精确回归森林的条件:</em><em class='similar'>残差间的低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数?</em><em class='similar'>降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"},{"profession":false,"keywords":[],"year":"","docid":"9000179731028611","author":"","university":"","source":"网页","title":"随机森林回归模型及其在污水排放量预测中的应用","url":"https://www.docin.com/p%2D1408710266.html","reference":false,"similarScore":213.83331,"teacher":"","textWithDynamicClass":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar 53S111I4' onmouseover=\"highlightSetter('53S111I4',false)\" onmouseout=\"highlightSetter('53S111I4',true)\">定理低相关性和低的错误决策树。</em><em class='similar 53S111I5' onmouseover=\"highlightSetter('53S111I5',false)\" onmouseout=\"highlightSetter('53S111I5',true)\">随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar 53S111I6' onmouseover=\"highlightSetter('53S111I6',false)\" onmouseout=\"highlightSetter('53S111I6',true)\">随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每","datatype":"webpage","clcs":[],"similarityPercentage":"35.1%","self":false,"text":"具有较好的预测效果和通用 RFR在回归预测中的应用提供参考。<em class='similar'>定理低相关性和低的错误决策树。</em><em class='similar'>随机森林通过加权相关系数降低决策树的平均误差。</em><em class='similar'>随机森林</em>预测可以被看作一个适应性邻近分类和回归过程,对于每"},{"profession":false,"keywords":[],"year":"","docid":"9000113620987811","author":"csdn","university":"","source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770","reference":false,"similarScore":112.499985,"teacher":"","textWithDynamicClass":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar 53S110I15' onmouseover=\"highlightSetter('53S110I15',false)\" onmouseout=\"highlightSetter('53S110I15',true)\">指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{","datatype":"webpage","clcs":[],"similarityPercentage":"37.5%","self":false,"text":"Θ​sd(Θ))2⩽ρˉ​PE∗(tree)定理(11.2)<em class='similar'>指出了精确回归森林的要求——残差之间的低相关系数以及低误差决策树。</em>随机森林减少树木的平均误差受限于系数ρˉ\\bar{"}],"textWithDynamicClass":"<em class='similar T52I0' onmouseover=\"highlightSetter('T52I0',false)\" onmouseout=\"highlightSetter('T52I0',true)\">上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar T52I1' onmouseover=\"highlightSetter('T52I1',false)\" onmouseout=\"highlightSetter('T52I1',true)\">残差间的相关系数低以及错误决策树数目较少。</em><em class='similar T52I2' onmouseover=\"highlightSetter('T52I2',false)\" onmouseout=\"highlightSetter('T52I2',true)\">为降低决策树的平均误差,</em><em class='similar T52I3' onmouseover=\"highlightSetter('T52I3',false)\" onmouseout=\"highlightSetter('T52I3',true)\">随机森林回归选择对相关系数进行加权处理。</em><em class='similar T52I4' onmouseover=\"highlightSetter('T52I4',false)\" onmouseout=\"highlightSetter('T52I4',true)\">随机森林</em>的具体算法步��伪代码可概括为下图2.24所示。","replaceMap":{"随机森林回归选择对相关系数进行加权处理。":"随机森林回归选择对相关系数 进行加权处理。"},"similar_word_count":104,"text":"<em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em><em class='similar'>随机森林回归选择对相关系数进行加权处理。</em><em class='similar'>随机森林</em>的具体算法步骤伪代码可概括为下图2.24所示。","suggest":{"synonyms":[{"synonyms":["精准"],"keyword":"精确"},{"synonyms":["数量"],"keyword":"数目"},{"synonyms":["归纳"],"keyword":"概括"}],"keyword":["定理","和定理","给定","随机森林","精确","残差","相关系数","决策树","数目","平均误差","回归","加权处理","算法步骤","伪代码","概括","下图","2.24所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":333.59995,"teacher":"","textWithDynamicClass":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar 54S112I7' onmouseover=\"highlightSetter('54S112I7',false)\" onmouseout=\"highlightSetter('54S112I7',true)\">人工神经网络是深度学习的核心。</em>它们用途广泛,功能强大且可扩展,<em class='similar 54S112I10' onmouseover=\"highlightSetter('54S112I10',false)\" onmouseout=\"highlightSetter('54S112I10',true)\">使其非常适合处理大型和高度复杂的机器学习任务,</em>例如对数十亿张图像进行分类(例如GoogleIma","datatype":"webpage","clcs":[],"similarityPercentage":"92.7%","self":false,"text":"ot;神经元&quot;),以免我们将创造力限制在生物学上。<em class='similar'>人工神经网络是深度学习的核心。</em>它们用途广泛,功能强大且可扩展,<em class='similar'>使其非常适合处理大型和高度复杂的机器学习任务,</em>例如对数十亿张图像进行分类(例如GoogleIma"}],"textWithDynamicClass":"<em class='similar T53I0' onmouseover=\"highlightSetter('T53I0',false)\" onmouseout=\"highlightSetter('T53I0',true)\">深度学习的核心是人工神经网络,</em>其在当代用途广泛、功能强大并具有良好的扩展性,<em class='similar T53I3' onmouseover=\"highlightSetter('T53I3',false)\" onmouseout=\"highlightSetter('T53I3',true)\">使得其非常适合处理大型和具有高度复杂的机器学习任务,</em>例如图像识别分类、或者语音识别等[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。","replaceMap":{},"similar_word_count":41,"text":"<em class='similar'>深度学习的核心是人工神经网络,</em>其在当代用途广泛、功能强大并具有良好的扩展性,<em class='similar'>使得其非常适合处理大型和具有高度复杂的机器学习任务,</em>例如图像识别分类、或者语音识别等[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。","suggest":{"synonyms":[{"synonyms":["今世"],"keyword":"当代"},{"synonyms":["用处"],"keyword":"用途"},{"synonyms":["机械"],"keyword":"机器"}],"keyword":["深度学习","人工神经网络","当代","用途","功能强大","扩展性","机器","学习任务","识别分类","语音识别","44","感知器","计算原理","多层感知机"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人���神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":126.60869,"teacher":"","textWithDynamicClass":"起来以计算复杂的逻辑表达式。<em class='similar 55S113I1' onmouseover=\"highlightSetter('55S113I1',false)\" onmouseout=\"highlightSetter('55S113I1',true)\">03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar 55S113I5' onmouseover=\"highlightSetter('55S113I5',false)\" onmouseout=\"highlightSetter('55S113I5',true)\">,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入","datatype":"webpage","clcs":[],"similarityPercentage":"50.6%","self":false,"text":"起来以计算复杂的逻辑表达式。<em class='similar'>03感知器感知器是最简单的ANN架构之一,</em>由FrankRosenblatt于1957年发明。它基于稍微不同的人工神经元(见图4)<em class='similar'>,称为阈值逻辑单元</em>(TLU),有时也称为线性阈值单元(LTU)。输入"}],"textWithDynamicClass":"<em class='similar T54I0' onmouseover=\"highlightSetter('T54I0',false)\" onmouseout=\"highlightSetter('T54I0',true)\">感知器架构是最为简单的神经网络基础结构模型之一。</em>其结构如图2.25所示,<em class='similar T54I2' onmouseover=\"highlightSetter('T54I2',false)\" onmouseout=\"highlightSetter('T54I2',true)\">图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar T54I4' onmouseover=\"highlightSetter('T54I4',false)\" onmouseout=\"highlightSetter('T54I4',true)\">也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,而不是二进制的0/1值,并且每个输入连接都有对应的相关联的权重值[44]。TLU来计算输入的加权和,","replaceMap":{},"similar_word_count":51,"text":"<em class='similar'>感知器架构是最为简单的神经网络基础结构模型之一。</em>其结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar'>也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,而不是二进制的0/1值,并且每个输入连接都有对应的相关联的权重值[44]。TLU来计算输入的加权和,","suggest":{"synonyms":[],"keyword":["感知器","架构","神经","网络基础","结构模型","2.25所","神经元结构","阈值","逻辑单元","tlu","逻辑值","ltu","神经元","io","数字信号"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":355.6842,"teacher":"","textWithDynamicClass":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar 56S114I8' onmouseover=\"highlightSetter('56S114I8',false)\" onmouseout=\"highlightSetter('56S114I8',true)\">(而不是二进制开/关值)</em><em class='similar 56S114I9' onmouseover=\"highlightSetter('56S114I9',false)\" onmouseout=\"highlightSetter('56S114I9',true)\">,并且每个输入连接都与权重相关联。</em><em class='similar 56S114I10' onmouseover=\"highlightSetter('56S114I10',false)\" onmouseout=\"highlightSetter('56S114I10',true)\">TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar 56S114I12' onmouseover=\"highlightSetter('56S114I12',false)\" onmouseout=\"highlightSetter('56S114I12',true)\">,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar 56S114I20' onmouseover=\"highlightSetter('56S114I20',false)\" onmouseout=\"highlightSetter('56S114I20',true)\">计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav","datatype":"webpage","clcs":[],"similarityPercentage":"58.3%","self":false,"text":"TLU),有时也称为线性阈值单元(LTU)。输入和输出是数字<em class='similar'>(而不是二进制开/关值)</em><em class='similar'>,并且每个输入连接都与权重相关联。</em><em class='similar'>TLU计算其输入的加权总和</em>(z=w1x1+w2x2++wnxn=xTw)<em class='similar'>,然后将阶跃函数应用于该和并输出结果:</em>hw(x)=step(z),其中z=xTw。图4.阈值逻辑单元:人工神经元,<em class='similar'>计算其输入的加权和,</em>然后应用阶跃函数感知器中最常用的阶跃函数是Heav"}],"textWithDynamicClass":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar T55I0' onmouseover=\"highlightSetter('T55I0',false)\" onmouseout=\"highlightSetter('T55I0',true)\">而不是二进制的0/1值,</em><em class='similar T55I1' onmouseover=\"highlightSetter('T55I1',false)\" onmouseout=\"highlightSetter('T55I1',true)\">并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar T55I3' onmouseover=\"highlightSetter('T55I3',false)\" onmouseout=\"highlightSetter('T55I3',true)\">TLU来计算输入的加权和,</em><em class='similar T55I4' onmouseover=\"highlightSetter('T55I4',false)\" onmouseout=\"highlightSetter('T55I4',true)\">其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。","replaceMap":{},"similar_word_count":65,"text":"TLU),也称为阈值逻辑值单元(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。","suggest":{"synonyms":[],"keyword":["二进制","相关联","权重值","44","tlu","加权和","阶跃函数","学习结果"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000131871609811","author":"","university":"","source":"网页","title":"人工神经网络165 样本 Xi Yi 要求设计一个神经网络 用...","url":"http://www.docin.com/p%2D969285621%2Df2.html","reference":false,"similarScore":208.33331,"teacher":"","textWithDynamicClass":"机的结构图该多层感知机有两个用于处理的隐层节点及一个输出层。<em class='similar 58S118I2' onmouseover=\"highlightSetter('58S118I2',false)\" onmouseout=\"highlightSetter('58S118I2',true)\">这个神经网络是全连接的即神经网络中任何一层的神经元都和上一层的所有节点神经元相连接。</em>神经网络中数据流的方向是前向的从左到右一层层地流动","datatype":"webpage","clcs":[],"similarityPercentage":"50.8%","self":false,"text":"机的结构图该多层感知机有两个用于处理的隐层节点及一个输出层。<em class='similar'>这个神经网络是全连接的即神经网络中任何一层的神经元都和上一层的所有节点神经元相连接。</em>神经网络中数据流的方向是前向的从左到右一层层地流动"},{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":198.78787,"teacher":"","textWithDynamicClass":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar 58S116I7' onmouseover=\"highlightSetter('58S116I7',false)\" onmouseout=\"highlightSetter('58S116I7',true)\">当一层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,该层称为全连接层或密集层。感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar 58S116I13' onmouseover=\"highlightSetter('58S116I13',false)\" onmouseout=\"highlightSetter('58S116I13',true)\">所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通","datatype":"webpage","clcs":[],"similarityPercentage":"55.2%","self":false,"text":"法)。感知器仅由单层TLU组成,每个TLU连接到所有的输入。<em class='similar'>当一层中的所有神经元都连接到上一层中的每个神经元</em>(即其输入神经元)时,该层称为全连接层或密集层。感知器的输入被送到称为输入神经元的特殊直通神经元:它们输出被送入的任何输入。<em class='similar'>所有输入神经元形成输入层。</em>此外,通常会添加一个额外的偏置特征(x0=1):通"},{"profession":false,"keywords":[],"year":"","docid":"9000132611414211","author":"","university":"","source":"网页","title":"基于深度学习的航拍车流实时检测与追踪方法研究 - 道...","url":"http://www.doc88.com/p%2D9983830032983.html","reference":false,"similarScore":115.23812,"teacher":"","textWithDynamicClass":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar 58S119I8' onmouseover=\"highlightSetter('58S119I8',false)\" onmouseout=\"highlightSetter('58S119I8',true)\">全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将","datatype":"webpage","clcs":[],"similarityPercentage":"36.0%","self":false,"text":"层,该层的作用主要是使得某些局部特征也能具有全局的特征性质,<em class='similar'>全连接层的所有神经元节点会和前一层的卷积层的所有神经元输出相连接,</em>因此全连接层的计算量会比较大,全连接层输出的结果将"},{"profession":false,"keywords":[],"year":"2018","docid":"1000031940330811","author":"杨佶","university":"","source":"信息技术与信息化","title":"基于卷积神经网络的手写汉字识别研究","url":"","reference":false,"similarScore":96.33332,"teacher":"","textWithDynamicClass":"大降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar 58S117I6' onmouseover=\"highlightSetter('58S117I6',false)\" onmouseout=\"highlightSetter('58S117I6',true)\">每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连","datatype":"journal","clcs":[],"similarityPercentage":"40.1%","self":false,"text":"���降低卷积运算时间。全连接层和一般的神经网络的结构是一样的,<em class='similar'>每个神经元节点与前一层所有的神经全部节点相互连接,</em>提取出图片的特征图,将特征图中的所有神经元变成全连"}],"textWithDynamicClass":"感知器是一层阈值逻辑单元单元所构成的,<em class='similar T57I1' onmouseover=\"highlightSetter('T57I1',false)\" onmouseout=\"highlightSetter('T57I1',true)\">每个阈值逻辑单元单元与全部的Input信号相连接。</em><em class='similar T57I2' onmouseover=\"highlightSetter('T57I2',false)\" onmouseout=\"highlightSetter('T57I2',true)\">当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,</em><em class='similar T57I3' onmouseover=\"highlightSetter('T57I3',false)\" onmouseout=\"highlightSetter('T57I3',true)\">通常将这一层的全部神经元节点称为全连接层。</em><em class='similar T57I4' onmouseover=\"highlightSetter('T57I4',false)\" onmouseout=\"highlightSetter('T57I4',true)\">所有与输入信号相接的全部神经元形成输入神经层,</em>用以与感知器的输入数据互联。同时,每一个神经元会特别增加一个具有特殊意义的偏置特征,并通过特殊的神经元来保证其输出始终为1。具有,作为输入的感知器如图2.26所示。","replaceMap":{"每一个神经元会特别增加一个具有特殊意义的偏置特征,":"每一个神经元会特别增加一个具有特殊意义的偏置特征 ,"},"similar_word_count":100,"text":"感知器是一层阈值逻辑单元单元所构成的,<em class='similar'>每个阈值逻辑单元单元与全部的Input信号相连接。</em><em class='similar'>当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,</em><em class='similar'>通常将这一层的全部神经元节点称为全连接层。</em><em class='similar'>所有与输入信号相接的全部神经元形成输入神经层,</em>用以与感知器的输入数据互联。同时,每一个神经元会特别增加一个具有特殊意义的偏置特征,并通过特殊的神经元来保证其输出始终为1。具有,作为输入的感知器如图2.26所示。","suggest":{"synonyms":[{"synonyms":["连结"],"keyword":"相接"}],"keyword":["感知器","一层","阈值","逻辑单元","input","神经","神经元","相接","神经元节点","连接层","输入信号","用以","数据互联","特殊意义","偏置"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000015758038411","author":"","university":"","source":"网页","title":"《Scikit-Learn与TensorFlow机器学习实用指南》 第10章 人工神经网络 - 简书","url":"https://www.jianshu.com/p/fe0bf7a49a9f","reference":false,"similarScore":290.44885,"teacher":"","textWithDynamicClass":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar 59S120I4' onmouseover=\"highlightSetter('59S120I4',false)\" onmouseout=\"highlightSetter('59S120I4',true)\">Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar 59S120I8' onmouseover=\"highlightSetter('59S120I8',false)\" onmouseout=\"highlightSetter('59S120I8',true)\">这两个神经元之间的联系就会变得更强。</em>","datatype":"webpage","clcs":[],"similarityPercentage":"64.5%","self":false,"text":"个多输出分类器。图10-5感知器图那么感知器是如何训练的呢?<em class='similar'>Frank Rosenblatt 提出的感知器训练算法在很大程度上受到 Hebb 规则的启发。</em>在1949出版的《行为组织》一书中,Donald Hebb 提出,当一个生物神经元经常触发另一个神经元时,<em class='similar'>这两个神经元之间的联系就会变得更强。</em>"}],"textWithDynamicClass":"<em class='similar T58I0' onmouseover=\"highlightSetter('T58I0',false)\" onmouseout=\"highlightSetter('T58I0',true)\">关于感知器的训练算法,</em><em class='similar T58I1' onmouseover=\"highlightSetter('T58I1',false)\" onmouseout=\"highlightSetter('T58I1',true)\">其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar T58I3' onmouseover=\"highlightSetter('T58I3',false)\" onmouseout=\"highlightSetter('T58I3',true)\">这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。","replaceMap":{"其很大程度上受到规则的启发,":"其很大程度上受到 规则的启发,"},"similar_word_count":45,"text":"<em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。","suggest":{"synonyms":[{"synonyms":["引导"],"keyword":"启发"}],"keyword":["感知器","训练算法","启发","神经元","交互","互联关系","激活","其间","权重值"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":127.33745,"teacher":"","textWithDynamicClass":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar 60S121I6' onmouseover=\"highlightSetter('60S121I6',false)\" onmouseout=\"highlightSetter('60S121I6',true)\">感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。<em class='similar 60S121I8' onmouseover=\"highlightSetter('60S121I8',false)\" onmouseout=\"highlightSetter('60S121I8',true)\">对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的","datatype":"webpage","clcs":[],"similarityPercentage":"42.4%","self":false,"text":"错误;感知器学习规则加强了有助于减少错误的连接。更具体地说,<em class='similar'>感知器一次被送入一个训练实例,</em>并且针对每个实例进行预测。<em class='similar'>对于产生错误预测的每个输出神经元,</em>它会增强来自输入的连接权重,这些权重将有助于正确的"}],"textWithDynamicClass":"也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,<em class='similar T59I0' onmouseover=\"highlightSetter('T59I0',false)\" onmouseout=\"highlightSetter('T59I0',true)\">感知器每一次训练被送入一个训练样本,</em><em class='similar T59I1' onmouseover=\"highlightSetter('T59I1',false)\" onmouseout=\"highlightSetter('T59I1',true)\">同时每个训练样本进行预测。</em><em class='similar T59I2' onmouseover=\"highlightSetter('T59I2',false)\" onmouseout=\"highlightSetter('T59I2',true)\">从而对产生错误</em>预测的神经元的权重进行调整,从而增强来自输入的连接权重,这些神经元权重将有助于正确的预测,具体如公式(","replaceMap":{},"similar_word_count":38,"text":"也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em><em class='similar'>同时每个训练样本进行预测。</em><em class='similar'>从而对产生错误</em>预测的神经元的权重进行调整,从而增强来自输入的连接权重,这些神经元权重将有助于正确的预测,具体如公式(","suggest":{"synonyms":[{"synonyms":["练习"],"keyword":"训练"}],"keyword":["感知器","训练","送入","训练样本"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":198.70192,"teacher":"","textWithDynamicClass":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar 61S122I6' onmouseover=\"highlightSetter('61S122I6',false)\" onmouseout=\"highlightSetter('61S122I6',true)\">它会增强来自输入的连接权重,</em><em class='similar 61S122I7' onmouseover=\"highlightSetter('61S122I7',false)\" onmouseout=\"highlightSetter('61S122I7',true)\">这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更","datatype":"webpage","clcs":[],"similarityPercentage":"76.4%","self":false,"text":"并且针对每个实例进行预测。对于产生错误预测的每个输出神经元,<em class='similar'>它会增强来自输入的连接权重,</em><em class='similar'>这些权重将有助于正确的预测。</em>该规则如公式3所示。公式3.感知器学习规则(权重更"}],"textWithDynamicClass":"更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,<em class='similar T60I1' onmouseover=\"highlightSetter('T60I1',false)\" onmouseout=\"highlightSetter('T60I1',true)\">从而增强来自输入的连接权重,</em><em class='similar T60I2' onmouseover=\"highlightSetter('T60I2',false)\" onmouseout=\"highlightSetter('T60I2',true)\">这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。","replaceMap":{},"similar_word_count":31,"text":"更具体的说,感知器每一次训练被送入一个训练样本,同时每个训练样本进行预测。从而对产生错误预测的神经元的权重进行调整,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。","suggest":{"synonyms":[],"keyword":["神经元","权重","11"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000183161741911","author":"","university":"","source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1","reference":false,"similarScore":448.05078,"teacher":"","textWithDynamicClass":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar 62S123I6' onmouseover=\"highlightSetter('62S123I6',false)\" onmouseout=\"highlightSetter('62S123I6',true)\">输入层,</em><em class='similar 62S123I7' onmouseover=\"highlightSetter('62S123I7',false)\" onmouseout=\"highlightSetter('62S123I7',true)\">一层或多层TLU</em><em class='similar 62S123I8' onmouseover=\"highlightSetter('62S123I8',false)\" onmouseout=\"highlightSetter('62S123I8',true)\">(称为隐藏层)</em><em class='similar 62S123I9' onmouseover=\"highlightSetter('62S123I9',false)\" onmouseout=\"highlightSetter('62S123I9',true)\">和一个TLU的最后一层</em><em class='similar 62S123I10' onmouseover=\"highlightSetter('62S123I10',false)\" onmouseout=\"highlightSetter('62S123I10',true)\">(称为输出层)</em>组成(请参见图7)<em class='similar 62S123I13' onmouseover=\"highlightSetter('62S123I13',false)\" onmouseout=\"highlightSetter('62S123I13',true)\">。靠近输入层的层通常称为较低层,</em><em class='similar 62S123I14' onmouseover=\"highlightSetter('62S123I14',false)\" onmouseout=\"highlightSetter('62S123I14',true)\">靠近输出层的层通常称为较高层。</em><em class='similar 62S123I15' onmouseover=\"highlightSetter('62S123I15',false)\" onmouseout=\"highlightSetter('62S123I15',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 62S123I16' onmouseover=\"highlightSetter('62S123I16',false)\" onmouseout=\"highlightSetter('62S123I16',true)\">并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层","datatype":"webpage","clcs":[],"similarityPercentage":"53.3%","self":false,"text":"决该问题的MLP04多层感知器和反向传播MLP由一层(直通)<em class='similar'>输入层,</em><em class='similar'>一层或多层TLU</em><em class='similar'>(称为隐藏层)</em><em class='similar'>和一个TLU的最后一层</em><em class='similar'>(称为输出层)</em>组成(请参见图7)<em class='similar'>。靠近输入层的层通常称为较低层,</em><em class='similar'>靠近输出层的层通常称为较高层。</em><em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并完全连接到下一层。</em>图10-7.具有两个输入,有四个神经元的一个隐藏层"},{"profession":false,"keywords":[],"year":"","docid":"9000129247961111","author":"","university":"","source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html","reference":false,"similarScore":425.55875,"teacher":"","textWithDynamicClass":"-&gt;多层感知器多层感知器(MLP)<em class='similar 62S124I2' onmouseover=\"highlightSetter('62S124I2',false)\" onmouseout=\"highlightSetter('62S124I2',true)\">是由一个输入层、</em><em class='similar 62S124I3' onmouseover=\"highlightSetter('62S124I3',false)\" onmouseout=\"highlightSetter('62S124I3',true)\">一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。<em class='similar 62S124I5' onmouseover=\"highlightSetter('62S124I5',false)\" onmouseout=\"highlightSetter('62S124I5',true)\">通常,</em><em class='similar 62S124I6' onmouseover=\"highlightSetter('62S124I6',false)\" onmouseout=\"highlightSetter('62S124I6',true)\">靠近输入层的层称为较低层,</em><em class='similar 62S124I7' onmouseover=\"highlightSetter('62S124I7',false)\" onmouseout=\"highlightSetter('62S124I7',true)\">靠近输出层的层称为外层,</em><em class='similar 62S124I8' onmouseover=\"highlightSetter('62S124I8',false)\" onmouseout=\"highlightSetter('62S124I8',true)\">除输出层外的每一层都包含一个偏置神经元,</em><em class='similar 62S124I9' onmouseover=\"highlightSetter('62S124I9',false)\" onmouseout=\"highlightSetter('62S124I9',true)\">并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神","datatype":"webpage","clcs":[],"similarityPercentage":"47.8%","self":false,"text":"-&gt;多层感知器多层感知器(MLP)<em class='similar'>是由一个输入层、</em><em class='similar'>一个或多个隐藏层和一个称为输出层的最终层组成的人工神经网络</em>(ANN)。<em class='similar'>通常,</em><em class='similar'>靠近输入层的层称为较低层,</em><em class='similar'>靠近输出层的层称为外层,</em><em class='similar'>除输出层外的每一层都包含一个偏置神经元,</em><em class='similar'>并与下一层完全相连。</em>当一个ANN包含一个很深的隐藏层时,它被称为深度神"},{"profession":false,"keywords":[],"year":"","docid":"9000198071294011","author":"","university":"","source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784","reference":false,"similarScore":114.25439,"teacher":"","textWithDynamicClass":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar 62S125I8' onmouseover=\"highlightSetter('62S125I8',false)\" onmouseout=\"highlightSetter('62S125I8',true)\">MLP 由一个输入层,</em><em class='similar 62S125I9' onmouseover=\"highlightSetter('62S125I9',false)\" onmouseout=\"highlightSetter('62S125I9',true)\">一个或多个 TLU 层</em><em class='similar 62S125I10' onmouseover=\"highlightSetter('62S125I10',false)\" onmouseout=\"highlightSetter('62S125I10',true)\">(称为隐藏层)</em><em class='similar 62S125I11' onmouseover=\"highlightSetter('62S125I11',false)\" onmouseout=\"highlightSetter('62S125I11',true)\">和一个最后一层</em><em class='similar 62S125I12' onmouseover=\"highlightSetter('62S125I12',false)\" onmouseout=\"highlightSetter('62S125I12',true)\">(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神","datatype":"webpage","clcs":[],"similarityPercentage":"36.9%","self":false,"text":"MLP):多层感知器(MLP)是一层层感知器堆叠起来的结构。<em class='similar'>MLP 由一个输入层,</em><em class='similar'>一个或多个 TLU 层</em><em class='similar'>(称为隐藏层)</em><em class='similar'>和一个最后一层</em><em class='similar'>(称为输出层)</em>组成。神经风格传递(NST):一种关于利用深卷积神"},{"profession":false,"keywords":[],"year":"","docid":"9000182703986211","author":"","university":"","source":"网页","title":"这20个技巧让你的NN训练事半功倍","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621470205&ver=3079&signature=kw5RCVbl5EU17CBuWzJ1GLX7ffFaX34*2jH6iqJWKgPBjfkWbCORV83fl6L-ioLwhlQuul6zWvRzvZM8PS6lZHOvpD2HGS-OevDm0JNIkSMT*MgOZXSwHLjq*goZTWbI&new=1","reference":false,"similarScore":81.666664,"teacher":"","textWithDynamicClass":"opout可以删除那些相关的功能,并防止网络过度拟合。注意:<em class='similar 62S126I5' onmouseover=\"highlightSetter('62S126I5',false)\" onmouseout=\"highlightSetter('62S126I5',true)\">它主要用于较低层</em><em class='similar 62S126I6' onmouseover=\"highlightSetter('62S126I6',false)\" onmouseout=\"highlightSetter('62S126I6',true)\">(靠近输入)</em><em class='similar 62S126I7' onmouseover=\"highlightSetter('62S126I7',false)\" onmouseout=\"highlightSetter('62S126I7',true)\">而不是较高层</em><em class='similar 62S126I8' onmouseover=\"highlightSetter('62S126I8',false)\" onmouseout=\"highlightSetter('62S126I8',true)\">(靠近输出)</em>。5、经典思路,先过拟合,再正则化,模型只有拥有足","datatype":"webpage","clcs":[],"similarityPercentage":"37.1%","self":false,"text":"opout可以删除那些相关的功能,并防止网络过度拟合。注意:<em class='similar'>它主要用于较低层</em><em class='similar'>(靠近输入)</em><em class='similar'>而不是较高层</em><em class='similar'>(靠近输出)</em>。5、经典思路,先过拟合,再正则化,模型只有拥有足"}],"textWithDynamicClass":"多层感知器也称深度人工神经网络,则是在上述感知器的基础上,<em class='similar T61I2' onmouseover=\"highlightSetter('T61I2',false)\" onmouseout=\"highlightSetter('T61I2',true)\">由一层输入层、</em><em class='similar T61I3' onmouseover=\"highlightSetter('T61I3',false)\" onmouseout=\"highlightSetter('T61I3',true)\">一层或多层TLU作为隐藏层和一层输出层组成。</em><em class='similar T61I4' onmouseover=\"highlightSetter('T61I4',false)\" onmouseout=\"highlightSetter('T61I4',true)\">靠近输入层级常称为较低层,</em><em class='similar T61I5' onmouseover=\"highlightSetter('T61I5',false)\" onmouseout=\"highlightSetter('T61I5',true)\">靠近输出的层通常为较高层。</em><em class='similar T61I6' onmouseover=\"highlightSetter('T61I6',false)\" onmouseout=\"highlightSetter('T61I6',true)\">每一层都拥有一个偏置神经元并全接至下一层神经元。</em>","replaceMap":{},"similar_word_count":79,"text":"多层感知器也称深度人工神经网络,则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU作为隐藏层和一层输出层组成。</em><em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em><em class='similar'>每一层都拥有一个偏置神经元并全接至下一层神经元。</em>","suggest":{"synonyms":[{"synonyms":["靠拢"],"keyword":"靠近"}],"keyword":["多层感知器","人工神经网络","感知器","一层","输入层","多层","tlu","隐藏层","输出层","靠近","层级","低层","高层","偏置","神经元"]}},{"sources":[{"profession":false,"keywords":[],"year":"2017","docid":"2200000570679811","author":"-","university":"","source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":"","reference":false,"similarScore":575.8405,"teacher":"","textWithDynamicClass":"层神经元都是拥有激活函数的功能神经元。<em class='similar 63S128I1' onmouseover=\"highlightSetter('63S128I1',false)\" onmouseout=\"highlightSetter('63S128I1',true)\">常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar 63S128I2' onmouseover=\"highlightSetter('63S128I2',false)\" onmouseout=\"highlightSetter('63S128I2',true)\">图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar 63S128I3' onmouseover=\"highlightSetter('63S128I3',false)\" onmouseout=\"highlightSetter('63S128I3',true)\">神经元之间不存在同层相互连接,</em><em class='similar 63S128I4' onmouseover=\"highlightSetter('63S128I4',false)\" onmouseout=\"highlightSetter('63S128I4',true)\">也不存在跨层相互连接。</em><em class='similar 63S128I5' onmouseover=\"highlightSetter('63S128I5',false)\" onmouseout=\"highlightSetter('63S128I5',true)\">这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar 63S128I6' onmouseover=\"highlightSetter('63S128I6',false)\" onmouseout=\"highlightSetter('63S128I6',true)\">其中输入层神经元负责接收外界输入,</em><em class='similar 63S128I7' onmouseover=\"highlightSetter('63S128I7',false)\" onmouseout=\"highlightSetter('63S128I7',true)\">隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar 63S128I10' onmouseover=\"highlightSetter('63S128I10',false)\" onmouseout=\"highlightSetter('63S128I10',true)\">输入层神经元只负责接受输入,</em>不进行激活函数处理;","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"42.0%","self":false,"text":"层神经元都是拥有激活函数的功能神经元。<em class='similar'>常见的多层前馈神经网络结构如图2.3所示。</em><em class='similar'>图2.3多层前馈神经网络结构示意图每层神经元与下一层神经元全连接,</em><em class='similar'>神经元之间不存在同层相互连接,</em><em class='similar'>也不存在跨层相互连接。</em><em class='similar'>这样的神经网络通常被称为&quot;多层前馈神经网络&quot;。</em><em class='similar'>其中输入层神经元负责接收外界输入,</em><em class='similar'>隐层与输出层神经元对信号进行加工,</em>最终结果由输出层神经元输出,也就是,<em class='similar'>输入层神经元只负责接受输入,</em>不进行激活函数处理;"},{"profession":false,"keywords":[],"year":"","docid":"9000082145235511","author":"","university":"","source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504","reference":false,"similarScore":315.9511,"teacher":"","textWithDynamicClass":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar 63S127I6' onmouseover=\"highlightSetter('63S127I6',false)\" onmouseout=\"highlightSetter('63S127I6',true)\">常见的一种是每层神经元与下一层神经元全互连,</em><em class='similar 63S127I7' onmouseover=\"highlightSetter('63S127I7',false)\" onmouseout=\"highlightSetter('63S127I7',true)\">神经元之间不存在同层连接,</em><em class='similar 63S127I8' onmouseover=\"highlightSetter('63S127I8',false)\" onmouseout=\"highlightSetter('63S127I8',true)\">也不存在跨层链接,</em><em class='similar 63S127I9' onmouseover=\"highlightSetter('63S127I9',false)\" onmouseout=\"highlightSetter('63S127I9',true)\">这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而","datatype":"webpage","clcs":[],"similarityPercentage":"54.5%","self":false,"text":"解决上图4的那个问题,就要使用多层感知机了,在多层感知机中,<em class='similar'>常见的一种是每层神经元与下一层神经元全互连,</em><em class='similar'>神经元之间不存在同层连接,</em><em class='similar'>也不存在跨层链接,</em><em class='similar'>这样的结构通常称为&quot;多层前馈神经网络&quot;,</em>即:在输入层和输出层之间的一层神经元被叫做隐层。而"},{"profession":false,"keywords":[],"year":"","docid":"9000104784138911","author":"","university":"","source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html","reference":false,"similarScore":235.95108,"teacher":"","textWithDynamicClass":"有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,<em class='similar 63S129I4' onmouseover=\"highlightSetter('63S129I4',false)\" onmouseout=\"highlightSetter('63S129I4',true)\">层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar 63S129I5' onmouseover=\"highlightSetter('63S129I5',false)\" onmouseout=\"highlightSetter('63S129I5',true)\">同层的神经元之间不存在连接,</em><em class='similar 63S129I6' onmouseover=\"highlightSetter('63S129I6',false)\" onmouseout=\"highlightSetter('63S129I6',true)\">不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏","datatype":"webpage","clcs":[],"similarityPercentage":"44.5%","self":false,"text":"有一层,所以称为单隐层网络。常见的神经网络形如图3-3所示,<em class='similar'>层级结构表示每层的神经元都与下一层的神经元相互连接,</em><em class='similar'>同层的神经元之间不存在连接,</em><em class='similar'>不同层的神经元不存在跨层的连接。</em>对于多隐层的网络,如图3-4所示,直接插入一层隐藏"},{"profession":false,"keywords":[],"year":"","docid":"9000121493694611","author":"","university":"","source":"网页","title":"人工神经网络与案例推理技术相结合用于故障诊断 - 豆丁网","url":"http://www.docin.com/p-898412490.html","reference":false,"similarScore":168.92447,"teacher":"","textWithDynamicClass":"隐含层)和输出层组成,隐含层可以由若干层组成。在这种网络中,<em class='similar 63S130I7' onmouseover=\"highlightSetter('63S130I7',false)\" onmouseout=\"highlightSetter('63S130I7',true)\">每一层的神经元只接受前一层神经元的输出,</em>并输出给下一层,<em class='similar 63S130I9' onmouseover=\"highlightSetter('63S130I9',false)\" onmouseout=\"highlightSetter('63S130I9',true)\">同层神经元之间没有连接;</em><em class='similar 63S130I10' onmouseover=\"highlightSetter('63S130I10',false)\" onmouseout=\"highlightSetter('63S130I10',true)\">层内神经元相互之间有连接的分层网络;</em>有反馈连接的分层网络。21互联网络模型这是一种在任","datatype":"webpage","clcs":[],"similarityPercentage":"35.9%","self":false,"text":"隐含层)和输出层组成,隐含层可以由若干层组成。在这种网络中,<em class='similar'>每一层的神经元只接受前一层神经元的输出,</em>并输出给下一层,<em class='similar'>同层神经元之间没有连接;</em><em class='similar'>层内神经元相互之间有连接的分层网络;</em>有反馈连接的分层网络。21互联网络模型这是一种在任"},{"profession":false,"keywords":[],"year":"","docid":"9000189185320311","author":"","university":"","source":"网页","title":"基于深度神经网络的单通道语音分离技术及研究","url":"http://www.doc88.com/p%2D6748734074002.html","reference":false,"similarScore":166.8421,"teacher":"","textWithDynamicClass":"玻尔兹曼机(RBM)是一种随机神经网络,包含可视层和隐藏层,<em class='similar 63S131I8' onmouseover=\"highlightSetter('63S131I8',false)\" onmouseout=\"highlightSetter('63S131I8',true)\">同一层的神经元相互之间是独立的,</em><em class='similar 63S131I9' onmouseover=\"highlightSetter('63S131I9',false)\" onmouseout=\"highlightSetter('63S131I9',true)\">而不同层之间的神经元是相互连接的,</em>在网络进行训练以及使用时信息会在两个方向进行流动。","datatype":"webpage","clcs":[],"similarityPercentage":"53.8%","self":false,"text":"玻尔兹曼机(RBM)是一种随机神经网络,包含可视层和隐藏层,<em class='similar'>同一层的神经元相互之间是独立的,</em><em class='similar'>而不同层之间的神经元是相互连接的,</em>在网络进行训练以及使用时信息会在两个方向进行流动。"},{"profession":false,"keywords":[],"year":"","docid":"9000207992963011","author":"","university":"","source":"网页","title":"基于BP神经网络的煤矿配电网故障测距研究","url":"http://wenku.baidu.com/view/0057c0e0667d27284b73f242336c1eb91b3733f6.html","reference":false,"similarScore":45.000004,"teacher":"","textWithDynamicClass":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar 63S132I8' onmouseover=\"highlightSetter('63S132I8',false)\" onmouseout=\"highlightSetter('63S132I8',true)\">是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。","datatype":"webpage","clcs":[],"similarityPercentage":"40.9%","self":false,"text":" BP 网络的结构和算法 BP 网络结构上类似于多层感知器,<em class='similar'>是一种多层前馈神经网络,</em>网络权值的训练算法为误差反向传播(BP)学习算法。"}],"textWithDynamicClass":"<em class='similar T62I0' onmouseover=\"highlightSetter('T62I0',false)\" onmouseout=\"highlightSetter('T62I0',true)\">常见的多层感知机的网络结构是如图2.27所示的多层级结构,</em><em class='similar T62I1' onmouseover=\"highlightSetter('T62I1',false)\" onmouseout=\"highlightSetter('T62I1',true)\">每层的单个神经元与下一层神经元之间实现全部连接,</em><em class='similar T62I2' onmouseover=\"highlightSetter('T62I2',false)\" onmouseout=\"highlightSetter('T62I2',true)\">同层的神经元间也不会出现相互之间的连接,</em><em class='similar T62I3' onmouseover=\"highlightSetter('T62I3',false)\" onmouseout=\"highlightSetter('T62I3',true)\">跨层的神将元之间也不存在连接关系。</em><em class='similar T62I4' onmouseover=\"highlightSetter('T62I4',false)\" onmouseout=\"highlightSetter('T62I4',true)\">这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar T62I6' onmouseover=\"highlightSetter('T62I6',false)\" onmouseout=\"highlightSetter('T62I6',true)\">其中输入层神经元用以输入外部输入,</em><em class='similar T62I7' onmouseover=\"highlightSetter('T62I7',false)\" onmouseout=\"highlightSetter('T62I7',true)\">隐藏层和输出层用以处理神经信号,</em>最终结果由输出层输出预测结果;换句话说,输入层只用于接收样本数据的输入,","replaceMap":{},"similar_word_count":144,"text":"<em class='similar'>常见的多层感知机的网络结构是如图2.27所示的多层级结构,</em><em class='similar'>每层的单个神经元与下一层神经元之间实现全部连接,</em><em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em><em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em>最终结果由输出层输出预测结果;换句话说,输入层只用于接收样本数据的输入,","suggest":{"synonyms":[],"keyword":["多层感知机","网络结构","2.27所","层级结构","单个","神经元","一层","同层","相互之间","跨层","连接关系","多层前馈神经网络","多层感知器","输入层","用以","外部输入","隐藏层","输出层","神经信号"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000134130400211","author":"","university":"","source":"网页","title":"深度学习入门整理学习（二）_joker-smart的博客-CSDN博客","url":"https://blog.csdn.net/qq_42746595/article/details/104074152","reference":false,"similarScore":181.8772,"teacher":"","textWithDynamicClass":",同层神经元之间无连接,上层与下层实现全连接,但无跨层连接。<em class='similar 64S134I6' onmouseover=\"highlightSetter('64S134I6',false)\" onmouseout=\"highlightSetter('64S134I6',true)\">输入层只负责接收信号输入,</em>无数据处理功能,隐藏层和输出层是由具有信号处理功能的神经元组成。<em class='similar 64S134I9' onmouseover=\"highlightSetter('64S134I9',false)\" onmouseout=\"highlightSetter('64S134I9',true)\">神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们","datatype":"webpage","clcs":[],"similarityPercentage":"37.9%","self":false,"text":",同层神经元之间无连接,上层与下层实现全连接,但无跨层连接。<em class='similar'>输入层只负责接收信号输入,</em>无数据处理功能,隐藏层和输出层是由具有信号处理功能的神经元组成。<em class='similar'>神经网络的学习过程就是根据训练数据来学习合适的连接权重和功能神经元的阈值,</em>从宏观看,这些权值和阈值等参数就是学到的知识,他们"},{"profession":false,"keywords":[],"year":"2020","docid":"1000029294544411","author":"赵海涛；程慧玲；丁仪；张晖；朱洪波","university":"教育部泛在网络健康服务系统工程研究中心\r\n                        江苏省无线通信重点实验室\r\n                        南京邮电大学通信与信息工程学院","source":"电子与信息学报","title":"基于深度学习的车联边缘网络交通事故风险预测算法研究","url":"","reference":false,"similarScore":124.5238,"teacher":"","textWithDynamicClass":"经网络的基本计算单元为神经元。两层功能神经元组成一层感知层,<em class='similar 64S133I6' onmouseover=\"highlightSetter('64S133I6',false)\" onmouseout=\"highlightSetter('64S133I6',true)\">感知层的输入层用于接收外界输入信号,</em><em class='similar 64S133I7' onmouseover=\"highlightSetter('64S133I7',false)\" onmouseout=\"highlightSetter('64S133I7',true)\">输出层输出预测结果。</em>输入层具有3个神经元的感知机建模如图1所示。感知机","datatype":"journal","clcs":["TP399"],"similarityPercentage":"47.9%","self":false,"text":"经网络的基本计算单元为神经元。两层功能神经元组成一层感知层,<em class='similar'>感知层的输入层用于接收外界输入信号,</em><em class='similar'>输出层输出预测结果。</em>输入层具有3个神经元的感知机建模如图1所示。感知机"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000497294611","author":"刘芳","university":"","source":"大学生论文联合库","title":"基于program的电力系统软件设计与实现","url":"","reference":false,"similarScore":114.09523,"teacher":"","textWithDynamicClass":"连接的方式,但是神经元之间不存在同层或者跨层的的连接。其中,<em class='similar 64S136I6' onmouseover=\"highlightSetter('64S136I6',false)\" onmouseout=\"highlightSetter('64S136I6',true)\">输入层的神经元接收外界的输入,</em>隐藏层以及输出层进行运算、处理(通过权重和阈值表示运算关系)<em class='similar 64S136I10' onmouseover=\"highlightSetter('64S136I10',false)\" onmouseout=\"highlightSetter('64S136I10',true)\">,最后由输出层输出最终结果。</em>通过修改权重,MLP可以学会多种函数,实际上,具有","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"43.9%","self":false,"text":"连接的方式,但是神经元之间不存在同层或者跨层的的连接。其中,<em class='similar'>输入层的神经元接收外界的输入,</em>隐藏层以及输出层进行运算、处理(通过权重和阈值表示运算关系)<em class='similar'>,最后由输出层输出最终结果。</em>通过修改权重,MLP可以学会多种函数,实际上,具有"},{"profession":false,"keywords":[],"year":"","docid":"9000143376093611","author":"","university":"","source":"网页","title":"深度学习技术的发展与应用","url":"https://wenku.baidu.com/view/27aefaa80aa1284ac850ad02de80d4d8d15a01b9","reference":false,"similarScore":66.666664,"teacher":"","textWithDynamicClass":"一种连接方式包括三层,分别为:输入层、隐藏层和输出层。其中,<em class='similar 64S137I8' onmouseover=\"highlightSetter('64S137I8',false)\" onmouseout=\"highlightSetter('64S137I8',true)\">输入层的各神经元用于接收输入信号,</em>并传输到隐藏层的各神经元,之后隐藏层中的神经元通过","datatype":"webpage","clcs":[],"similarityPercentage":"41.7%","self":false,"text":"一种连接方式包括三层,分别为:输入层、隐藏层和输出层。其中,<em class='similar'>输入层的各神经元用于接收输入信号,</em>并传输到隐藏层的各神经元,之后隐藏层中的神经元通过"}],"textWithDynamicClass":"即多层感知器,其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,<em class='similar T63I0' onmouseover=\"highlightSetter('T63I0',false)\" onmouseout=\"highlightSetter('T63I0',true)\">最终结果由输出层输出预测结果;</em>换句话说,<em class='similar T63I2' onmouseover=\"highlightSetter('T63I2',false)\" onmouseout=\"highlightSetter('T63I2',true)\">输入层只用于接收样本数据的输入,</em><em class='similar T63I3' onmouseover=\"highlightSetter('T63I3',false)\" onmouseout=\"highlightSetter('T63I3',true)\">隐藏层和输出层包含函数神经元来对输入的数据进行学习。</em><em class='similar T63I4' onmouseover=\"highlightSetter('T63I4',false)\" onmouseout=\"highlightSetter('T63I4',true)\">神经网络的学习过程是根据训</em>练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,","replaceMap":{},"similar_word_count":70,"text":"即多层感知器,其中输入层神经元用以输入外部输入,隐藏层和输出层用以处理神经信号,<em class='similar'>最终结果由输出层输出预测结果;</em>换句话说,<em class='similar'>输入层只用于接收样本数据的输入,</em><em class='similar'>隐藏层和输出层包含函数神经元来对输入的数据进行学习。</em><em class='similar'>神经网络的学习过程是根据训</em>练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,","suggest":{"synonyms":[],"keyword":["输出层","预测结果","输入层","样本数据","隐藏层","神经元","神经网络","学习过程"]}},{"sources":[{"profession":false,"keywords":[],"year":"2021","docid":"1000030899951411","author":"韩璐；宋海亮；宋佳；刘太豪","university":"西南石油大学电气信息学院,四川 成都610500；","source":"南昌大学学报（工科版）","title":"基于特征提取的FA-BP短期光伏发电预测","url":"","reference":false,"similarScore":208.33331,"teacher":"","textWithDynamicClass":"网络模型的方法对光伏发电进行功率预测研究。就非线性系统而言,<em class='similar 65S138I3' onmouseover=\"highlightSetter('65S138I3',false)\" onmouseout=\"highlightSetter('65S138I3',true)\">使用 BP 神经网络能够很好地调整系统内各神经元之间的权重值。</em><em class='similar 65S138I4' onmouseover=\"highlightSetter('65S138I4',false)\" onmouseout=\"highlightSetter('65S138I4',true)\"> BP 神经网络是一种能够以样本的输入和目标的输出为依据来初始化其权值和阈值,</em>并进行网络训练的多层前馈型神经网络。 BP 神经网","datatype":"journal","clcs":["TM615"],"similarityPercentage":"33.6%","self":false,"text":"网络模型的方法对光伏发电进行功率预测研究。就非线性系统而言,<em class='similar'>使用 BP 神经网络能够很好地调整系统内各神经元之间的权重值。</em><em class='similar'> BP 神经网络是一种能够以样本的输入和目标的输出为依据来初始化其权值和阈值,</em>并进行网络训练的多层前馈型神经网络。 BP 神经网"}],"textWithDynamicClass":"隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,输入层只用于接收样本数据的输入,隐藏层和输出层包含函数神经元来对输入的数据进行学习。神经网络的学习过程是根据训<em class='similar T64I0' onmouseover=\"highlightSetter('T64I0',false)\" onmouseout=\"highlightSetter('T64I0',true)\">练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>神经网络所学习的主要内容包含在连接权重和阈值中。","replaceMap":{},"similar_word_count":31,"text":"隐藏层和输出层用以处理神经信号,最终结果由输出层输出预测结果;换句话说,输入层只用于接收样本数据的输入,隐藏层和输出层包含函数神经元来对输入的数据进行学习。神经网络的学习过程是根据训<em class='similar'>练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>神经网络所学习的主要内容包含在连接权重和阈值中。","suggest":{"synonyms":[],"keyword":["神经元","权重值","阈值","神经网络","主要内容","权重"]}},{"sources":[{"profession":false,"keywords":[],"year":"2015","docid":"2200000696980311","author":"张甜甜","university":"","source":"大学生论文联合库","title":"无偏估计量的定义","url":"","reference":false,"similarScore":201.66663,"teacher":"","textWithDynamicClass":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar 66S140I8' onmouseover=\"highlightSetter('66S140I8',false)\" onmouseout=\"highlightSetter('66S140I8',true)\">均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此��用均方误差评价点估计与用","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"91.7%","self":false,"text":"的标准.自然,我们希望估计的均方误差越小越好.注意到.因此,<em class='similar'>均方误差由点估计的方差与偏差的平方两部分组成.</em>如果是的无偏估计,则,此时用均方误差评价点估计与用"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023576188911","author":"赵喜林，李德宜，龚谊承主编","university":"","source":"","title":"应用数理统计","url":"","reference":false,"similarScore":183.74998,"teacher":"","textWithDynamicClass":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar 66S141I17' onmouseover=\"highlightSetter('66S141I17',false)\" onmouseout=\"highlightSetter('66S141I17',true)\">均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误","datatype":"book","clcs":[],"similarityPercentage":"87.5%","self":false,"text":"吞一E吞)(E吞一。)]=刀云+(￡云一。)&#39;因此,<em class='similar'>均方误差由点估计的方差和偏差平方两部分组成,</em>如果口是O的无偏估计,MsE(的=助,此时用均方误"}],"textWithDynamicClass":"式(2-11)说明,<em class='similar T65I2' onmouseover=\"highlightSetter('T65I2',false)\" onmouseout=\"highlightSetter('T65I2',true)\">均方误差由点估计的方差与偏差的和的平方两部分组成。</em>","replaceMap":{"均方误差由点估计的方差与偏差的和的平方两部分组成。":"均方误差 由点估计的方差 与偏差 的和的平方两部分组成。"},"similar_word_count":25,"text":"式(2-11)说明,<em class='similar'>均方误差由点估计的方差与偏差的和的平方两部分组成。</em>","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"}],"keyword":["11","均方误差","点估计","方差","偏差","平方"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000118484198911","author":"","university":"","source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html","reference":false,"similarScore":777.3533,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar 67S143I1' onmouseover=\"highlightSetter('67S143I1',false)\" onmouseout=\"highlightSetter('67S143I1',true)\">标准误差</em><em class='similar 67S143I2' onmouseover=\"highlightSetter('67S143I2',false)\" onmouseout=\"highlightSetter('67S143I2',true)\">(又称均方根误差)</em><em class='similar 67S143I3' onmouseover=\"highlightSetter('67S143I3',false)\" onmouseout=\"highlightSetter('67S143I3',true)\">它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em><em class='similar 67S143I4' onmouseover=\"highlightSetter('67S143I4',false)\" onmouseout=\"highlightSetter('67S143I4',true)\">在实际测量中,</em><em class='similar 67S143I5' onmouseover=\"highlightSetter('67S143I5',false)\" onmouseout=\"highlightSetter('67S143I5',true)\">观测次数 n 总是有限的,</em><em class='similar 67S143I6' onmouseover=\"highlightSetter('67S143I6',false)\" onmouseout=\"highlightSetter('67S143I6',true)\">真值只能用最可信赖</em><em class='similar 67S143I7' onmouseover=\"highlightSetter('67S143I7',false)\" onmouseout=\"highlightSetter('67S143I7',true)\">(最佳)</em><em class='similar 67S143I8' onmouseover=\"highlightSetter('67S143I8',false)\" onmouseout=\"highlightSetter('67S143I8',true)\">值来代替.</em><em class='similar 67S143I9' onmouseover=\"highlightSetter('67S143I9',false)\" onmouseout=\"highlightSetter('67S143I9',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar 67S143I10' onmouseover=\"highlightSetter('67S143I10',false)\" onmouseout=\"highlightSetter('67S143I10',true)\">所以,</em><em class='similar 67S143I11' onmouseover=\"highlightSetter('67S143I11',false)\" onmouseout=\"highlightSetter('67S143I11',true)\">标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的","datatype":"webpage","clcs":[],"similarityPercentage":"70.0%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar'>标准误差</em><em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数 n 比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数 n 总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em><em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的"},{"profession":false,"keywords":[],"year":"2017","docid":"2200000531686611","author":"南夷非","university":"","source":"大学生论文联合库","title":"图像处理技术","url":"","reference":false,"similarScore":700.1182,"teacher":"","textWithDynamicClass":"示:(3-17)我们将利用上述原理在第四章进行结果分析。2)<em class='similar 67S145I4' onmouseover=\"highlightSetter('67S145I4',false)\" onmouseout=\"highlightSetter('67S145I4',true)\">均方根误差均方根误差</em>(RMSE)<em class='similar 67S145I6' onmouseover=\"highlightSetter('67S145I6',false)\" onmouseout=\"highlightSetter('67S145I6',true)\">是观测值与真值偏差的平方和观测次数n比值的平方根,</em><em class='similar 67S145I7' onmouseover=\"highlightSetter('67S145I7',false)\" onmouseout=\"highlightSetter('67S145I7',true)\">在实际测量中,</em><em class='similar 67S145I8' onmouseover=\"highlightSetter('67S145I8',false)\" onmouseout=\"highlightSetter('67S145I8',true)\">观测次数n总是有限的,</em><em class='similar 67S145I9' onmouseover=\"highlightSetter('67S145I9',false)\" onmouseout=\"highlightSetter('67S145I9',true)\">真值只能用最可信赖</em><em class='similar 67S145I10' onmouseover=\"highlightSetter('67S145I10',false)\" onmouseout=\"highlightSetter('67S145I10',true)\">(最佳)</em><em class='similar 67S145I11' onmouseover=\"highlightSetter('67S145I11',false)\" onmouseout=\"highlightSetter('67S145I11',true)\">值来代替。</em><em class='similar 67S145I12' onmouseover=\"highlightSetter('67S145I12',false)\" onmouseout=\"highlightSetter('67S145I12',true)\">方根误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar 67S145I13' onmouseover=\"highlightSetter('67S145I13',false)\" onmouseout=\"highlightSetter('67S145I13',true)\">所以,</em><em class='similar 67S145I14' onmouseover=\"highlightSetter('67S145I14',false)\" onmouseout=\"highlightSetter('67S145I14',true)\">均方根误差能够很好地反映出测量的精密度。</em>其值越小表示前后差异越高,","datatype":"unionThesisLibrary","clcs":[],"similarityPercentage":"63.6%","self":false,"text":"示:(3-17)我们将利用上述原理在第四章进行结果分析。2)<em class='similar'>均方根误差均方根误差</em>(RMSE)<em class='similar'>是观测值与真值偏差的平方和观测次数n比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数n总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>方根误差对一组测量中的特大或特小误差反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>均方根误差能够很好地反映出测量的精密度。</em>其值越小表示前后差异越高,"},{"profession":false,"keywords":[],"year":"","docid":"9000188062025211","author":"","university":"","source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html","reference":false,"similarScore":527.1804,"teacher":"","textWithDynamicClass":"值属于粗大误差应予剔除。标准差与标准误差是什么关系标准误差<em class='similar 67S142I2' onmouseover=\"highlightSetter('67S142I2',false)\" onmouseout=\"highlightSetter('67S142I2',true)\">(又称均方根误差)</em><em class='similar 67S142I3' onmouseover=\"highlightSetter('67S142I3',false)\" onmouseout=\"highlightSetter('67S142I3',true)\">它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖</em><em class='similar 67S142I4' onmouseover=\"highlightSetter('67S142I4',false)\" onmouseout=\"highlightSetter('67S142I4',true)\">(最佳)</em><em class='similar 67S142I5' onmouseover=\"highlightSetter('67S142I5',false)\" onmouseout=\"highlightSetter('67S142I5',true)\">值来代替.</em><em class='similar 67S142I6' onmouseover=\"highlightSetter('67S142I6',false)\" onmouseout=\"highlightSetter('67S142I6',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。<em class='similar 67S142I8' onmouseover=\"highlightSetter('67S142I8',false)\" onmouseout=\"highlightSetter('67S142I8',true)\">标准误差</em><em class='similar 67S142I9' onmouseover=\"highlightSetter('67S142I9',false)\" onmouseout=\"highlightSetter('67S142I9',true)\">(均方误差)</em>在相同测量条件下进行的测量称为等精度测量例如在同","datatype":"webpage","clcs":[],"similarityPercentage":"45.8%","self":false,"text":"值属于粗大误差应予剔除。标准差与标准误差是什么关系标准误差<em class='similar'>(又称均方根误差)</em><em class='similar'>它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替.</em><em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。<em class='similar'>标准误差</em><em class='similar'>(均方误差)</em>在相同测量条件下进行的测量称为等精度测量例如在同"},{"profession":false,"keywords":[],"year":"","docid":"9000189662307611","author":"","university":"","source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html","reference":false,"similarScore":441.48993,"teacher":"","textWithDynamicClass":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar 67S144I1' onmouseover=\"highlightSetter('67S144I1',false)\" onmouseout=\"highlightSetter('67S144I1',true)\">标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.</em><em class='similar 67S144I2' onmouseover=\"highlightSetter('67S144I2',false)\" onmouseout=\"highlightSetter('67S144I2',true)\">标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。在相同","datatype":"webpage","clcs":[],"similarityPercentage":"39.8%","self":false,"text":"总体标准差是通过随机抽取一定量的样本并计算样本标准差估计的。<em class='similar'>标准误差又称均方根误差它是观测值与真值偏差的平方和观测次数 n 比值的平方根在实际测量中观测次数 n 总是有限的真值只能用最可信赖最佳值来代替.</em><em class='similar'>标准误差对一组测量中的特大或特小误差反映非常敏感所以标准误差能够很好地反映出测量的精密度。</em>这正是标准误差在工程测量中广泛被采用的原因。在相同"},{"profession":false,"keywords":[],"year":"","docid":"9000015110431211","author":"","university":"","source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881","reference":false,"similarScore":410.33328,"teacher":"","textWithDynamicClass":")也称作为效值,它的计算方法是先平方、再平均、然后开方。2、<em class='similar 67S146I7' onmouseover=\"highlightSetter('67S146I7',false)\" onmouseout=\"highlightSetter('67S146I7',true)\">均方根误差,</em><em class='similar 67S146I8' onmouseover=\"highlightSetter('67S146I8',false)\" onmouseout=\"highlightSetter('67S146I8',true)\">它是观测值与真值偏差的平方和观测次数n比值的平方根,</em><em class='similar 67S146I9' onmouseover=\"highlightSetter('67S146I9',false)\" onmouseout=\"highlightSetter('67S146I9',true)\">在实际测量中,</em><em class='similar 67S146I10' onmouseover=\"highlightSetter('67S146I10',false)\" onmouseout=\"highlightSetter('67S146I10',true)\">观测次数n总是有限的,</em><em class='similar 67S146I11' onmouseover=\"highlightSetter('67S146I11',false)\" onmouseout=\"highlightSetter('67S146I11',true)\">真值只能用最可信赖博文来自:</em> charlene_bo的博客弹性反向传播05-2","datatype":"webpage","clcs":[],"similarityPercentage":"69.5%","self":false,"text":")也称作为效值,它的计算方法是先平方、再平均、然后开方。2、<em class='similar'>均方根误差,</em><em class='similar'>它是观测值与真值偏差的平方和观测次数n比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数n总是有限的,</em><em class='similar'>真值只能用最可信赖博文来自:</em> charlene_bo的博客弹性反向传播05-2"}],"textWithDynamicClass":"<em class='similar T66I0' onmouseover=\"highlightSetter('T66I0',false)\" onmouseout=\"highlightSetter('T66I0',true)\">均方根误差,</em><em class='similar T66I1' onmouseover=\"highlightSetter('T66I1',false)\" onmouseout=\"highlightSetter('T66I1',true)\">也称做标准误差,</em><em class='similar T66I2' onmouseover=\"highlightSetter('T66I2',false)\" onmouseout=\"highlightSetter('T66I2',true)\">均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar T66I3' onmouseover=\"highlightSetter('T66I3',false)\" onmouseout=\"highlightSetter('T66I3',true)\">在实际测量中,</em><em class='similar T66I4' onmouseover=\"highlightSetter('T66I4',false)\" onmouseout=\"highlightSetter('T66I4',true)\">观测次数总是有限的,</em><em class='similar T66I5' onmouseover=\"highlightSetter('T66I5',false)\" onmouseout=\"highlightSetter('T66I5',true)\">真值只能用最可信赖</em><em class='similar T66I6' onmouseover=\"highlightSetter('T66I6',false)\" onmouseout=\"highlightSetter('T66I6',true)\">(最佳)</em><em class='similar T66I7' onmouseover=\"highlightSetter('T66I7',false)\" onmouseout=\"highlightSetter('T66I7',true)\">值来代替。</em><em class='similar T66I8' onmouseover=\"highlightSetter('T66I8',false)\" onmouseout=\"highlightSetter('T66I8',true)\">标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,</em><em class='similar T66I9' onmouseover=\"highlightSetter('T66I9',false)\" onmouseout=\"highlightSetter('T66I9',true)\">所以,</em><em class='similar T66I10' onmouseover=\"highlightSetter('T66I10',false)\" onmouseout=\"highlightSetter('T66I10',true)\">标准误差能够很好地反映出机器学习预测的精度。</em><em class='similar T66I11' onmouseover=\"highlightSetter('T66I11',false)\" onmouseout=\"highlightSetter('T66I11',true)\">这也是均方根误差在工</em>程领域中尝尝作为评估指标的理由。因此,均方根误差是常用来度量预测值同真实值之间的偏差,","replaceMap":{"观测次数总是有限的,":"观测次数 总是有限的,","均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,":"均方根误差是预测值与真实值偏差的平方与采样次数 的比值的平方根,"},"similar_word_count":147,"text":"<em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习预测的精度。</em><em class='similar'>这也是均方根误差在工</em>程领域中尝尝作为评估指标的理由。因此,均方根误差是常用来度量预测值同真实值之间的偏差,","suggest":{"synonyms":[{"synonyms":["过错"],"keyword":"偏差"},{"synonyms":["视察"],"keyword":"观测"},{"synonyms":["信任"],"keyword":"信赖"}],"keyword":["均方根误差","标准误差","预测值","真实值","偏差","平方","采样次数","比值","平方根","实际测量","观测","有限的","真值","信赖","超大","错误值","机器学习","精度"]}},{"sources":[{"profession":false,"keywords":[],"year":"2020","docid":"1000030759336411","author":"周如意；丰文浩；邓宗全；高海波；丁亮；李楠","university":"哈尔滨工业大学机器人技术与系统国家重点实验室；；","source":"航空学报","title":"轮地力学模型参数灵敏度分析与主参数估计","url":"","reference":false,"similarScore":123.999985,"teacher":"","textWithDynamicClass":"改变;均值滤波与中值滤波相比计算复杂度低,可在车体平稳运行时<em class='similar 71S150I5' onmouseover=\"highlightSetter('71S150I5',false)\" onmouseout=\"highlightSetter('71S150I5',true)\">加快计算速度</em>。<em class='similar 71S150I6' onmouseover=\"highlightSetter('71S150I6',false)\" onmouseout=\"highlightSetter('71S150I6',true)\">对应伪代码如算法1所示。</em>算法l主导参数估计输入:沉陷量序列s:一{。],。","datatype":"journal","clcs":["V476"],"similarityPercentage":"47.7%","self":false,"text":"改变;均值滤波与中值滤波相比计算复杂度低,可在车体平稳运行时<em class='similar'>加快计算速度</em>。<em class='similar'>对应伪代码如算法1所示。</em>算法l主导参数估计输入:沉陷量序列s:一{。],。"}],"textWithDynamicClass":"在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而<em class='similar T70I5' onmouseover=\"highlightSetter('T70I5',false)\" onmouseout=\"highlightSetter('T70I5',true)\">加快计算速度</em>。<em class='similar T70I6' onmouseover=\"highlightSetter('T70I6',false)\" onmouseout=\"highlightSetter('T70I6',true)\">算法伪代码如图3.15所示。</em>","replaceMap":{},"similar_word_count":21,"text":"在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而<em class='similar'>加快计算速度</em>。<em class='similar'>算法伪代码如图3.15所示。</em>","suggest":{"synonyms":[],"keyword":["设计变更","运算","层级","数据结构","level","用以","分层次","计算速度","伪代码","3.15所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":450.66666,"teacher":"","textWithDynamicClass":" a+。。.<em class='similar 73S153I1' onmouseover=\"highlightSetter('73S153I1',false)\" onmouseout=\"highlightSetter('73S153I1',true)\">相同运算符,</em><em class='similar 73S153I2' onmouseover=\"highlightSetter('73S153I2',false)\" onmouseout=\"highlightSetter('73S153I2',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar 73S153I7' onmouseover=\"highlightSetter('73S153I7',false)\" onmouseout=\"highlightSetter('73S153I7',true)\">.不同的运算符,</em><em class='similar 73S153I8' onmouseover=\"highlightSetter('73S153I8',false)\" onmouseout=\"highlightSetter('73S153I8',true)\">相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar 73S153I13' onmouseover=\"highlightSetter('73S153I13',false)\" onmouseout=\"highlightSetter('73S153I13',true)\">.不同运算符,</em>仅有一个公共操作数,<em class='similar 73S153I15' onmouseover=\"highlightSetter('73S153I15',false)\" onmouseout=\"highlightSetter('73S153I15',true)\">通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar 73S153I20' onmouseover=\"highlightSetter('73S153I20',false)\" onmouseout=\"highlightSetter('73S153I20',true)\">不同运算符,</em><em class='similar 73S153I21' onmouseover=\"highlightSetter('73S153I21',false)\" onmouseout=\"highlightSetter('73S153I21',true)\">不同的操作数,</em><em class='similar 73S153I22' onmouseover=\"highlightSetter('73S153I22',false)\" onmouseout=\"highlightSetter('73S153I22',true)\">通过引入两个多路开关,</em>可以实现ALU单元的共享。例如:a+b , c一d","datatype":"book","clcs":[],"similarityPercentage":"55.0%","self":false,"text":" a+。。.<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如:a+b , c+d。<em class='similar'>.不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALu单元。例如:a+b , a一b。<em class='similar'>.不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如:a+b , a一co .<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em>可以实现ALU单元的共享。例如:a+b , c一d"},{"profession":false,"keywords":[],"year":"","docid":"9000136703132111","author":"","university":"","source":"网页","title":"Verilog HDL代码优化技巧_Guchen666的博客-CSDN博客","url":"https://blog.csdn.net/Guchen666/article/details/106386201","reference":false,"similarScore":450.66666,"teacher":"","textWithDynamicClass":"a + c。<em class='similar 73S154I1' onmouseover=\"highlightSetter('73S154I1',false)\" onmouseout=\"highlightSetter('73S154I1',true)\">相同运算符,</em><em class='similar 73S154I2' onmouseover=\"highlightSetter('73S154I2',false)\" onmouseout=\"highlightSetter('73S154I2',true)\">完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar 73S154I7' onmouseover=\"highlightSetter('73S154I7',false)\" onmouseout=\"highlightSetter('73S154I7',true)\">不同的运算符,</em><em class='similar 73S154I8' onmouseover=\"highlightSetter('73S154I8',false)\" onmouseout=\"highlightSetter('73S154I8',true)\">相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar 73S154I13' onmouseover=\"highlightSetter('73S154I13',false)\" onmouseout=\"highlightSetter('73S154I13',true)\">不同运算符,</em>仅有一个公共操作数,<em class='similar 73S154I15' onmouseover=\"highlightSetter('73S154I15',false)\" onmouseout=\"highlightSetter('73S154I15',true)\">通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar 73S154I20' onmouseover=\"highlightSetter('73S154I20',false)\" onmouseout=\"highlightSetter('73S154I20',true)\">不同运算符,</em><em class='similar 73S154I21' onmouseover=\"highlightSetter('73S154I21',false)\" onmouseout=\"highlightSetter('73S154I21',true)\">不同的操作数,</em><em class='similar 73S154I22' onmouseover=\"highlightSetter('73S154I22',false)\" onmouseout=\"highlightSetter('73S154I22',true)\">通过引入两个多路开关,</em>可以实现ALU单元的共享。例如: a+ b,c-d","datatype":"webpage","clcs":[],"similarityPercentage":"55.0%","self":false,"text":"a + c。<em class='similar'>相同运算符,</em><em class='similar'>完全不同的操作数,</em>那么通过使用两个多路开关也可以实现ALU单元的共享。例如: a+ b,c+ d。<em class='similar'>不同的运算符,</em><em class='similar'>相同的操作数,</em>可以共享ALU单元.例如: a+b,a-b。<em class='similar'>不同运算符,</em>仅有一个公共操作数,<em class='similar'>通过引入多路开关,</em>可以共享ALU单元。例如: a+b,a -c。<em class='similar'>不同运算符,</em><em class='similar'>不同的操作数,</em><em class='similar'>通过引入两个多路开关,</em>可以实现ALU单元的共享。例如: a+ b,c-d"}],"textWithDynamicClass":"<em class='similar T72I0' onmouseover=\"highlightSetter('T72I0',false)\" onmouseout=\"highlightSetter('T72I0',true)\">不同运算符、</em><em class='similar T72I1' onmouseover=\"highlightSetter('T72I1',false)\" onmouseout=\"highlightSetter('T72I1',true)\">不同操作数,</em><em class='similar T72I2' onmouseover=\"highlightSetter('T72I2',false)\" onmouseout=\"highlightSetter('T72I2',true)\">可以通过引入两个多路开关,</em>从而实现逻辑单元的共用。","replaceMap":{},"similar_word_count":25,"text":"<em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em>从而实现逻辑单元的共用。","suggest":{"synonyms":[],"keyword":["运算符","操作数","多路开关","逻辑单元","共用"]}},{"sources":[{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":218,"teacher":"","textWithDynamicClass":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar 75S156I11' onmouseover=\"highlightSetter('75S156I11',false)\" onmouseout=\"highlightSetter('75S156I11',true)\">运算符:</em><em class='similar 75S156I12' onmouseover=\"highlightSetter('75S156I12',false)\" onmouseout=\"highlightSetter('75S156I12',true)\">包括算术运算符、</em><em class='similar 75S156I13' onmouseover=\"highlightSetter('75S156I13',false)\" onmouseout=\"highlightSetter('75S156I13',true)\">逻辑运算符、</em><em class='similar 75S156I14' onmouseover=\"highlightSetter('75S156I14',false)\" onmouseout=\"highlightSetter('75S156I14',true)\">关系运算符、</em><em class='similar 75S156I15' onmouseover=\"highlightSetter('75S156I15',false)\" onmouseout=\"highlightSetter('75S156I15',true)\">相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、","datatype":"book","clcs":[],"similarityPercentage":"80.7%","self":false,"text":"键字。(2)数据类型:包括物理数据类型与抽象数据类型。(3)<em class='similar'>运算符:</em><em class='similar'>包括算术运算符、</em><em class='similar'>逻辑运算符、</em><em class='similar'>关系运算符、</em><em class='similar'>相等关系运算符、</em>按位运一耳符、归约运算符、移位运算符、条件运算符、"}],"textWithDynamicClass":"<em class='similar T74I0' onmouseover=\"highlightSetter('T74I0',false)\" onmouseout=\"highlightSetter('T74I0',true)\">逻辑运算符、</em><em class='similar T74I1' onmouseover=\"highlightSetter('T74I1',false)\" onmouseout=\"highlightSetter('T74I1',true)\">算术运算符、</em><em class='similar T74I2' onmouseover=\"highlightSetter('T74I2',false)\" onmouseout=\"highlightSetter('T74I2',true)\">关系运算符+-*/^|&amp;</em>","replaceMap":{"关系运算符+-*/^|&amp;":"关系运算符\t+ - * / ^ | &amp;"},"similar_word_count":24,"text":"<em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符+-*/^|&amp;</em>","suggest":{"synonyms":[],"keyword":["逻辑运算符","算术运算符","运算符"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":204.63199,"teacher":"","textWithDynamicClass":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar 76S159I7' onmouseover=\"highlightSetter('76S159I7',false)\" onmouseout=\"highlightSetter('76S159I7',true)\">通过运算得到一个结果;</em><em class='similar 76S159I8' onmouseover=\"highlightSetter('76S159I8',false)\" onmouseout=\"highlightSetter('76S159I8',true)\">从语义上说,</em><em class='similar 76S159I9' onmouseover=\"highlightSetter('76S159I9',false)\" onmouseout=\"highlightSetter('76S159I9',true)\">这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,","datatype":"book","clcs":[],"similarityPercentage":"31.5%","self":false,"text":"符和操作数联合起来使用的一种Verilog HDL语言结构,<em class='similar'>通过运算得到一个结果;</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果值也可以看做操作数的函数</em>值。一个合法的操作数,例如一个线网型矢量的位选择,"},{"profession":false,"keywords":[],"year":"","docid":"9000108417201011","author":"","university":"","source":"网页","title":"3.verilog hdl语言基础 - 道客巴巴","url":"http://www.doc88.com/p-1048585004872.html","reference":false,"similarScore":57.857147,"teacher":"","textWithDynamicClass":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar 76S160I3' onmouseover=\"highlightSetter('76S160I3',false)\" onmouseout=\"highlightSetter('76S160I3',true)\">通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog","datatype":"webpage","clcs":[],"similarityPercentage":"48.2%","self":false,"text":"语言结构通过运算得到一个结果Verilog HDL语言结构,<em class='similar'>通过运算得到表达式个结果。</em>表达式可以在出现数值的任何地方使用。Verilog"}],"textWithDynamicClass":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar T75I2' onmouseover=\"highlightSetter('T75I2',false)\" onmouseout=\"highlightSetter('T75I2',true)\">通过运算符或操作符进行结合运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar T75I4' onmouseover=\"highlightSetter('T75I4',false)\" onmouseout=\"highlightSetter('T75I4',true)\">即通过运算符运算得到一个结果,</em><em class='similar T75I5' onmouseover=\"highlightSetter('T75I5',false)\" onmouseout=\"highlightSetter('T75I5',true)\">从语义上说,</em><em class='similar T75I6' onmouseover=\"highlightSetter('T75I6',false)\" onmouseout=\"highlightSetter('T75I6',true)\">这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。","replaceMap":{},"similar_word_count":58,"text":"在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行结合运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。","suggest":{"synonyms":[],"keyword":["verilog","hdl","语法","表达式","操作变量","运算符","操作符","结合运算","语言结构","可理解","运算","语义","函数值","4.2所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000139313011911","author":"","university":"","source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html","reference":false,"similarScore":417.03552,"teacher":"","textWithDynamicClass":"句中进行调用。6.1过程块每个过程块是由&quot;过程语句<em class='similar 78S165I2' onmouseover=\"highlightSetter('78S165I2',false)\" onmouseout=\"highlightSetter('78S165I2',true)\">(initial或always)</em><em class='similar 78S165I3' onmouseover=\"highlightSetter('78S165I3',false)\" onmouseout=\"highlightSetter('78S165I3',true)\">&quot;和块语句所组成的,</em><em class='similar 78S165I4' onmouseover=\"highlightSetter('78S165I4',false)\" onmouseout=\"highlightSetter('78S165I4',true)\">而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar 78S165I5' onmouseover=\"highlightSetter('78S165I5',false)\" onmouseout=\"highlightSetter('78S165I5',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar 78S165I6' onmouseover=\"highlightSetter('78S165I6',false)\" onmouseout=\"highlightSetter('78S165I6',true)\">这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变","datatype":"webpage","clcs":[],"similarityPercentage":"58.7%","self":false,"text":"句中进行调用。6.1过程块每个过程块是由&quot;过程语句<em class='similar'>(initial或always)</em><em class='similar'>&quot;和块语句所组成的,</em><em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar'>这两种行为语句构成的过程块的形式定义过程语句@</em>(事件控制敏感表)块语句开始标识符:块名块内局部变"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":397.91302,"teacher":"","textWithDynamicClass":"块中进行调用。过程块过程块每个过程块是由&quot;过程语句<em class='similar 78S166I3' onmouseover=\"highlightSetter('78S166I3',false)\" onmouseout=\"highlightSetter('78S166I3',true)\">(initial或always)</em><em class='similar 78S166I4' onmouseover=\"highlightSetter('78S166I4',false)\" onmouseout=\"highlightSetter('78S166I4',true)\">&quot;语句块所组成的,</em><em class='similar 78S166I5' onmouseover=\"highlightSetter('78S166I5',false)\" onmouseout=\"highlightSetter('78S166I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar 78S166I6' onmouseover=\"highlightSetter('78S166I6',false)\" onmouseout=\"highlightSetter('78S166I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar 78S166I7' onmouseover=\"highlightSetter('78S166I7',false)\" onmouseout=\"highlightSetter('78S166I7',true)\">这两种行为语句构</em>过程块的形式定义过程块的形式定义过程语句(事件控制","datatype":"webpage","clcs":[],"similarityPercentage":"52.4%","self":false,"text":"块中进行调用。过程块过程块每个过程块是由&quot;过程语句<em class='similar'>(initial或always)</em><em class='similar'>&quot;语句块所组成的,</em><em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em><em class='similar'>这两种行为语句构</em>过程块的形式定义过程块的形式定义过程语句(事件控制"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":397.4322,"teacher":"","textWithDynamicClass":"<em class='similar 78S164I0' onmouseover=\"highlightSetter('78S164I0',false)\" onmouseout=\"highlightSetter('78S164I0',true)\">3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em><em class='similar 78S164I1' onmouseover=\"highlightSetter('78S164I1',false)\" onmouseout=\"highlightSetter('78S164I1',true)\">而语句块主要是由过程性赋值语句</em>(包括过程赋值语句和过程连续赋值语句)和高级程序语句<em class='similar 78S164I4' onmouseover=\"highlightSetter('78S164I4',false)\" onmouseout=\"highlightSetter('78S164I4',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar 78S164I5' onmouseover=\"highlightSetter('78S164I5',false)\" onmouseout=\"highlightSetter('78S164I5',true)\">这两种行为语句构成的。</em>过程块具有如下特点。.在行为描述模块中出现的每个过","datatype":"book","clcs":[],"similarityPercentage":"54.4%","self":false,"text":"<em class='similar'>3过程块结构 verilog HDL中每个过程块是由过程语句initial或always和语句块组成的。</em><em class='similar'>而语句块主要是由过程性赋值语句</em>(包括过程赋值语句和过程连续赋值语句)和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成的。</em>过程块具有如下特点。.在行为描述模块中出现的每个过"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":343.99203,"teacher":"","textWithDynamicClass":"者只包含连续赋值语句。5.1.1过程块每个过程块是由过程语句<em class='similar 78S163I4' onmouseover=\"highlightSetter('78S163I4',false)\" onmouseout=\"highlightSetter('78S163I4',true)\">(initial 或 always)</em><em class='similar 78S163I5' onmouseover=\"highlightSetter('78S163I5',false)\" onmouseout=\"highlightSetter('78S163I5',true)\">和语句块所组成的,</em><em class='similar 78S163I6' onmouseover=\"highlightSetter('78S163I6',false)\" onmouseout=\"highlightSetter('78S163I6',true)\">而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar 78S163I9' onmouseover=\"highlightSetter('78S163I9',false)\" onmouseout=\"highlightSetter('78S163I9',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar 78S163I10' onmouseover=\"highlightSetter('78S163I10',false)\" onmouseout=\"highlightSetter('78S163I10',true)\">这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个","datatype":"book","clcs":[],"similarityPercentage":"64.9%","self":false,"text":"者只包含连续赋值语句。5.1.1过程块每个过程块是由过程语句<em class='similar'>(initial 或 always)</em><em class='similar'>和语句块所组成的,</em><em class='similar'>而语句块主要是由过程性赋值语句</em>(包括赋值语句和过程连续赋值语句)和高级程序语句<em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成的。</em>过程块具有如下特点:(1)在行为描述块中出现的每个"},{"profession":false,"keywords":[],"year":"2018","docid":"1900023759582811","author":"丁磊主编；张海笑，冯永晋，江志文编著","university":"","source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":"","reference":false,"similarScore":313.971,"teacher":"","textWithDynamicClass":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar 78S167I7' onmouseover=\"highlightSetter('78S167I7',false)\" onmouseout=\"highlightSetter('78S167I7',true)\">分支语句过程块主要是由过程性赋值语句及高级程序语句</em><em class='similar 78S167I8' onmouseover=\"highlightSetter('78S167I8',false)\" onmouseout=\"highlightSetter('78S167I8',true)\">(包括分支语句和循环控制语句)</em><em class='similar 78S167I9' onmouseover=\"highlightSetter('78S167I9',false)\" onmouseout=\"highlightSetter('78S167I9',true)\">这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入","datatype":"book","clcs":[],"similarityPercentage":"66.8%","self":false,"text":"6.6几种赋值方式的对比具体内容可扫描二维码查看。4.6.7<em class='similar'>分支语句过程块主要是由过程性赋值语句及高级程序语句</em><em class='similar'>(包括分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成。</em>、七川09 HDL中的高级程序语句是从C语言中引入"},{"profession":false,"keywords":[],"year":"","docid":"1900023885801611","author":"杨全胜主编","university":"","source":"","title":"计算机系统综合课程设计","url":"","reference":false,"similarScore":165.27534,"teacher":"","textWithDynamicClass":"过程模块都从属于always和initial这两种过程语句,<em class='similar 78S168I3' onmouseover=\"highlightSetter('78S168I3',false)\" onmouseout=\"highlightSetter('78S168I3',true)\">而语句块主要是由过程赋值语句、</em><em class='similar 78S168I4' onmouseover=\"highlightSetter('78S168I4',false)\" onmouseout=\"highlightSetter('78S168I4',true)\">条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway","datatype":"book","clcs":[],"similarityPercentage":"57.0%","self":false,"text":"过程模块都从属于always和initial这两种过程语句,<em class='similar'>而语句块主要是由过程赋值语句、</em><em class='similar'>条件分支语句和循环控制语句构成。</em>always过程块always过程块是由alway"}],"textWithDynamicClass":"<em class='similar T77I0' onmouseover=\"highlightSetter('T77I0',false)\" onmouseout=\"highlightSetter('T77I0',true)\">Verilog HDL语法中的过程机构体,</em><em class='similar T77I1' onmouseover=\"highlightSetter('T77I1',false)\" onmouseout=\"highlightSetter('T77I1',true)\">都是由语法关键字initial或always和其块内内容语句所构成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar T77I5' onmouseover=\"highlightSetter('T77I5',false)\" onmouseout=\"highlightSetter('T77I5',true)\">always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar T77I6' onmouseover=\"highlightSetter('T77I6',false)\" onmouseout=\"highlightSetter('T77I6',true)\">(包括条件分支语句和循环控制语句)</em><em class='similar T77I7' onmouseover=\"highlightSetter('T77I7',false)\" onmouseout=\"highlightSetter('T77I7',true)\">这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。","replaceMap":{},"similar_word_count":109,"text":"<em class='similar'>Verilog HDL语法中的过程机构体,</em><em class='similar'>都是由语法关键字initial或always和其块内内容语句所构成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。","suggest":{"synonyms":[],"keyword":["verilog","hdl","语法","关键字","initial","语句","提取方案","中不","语法分析","内容块","赋值语句","程序语句","分支语句","控制语句","16","语法格式"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000135249839711","author":"","university":"","source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html","reference":false,"similarScore":419.82077,"teacher":"","textWithDynamicClass":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 80S171I5' onmouseover=\"highlightSetter('80S171I5',false)\" onmouseout=\"highlightSetter('80S171I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 80S171I6' onmouseover=\"highlightSetter('80S171I6',false)\" onmouseout=\"highlightSetter('80S171I6',true)\">值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar 80S171I7' onmouseover=\"highlightSetter('80S171I7',false)\" onmouseout=\"highlightSetter('80S171I7',true)\">它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar 80S171I10' onmouseover=\"highlightSetter('80S171I10',false)\" onmouseout=\"highlightSetter('80S171I10',true)\">时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整型 integer、实型real","datatype":"webpage","clcs":[],"similarityPercentage":"50.0%","self":false,"text":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>值变量&gt;值操作符&gt;值表达式&gt;其中值操作符&gt;是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em>行为描述(二):<em class='similar'>时间控制和赋值语句52过程赋值语句只能用于对寄存器类的变量�6�1</em>(寄存器reg、整型 integer、实型real"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000544119911","author":"杜建国","university":"","source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":"","reference":false,"similarScore":372.44318,"teacher":"","textWithDynamicClass":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 80S172I6' onmouseover=\"highlightSetter('80S172I6',false)\" onmouseout=\"highlightSetter('80S172I6',true)\">过程赋值语句的基本格式为:</em>168其中是&quot;=&quot;或&quot;&lt;=&quot;,<em class='similar 80S172I8' onmouseover=\"highlightSetter('80S172I8',false)\" onmouseout=\"highlightSetter('80S172I8',true)\">它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em><em class='similar 80S172I9' onmouseover=\"highlightSetter('80S172I9',false)\" onmouseout=\"highlightSetter('80S172I9',true)\">过程赋值语句只能用于对寄存器类的变量</em>(寄存器 reg、整型 integer、实型 real 或时间型 time 变量)进行赋值操作。在经过过程赋值后,上面这些变量的取值将保持不变,<em class='similar 80S172I16' onmouseover=\"highlightSetter('80S172I16',false)\" onmouseout=\"highlightSetter('80S172I16',true)\">直到另一条过程赋值语句对变量重新赋值为止。</em>","datatype":"book","clcs":["TP312","VH/13"],"similarityPercentage":"52.5%","self":false,"text":"块中出现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em>168其中是&quot;=&quot;或&quot;&lt;=&quot;,<em class='similar'>它们分别代表了阻塞型赋值和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对寄存器类的变量</em>(寄存器 reg、整型 integer、实型 real 或时间型 time 变量)进行赋值操作。在经过过程赋值后,上面这些变量的取值将保持不变,<em class='similar'>直到另一条过程赋值语句对变量重新赋值为止。</em>"},{"profession":false,"keywords":[],"year":"","docid":"9000179218349411","author":"","university":"","source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html","reference":false,"similarScore":329.03796,"teacher":"","textWithDynamicClass":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar 80S173I5' onmouseover=\"highlightSetter('80S173I5',false)\" onmouseout=\"highlightSetter('80S173I5',true)\">过程赋值语句的基本格式为:</em><em class='similar 80S173I6' onmouseover=\"highlightSetter('80S173I6',false)\" onmouseout=\"highlightSetter('80S173I6',true)\">其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em><em class='similar 80S173I7' onmouseover=\"highlightSetter('80S173I7',false)\" onmouseout=\"highlightSetter('80S173I7',true)\">他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar 80S173I9' onmouseover=\"highlightSetter('80S173I9',false)\" onmouseout=\"highlightSetter('80S173I9',true)\">过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、","datatype":"webpage","clcs":[],"similarityPercentage":"52.2%","self":false,"text":"下载载现连续赋值语句),同时过程赋值语句也只能用在过程块中。<em class='similar'>过程赋值语句的基本格式为:</em><em class='similar'>其中赋值操作符是&quot;=&quot;戒者&quot;《=&quot;乊一,</em><em class='similar'>他们分别代表了阻塞型赋值和非阻塞性赋值类型。</em>7、<em class='similar'>过程赋值语句智能对亍对</em>寄存器类的发量(reg、integer、real、"},{"profession":false,"keywords":[],"year":"","docid":"9000183507262511","author":"","university":"","source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10","reference":false,"similarScore":124.80769,"teacher":"","textWithDynamicClass":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar 80S174I4' onmouseover=\"highlightSetter('80S174I4',false)\" onmouseout=\"highlightSetter('80S174I4',true)\">过程赋值语句语法格式:</em><em class='similar 80S174I5' onmouseover=\"highlightSetter('80S174I5',false)\" onmouseout=\"highlightSetter('80S174I5',true)\">赋值操作符:</em><em class='similar 80S174I6' onmouseover=\"highlightSetter('80S174I6',false)\" onmouseout=\"highlightSetter('80S174I6',true)\">可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)","datatype":"webpage","clcs":[],"similarityPercentage":"56.7%","self":false,"text":"原创Verilog HDL(三):赋值语句赋值语句(1)<em class='similar'>过程赋值语句语法格式:</em><em class='similar'>赋值操作符:</em><em class='similar'>可以是&quot;=&quot;或&quot;2019-10-2916:</em>45:351594原创Verilog HDL(一)"}],"textWithDynamicClass":"<em class='similar T79I0' onmouseover=\"highlightSetter('T79I0',false)\" onmouseout=\"highlightSetter('T79I0',true)\">过程赋值语句的语法格式如图4.7所示,</em><em class='similar T79I1' onmouseover=\"highlightSetter('T79I1',false)\" onmouseout=\"highlightSetter('T79I1',true)\">其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar T79I2' onmouseover=\"highlightSetter('T79I2',false)\" onmouseout=\"highlightSetter('T79I2',true)\">它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar T79I3' onmouseover=\"highlightSetter('T79I3',false)\" onmouseout=\"highlightSetter('T79I3',true)\">过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,由于过程赋值语句中的赋值表达式可以使任何合法的表达式,","replaceMap":{},"similar_word_count":83,"text":"<em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,由于过程赋值语句中的赋值表达式可以使任何合法的表达式,","suggest":{"synonyms":[],"keyword":["赋值语句","语法格式","4.7所","赋值","操作符","阻塞型","赋值操作","第二章","逻辑综合","右侧","表达式","逻辑表达","逻辑资源"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":203.46156,"teacher":"","textWithDynamicClass":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar 81S176I4' onmouseover=\"highlightSetter('81S176I4',false)\" onmouseout=\"highlightSetter('81S176I4',true)\">二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中","datatype":"book","clcs":[],"similarityPercentage":"45.2%","self":false,"text":"#39; hfd ;//对存储器的某一个字赋值{a , b}<em class='similar'>二9&#39; blolllloll 对用连接运算符连接构成的整体赋值 end endrnodule 过程赋值语句中的赋值表达式可以是任何合法的表达式。</em>各种过程赋值语句都可以带有时间控制,过程赋值语句中"},{"profession":false,"keywords":[],"year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","university":"","source":"","title":"Verilog HDL数字系统设计及其应用","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar 81S175I5' onmouseover=\"highlightSetter('81S175I5',false)\" onmouseout=\"highlightSetter('81S175I5',true)\">刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&amp;(由);所给","datatype":"book","clcs":[],"similarityPercentage":"41.4%","self":false,"text":"进行赋值{a , b)=9&#39; bl011l01l0;<em class='similar'>刀对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如:化gC :#10c=a&amp;(由);所给"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":186.15384,"teacher":"","textWithDynamicClass":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar 81S177I3' onmouseover=\"highlightSetter('81S177I3',false)\" onmouseout=\"highlightSetter('81S177I3',true)\"> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&amp;(~b","datatype":"book","clcs":[],"similarityPercentage":"39.6%","self":false,"text":"d //对存储器mem_1的第201个存储单元进行赋值{a,<em class='similar'> b}=9‘b101110110对用连接运算符构成的一个整体进行赋值 end 过程赋值语句右端的赋值表达式可以是任何合法的表达式。</em>比如: reg c;#10 c=a&amp;(~b"}],"textWithDynamicClass":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar T80I1' onmouseover=\"highlightSetter('T80I1',false)\" onmouseout=\"highlightSetter('T80I1',true)\">由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、","replaceMap":{},"similar_word_count":27,"text":"结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、","suggest":{"synonyms":[{"synonyms":["类型"],"keyword":"类别"}],"keyword":["赋值语句","特征信息提取","赋值","表达式","合法的","符号表达式","递归","提取方法","特征提取","提取特征","类别","阻塞型","blockassign","左右位","blockassignrightwidth"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":165.2258,"teacher":"","textWithDynamicClass":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar 82S178I4' onmouseover=\"highlightSetter('82S178I4',false)\" onmouseout=\"highlightSetter('82S178I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 82S178I5' onmouseover=\"highlightSetter('82S178I5',false)\" onmouseout=\"highlightSetter('82S178I5',true)\">及高级程序语句</em><em class='similar 82S178I6' onmouseover=\"highlightSetter('82S178I6',false)\" onmouseout=\"highlightSetter('82S178I6',true)\">(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了","datatype":"book","clcs":[],"similarityPercentage":"42.4%","self":false,"text":"波形3.5分支语句前面已经讲过,过程块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>及高级程序语句</em><em class='similar'>(包括分支语句和循环控制语句)</em>这两种行为语句所构成。前面已经对过程性赋值语句做了"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":154.58066,"teacher":"","textWithDynamicClass":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar 82S179I4' onmouseover=\"highlightSetter('82S179I4',false)\" onmouseout=\"highlightSetter('82S179I4',true)\">(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar 82S179I5' onmouseover=\"highlightSetter('82S179I5',false)\" onmouseout=\"highlightSetter('82S179I5',true)\">和高级程序语句</em><em class='similar 82S179I6' onmouseover=\"highlightSetter('82S179I6',false)\" onmouseout=\"highlightSetter('82S179I6',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关","datatype":"book","clcs":[],"similarityPercentage":"37.7%","self":false,"text":"而过程块的主要组成部分是语句块,语句块主要是由过程性赋值语句<em class='similar'>(包括普通过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成的。本节将介绍与赋值语句使用相关"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":144.5,"teacher":"","textWithDynamicClass":"/deassign 或 force/release 语句组)<em class='similar 82S183I7' onmouseover=\"highlightSetter('82S183I7',false)\" onmouseout=\"highlightSetter('82S183I7',true)\">141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for","datatype":"book","clcs":[],"similarityPercentage":"68.8%","self":false,"text":"/deassign 或 force/release 语句组)<em class='similar'>141③ if条件分支语句④ case条件分支语句⑤循环控制语句</em>(forever,repeat,white,for"},{"profession":false,"keywords":[],"year":"","docid":"9000117978237811","author":"","university":"","source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"(initial或always)&quot;语句块所组成的,<em class='similar 82S180I5' onmouseover=\"highlightSetter('82S180I5',false)\" onmouseout=\"highlightSetter('82S180I5',true)\">而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar 82S180I6' onmouseover=\"highlightSetter('82S180I6',false)\" onmouseout=\"highlightSetter('82S180I6',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过","datatype":"webpage","clcs":[],"similarityPercentage":"37.6%","self":false,"text":"(initial或always)&quot;语句块所组成的,<em class='similar'>而块语句主要是由过程赋值语句和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>这两种行为语句构过程块的形式定义过程块的形式定义过"},{"profession":false,"keywords":[],"year":"","docid":"9000191300761211","author":"","university":"","source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar 82S181I2' onmouseover=\"highlightSetter('82S181I2',false)\" onmouseout=\"highlightSetter('82S181I2',true)\">(包括过程赋值语句和过程连续赋值语句)</em><em class='similar 82S181I3' onmouseover=\"highlightSetter('82S181I3',false)\" onmouseout=\"highlightSetter('82S181I3',true)\">和高级程序语句</em><em class='similar 82S181I4' onmouseover=\"highlightSetter('82S181I4',false)\" onmouseout=\"highlightSetter('82S181I4',true)\">(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块","datatype":"webpage","clcs":[],"similarityPercentage":"34.7%","self":false,"text":"或initial和语句块组成。而语句块主要是由过程性赋值语句<em class='similar'>(包括过程赋值语句和过程连续赋值语句)</em><em class='similar'>和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em>这两种行为语句构成。具有如下特点:•在行为描述模块"},{"profession":false,"keywords":[],"year":"","docid":"9000099531543111","author":"","university":"","source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3","reference":false,"similarScore":135.2258,"teacher":"","textWithDynamicClass":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar 82S182I8' onmouseover=\"highlightSetter('82S182I8',false)\" onmouseout=\"highlightSetter('82S182I8',true)\">(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar 82S182I9' onmouseover=\"highlightSetter('82S182I9',false)\" onmouseout=\"highlightSetter('82S182I9',true)\">和高级程序语句</em><em class='similar 82S182I10' onmouseover=\"highlightSetter('82S182I10',false)\" onmouseout=\"highlightSetter('82S182I10',true)\">(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的","datatype":"webpage","clcs":[],"similarityPercentage":"34.7%","self":false,"text":"&quot;和语句块所组成的,而语句块主要是由过程性赋值语句<em class='similar'>(包括&quot;过程赋值语句&quot;和&quot;过程连续赋值语句&quot;)</em><em class='similar'>和高级程序语句</em><em class='similar'>(包括&quot;条件分支语句&quot;和&quot;循环控制语句&quot;)</em>构成的。过程块具有如下特点:在行为描述模块中出现的"}],"textWithDynamicClass":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar T81I2' onmouseover=\"highlightSetter('T81I2',false)\" onmouseout=\"highlightSetter('T81I2',true)\">图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar T81I3' onmouseover=\"highlightSetter('T81I3',false)\" onmouseout=\"highlightSetter('T81I3',true)\">高级程序语句就包含分支语句和循环控制语句,</em><em class='similar T81I4' onmouseover=\"highlightSetter('T81I4',false)\" onmouseout=\"highlightSetter('T81I4',true)\">分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。","replaceMap":{},"similar_word_count":79,"text":"If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em><em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。","suggest":{"synonyms":[{"synonyms":["说起"],"keyword":"提及"},{"synonyms":["末节"],"keyword":"小节"}],"keyword":["语句","verilog","语法","中高级","blcok","4.5","提及","赋值语句","程序语句","分支语句","控制语句","case","条件控制语句","小节","特征提取"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar 85S186I4' onmouseover=\"highlightSetter('85S186I4',false)\" onmouseout=\"highlightSetter('85S186I4',true)\">&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar 85S186I5' onmouseover=\"highlightSetter('85S186I5',false)\" onmouseout=\"highlightSetter('85S186I5',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar 85S186I7' onmouseover=\"highlightSetter('85S186I7',false)\" onmouseout=\"highlightSetter('85S186I7',true)\">Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar 85S186I13' onmouseover=\"highlightSetter('85S186I13',false)\" onmouseout=\"highlightSetter('85S186I13',true)\">3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f","datatype":"book","clcs":[],"similarityPercentage":"46.7%","self":false,"text":"01&quot;时,才执行第4分支项对应的操作‘out=的;<em class='similar'>&quot;。3.6循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言提供了如下几种循环控制语句。</em>. forever循环语句;. repeat循环语句;. while循环语句;. for循环语句。下面对上述四种循环控制语句进行逐一介绍。<em class='similar'>3,6.1 forever循环语句 forever循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复得到执行。f"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000832107511","author":"丁学钧；刘建臣主编","university":"","source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":"","reference":false,"similarScore":331.85648,"teacher":"","textWithDynamicClass":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar 85S187I5' onmouseover=\"highlightSetter('85S187I5',false)\" onmouseout=\"highlightSetter('85S187I5',true)\">6.4循环控制语句与条件分支语句一样,</em><em class='similar 85S187I6' onmouseover=\"highlightSetter('85S187I6',false)\" onmouseout=\"highlightSetter('85S187I6',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 85S187I8' onmouseover=\"highlightSetter('85S187I8',false)\" onmouseout=\"highlightSetter('85S187I8',true)\">Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar 85S187I19' onmouseover=\"highlightSetter('85S187I19',false)\" onmouseout=\"highlightSetter('85S187I19',true)\"> forever循环语句 forever 循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。","datatype":"book","clcs":[],"similarityPercentage":"46.7%","self":false,"text":"分支对应的语句&quot;out=(~b)+1&quot;。<em class='similar'>6.4循环控制语句与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了如下几种循环控制语句:</em>(1) forever 循环语句;(2) repeat 循环语句;(3) while 循环语句;(4) for循环语句。本节我们将对以上4种循环控制语句进行讨论。6.4.1<em class='similar'> forever循环语句 forever 循环语句实现的是一种无限的循环,</em>该循环语句内指定的循环体部分将不断重复地得到执行。"},{"profession":false,"keywords":[],"year":"2009","docid":"1900023628304711","author":"刘刚…等编著","university":"","source":"","title":"微电子器件与IC设计基础","url":"","reference":false,"similarScore":286.15805,"teacher":"","textWithDynamicClass":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar 85S188I4' onmouseover=\"highlightSetter('85S188I4',false)\" onmouseout=\"highlightSetter('85S188I4',true)\">与条件分支语句一样,</em><em class='similar 85S188I5' onmouseover=\"highlightSetter('85S188I5',false)\" onmouseout=\"highlightSetter('85S188I5',true)\">循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar 85S188I7' onmouseover=\"highlightSetter('85S188I7',false)\" onmouseout=\"highlightSetter('85S188I7',true)\">Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar 85S188I9' onmouseover=\"highlightSetter('85S188I9',false)\" onmouseout=\"highlightSetter('85S188I9',true)\"> forever循环语句:</em><em class='similar 85S188I10' onmouseover=\"highlightSetter('85S188I10',false)\" onmouseout=\"highlightSetter('85S188I10',true)\">无限连续执行的语句,</em>","datatype":"book","clcs":[],"similarityPercentage":"50.2%","self":false,"text":"则将高阻值z和不定值x都视为不必关心的情况。(2)循环语句。<em class='similar'>与条件分支语句一样,</em><em class='similar'>循环控制语句也是一种高级程序语句,</em>它在Verilog HDL中被用来进行行为描述。<em class='similar'>Verilog HDL语言中提供了4种类型的循环语句,</em>用来控制执行语句的执行次数。<em class='similar'> forever循环语句:</em><em class='similar'>无限连续执行的语句,</em>"},{"profession":false,"keywords":[],"year":"2012","docid":"1900023738091111","author":"张晓飞，秦刚刚，杨阳等编著","university":"","source":"","title":"FPGA技术入门与典型项目开发实例","url":"","reference":false,"similarScore":192.91864,"teacher":"","textWithDynamicClass":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar 85S189I2' onmouseover=\"highlightSetter('85S189I2',false)\" onmouseout=\"highlightSetter('85S189I2',true)\">说明语句与条件分支语句一样</em>,<em class='similar 85S189I3' onmouseover=\"highlightSetter('85S189I3',false)\" onmouseout=\"highlightSetter('85S189I3',true)\">循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另","datatype":"book","clcs":[],"similarityPercentage":"47.1%","self":false,"text":"这种情况的方法。2.6 verilog HDL循环语句与结构<em class='similar'>说明语句与条件分支语句一样</em>,<em class='similar'>循环控制语句也是一种高级程序语句,</em>它在verilog HDL中被用来进行行为描述。另"},{"profession":false,"keywords":[],"year":"","docid":"9000177893423411","author":"","university":"","source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18","reference":false,"similarScore":108.2906,"teacher":"","textWithDynamicClass":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar 85S190I11' onmouseover=\"highlightSetter('85S190I11',false)\" onmouseout=\"highlightSetter('85S190I11',true)\">循环语句:</em><em class='similar 85S190I12' onmouseover=\"highlightSetter('85S190I12',false)\" onmouseout=\"highlightSetter('85S190I12',true)\">verilog中有四种循环语句:</em><em class='similar 85S190I13' onmouseover=\"highlightSetter('85S190I13',false)\" onmouseout=\"highlightSetter('85S190I13',true)\">while、</em>for、<em class='similar 85S190I15' onmouseover=\"highlightSetter('85S190I15',false)\" onmouseout=\"highlightSetter('85S190I15',true)\">repeat和forever,</em><em class='similar 85S190I16' onmouseover=\"highlightSetter('85S190I16',false)\" onmouseout=\"highlightSetter('85S190I16',true)\">其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar 85S190I22' onmouseover=\"highlightSetter('85S190I22',false)\" onmouseout=\"highlightSetter('85S190I22',true)\">while</em>(条件表达式)begin各行为语句end;(b)f","datatype":"webpage","clcs":[],"similarityPercentage":"30.1%","self":false,"text":"出现X(不定态)或Z的无关值,并分别用x与?号来代表。(8)<em class='similar'>循环语句:</em><em class='similar'>verilog中有四种循环语句:</em><em class='similar'>while、</em>for、<em class='similar'>repeat和forever,</em><em class='similar'>其语法与C语言中的循环语句类似。</em>(a)while循环:关键字为while,其循环中止条件是while条件表达式的值为假;句法:<em class='similar'>while</em>(条件表达式)begin各行为语句end;(b)f"},{"profession":false,"keywords":[],"year":"","docid":"9000208266954811","author":"","university":"","source":"网页","title":"第三、四讲  Verilog HDL 行为语句","url":"http://wenku.baidu.com/view/476f25fdf705cc17552709c5.html","reference":false,"similarScore":38.130257,"teacher":"","textWithDynamicClass":"mp;b;end endmoduleendmodule(五)<em class='similar 85S191I3' onmouseover=\"highlightSetter('85S191I3',false)\" onmouseout=\"highlightSetter('85S191I3',true)\">循环语句Verilog HDL中有四类循环语句:</em> forever循环语句 repeat循环语句","datatype":"webpage","clcs":[],"similarityPercentage":"25.4%","self":false,"text":"mp;b;end endmoduleendmodule(五)<em class='similar'>循环语句Verilog HDL中有四类循环语句:</em> forever循环语句 repeat循环语句"}],"textWithDynamicClass":"<em class='similar T84I0' onmouseover=\"highlightSetter('T84I0',false)\" onmouseout=\"highlightSetter('T84I0',true)\">与条件分支语句表达含义一致,</em><em class='similar T84I1' onmouseover=\"highlightSetter('T84I1',false)\" onmouseout=\"highlightSetter('T84I1',true)\">循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar T84I2' onmouseover=\"highlightSetter('T84I2',false)\" onmouseout=\"highlightSetter('T84I2',true)\">Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar T84I4' onmouseover=\"highlightSetter('T84I4',false)\" onmouseout=\"highlightSetter('T84I4',true)\">while、</em>for四种,<em class='similar T84I6' onmouseover=\"highlightSetter('T84I6',false)\" onmouseout=\"highlightSetter('T84I6',true)\">其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。","replaceMap":{},"similar_word_count":101,"text":"<em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar'>while、</em>for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。","suggest":{"synonyms":[{"synonyms":["寄义"],"keyword":"含义"},{"synonyms":["无尽"],"keyword":"无限"}],"keyword":["条件分支","语句表达","含义","控制语句","verilog","hdl","程序语句","关键字","forever","repeat","四种","语句","无限","循环语句"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar 88S198I4' onmouseover=\"highlightSetter('88S198I4',false)\" onmouseout=\"highlightSetter('88S198I4',true)\">函数</em><em class='similar 88S198I5' onmouseover=\"highlightSetter('88S198I5',false)\" onmouseout=\"highlightSetter('88S198I5',true)\">(function)</em><em class='similar 88S198I6' onmouseover=\"highlightSetter('88S198I6',false)\" onmouseout=\"highlightSetter('88S198I6',true)\">函数</em>(functinn)<em class='similar 88S198I8' onmouseover=\"highlightSetter('88S198I8',false)\" onmouseout=\"highlightSetter('88S198I8',true)\">类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用","datatype":"book","clcs":[],"similarityPercentage":"65.2%","self":false,"text":"如此不断循环,其中每个时钟周期为200个时间单位。3.7.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(functinn)<em class='similar'>类似于其他编程语言中的函数概念。</em>与任务一样,Verilog HDL语言中的函数使用"},{"profession":false,"keywords":[],"year":"2004","docid":"1900000544119911","author":"杜建国","university":"","source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":"","reference":false,"similarScore":130.35715,"teacher":"","textWithDynamicClass":"个持续时间将是 tic time 个时钟周期长度。6.5.2<em class='similar 88S199I3' onmouseover=\"highlightSetter('88S199I3',false)\" onmouseout=\"highlightSetter('88S199I3',true)\">函数</em><em class='similar 88S199I4' onmouseover=\"highlightSetter('88S199I4',false)\" onmouseout=\"highlightSetter('88S199I4',true)\">(function)</em><em class='similar 88S199I5' onmouseover=\"highlightSetter('88S199I5',false)\" onmouseout=\"highlightSetter('88S199I5',true)\">函数</em>(funcion)<em class='similar 88S199I7' onmouseover=\"highlightSetter('88S199I7',false)\" onmouseout=\"highlightSetter('88S199I7',true)\">类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL 语言中的函数使","datatype":"book","clcs":["TP312","VH/13"],"similarityPercentage":"65.2%","self":false,"text":"个持续时间将是 tic time 个时钟周期长度。6.5.2<em class='similar'>函数</em><em class='similar'>(function)</em><em class='similar'>函数</em>(funcion)<em class='similar'>类似于其他编程语言中的函数概念,</em>与任务一样,Verilog HDL 语言中的函数使"},{"profession":false,"keywords":[],"year":"","docid":"9000181939983411","author":"","university":"","source":"网页","title":"verilog任务和函数ppt课件","url":"https://www.docin.com/p%2D2480211351.html","reference":false,"similarScore":70.35714,"teacher":"","textWithDynamicClass":"14 Verilog Verilog function 函数<em class='similar 88S200I4' onmouseover=\"highlightSetter('88S200I4',false)\" onmouseout=\"highlightSetter('88S200I4',true)\">(function)</em><em class='similar 88S200I5' onmouseover=\"highlightSetter('88S200I5',false)\" onmouseout=\"highlightSetter('88S200I5',true)\">类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用","datatype":"webpage","clcs":[],"similarityPercentage":"44.0%","self":false,"text":"14 Verilog Verilog function 函数<em class='similar'>(function)</em><em class='similar'>类似亍其它编程语言中的函数概念。</em>不任务一样,Verilog HDL语言中的函数使用"}],"textWithDynamicClass":"<em class='similar T87I0' onmouseover=\"highlightSetter('T87I0',false)\" onmouseout=\"highlightSetter('T87I0',true)\">Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar T87I1' onmouseover=\"highlightSetter('T87I1',false)\" onmouseout=\"highlightSetter('T87I1',true)\">函数</em><em class='similar T87I2' onmouseover=\"highlightSetter('T87I2',false)\" onmouseout=\"highlightSetter('T87I2',true)\">(Function)</em>的语法形式如下,如图4.14所示。","replaceMap":{},"similar_word_count":49,"text":"<em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>的语法形式如下,如图4.14所示。","suggest":{"synonyms":[],"keyword":["verilog","hdl","编程语言","函数概念","语法","function","语法形式","4.14所"]}},{"sources":[{"profession":false,"keywords":[],"year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","university":"","source":"","title":"Verilog HDL应用程序设计实例精讲","url":"","reference":false,"similarScore":304.04764,"teacher":"","textWithDynamicClass":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar 89S201I4' onmouseover=\"highlightSetter('89S201I4',false)\" onmouseout=\"highlightSetter('89S201I4',true)\">5.16函数的综合在Verilog HDL语句中,</em><em class='similar 89S201I5' onmouseover=\"highlightSetter('89S201I5',false)\" onmouseout=\"highlightSetter('89S201I5',true)\">函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar 89S201I10' onmouseover=\"highlightSetter('89S201I10',false)\" onmouseout=\"highlightSetter('89S201I10',true)\">任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar 89S201I11' onmouseover=\"highlightSetter('89S201I11',false)\" onmouseout=\"highlightSetter('89S201I11',true)\">仅被综合成导线。</em>例5一42给出了一个函数的实例,","datatype":"book","clcs":[],"similarityPercentage":"57.4%","self":false,"text":"该变量综合出的组合逻辑的输出端被馈送到引用它的语句的输入端。<em class='similar'>5.16函数的综合在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em>函数在综合的时候,被展开成了内联的(in一hne)代码。<em class='similar'>任何在函数中定义的局部变量都被当做纯粹的临时变量,</em><em class='similar'>仅被综合成导线。</em>例5一42给出了一个函数的实例,"}],"textWithDynamicClass":"<em class='similar T88I0' onmouseover=\"highlightSetter('T88I0',false)\" onmouseout=\"highlightSetter('T88I0',true)\">在Verilog HDL语句中,</em><em class='similar T88I1' onmouseover=\"highlightSetter('T88I1',false)\" onmouseout=\"highlightSetter('T88I1',true)\">函数代表了纯组合逻辑。</em><em class='similar T88I2' onmouseover=\"highlightSetter('T88I2',false)\" onmouseout=\"highlightSetter('T88I2',true)\">在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar T88I3' onmouseover=\"highlightSetter('T88I3',false)\" onmouseout=\"highlightSetter('T88I3',true)\">仅被综合映射为成片上导线</em>[16]。<em class='similar T88I5' onmouseover=\"highlightSetter('T88I5',false)\" onmouseout=\"highlightSetter('T88I5',true)\">由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;","replaceMap":{},"similar_word_count":88,"text":"<em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em><em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;","suggest":{"synonyms":[{"synonyms":["且则"],"keyword":"临时"},{"synonyms":["映照"],"keyword":"映射"},{"synonyms":["移用"],"keyword":"调用"}],"keyword":["verilog","hdl","语句","组合逻辑","函数语句","临时","映射","成片","导线","16","function","逻辑","表达及","端口","调用","分析及"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000108431821311","author":"","university":"","source":"网页","title":"数据分析的准备工作：从问题分析到数据清洗","url":"http://m.toutiao.com/i6643684078983840264/","reference":false,"similarScore":613.7815,"teacher":"","textWithDynamicClass":"<em class='similar 91S203I0' onmouseover=\"highlightSetter('91S203I0',false)\" onmouseout=\"highlightSetter('91S203I0',true)\">是对客观事物的逻辑归纳,</em><em class='similar 91S203I1' onmouseover=\"highlightSetter('91S203I1',false)\" onmouseout=\"highlightSetter('91S203I1',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar 91S203I11' onmouseover=\"highlightSetter('91S203I11',false)\" onmouseout=\"highlightSetter('91S203I11',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 91S203I12' onmouseover=\"highlightSetter('91S203I12',false)\" onmouseout=\"highlightSetter('91S203I12',true)\">如正相关,</em><em class='similar 91S203I13' onmouseover=\"highlightSetter('91S203I13',false)\" onmouseout=\"highlightSetter('91S203I13',true)\">负相关。</em><em class='similar 91S203I14' onmouseover=\"highlightSetter('91S203I14',false)\" onmouseout=\"highlightSetter('91S203I14',true)\">数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发","datatype":"webpage","clcs":[],"similarityPercentage":"85.2%","self":false,"text":"<em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。也可以是离散的,如:符号、文字,称为数字数据。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em><em class='similar'>数据相关性是指数据之间存在某种关系。</em>大数据时代,数据相关分析因其具有可以快捷、高效地发"},{"profession":false,"keywords":[],"year":"","docid":"9000188274078611","author":"","university":"","source":"网页","title":"数据标签生成、模型训练、事件识别方法和装置","url":"http://www.doc88.com/p%2D99729934791774.html","reference":false,"similarScore":240,"teacher":"","textWithDynamicClass":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar 91S207I3' onmouseover=\"highlightSetter('91S207I3',false)\" onmouseout=\"highlightSetter('91S207I3',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar 91S207I4' onmouseover=\"highlightSetter('91S207I4',false)\" onmouseout=\"highlightSetter('91S207I4',true)\">如正相关,</em><em class='similar 91S207I5' onmouseover=\"highlightSetter('91S207I5',false)\" onmouseout=\"highlightSetter('91S207I5',true)\">负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。","datatype":"webpage","clcs":[],"similarityPercentage":"96.0%","self":false,"text":"据相关性,或者确定任意三组第一识别结果数据之间的数据相关性。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关等,</em>具体分析方法可以采用通用的分析算法,这里不做限定。"},{"profession":false,"keywords":[],"year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编；黄涛，吴强副主编；王社，魏郧华，胡凯，蔡振参编","university":"","source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":"","reference":false,"similarScore":237.46571,"teacher":"","textWithDynamicClass":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar 91S204I8' onmouseover=\"highlightSetter('91S204I8',false)\" onmouseout=\"highlightSetter('91S204I8',true)\">是事实或观察的结果,</em><em class='similar 91S204I9' onmouseover=\"highlightSetter('91S204I9',false)\" onmouseout=\"highlightSetter('91S204I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 91S204I10' onmouseover=\"highlightSetter('91S204I10',false)\" onmouseout=\"highlightSetter('91S204I10',true)\">是用于表示客观事物的���经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字","datatype":"book","clcs":["TP311.138"],"similarityPercentage":"60.9%","self":false,"text":"请参照后面的知识点进行。1.数据与数据库数据(d。,la):<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的原始素材。</em>数据是信息的表现形式和载体,可以是符号、文字、数字"},{"profession":false,"keywords":[],"year":"","docid":"9000118062415311","author":"","university":"","source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search","reference":false,"similarScore":237.4657,"teacher":"","textWithDynamicClass":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar 91S205I8' onmouseover=\"highlightSetter('91S205I8',false)\" onmouseout=\"highlightSetter('91S205I8',true)\">是事实或观察的结果,</em><em class='similar 91S205I9' onmouseover=\"highlightSetter('91S205I9',false)\" onmouseout=\"highlightSetter('91S205I9',true)\">是对客观事物的逻辑归纳,</em><em class='similar 91S205I10' onmouseover=\"highlightSetter('91S205I10',false)\" onmouseout=\"highlightSetter('91S205I10',true)\">是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"59.4%","self":false,"text":"符号声音图像等信息。二、讲授新课:1、数据:数据(data)<em class='similar'>是事实或观察的结果,</em><em class='similar'>是对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的未经加工的的原始素材。</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"},{"profession":false,"keywords":[],"year":"","docid":"9000131828806911","author":"","university":"","source":"网页","title":"浅谈Java中的数据_Hybeyond_的博客-CSDN博客","url":"https://blog.csdn.net/Hybeyond_/article/details/100088851","reference":false,"similarScore":201.72269,"teacher":"","textWithDynamicClass":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar 91S206I5' onmouseover=\"highlightSetter('91S206I5',false)\" onmouseout=\"highlightSetter('91S206I5',true)\">广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar 91S206I6' onmouseover=\"highlightSetter('91S206I6',false)\" onmouseout=\"highlightSetter('91S206I6',true)\">是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。","datatype":"webpage","clcs":[],"similarityPercentage":"63.0%","self":false,"text":"中那么神圣,其实数据就存在生活中的方方面面探讨:数据的定义:<em class='similar'>广义上的数据是指对客观事物的逻辑归纳,</em><em class='similar'>是用于表示客观事物的原始素材,</em>数据可以是连续的值,比如声音、图像,称为模拟数据。"}],"textWithDynamicClass":"<em class='similar T90I0' onmouseover=\"highlightSetter('T90I0',false)\" onmouseout=\"highlightSetter('T90I0',true)\">数据是对事实进行观察后产生的结果的描述,</em><em class='similar T90I1' onmouseover=\"highlightSetter('T90I1',false)\" onmouseout=\"highlightSetter('T90I1',true)\">是对客观事物一种数学逻辑归纳,</em><em class='similar T90I2' onmouseover=\"highlightSetter('T90I2',false)\" onmouseout=\"highlightSetter('T90I2',true)\">是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar T90I4' onmouseover=\"highlightSetter('T90I4',false)\" onmouseout=\"highlightSetter('T90I4',true)\">数据相关性是指数据之间存在某种关系,</em><em class='similar T90I5' onmouseover=\"highlightSetter('T90I5',false)\" onmouseout=\"highlightSetter('T90I5',true)\">如正相关,</em><em class='similar T90I6' onmouseover=\"highlightSetter('T90I6',false)\" onmouseout=\"highlightSetter('T90I6',true)\">负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.","replaceMap":{},"similar_word_count":79,"text":"<em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.","suggest":{"synonyms":[{"synonyms":["事例"],"keyword":"事实"},{"synonyms":["总结"],"keyword":"归纳"}],"keyword":["事实","客观事物","数学逻辑","归纳","原始素材","数据相关性","指数","正相关","负相关","样本数据","相关性分析","分析特征","预测值","重要程度","相关系数","皮尔逊","使用错误"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000187461126911","author":"","university":"","source":"网页","title":"油藏经营管理","url":"https://www.docin.com/p%2D920724272.html","reference":false,"similarScore":104,"teacher":"","textWithDynamicClass":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar 92S209I4' onmouseover=\"highlightSetter('92S209I4',false)\" onmouseout=\"highlightSetter('92S209I4',true)\">量纲一般也不同,</em><em class='similar 92S209I5' onmouseover=\"highlightSetter('92S209I5',false)\" onmouseout=\"highlightSetter('92S209I5',true)\">数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或","datatype":"webpage","clcs":[],"similarityPercentage":"61.2%","self":false,"text":"与母因素之间的关联度为它们之由于系统中各因素的物理意义不同,<em class='similar'>量纲一般也不同,</em><em class='similar'>数据取值范围差别较大。</em>因此,原始数据要进行无量纲化处理,一般采用初值化或"}],"textWithDynamicClass":"本研究共计提取了67项特征,<em class='similar T91I1' onmouseover=\"highlightSetter('T91I1',false)\" onmouseout=\"highlightSetter('T91I1',true)\">这些特征的数据取值范围差别很大,</em><em class='similar T91I2' onmouseover=\"highlightSetter('T91I2',false)\" onmouseout=\"highlightSetter('T91I2',true)\">量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。","replaceMap":{},"similar_word_count":22,"text":"本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。","suggest":{"synonyms":[{"synonyms":["合计"],"keyword":"共计"},{"synonyms":["广大"],"keyword":"宽大"},{"synonyms":["机械"],"keyword":"机器"}],"keyword":["共计","67项","取值范围","量纲","端口","宽大","数量级","预处理","机器","学习环境","特征工程","流水线","复用","数据集","快速处理"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000117476774611","author":"csdn","university":"","source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596","reference":false,"similarScore":320.97223,"teacher":"","textWithDynamicClass":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar 93S211I2' onmouseover=\"highlightSetter('93S211I2',false)\" onmouseout=\"highlightSetter('93S211I2',true)\">最重要也最需要应用到数据上的转换器,</em><em class='similar 93S211I3' onmouseover=\"highlightSetter('93S211I3',false)\" onmouseout=\"highlightSetter('93S211I3',true)\">就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,<em class='similar 93S211I5' onmouseover=\"highlightSetter('93S211I5',false)\" onmouseout=\"highlightSetter('93S211I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 93S211I6' onmouseover=\"highlightSetter('93S211I6',false)\" onmouseout=\"highlightSetter('93S211I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39","datatype":"webpage","clcs":[],"similarityPercentage":"65.5%","self":false,"text":"parse_output=True,就可以得到一个稀疏矩阵。<em class='similar'>最重要也最需要应用到数据上的转换器,</em><em class='similar'>就是特征缩放。</em>如果输入的数值属性具有非常大的比例差异,<em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样:房间总数的范围从6到39"},{"profession":false,"keywords":[],"year":"","docid":"9000143881533411","author":"","university":"","source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments","reference":false,"similarScore":311.05557,"teacher":"","textWithDynamicClass":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar 93S210I3' onmouseover=\"highlightSetter('93S210I3',false)\" onmouseout=\"highlightSetter('93S210I3',true)\">特征缩放,</em><em class='similar 93S210I4' onmouseover=\"highlightSetter('93S210I4',false)\" onmouseout=\"highlightSetter('93S210I4',true)\">如果输入的数值属性具有非常大的比例差异,</em><em class='similar 93S210I5' onmouseover=\"highlightSetter('93S210I5',false)\" onmouseout=\"highlightSetter('93S210I5',true)\">往往导致机器学习算法的性能表现不佳,</em><em class='similar 93S210I6' onmouseover=\"highlightSetter('93S210I6',false)\" onmouseout=\"highlightSetter('93S210I6',true)\">当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393","datatype":"webpage","clcs":[],"similarityPercentage":"63.5%","self":false,"text":"LabelBinarizer构造函数,可以得到稀疏矩阵。3.<em class='similar'>特征缩放,</em><em class='similar'>如果输入的数值属性具有非常大的比例差异,</em><em class='similar'>往往导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例。</em>案例中的房屋数据就是这样,房间总数范围从6到393"}],"textWithDynamicClass":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar T92I2' onmouseover=\"highlightSetter('T92I2',false)\" onmouseout=\"highlightSetter('T92I2',true)\">所以需要对特征数据进行的一项重要操作就是特征缩放。</em><em class='similar T92I3' onmouseover=\"highlightSetter('T92I3',false)\" onmouseout=\"highlightSetter('T92I3',true)\">若输入的样本的特征数据存在较大的数值差异,</em><em class='similar T92I4' onmouseover=\"highlightSetter('T92I4',false)\" onmouseout=\"highlightSetter('T92I4',true)\">往往会导致机器学习算法的性能表现不佳,</em><em class='similar T92I5' onmouseover=\"highlightSetter('T92I5',false)\" onmouseout=\"highlightSetter('T92I5',true)\">当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。","replaceMap":{},"similar_word_count":75,"text":"由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em><em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em><em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。","suggest":{"synonyms":[],"keyword":["差异性","数据差异","敏感度","特征数据","特征缩放","机器学习算法","性能表现","特例","提取特征","端口","位宽","数量级"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000110791518511","author":"csdn","university":"","source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516","reference":false,"similarScore":80.35715,"teacher":"","textWithDynamicClass":"ng)和标准化(standardization)转换流水线:<em class='similar 94S212I13' onmouseover=\"highlightSetter('94S212I13',false)\" onmouseout=\"highlightSetter('94S212I13',true)\">利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们","datatype":"webpage","clcs":[],"similarityPercentage":"38.3%","self":false,"text":"ng)和标准化(standardization)转换流水线:<em class='similar'>利用Scikit-Learn提供的类Pipeline来实现一个数据转换流水线。</em>10.选择并训练模型在训练集上训练和评估在这里我们"}],"textWithDynamicClass":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar T93I1' onmouseover=\"highlightSetter('T93I1',false)\" onmouseout=\"highlightSetter('T93I1',true)\">所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。","replaceMap":{},"similar_word_count":46,"text":"由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。","suggest":{"synonyms":[],"keyword":["预处理","scikit","learn","pipeline","流水线","转换器","4.18所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000123319620811","author":"","university":"","source":"网页","title":"基于神经网络的磁瓦表面缺陷检测识别_刘畅 - 道客巴巴","url":"https://www.doc88.com/p%2D6129946121758.html","reference":false,"similarScore":62.592594,"teacher":"","textWithDynamicClass":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar 97S215I8' onmouseover=\"highlightSetter('97S215I8',false)\" onmouseout=\"highlightSetter('97S215I8',true)\">使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中","datatype":"webpage","clcs":[],"similarityPercentage":"41.7%","self":false,"text":"训练过程中使用提前终止正则化手段。为了对模型进行可靠的评估,<em class='similar'>使用5折交叉验证来验证本文模型。</em>将训练集和验证集总体平均分为5个分区,将模型在其中"}],"textWithDynamicClass":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全��覆盖<em class='similar T96I0' onmouseover=\"highlightSetter('T96I0',false)\" onmouseout=\"highlightSetter('T96I0',true)\">,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。","replaceMap":{},"similar_word_count":28,"text":"首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。","suggest":{"synonyms":[],"keyword":["5折","交叉验证","29","采用标准","参数对","lut","预测结果","4.20所"]}},{"sources":[{"profession":false,"keywords":[],"year":"","docid":"9000206973298911","author":"","university":"","source":"网页","title":"一种高空抛物的检测方法及装置与流程","url":"http://www.xjishu.com/zhuanli/55/202011159027.html","reference":false,"similarScore":92.5641,"teacher":"","textWithDynamicClass":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar 98S217I4' onmouseover=\"highlightSetter('98S217I4',false)\" onmouseout=\"highlightSetter('98S217I4',true)\">重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar 98S217I5' onmouseover=\"highlightSetter('98S217I5',false)\" onmouseout=\"highlightSetter('98S217I5',true)\">达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可","datatype":"webpage","clcs":[],"similarityPercentage":"28.9%","self":false,"text":"通过误差函数对预设的神经网络深度学习网络进行参数调整。这样,<em class='similar'>重复上述步骤对神经网络深度学习网络进行参数调整,</em><em class='similar'>达到模型训练的目的,</em>从而得到上述所述的神经网络识别模型。[0078]可"},{"profession":false,"keywords":[],"year":"","docid":"9000120755765111","author":"","university":"","source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search","reference":false,"similarScore":75.73964,"teacher":"","textWithDynamicClass":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar 98S216I9' onmouseover=\"highlightSetter('98S216I9',false)\" onmouseout=\"highlightSetter('98S216I9',true)\">模型训练,</em><em class='similar 98S216I10' onmouseover=\"highlightSetter('98S216I10',false)\" onmouseout=\"highlightSetter('98S216I10',true)\">输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar 98S216I11' onmouseover=\"highlightSetter('98S216I11',false)\" onmouseout=\"highlightSetter('98S216I11',true)\">训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心","datatype":"webpage","clcs":[],"similarityPercentage":"25.2%","self":false,"text":"组织构建数据集;步骤三,模型构建,构建深度神经网络;步骤四,<em class='similar'>模型训练,</em><em class='similar'>输入处理以及重构后的数据到网络中进行参数调整,</em><em class='similar'>训练模型;</em>步骤五,模型输出,利用训练过后的模型筛查心动过速心"}],"textWithDynamicClass":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar T97I4' onmouseover=\"highlightSetter('T97I4',false)\" onmouseout=\"highlightSetter('T97I4',true)\">所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","replaceMap":{},"similar_word_count":40,"text":"通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em>","suggest":{"synonyms":[{"synonyms":["注意"],"keyword":"着重"}],"keyword":["特征提取","样本集","线性回归","决策树","模型预测","较差","随机森林","mlp","标准参数","预测性能","着重","神经网络","模型训练","参数调整"]}}],"word_count":39759,"similarity":0.133,"similarity_copy":0.133,"similarity_self":0},{"word_pro_count":0,"similarity_ref":0,"chapter":"总结与展望","word_similar_count":0,"word_ref_count":0,"sources":[],"similarity_pro":0,"word_copy_count":0,"word_self_count":0,"similar_paragraphs":[],"word_count":1545,"similarity":0,"similarity_copy":0,"similarity_self":0}],"similarity_custom":0,"similarity_pro":0,"last_part_similar_count":4024,"word_copy_count":5285,"chapter_similar_count":1,"chapter_min_similar_word_count":5285,"front_part_similar_count":1261,"chapter_max_similar_word_count":5285,"word_self_count":0,"TSetForS_Str":"{◑31S58I6◑:[◑T30I0◑],◑67S146I11◑:[◑T66I5◑],◑91S205I9◑:[◑T90I1◑],◑48S99I6◑:[◑T47I3◑,◑T47I7◑],◑24S40I5◑:[◑T23I3◑],◑48S99I5◑:[◑T47I6◑],◑80S174I5◑:[◑T79I1◑],◑24S40I4◑:[◑T23I4◑],◑48S99I4◑:[◑T47I5◑],◑80S174I4◑:[◑T79I0◑],◑48S99I3◑:[◑T47I4◑],◑91S205I8◑:[◑T90I0◑],◑24S40I6◑:[◑T23I5◑,◑T23I4◑],◑48S99I2◑:[◑T47I1◑],◑44S89I8◑:[◑T43I2◑],◑48S99I1◑:[◑T47I0◑],◑44S89I7◑:[◑T43I1◑],◑48S99I0◑:[◑T47I6◑],◑24S40I3◑:[◑T23I3◑],◑44S89I6◑:[◑T43I0◑],◑67S146I10◑:[◑T66I4◑],◑44S89I9◑:[◑T43I2◑],◑42S81I5◑:[◑T41I4◑],◑42S81I6◑:[◑T41I5◑],◑42S81I3◑:[◑T41I2◑,◑T41I7◑],◑42S81I4◑:[◑T41I3◑],◑42S81I9◑:[◑T41I6◑],◑42S81I7◑:[◑T41I5◑],◑58S116I13◑:[◑T57I4◑],◑42S81I8◑:[◑T41I6◑],◑63S132I8◑:[◑T62I4◑],◑19S30I6◑:[◑T18I6◑],◑19S30I5◑:[◑T18I5◑],◑19S30I3◑:[◑T18I3◑],◑23S37I11◑:[◑T22I5◑,◑T22I4◑],◑36S64I9◑:[◑T35I1◑],◑36S64I7◑:[◑T35I0◑],◑36S64I8◑:[◑T35I0◑],◑23S37I14◑:[◑T22I5◑],◑33S60I6◑:[◑T32I1◑],◑33S60I5◑:[◑T32I0◑],◑80S174I6◑:[◑T79I1◑],◑31S57I5◑:[◑T30I0◑],◑91S204I9◑:[◑T90I1◑],◑31S57I4◑:[◑T30I0◑],◑91S204I8◑:[◑T90I0◑],◑75S156I15◑:[◑T74I2◑],◑44S88I6◑:[◑T43I2◑],◑75S156I12◑:[◑T74I1◑],◑75S156I11◑:[◑T74I1◑,◑T74I0◑,◑T74I2◑],◑75S156I14◑:[◑T74I2◑],◑75S156I13◑:[◑T74I0◑],◑85S186I7◑:[◑T84I2◑],◑85S186I5◑:[◑T84I1◑,◑T84I6◑],◑85S186I4◑:[◑T84I1◑,◑T84I0◑],◑19S31I7◑:[◑T18I6◑],◑19S31I6◑:[◑T18I5◑],◑19S31I4◑:[◑T18I3◑],◑8S13I4◑:[◑T7I4◑],◑8S13I6◑:[◑T7I5◑],◑8S13I7◑:[◑T7I6◑],◑44S88I5◑:[◑T43I1◑],◑44S88I4◑:[◑T43I0◑],◑36S63I4◑:[◑T35I2◑],◑36S63I3◑:[◑T35I1◑],◑8S13I0◑:[◑T7I0◑],◑8S13I2◑:[◑T7I2◑],◑8S13I3◑:[◑T7I3◑],◑31S56I8◑:[◑T30I0◑],◑78S168I3◑:[◑T77I5◑],◑82S179I6◑:[◑T81I4◑,◑T81I3◑],◑82S179I5◑:[◑T81I2◑],◑82S179I4◑:[◑T81I2◑],◑91S207I4◑:[◑T90I5◑],◑91S207I3◑:[◑T90I4◑],◑78S168I4◑:[◑T77I6◑],◑91S207I5◑:[◑T90I6◑],◑20S32I6◑:[◑T19I1◑],◑20S32I5◑:[◑T19I0◑],◑20S32I8◑:[◑T19I4◑],◑44S87I7◑:[◑T43I2◑],◑20S32I9◑:[◑T19I5◑],◑39S69I9◑:[◑T38I2◑],◑22S34I10◑:[◑T21I2◑],◑5S9I5◑:[◑T4I0◑],◑5S9I7◑:[◑T4I2◑],◑3S7I11◑:[◑T2I3◑],◑53S109I16◑:[◑T52I1◑],◑53S109I15◑:[◑T52I0◑],◑1S5I1◑:[◑T0I10◑],◑53S109I18◑:[◑T52I2◑],◑3S7I10◑:[◑T2I2◑],◑53S109I17◑:[◑T52I3◑],◑1S5I3◑:[◑T0I8◑],◑1S5I2◑:[◑T0I9◑],◑53S109I19◑:[◑T52I4◑],◑39S68I7◑:[◑T38I4◑],◑39S68I6◑:[◑T38I3◑],◑39S68I8◑:[◑T38I5◑],◑39S68I3◑:[◑T38I0◑],◑44S87I6◑:[◑T43I1◑],◑44S87I5◑:[◑T43I0◑],◑39S68I5◑:[◑T38I2◑],◑39S68I4◑:[◑T38I1◑],◑58S119I8◑:[◑T57I1◑,◑T57I2◑,◑T57I3◑,◑T57I4◑],◑31S55I9◑:[◑T30I1◑],◑53S110I15◑:[◑T52I1◑],◑82S178I6◑:[◑T81I4◑,◑T81I3◑],◑82S178I5◑:[◑T81I2◑],◑82S178I4◑:[◑T81I2◑],◑31S55I5◑:[◑T30I0◑],◑78S167I8◑:[◑T77I6◑],◑91S206I5◑:[◑T90I1◑],◑12S18I9◑:[◑T11I5◑,◑T11I4◑],◑31S55I4◑:[◑T30I0◑],◑78S167I7◑:[◑T77I5◑],◑91S206I6◑:[◑T90I2◑],◑12S18I5◑:[◑T11I1◑],◑12S18I6◑:[◑T11I2◑],◑62S125I11◑:[◑T61I3◑],◑12S18I7◑:[◑T11I3◑],◑62S125I12◑:[◑T61I3◑],◑62S125I10◑:[◑T61I3◑],◑27S47I13◑:[◑T26I1◑],◑88S200I4◑:[◑T87I2◑],◑27S47I12◑:[◑T26I2◑],◑88S200I5◑:[◑T87I0◑],◑78S167I9◑:[◑T77I7◑],◑10S15I4◑:[◑T9I1◑],◑46S92I6◑:[◑T45I1◑],◑10S15I7◑:[◑T9I5◑],◑10S15I6◑:[◑T9I4◑],◑46S92I7◑:[◑T45I0◑],◑39S69I8◑:[◑T38I1◑],◑39S69I7◑:[◑T38I0◑],◑66S140I8◑:[◑T65I2◑],◑61S122I7◑:[◑T60I2◑],◑61S122I6◑:[◑T60I1◑],◑39S72I10◑:[◑T38I2◑],◑78S166I5◑:[◑T77I5◑],◑39S72I11◑:[◑T38I3◑],◑78S166I4◑:[◑T77I1◑],◑27S47I6◑:[◑T26I1◑],◑39S72I12◑:[◑T38I4◑],◑78S166I3◑:[◑T77I1◑],◑27S47I7◑:[◑T26I1◑],◑38S67I5◑:[◑T37I3◑],◑39S72I13◑:[◑T38I5◑],◑31S54I6◑:[◑T30I1◑],◑38S67I7◑:[◑T37I0◑],◑38S67I8◑:[◑T37I1◑],◑78S166I7◑:[◑T77I7◑],◑31S54I7◑:[◑T30I2◑],◑38S67I9◑:[◑T37I6◑],◑78S166I6◑:[◑T77I6◑],◑48S101I3◑:[◑T47I4◑],◑56S114I9◑:[◑T55I1◑],◑62S123I10◑:[◑T61I3◑],◑48S101I5◑:[◑T47I6◑],◑48S101I4◑:[◑T47I5◑],◑56S114I8◑:[◑T55I0◑],◑62S123I14◑:[◑T61I5◑,◑T61I4◑],◑48S101I6◑:[◑T47I3◑,◑T47I7◑],◑62S123I13◑:[◑T61I5◑,◑T61I4◑],◑62S123I16◑:[◑T61I6◑],◑62S123I15◑:[◑T61I6◑],◑24S39I11◑:[◑T23I5◑,◑T23I4◑],◑20S32I10◑:[◑T19I7◑],◑20S32I11◑:[◑T19I4◑,◑T19I8◑],◑85S189I3◑:[◑T84I1◑,◑T84I6◑],◑85S189I2◑:[◑T84I0◑],◑62S124I3◑:[◑T61I3◑],◑62S124I2◑:[◑T61I2◑],◑62S124I8◑:[◑T61I6◑],◑41S78I7◑:[◑T40I0◑],◑62S124I7◑:[◑T61I5◑,◑T61I4◑],◑41S78I8◑:[◑T40I1◑],◑62S124I6◑:[◑T61I5◑,◑T61I4◑],◑62S124I5◑:[◑T61I4◑],◑62S124I9◑:[◑T61I6◑],◑22S34I8◑:[◑T21I2◑],◑22S34I7◑:[◑T21I1◑],◑58S117I6◑:[◑T57I2◑,◑T57I3◑,◑T57I4◑],◑55S113I5◑:[◑T54I2◑,◑T54I4◑],◑31S54I4◑:[◑T30I0◑],◑31S54I3◑:[◑T30I0◑],◑55S113I1◑:[◑T54I0◑],◑27S48I3◑:[◑T26I1◑],◑78S165I6◑:[◑T77I7◑],◑27S48I4◑:[◑T26I1◑],◑78S165I5◑:[◑T77I6◑],◑27S48I5◑:[◑T26I1◑],◑54S112I7◑:[◑T53I0◑],◑78S165I4◑:[◑T77I5◑],◑78S165I3◑:[◑T77I1◑],◑31S53I7◑:[◑T30I1◑],◑48S96I8◑:[◑T47I7◑],◑9S14I5◑:[◑T8I4◑],◑31S53I6◑:[◑T30I0◑],◑48S96I7◑:[◑T47I6◑],◑80S171I7◑:[◑T79I2◑],◑9S14I6◑:[◑T8I5◑],◑48S96I6◑:[◑T47I5◑],◑80S171I6◑:[◑T79I1◑],◑9S14I7◑:[◑T8I7◑],◑31S53I8◑:[◑T30I2◑],◑48S96I5◑:[◑T47I4◑],◑80S171I5◑:[◑T79I0◑],◑48S96I4◑:[◑T47I3◑],◑48S100I4◑:[◑T47I3◑,◑T47I6◑,◑T47I7◑],◑48S100I3◑:[◑T47I6◑],◑48S96I2◑:[◑T47I1◑],◑9S14I3◑:[◑T8I2◑,◑T8I1◑],◑48S96I1◑:[◑T47I0◑],◑78S165I2◑:[◑T77I1◑],◑48S100I2◑:[◑T47I5◑],◑52S108I14◑:[◑T51I1◑],◑52S108I13◑:[◑T51I2◑],◑56S114I12◑:[◑T55I4◑],◑41S77I0◑:[◑T40I0◑],◑41S77I1◑:[◑T40I1◑],◑82S182I10◑:[◑T81I4◑,◑T81I3◑],◑15S22I8◑:[◑T14I1◑],◑15S22I7◑:[◑T14I1◑],◑32S59I3◑:[◑T31I3◑],◑34S61I8◑:[◑T33I0◑],◑32S59I4◑:[◑T31I4◑],◑34S61I9◑:[◑T33I0◑],◑85S186I13◑:[◑T84I6◑],◑32S59I5◑:[◑T31I5◑],◑39S71I10◑:[◑T38I0◑],◑56S114I10◑:[◑T55I3◑],◑64S137I8◑:[◑T63I2◑],◑53S111I4◑:[◑T52I1◑],◑1S0I6◑:[◑T0I5◑],◑1S0I7◑:[◑T0I4◑],◑1S0I8◑:[◑T0I5◑],◑7S12I5◑:[◑T6I2◑],◑7S12I4◑:[◑T6I2◑],◑41S77I3◑:[◑T40I2◑],◑53S111I6◑:[◑T52I4◑],◑62S125I9◑:[◑T61I3◑],◑53S111I5◑:[◑T52I1◑,◑T52I2◑,◑T52I3◑],◑62S125I8◑:[◑T61I2◑],◑33S60I13◑:[◑T32I5◑,◑T32I4◑],◑33S60I12◑:[◑T32I2◑],◑58S118I2◑:[◑T57I2◑],◑4S8I11◑:[◑T3I6◑],◑92S209I4◑:[◑T91I2◑],◑4S8I12◑:[◑T3I7◑],◑92S209I5◑:[◑T91I1◑],◑31S53I5◑:[◑T30I0◑],◑65S138I3◑:[◑T64I0◑],◑65S138I4◑:[◑T64I0◑],◑48S97I9◑:[◑T47I3◑,◑T47I6◑,◑T47I7◑],◑78S164I5◑:[◑T77I7◑],◑48S97I8◑:[◑T47I6◑],◑78S164I4◑:[◑T77I6◑],◑48S97I7◑:[◑T47I5◑],◑63S127I6◑:[◑T62I1◑],◑48S97I6◑:[◑T47I4◑],◑80S172I6◑:[◑T79I0◑],◑48S97I5◑:[◑T47I3◑],◑63S127I8◑:[◑T62I3◑],◑63S127I7◑:[◑T62I2◑,◑T62I3◑],◑48S97I3◑:[◑T47I1◑],◑48S97I2◑:[◑T47I0◑],◑78S164I1◑:[◑T77I5◑],◑78S164I0◑:[◑T77I0◑,◑T77I1◑],◑30S51I13◑:[◑T29I7◑],◑85S187I8◑:[◑T84I2◑],◑41S76I3◑:[◑T40I1◑],◑42S81I10◑:[◑T41I7◑],◑63S127I9◑:[◑T62I4◑],◑24S39I8◑:[◑T23I2◑],◑30S51I11◑:[◑T29I6◑],◑85S187I6◑:[◑T84I1◑,◑T84I6◑],◑30S51I10◑:[◑T29I6◑],◑85S187I5◑:[◑T84I1◑,◑T84I0◑],◑42S81I12◑:[◑T41I7◑],◑67S145I10◑:[◑T66I6◑],◑67S145I11◑:[◑T66I7◑],◑24S38I2◑:[◑T23I2◑],◑67S145I12◑:[◑T66I8◑],◑67S145I13◑:[◑T66I9◑],◑67S145I14◑:[◑T66I10◑],◑17S24I7◑:[◑T16I3◑],◑62S126I6◑:[◑T61I4◑],◑62S126I5◑:[◑T61I4◑],◑41S76I4◑:[◑T40I2◑],◑50S103I12◑:[◑T49I0◑],◑50S103I13◑:[◑T49I0◑],◑17S24I5◑:[◑T16I2◑,◑T16I1◑],◑62S126I8◑:[◑T61I5◑],◑62S126I7◑:[◑T61I5◑],◑22S36I5◑:[◑T21I0◑],◑80S172I9◑:[◑T79I3◑],◑80S172I8◑:[◑T79I2◑],◑85S187I19◑:[◑T84I6◑],◑63S128I1◑:[◑T62I4◑,◑T62I0◑],◑48S98I8◑:[◑T47I7◑],◑63S128I3◑:[◑T62I2◑,◑T62I3◑],◑78S163I6◑:[◑T77I5◑],◑48S98I7◑:[◑T47I6◑],◑63S128I2◑:[◑T62I1◑],◑78S163I5◑:[◑T77I1◑],◑48S98I6◑:[◑T47I5◑],◑63S128I5◑:[◑T62I4◑],◑80S173I6◑:[◑T79I1◑],◑48S98I5◑:[◑T47I4◑],◑63S128I4◑:[◑T62I3◑],◑80S173I5◑:[◑T79I0◑],◑48S98I4◑:[◑T47I3◑],◑63S128I7◑:[◑T62I7◑],◑63S128I6◑:[◑T62I6◑],◑78S163I9◑:[◑T77I6◑],◑48S98I2◑:[◑T47I1◑],◑48S98I1◑:[◑T47I0◑],◑78S163I4◑:[◑T77I1◑],◑85S188I9◑:[◑T84I6◑],◑43S82I11◑:[◑T42I5◑],◑85S188I7◑:[◑T84I2◑],◑43S82I14◑:[◑T42I7◑],◑42S80I0◑:[◑T41I0◑],◑43S82I12◑:[◑T42I5◑],◑43S82I13◑:[◑T42I6◑],◑42S80I6◑:[◑T41I2◑,◑T41I7◑],◑42S80I7◑:[◑T41I3◑],◑85S188I5◑:[◑T84I1◑,◑T84I6◑],◑85S188I4◑:[◑T84I0◑],◑42S80I8◑:[◑T41I4◑],◑42S80I9◑:[◑T41I5◑],◑19S29I12◑:[◑T18I6◑],◑19S29I13◑:[◑T18I6◑],◑1S2I5◑:[◑T0I8◑],◑1S2I6◑:[◑T0I10◑,◑T0I5◑,◑T0I6◑],◑34S61I10◑:[◑T33I2◑,◑T33I1◑],◑19S29I10◑:[◑T18I5◑],◑19S29I11◑:[◑T18I6◑],◑58S116I7◑:[◑T57I2◑],◑80S173I9◑:[◑T79I3◑],◑80S173I7◑:[◑T79I2◑],◑27S47I8◑:[◑T26I1◑],◑63S129I4◑:[◑T62I1◑],◑85S188I10◑:[◑T84I6◑],◑63S129I6◑:[◑T62I2◑,◑T62I3◑],◑63S129I5◑:[◑T62I2◑,◑T62I1◑,◑T62I3◑],◑43S85I2◑:[◑T42I2◑],◑25S44I9◑:[◑T24I2◑,◑T24I1◑,◑T24I0◑],◑82S180I5◑:[◑T81I3◑,◑T81I2◑],◑82S180I6◑:[◑T81I4◑,◑T81I3◑],◑39S70I8◑:[◑T38I4◑],◑25S41I17◑:[◑T24I6◑,◑T24I4◑],◑39S70I7◑:[◑T38I3◑],◑47S95I0◑:[◑T46I0◑],◑25S41I16◑:[◑T24I5◑,◑T24I3◑],◑64S134I6◑:[◑T63I2◑],◑39S70I9◑:[◑T38I5◑],◑39S70I4◑:[◑T38I0◑],◑64S134I9◑:[◑T63I3◑,◑T63I4◑],◑39S70I6◑:[◑T38I2◑],◑39S70I5◑:[◑T38I1◑],◑25S41I10◑:[◑T24I1◑],◑81S175I5◑:[◑T80I1◑],◑67S142I3◑:[◑T66I2◑,◑T66I4◑,◑T66I3◑,◑T66I5◑],◑25S41I13◑:[◑T24I5◑,◑T24I3◑],◑67S142I2◑:[◑T66I0◑],◑25S41I12◑:[◑T24I2◑],◑25S41I11◑:[◑T24I0◑],◑67S142I6◑:[◑T66I8◑,◑T66I9◑,◑T66I10◑],◑67S142I5◑:[◑T66I7◑],◑67S142I4◑:[◑T66I6◑],◑39S69I11◑:[◑T38I4◑],◑39S69I10◑:[◑T38I3◑],◑25S43I6◑:[◑T24I2◑,◑T24I1◑,◑T24I0◑],◑39S69I13◑:[◑T38I5◑],◑63S128I10◑:[◑T62I6◑],◑67S142I9◑:[◑T66I0◑],◑39S69I12◑:[◑T38I4◑],◑67S142I8◑:[◑T66I1◑],◑16S23I1◑:[◑T15I1◑],◑16S23I3◑:[◑T15I0◑],◑42S80I10◑:[◑T41I6◑],◑42S80I13◑:[◑T41I7◑],◑11S17I9◑:[◑T10I0◑],◑42S80I11◑:[◑T41I6◑],◑42S80I12◑:[◑T41I7◑],◑98S216I11◑:[◑T97I4◑],◑91S203I11◑:[◑T90I4◑],◑98S216I10◑:[◑T97I4◑],◑43S86I6◑:[◑T42I7◑],◑39S68I12◑:[◑T38I0◑],◑39S71I7◑:[◑T38I4◑],◑91S203I14◑:[◑T90I4◑],◑24S38I7◑:[◑T23I5◑,◑T23I4◑],◑39S71I6◑:[◑T38I3◑],◑50S105I8◑:[◑T49I1◑],◑64S133I6◑:[◑T63I2◑],◑64S133I7◑:[◑T63I0◑],◑91S203I12◑:[◑T90I5◑],◑39S71I8◑:[◑T38I5◑],◑91S203I13◑:[◑T90I6◑],◑24S38I4◑:[◑T23I2◑],◑24S38I3◑:[◑T23I2◑],◑21S33I5◑:[◑T20I0◑],◑39S71I5◑:[◑T38I2◑],◑39S71I4◑:[◑T38I1◑,◑T38I0◑],◑71S150I6◑:[◑T70I6◑],◑81S176I4◑:[◑T80I1◑],◑21S33I4◑:[◑T20I0◑],◑88S199I7◑:[◑T87I0◑],◑67S143I2◑:[◑T66I0◑],◑88S199I5◑:[◑T87I1◑],◑67S143I1◑:[◑T66I1◑],◑88S199I3◑:[◑T87I1◑],◑88S199I4◑:[◑T87I2◑],◑25S42I5◑:[◑T24I5◑,◑T24I3◑],◑67S143I6◑:[◑T66I5◑],◑25S42I6◑:[◑T24I6◑,◑T24I4◑],◑67S143I5◑:[◑T66I4◑],◑67S143I4◑:[◑T66I3◑],◑25S42I4◑:[◑T24I2◑],◑67S143I3◑:[◑T66I2◑],◑67S143I9◑:[◑T66I8◑],◑25S42I7◑:[◑T24I5◑,◑T24I3◑],◑67S143I8◑:[◑T66I7◑],◑25S42I8◑:[◑T24I6◑,◑T24I4◑],◑67S143I7◑:[◑T66I6◑],◑43S83I11◑:[◑T42I7◑],◑43S83I10◑:[◑T42I6◑],◑76S160I3◑:[◑T75I2◑,◑T75I4◑,◑T75I6◑],◑35S62I5◑:[◑T34I1◑],◑35S62I4◑:[◑T34I1◑,◑T34I0◑],◑43S83I0◑:[◑T42I2◑],◑73S154I15◑:[◑T72I2◑],◑35S62I6◑:[◑T34I1◑],◑97S215I8◑:[◑T96I0◑],◑73S154I13◑:[◑T72I0◑],◑85S190I11◑:[◑T84I1◑,◑T84I6◑],◑43S83I9◑:[◑T42I5◑],◑85S190I15◑:[◑T84I6◑],◑43S83I8◑:[◑T42I5◑],◑85S190I13◑:[◑T84I4◑],◑43S83I6◑:[◑T42I4◑],◑85S190I12◑:[◑T84I1◑,◑T84I6◑],◑35S62I3◑:[◑T34I1◑],◑85S190I16◑:[◑T84I6◑],◑47S93I9◑:[◑T46I0◑],◑47S93I7◑:[◑T46I1◑],◑47S93I8◑:[◑T46I0◑],◑18S28I3◑:[◑T17I5◑],◑39S72I9◑:[◑T38I1◑],◑18S28I5◑:[◑T17I3◑],◑44S90I3◑:[◑T43I0◑],◑44S90I4◑:[◑T43I1◑],◑44S90I5◑:[◑T43I2◑],◑64S136I6◑:[◑T63I2◑],◑47S93I6◑:[◑T46I1◑],◑71S150I5◑:[◑T70I5◑],◑81S177I3◑:[◑T80I1◑],◑88S198I8◑:[◑T87I0◑],◑63S130I10◑:[◑T62I2◑,◑T62I1◑],◑73S154I8◑:[◑T72I1◑],◑85S190I22◑:[◑T84I4◑],◑88S198I6◑:[◑T87I1◑],◑7S11I3◑:[◑T6I2◑],◑25S41I3◑:[◑T24I3◑],◑25S41I0◑:[◑T24I0◑],◑73S154I22◑:[◑T72I2◑],◑88S198I4◑:[◑T87I1◑],◑15S22I10◑:[◑T14I1◑],◑88S198I5◑:[◑T87I2◑],◑91S204I10◑:[◑T90I2◑],◑82S183I7◑:[◑T81I4◑,◑T81I3◑],◑73S154I7◑:[◑T72I0◑],◑73S154I1◑:[◑T72I0◑],◑25S41I8◑:[◑T24I1◑,◑T24I0◑],◑73S154I2◑:[◑T72I1◑],◑25S41I9◑:[◑T24I1◑],◑73S154I3◑:[◑T72I2◑],◑43S85I12◑:[◑T42I7◑],◑73S154I20◑:[◑T72I0◑],◑93S210I3◑:[◑T92I3◑],◑73S154I21◑:[◑T72I1◑],◑93S210I4◑:[◑T92I3◑],◑56S114I20◑:[◑T55I3◑],◑19S29I7◑:[◑T18I2◑,◑T18I1◑],◑93S210I5◑:[◑T92I4◑],◑19S29I8◑:[◑T18I3◑],◑24S38I13◑:[◑T23I0◑],◑93S210I6◑:[◑T92I5◑],◑25S43I20◑:[◑T24I5◑],◑73S153I22◑:[◑T72I2◑],◑73S153I21◑:[◑T72I1◑],◑43S84I6◑:[◑T42I7◑],◑43S84I5◑:[◑T42I2◑],◑43S84I1◑:[◑T42I6◑],◑47S94I8◑:[◑T46I1◑],◑47S94I9◑:[◑T46I0◑],◑82S181I2◑:[◑T81I2◑],◑82S181I3◑:[◑T81I2◑],◑39S73I9◑:[◑T38I5◑],◑82S181I4◑:[◑T81I4◑,◑T81I3◑],◑39S73I8◑:[◑T38I5◑],◑37S66I5◑:[◑T36I3◑],◑39S73I5◑:[◑T38I3◑],◑37S66I4◑:[◑T36I2◑],◑39S73I4◑:[◑T38I2◑,◑T38I1◑],◑37S66I3◑:[◑T36I1◑],◑39S73I7◑:[◑T38I4◑],◑73S153I20◑:[◑T72I0◑],◑39S73I6◑:[◑T38I4◑],◑50S103I6◑:[◑T49I3◑],◑37S66I7◑:[◑T36I5◑,◑T36I4◑],◑39S73I3◑:[◑T38I0◑],◑25S43I14◑:[◑T24I6◑],◑62S123I9◑:[◑T61I3◑],◑62S123I8◑:[◑T61I3◑],◑82S182I8◑:[◑T81I2◑],◑62S123I7◑:[◑T61I3◑],◑73S153I7◑:[◑T72I0◑],◑82S182I9◑:[◑T81I2◑],◑62S123I6◑:[◑T61I2◑],◑73S153I8◑:[◑T72I1◑],◑41S79I1◑:[◑T40I1◑],◑67S143I11◑:[◑T66I10◑],◑73S153I1◑:[◑T72I0◑],◑41S79I2◑:[◑T40I1◑],◑67S143I10◑:[◑T66I9◑],◑73S153I2◑:[◑T72I1◑],◑73S153I3◑:[◑T72I2◑],◑93S211I2◑:[◑T92I2◑],◑93S211I3◑:[◑T92I2◑],◑93S211I6◑:[◑T92I5◑],◑93S211I5◑:[◑T92I4◑],◑22S35I26◑:[◑T21I2◑],◑25S44I10◑:[◑T24I5◑,◑T24I3◑],◑25S44I11◑:[◑T24I5◑,◑T24I3◑],◑6S10I5◑:[◑T5I2◑],◑91S205I10◑:[◑T90I2◑],◑22S35I22◑:[◑T21I2◑],◑6S10I4◑:[◑T5I0◑,◑T5I1◑],◑80S171I10◑:[◑T79I3◑],◑23S37I8◑:[◑T22I5◑],◑22S35I20◑:[◑T21I1◑],◑22S35I21◑:[◑T21I1◑],◑60S121I8◑:[◑T59I1◑,◑T59I2◑],◑18S26I4◑:[◑T17I3◑],◑60S121I6◑:[◑T59I0◑],◑18S26I3◑:[◑T17I2◑],◑73S153I15◑:[◑T72I2◑],◑2S6I9◑:[◑T1I6◑],◑2S6I8◑:[◑T1I5◑],◑73S153I13◑:[◑T72I0◑],◑2S6I4◑:[◑T1I2◑],◑14S20I7◑:[◑T13I0◑],◑67S146I7◑:[◑T66I0◑,◑T66I11◑],◑14S20I6◑:[◑T13I0◑],◑30S51I7◑:[◑T29I4◑],◑30S51I8◑:[◑T29I4◑],◑67S146I9◑:[◑T66I3◑],◑89S201I4◑:[◑T88I0◑],◑67S146I8◑:[◑T66I2◑],◑89S201I5◑:[◑T88I1◑,◑T88I5◑],◑29S50I4◑:[◑T28I4◑],◑29S50I2◑:[◑T28I1◑],◑29S50I3◑:[◑T28I2◑],◑4S8I6◑:[◑T3I1◑],◑4S8I5◑:[◑T3I0◑],◑89S201I11◑:[◑T88I3◑],◑89S201I10◑:[◑T88I2◑],◑4S8I9◑:[◑T3I4◑],◑43S82I5◑:[◑T42I2◑],◑30S51I6◑:[◑T29I0◑],◑18S27I3◑:[◑T17I2◑],◑18S27I4◑:[◑T17I3◑],◑41S78I10◑:[◑T40I2◑],◑98S216I9◑:[◑T97I4◑],◑14S21I2◑:[◑T13I0◑],◑14S21I3◑:[◑T13I0◑],◑80S172I16◑:[◑T79I3◑],◑30S52I6◑:[◑T29I0◑],◑66S141I17◑:[◑T65I2◑],◑11S17I10◑:[◑T10I1◑],◑1S0I12◑:[◑T0I9◑],◑25S44I18◑:[◑T24I5◑,◑T24I3◑],◑1S0I11◑:[◑T0I8◑],◑78S163I10◑:[◑T77I7◑],◑51S106I11◑:[◑T50I0◑,◑T50I1◑],◑91S203I0◑:[◑T90I1◑],◑51S106I12◑:[◑T50I3◑],◑91S203I1◑:[◑T90I2◑],◑28S49I9◑:[◑T27I4◑],◑26S45I8◑:[◑T25I1◑],◑26S45I7◑:[◑T25I0◑],◑26S45I6◑:[◑T25I0◑],◑54S112I10◑:[◑T53I3◑],◑63S130I9◑:[◑T62I2◑],◑67S144I1◑:[◑T66I2◑,◑T66I1◑,◑T66I3◑],◑98S217I5◑:[◑T97I4◑],◑67S144I2◑:[◑T66I8◑,◑T66I9◑,◑T66I10◑],◑94S212I13◑:[◑T93I1◑],◑28S49I3◑:[◑T27I0◑],◑63S130I7◑:[◑T62I1◑],◑98S217I4◑:[◑T97I4◑],◑64S136I10◑:[◑T63I0◑],◑31S56I14◑:[◑T30I2◑],◑85S191I3◑:[◑T84I2◑,◑T84I1◑],◑76S159I8◑:[◑T75I5◑],◑76S159I9◑:[◑T75I6◑],◑76S159I6◑:[◑T75I3◑],◑76S159I7◑:[◑T75I4◑],◑17S24I10◑:[◑T16I4◑],◑18S25I7◑:[◑T17I3◑],◑18S25I6◑:[◑T17I2◑],◑26S46I7◑:[◑T25I0◑],◑26S46I6◑:[◑T25I1◑],◑26S46I5◑:[◑T25I0◑],◑1S1I11◑:[◑T0I8◑],◑1S1I10◑:[◑T0I9◑,◑T0I10◑],◑63S131I9◑:[◑T62I2◑,◑T62I3◑],◑63S131I8◑:[◑T62I2◑],◑59S120I8◑:[◑T58I3◑],◑59S120I4◑:[◑T58I0◑,◑T58I1◑],◑1S1I18◑:[◑T0I6◑],◑67S145I4◑:[◑T66I0◑],◑67S145I8◑:[◑T66I4◑],◑67S145I7◑:[◑T66I3◑],◑2S6I10◑:[◑T1I7◑],◑67S145I6◑:[◑T66I2◑],◑67S145I9◑:[◑T66I5◑],◑3S7I5◑:[◑T2I1◑],◑3S7I4◑:[◑T2I0◑]}","similarity":0.128,"similarity_copy":0.128,"similarity_self":0,"similarityPercentage":"12.8%","SSetForT_Str":"{◑T1I2◑:[◑2S6I4◑],◑T52I0◑:[◑53S109I15◑],◑T52I1◑:[◑53S109I16◑,◑53S111I4◑,◑53S110I15◑,◑53S111I5◑],◑T52I2◑:[◑53S109I18◑,◑53S111I5◑],◑T75I2◑:[◑76S160I3◑],◑T90I6◑:[◑91S207I5◑,◑91S203I13◑],◑T52I3◑:[◑53S109I17◑,◑53S111I5◑],◑T52I4◑:[◑53S109I19◑,◑53S111I6◑],◑T75I4◑:[◑76S159I7◑,◑76S160I3◑],◑T75I3◑:[◑76S159I6◑],◑T75I6◑:[◑76S160I3◑,◑76S159I9◑],◑T75I5◑:[◑76S159I8◑],◑T37I0◑:[◑38S67I7◑],◑T90I0◑:[◑91S205I8◑,◑91S204I8◑],◑T14I1◑:[◑15S22I8◑,◑15S22I7◑,◑15S22I10◑],◑T90I1◑:[◑91S205I9◑,◑91S206I5◑,◑91S204I9◑,◑91S203I0◑],◑T9I1◑:[◑10S15I4◑],◑T1I6◑:[◑2S6I9◑],◑T90I4◑:[◑91S203I11◑,◑91S207I3◑,◑91S203I14◑],◑T1I7◑:[◑2S6I10◑],◑T90I5◑:[◑91S207I4◑,◑91S203I12◑],◑T90I2◑:[◑91S204I10◑,◑91S205I10◑,◑91S206I6◑,◑91S203I1◑],◑T1I5◑:[◑2S6I8◑],◑T9I5◑:[◑10S15I7◑],◑T26I2◑:[◑27S47I12◑],◑T9I4◑:[◑10S15I6◑],◑T26I1◑:[◑27S47I13◑,◑27S48I3◑,◑27S48I4◑,◑27S47I6◑,◑27S48I5◑,◑27S47I7◑,◑27S47I8◑],◑T49I0◑:[◑50S103I12◑,◑50S103I13◑],◑T49I1◑:[◑50S105I8◑],◑T49I3◑:[◑50S103I6◑],◑T41I0◑:[◑42S80I0◑],◑T64I0◑:[◑65S138I3◑,◑65S138I4◑],◑T87I0◑:[◑88S198I8◑,◑88S199I7◑,◑88S200I5◑],◑T87I1◑:[◑88S198I6◑,◑88S199I5◑,◑88S198I4◑,◑88S199I3◑],◑T41I2◑:[◑42S80I6◑,◑42S81I3◑],◑T41I3◑:[◑42S80I7◑,◑42S81I4◑],◑T41I4◑:[◑42S81I5◑,◑42S80I8◑],◑T41I5◑:[◑42S81I6◑,◑42S81I7◑,◑42S80I9◑],◑T41I6◑:[◑42S80I10◑,◑42S81I9◑,◑42S80I11◑,◑42S81I8◑],◑T87I2◑:[◑88S200I4◑,◑88S198I5◑,◑88S199I4◑],◑T41I7◑:[◑42S80I6◑,◑42S81I10◑,◑42S81I3◑,◑42S80I13◑,◑42S80I12◑,◑42S81I12◑],◑T38I5◑:[◑39S68I8◑,◑39S72I13◑,◑39S73I9◑,◑39S73I8◑,◑39S70I9◑,◑39S71I8◑,◑39S69I13◑],◑T38I4◑:[◑39S68I7◑,◑39S72I12◑,◑39S70I8◑,◑39S71I7◑,◑39S73I7◑,◑39S73I6◑,◑39S69I11◑,◑39S69I12◑],◑T38I3◑:[◑39S68I6◑,◑39S72I11◑,◑39S73I5◑,◑39S70I7◑,◑39S71I6◑,◑39S69I10◑],◑T38I2◑:[◑39S72I10◑,◑39S68I5◑,◑39S73I4◑,◑39S69I9◑,◑39S70I6◑,◑39S71I5◑],◑T15I1◑:[◑16S23I1◑],◑T38I1◑:[◑39S69I8◑,◑39S72I9◑,◑39S68I4◑,◑39S73I4◑,◑39S70I5◑,◑39S71I4◑],◑T38I0◑:[◑39S69I7◑,◑39S68I3◑,◑39S70I4◑,◑39S71I10◑,◑39S73I3◑,◑39S68I12◑,◑39S71I4◑],◑T51I1◑:[◑52S108I14◑],◑T74I1◑:[◑75S156I12◑,◑75S156I11◑],◑T0I4◑:[◑1S0I7◑],◑T51I2◑:[◑52S108I13◑],◑T74I0◑:[◑75S156I11◑,◑75S156I13◑],◑T74I2◑:[◑75S156I11◑,◑75S156I14◑,◑75S156I15◑],◑T59I0◑:[◑60S121I6◑],◑T97I4◑:[◑98S216I11◑,◑98S217I4◑,◑98S216I10◑,◑98S217I5◑,◑98S216I9◑],◑T8I4◑:[◑9S14I5◑],◑T36I1◑:[◑37S66I3◑],◑T0I9◑:[◑1S5I2◑,◑1S0I12◑,◑1S1I10◑],◑T8I2◑:[◑9S14I3◑],◑T8I1◑:[◑9S14I3◑],◑T13I0◑:[◑14S20I7◑,◑14S20I6◑],◑T0I8◑:[◑1S2I5◑,◑1S5I3◑,◑1S1I11◑,◑1S0I11◑],◑T0I5◑:[◑1S0I6◑,◑1S0I8◑,◑1S2I6◑],◑T0I6◑:[◑1S2I6◑,◑1S1I18◑],◑T8I7◑:[◑9S14I7◑],◑T8I5◑:[◑9S14I6◑],◑T40I1◑:[◑41S77I1◑,◑41S76I3◑,◑41S78I8◑,◑41S79I1◑,◑41S79I2◑],◑T40I2◑:[◑41S78I10◑,◑41S76I4◑,◑41S77I3◑],◑T63I0◑:[◑64S133I7◑,◑64S136I10◑],◑T63I3◑:[◑64S134I9◑],◑T63I2◑:[◑64S133I6◑,◑64S134I6◑,◑64S136I6◑,◑64S137I8◑],◑T63I4◑:[◑64S134I9◑],◑T25I1◑:[◑26S45I8◑,◑26S46I6◑],◑T25I0◑:[◑26S46I7◑,◑26S45I7◑,◑26S45I6◑,◑26S46I5◑],◑T40I0◑:[◑41S77I0◑,◑41S78I7◑],◑T37I6◑:[◑38S67I9◑],◑T37I3◑:[◑38S67I5◑],◑T37I1◑:[◑38S67I8◑],◑T54I0◑:[◑55S113I1◑],◑T77I0◑:[◑78S164I0◑],◑T92I4◑:[◑93S210I5◑,◑93S211I5◑],◑T92I5◑:[◑93S211I6◑,◑93S210I6◑],◑T54I2◑:[◑55S113I5◑],◑T77I1◑:[◑78S166I4◑,◑78S166I3◑,◑78S163I5◑,◑78S165I3◑,◑78S163I4◑,◑78S165I2◑,◑78S164I0◑],◑T54I4◑:[◑55S113I5◑],◑T7I5◑:[◑8S13I6◑],◑T7I4◑:[◑8S13I4◑],◑T31I5◑:[◑32S59I5◑],◑T7I3◑:[◑8S13I3◑],◑T31I4◑:[◑32S59I4◑],◑T7I2◑:[◑8S13I2◑],◑T31I3◑:[◑32S59I3◑],◑T92I2◑:[◑93S211I2◑,◑93S211I3◑],◑T7I0◑:[◑8S13I0◑],◑T92I3◑:[◑93S210I3◑,◑93S210I4◑],◑T28I4◑:[◑29S50I4◑],◑T28I2◑:[◑29S50I3◑],◑T28I1◑:[◑29S50I2◑],◑T7I6◑:[◑8S13I7◑],◑T66I6◑:[◑67S145I10◑,◑67S142I4◑,◑67S143I7◑],◑T66I5◑:[◑67S146I11◑,◑67S145I9◑,◑67S142I3◑,◑67S143I6◑],◑T66I8◑:[◑67S145I12◑,◑67S142I6◑,◑67S144I2◑,◑67S143I9◑],◑T66I7◑:[◑67S145I11◑,◑67S142I5◑,◑67S143I8◑],◑T66I9◑:[◑67S145I13◑,◑67S142I6◑,◑67S144I2◑,◑67S143I10◑],◑T81I4◑:[◑82S179I6◑,◑82S178I6◑,◑82S181I4◑,◑82S182I10◑,◑82S180I6◑,◑82S183I7◑],◑T43I0◑:[◑44S87I5◑,◑44S88I4◑,◑44S90I3◑,◑44S89I6◑],◑T66I0◑:[◑67S143I2◑,◑67S142I2◑,◑67S145I4◑,◑67S146I7◑,◑67S142I9◑],◑T43I1◑:[◑44S87I6◑,◑44S88I5◑,◑44S89I7◑,◑44S90I4◑],◑T43I2◑:[◑44S89I8◑,◑44S90I5◑,◑44S87I7◑,◑44S88I6◑,◑44S89I9◑],◑T66I2◑:[◑67S146I8◑,◑67S142I3◑,◑67S144I1◑,◑67S143I3◑,◑67S145I6◑],◑T66I1◑:[◑67S144I1◑,◑67S143I1◑,◑67S142I8◑],◑T66I4◑:[◑67S142I3◑,◑67S143I5◑,◑67S145I8◑,◑67S146I10◑],◑T66I3◑:[◑67S146I9◑,◑67S142I3◑,◑67S144I1◑,◑67S143I4◑,◑67S145I7◑],◑T20I0◑:[◑21S33I4◑,◑21S33I5◑],◑T81I3◑:[◑82S179I6◑,◑82S178I6◑,◑82S180I5◑,◑82S181I4◑,◑82S182I10◑,◑82S180I6◑,◑82S183I7◑],◑T81I2◑:[◑82S179I5◑,◑82S178I5◑,◑82S179I4◑,◑82S181I2◑,◑82S178I4◑,◑82S181I3◑,◑82S180I5◑,◑82S182I8◑,◑82S182I9◑],◑T17I5◑:[◑18S28I3◑],◑T17I3◑:[◑18S26I4◑,◑18S25I7◑,◑18S27I4◑,◑18S28I5◑],◑T17I2◑:[◑18S27I3◑,◑18S26I3◑,◑18S25I6◑],◑T53I0◑:[◑54S112I7◑],◑T53I3◑:[◑54S112I10◑],◑T15I0◑:[◑16S23I3◑],◑T6I2◑:[◑7S11I3◑,◑7S12I5◑,◑7S12I4◑],◑T30I2◑:[◑31S56I14◑,◑31S53I8◑,◑31S54I7◑],◑T30I1◑:[◑31S55I9◑,◑31S53I7◑,◑31S54I6◑],◑T91I1◑:[◑92S209I5◑],◑T30I0◑:[◑31S56I8◑,◑31S55I5◑,◑31S53I6◑,◑31S55I4◑,◑31S53I5◑,◑31S54I4◑,◑31S54I3◑],◑T91I2◑:[◑92S209I4◑],◑T27I4◑:[◑28S49I9◑],◑T27I0◑:[◑28S49I3◑],◑T42I7◑:[◑43S83I11◑,◑43S85I12◑,◑43S82I14◑,◑43S86I6◑,◑43S84I6◑],◑T88I5◑:[◑89S201I5◑],◑T88I0◑:[◑89S201I4◑],◑T42I2◑:[◑43S83I0◑,◑43S84I5◑,◑43S82I5◑,◑43S85I2◑],◑T88I3◑:[◑89S201I11◑],◑T42I4◑:[◑43S83I6◑],◑T65I2◑:[◑66S141I17◑,◑66S140I8◑],◑T42I5◑:[◑43S82I11◑,◑43S82I12◑,◑43S83I9◑,◑43S83I8◑],◑T88I1◑:[◑89S201I5◑],◑T42I6◑:[◑43S83I10◑,◑43S82I13◑,◑43S84I1◑],◑T88I2◑:[◑89S201I10◑],◑T80I1◑:[◑81S175I5◑,◑81S176I4◑,◑81S177I3◑],◑T16I4◑:[◑17S24I10◑],◑T16I2◑:[◑17S24I5◑],◑T16I3◑:[◑17S24I7◑],◑T16I1◑:[◑17S24I5◑],◑T77I6◑:[◑78S165I5◑,◑78S164I4◑,◑78S167I8◑,◑78S163I9◑,◑78S166I6◑,◑78S168I4◑],◑T77I5◑:[◑78S166I5◑,◑78S168I3◑,◑78S163I6◑,◑78S165I4◑,◑78S167I7◑,◑78S164I1◑],◑T0I10◑:[◑1S5I1◑,◑1S2I6◑,◑1S1I10◑],◑T77I7◑:[◑78S165I6◑,◑78S164I5◑,◑78S163I10◑,◑78S166I7◑,◑78S167I9◑],◑T79I0◑:[◑80S172I6◑,◑80S173I5◑,◑80S174I4◑,◑80S171I5◑],◑T79I2◑:[◑80S171I7◑,◑80S172I8◑,◑80S173I7◑],◑T79I1◑:[◑80S173I6◑,◑80S174I5◑,◑80S171I6◑,◑80S174I6◑],◑T33I2◑:[◑34S61I10◑],◑T33I1◑:[◑34S61I10◑],◑T5I2◑:[◑6S10I5◑],◑T10I0◑:[◑11S17I9◑],◑T33I0◑:[◑34S61I8◑,◑34S61I9◑],◑T10I1◑:[◑11S17I10◑],◑T5I0◑:[◑6S10I4◑],◑T5I1◑:[◑6S10I4◑],◑T22I5◑:[◑23S37I11◑,◑23S37I14◑,◑23S37I8◑],◑T45I0◑:[◑46S92I7◑],◑T45I1◑:[◑46S92I6◑],◑T22I4◑:[◑23S37I11◑],◑T60I1◑:[◑61S122I6◑],◑T60I2◑:[◑61S122I7◑],◑T19I4◑:[◑20S32I8◑,◑20S32I11◑],◑T19I1◑:[◑20S32I6◑],◑T19I0◑:[◑20S32I5◑],◑T11I5◑:[◑12S18I9◑],◑T57I3◑:[◑58S117I6◑,◑58S119I8◑],◑T57I4◑:[◑58S117I6◑,◑58S116I13◑,◑58S119I8◑],◑T19I7◑:[◑20S32I10◑],◑T19I8◑:[◑20S32I11◑],◑T19I5◑:[◑20S32I9◑],◑T70I5◑:[◑71S150I5◑],◑T4I0◑:[◑5S9I5◑],◑T55I0◑:[◑56S114I8◑],◑T70I6◑:[◑71S150I6◑],◑T55I1◑:[◑56S114I9◑],◑T55I3◑:[◑56S114I20◑,◑56S114I10◑],◑T55I4◑:[◑56S114I12◑],◑T32I5◑:[◑33S60I13◑],◑T32I4◑:[◑33S60I13◑],◑T32I2◑:[◑33S60I12◑],◑T32I1◑:[◑33S60I6◑],◑T93I1◑:[◑94S212I13◑],◑T32I0◑:[◑33S60I5◑],◑T4I2◑:[◑5S9I7◑],◑T29I4◑:[◑30S51I7◑,◑30S51I8◑],◑T29I0◑:[◑30S52I6◑,◑30S51I6◑],◑T29I7◑:[◑30S51I13◑],◑T29I6◑:[◑30S51I11◑,◑30S51I10◑],◑T21I2◑:[◑22S35I26◑,◑22S35I22◑],◑T21I1◑:[◑22S35I20◑,◑22S35I21◑],◑T21I0◑:[◑22S36I5◑],◑T18I5◑:[◑19S30I5◑,◑19S29I10◑],◑T18I2◑:[◑19S29I7◑],◑T18I3◑:[◑19S30I3◑,◑19S29I8◑],◑T18I1◑:[◑19S29I7◑],◑T79I3◑:[◑80S171I10◑,◑80S173I9◑,◑80S172I9◑,◑80S172I16◑],◑T18I6◑:[◑19S29I12◑,◑19S29I13◑,◑19S30I6◑,◑19S29I11◑],◑T3I0◑:[◑4S8I5◑],◑T3I1◑:[◑4S8I6◑],◑T50I3◑:[◑51S106I12◑],◑T96I0◑:[◑97S215I8◑],◑T58I0◑:[◑59S120I4◑],◑T58I1◑:[◑59S120I4◑],◑T35I2◑:[◑36S63I4◑],◑T35I1◑:[◑36S64I9◑,◑36S63I3◑],◑T3I6◑:[◑4S8I11◑],◑T35I0◑:[◑36S64I7◑,◑36S64I8◑],◑T3I7◑:[◑4S8I12◑],◑T3I4◑:[◑4S8I9◑],◑T50I0◑:[◑51S106I11◑],◑T50I1◑:[◑51S106I11◑],◑T24I6◑:[◑25S43I14◑,◑25S41I17◑,◑25S42I6◑,◑25S42I8◑],◑T24I5◑:[◑25S43I20◑,◑25S44I10◑,◑25S41I13◑,◑25S44I11◑,◑25S42I5◑,◑25S41I16◑,◑25S44I18◑,◑25S42I7◑],◑T24I4◑:[◑25S41I17◑,◑25S42I6◑,◑25S42I8◑],◑T24I3◑:[◑25S44I10◑,◑25S41I3◑,◑25S41I13◑,◑25S44I11◑,◑25S42I5◑,◑25S41I16◑,◑25S44I18◑,◑25S42I7◑],◑T47I3◑:[◑48S97I9◑,◑48S99I6◑,◑48S101I6◑,◑48S97I5◑,◑48S98I4◑,◑48S96I4◑,◑48S100I4◑],◑T47I4◑:[◑48S97I6◑,◑48S98I5◑,◑48S99I3◑,◑48S96I5◑,◑48S101I3◑],◑T47I5◑:[◑48S97I7◑,◑48S98I6◑,◑48S99I4◑,◑48S96I6◑,◑48S101I4◑,◑48S100I2◑],◑T47I6◑:[◑48S97I9◑,◑48S97I8◑,◑48S98I7◑,◑48S99I5◑,◑48S96I7◑,◑48S100I4◑,◑48S99I0◑,◑48S100I3◑,◑48S101I5◑],◑T47I7◑:[◑48S97I9◑,◑48S98I8◑,◑48S99I6◑,◑48S96I8◑,◑48S101I6◑,◑48S100I4◑],◑T62I2◑:[◑63S131I9◑,◑63S130I9◑,◑63S131I8◑,◑63S128I3◑,◑63S130I10◑,◑63S129I6◑,◑63S127I7◑,◑63S129I5◑],◑T62I1◑:[◑63S128I2◑,◑63S130I10◑,◑63S127I6◑,◑63S129I4◑,◑63S129I5◑,◑63S130I7◑],◑T62I4◑:[◑63S128I1◑,◑63S132I8◑,◑63S128I5◑,◑63S127I9◑],◑T62I3◑:[◑63S131I9◑,◑63S128I3◑,◑63S128I4◑,◑63S127I8◑,◑63S129I6◑,◑63S127I7◑,◑63S129I5◑],◑T62I6◑:[◑63S128I6◑,◑63S128I10◑],◑T47I0◑:[◑48S99I1◑,◑48S97I2◑,◑48S98I1◑,◑48S96I1◑],◑T47I1◑:[◑48S99I2◑,◑48S97I3◑,◑48S98I2◑,◑48S96I2◑],◑T62I7◑:[◑63S128I7◑],◑T24I2◑:[◑25S44I9◑,◑25S41I12◑,◑25S42I4◑,◑25S43I6◑],◑T24I1◑:[◑25S41I10◑,◑25S44I9◑,◑25S41I8◑,◑25S43I6◑,◑25S41I9◑],◑T24I0◑:[◑25S44I9◑,◑25S41I0◑,◑25S41I11◑,◑25S41I8◑,◑25S43I6◑],◑T62I0◑:[◑63S128I1◑],◑T36I5◑:[◑37S66I7◑],◑T36I4◑:[◑37S66I7◑],◑T36I3◑:[◑37S66I5◑],◑T36I2◑:[◑37S66I4◑],◑T59I1◑:[◑60S121I8◑],◑T59I2◑:[◑60S121I8◑],◑T2I1◑:[◑3S7I5◑],◑T2I2◑:[◑3S7I10◑],◑T72I2◑:[◑73S153I15◑,◑73S154I15◑,◑73S153I22◑,◑73S154I22◑,◑73S153I3◑,◑73S154I3◑],◑T2I0◑:[◑3S7I4◑],◑T57I1◑:[◑58S119I8◑],◑T57I2◑:[◑58S116I7◑,◑58S117I6◑,◑58S118I2◑,◑58S119I8◑],◑T11I3◑:[◑12S18I7◑],◑T11I4◑:[◑12S18I9◑],◑T11I1◑:[◑12S18I5◑],◑T34I1◑:[◑35S62I5◑,◑35S62I4◑,◑35S62I6◑,◑35S62I3◑],◑T11I2◑:[◑12S18I6◑],◑T34I0◑:[◑35S62I4◑],◑T2I3◑:[◑3S7I11◑],◑T72I1◑:[◑73S154I8◑,◑73S153I21◑,◑73S154I21◑,◑73S153I8◑,◑73S153I2◑,◑73S154I2◑],◑T72I0◑:[◑73S154I13◑,◑73S153I13◑,◑73S154I20◑,◑73S153I20◑,◑73S153I7◑,◑73S154I7◑,◑73S153I1◑,◑73S154I1◑],◑T23I5◑:[◑24S40I6◑,◑24S39I11◑,◑24S38I7◑],◑T23I4◑:[◑24S40I4◑,◑24S40I6◑,◑24S39I11◑,◑24S38I7◑],◑T61I3◑:[◑62S124I3◑,◑62S123I9◑,◑62S123I10◑,◑62S123I8◑,◑62S123I7◑,◑62S125I11◑,◑62S125I12◑,◑62S125I10◑,◑62S125I9◑],◑T84I2◑:[◑85S187I8◑,◑85S188I7◑,◑85S191I3◑,◑85S186I7◑],◑T61I2◑:[◑62S124I2◑,◑62S123I6◑,◑62S125I8◑],◑T84I1◑:[◑85S190I11◑,◑85S191I3◑,◑85S190I12◑,◑85S187I6◑,◑85S188I5◑,◑85S187I5◑,◑85S189I3◑,◑85S186I5◑,◑85S186I4◑],◑T61I5◑:[◑62S123I14◑,◑62S123I13◑,◑62S124I7◑,◑62S124I6◑,◑62S126I8◑,◑62S126I7◑],◑T84I4◑:[◑85S190I22◑,◑85S190I13◑],◑T61I4◑:[◑62S123I14◑,◑62S123I13◑,◑62S126I6◑,◑62S124I7◑,◑62S126I5◑,◑62S124I6◑,◑62S124I5◑],◑T84I6◑:[◑85S188I9◑,◑85S190I11◑,◑85S188I10◑,◑85S190I15◑,◑85S186I13◑,◑85S190I12◑,◑85S187I6◑,◑85S188I5◑,◑85S189I3◑,◑85S186I5◑,◑85S187I19◑,◑85S190I16◑],◑T46I0◑:[◑47S93I9◑,◑47S94I9◑,◑47S93I8◑,◑47S95I0◑],◑T61I6◑:[◑62S123I16◑,◑62S123I15◑,◑62S124I8◑,◑62S124I9◑],◑T46I1◑:[◑47S94I8◑,◑47S93I7◑,◑47S93I6◑],◑T23I3◑:[◑24S40I5◑,◑24S40I3◑],◑T23I2◑:[◑24S38I2◑,◑24S39I8◑,◑24S38I4◑,◑24S38I3◑],◑T23I0◑:[◑24S38I13◑],◑T84I0◑:[◑85S187I5◑,◑85S188I4◑,◑85S189I2◑,◑85S186I4◑],◑T58I3◑:[◑59S120I8◑],◑T66I11◑:[◑67S146I7◑],◑T66I10◑:[◑67S145I14◑,◑67S142I6◑,◑67S144I2◑,◑67S143I11◑]}"},"similarity_self":0,"time":"2022-03-03 19:44:04","similarity_remove_ref":0.128,"report_annotation_ref":{"similar_offsets":[{"reference":false,"start":10,"end":160},{"reference":false,"start":160,"end":272},{"reference":false,"start":272,"end":420},{"reference":false,"start":420,"end":547},{"reference":false,"start":547,"end":639},{"reference":false,"start":639,"end":725},{"reference":false,"start":725,"end":911},{"reference":false,"start":951,"end":1111},{"reference":false,"start":1135,"end":1286},{"reference":false,"start":1455,"end":1609},{"reference":false,"start":2622,"end":2730},{"reference":false,"start":2730,"end":2772},{"reference":false,"start":5873,"end":5966},{"reference":false,"start":5966,"end":6108},{"reference":false,"start":6108,"end":6174},{"reference":false,"start":6295,"end":6449},{"reference":false,"start":7472,"end":7644},{"reference":false,"start":7644,"end":7729},{"reference":false,"start":7729,"end":7891},{"reference":false,"start":8304,"end":8367},{"reference":false,"start":8367,"end":8529},{"reference":false,"start":8921,"end":9061},{"reference":false,"start":9473,"end":9609},{"reference":false,"start":9609,"end":9743},{"reference":false,"start":9894,"end":10059},{"reference":false,"start":10495,"end":10578},{"reference":false,"start":10744,"end":10885},{"reference":false,"start":10901,"end":11071},{"reference":false,"start":11071,"end":11232},{"reference":false,"start":11429,"end":11533},{"reference":false,"start":11638,"end":11748},{"reference":false,"start":11758,"end":11874},{"reference":false,"start":11878,"end":11945},{"reference":false,"start":11945,"end":12047},{"reference":false,"start":12047,"end":12138},{"reference":false,"start":12138,"end":12267},{"reference":false,"start":12267,"end":12393},{"reference":false,"start":13229,"end":13330},{"reference":false,"start":13973,"end":14081},{"reference":false,"start":14088,"end":14282},{"reference":false,"start":14361,"end":14537},{"reference":false,"start":14555,"end":14650},{"reference":false,"start":15143,"end":15202},{"reference":false,"start":15202,"end":15257},{"reference":false,"start":15257,"end":15379},{"reference":false,"start":15572,"end":15677},{"reference":false,"start":15726,"end":15774},{"reference":false,"start":15796,"end":15826},{"reference":false,"start":15826,"end":15930},{"reference":false,"start":15947,"end":16061},{"reference":false,"start":16071,"end":16160},{"reference":false,"start":16160,"end":16230},{"reference":false,"start":16318,"end":16479},{"reference":false,"start":16629,"end":16729},{"reference":false,"start":16729,"end":16767},{"reference":false,"start":16767,"end":16826},{"reference":false,"start":16837,"end":16945},{"reference":false,"start":16954,"end":17105},{"reference":false,"start":17105,"end":17180},{"reference":false,"start":17180,"end":17235},{"reference":false,"start":17755,"end":17790},{"reference":false,"start":17795,"end":17942},{"reference":false,"start":24162,"end":24280},{"reference":false,"start":26163,"end":26200},{"reference":false,"start":28073,"end":28097},{"reference":false,"start":29109,"end":29252},{"reference":false,"start":30374,"end":30554},{"reference":false,"start":31089,"end":31219},{"reference":false,"start":31219,"end":31375},{"reference":false,"start":31715,"end":31881},{"reference":false,"start":32914,"end":33028},{"reference":false,"start":33732,"end":33798},{"reference":false,"start":33890,"end":34029},{"reference":false,"start":34912,"end":35074},{"reference":false,"start":35430,"end":35584},{"reference":false,"start":35994,"end":36133},{"reference":false,"start":36405,"end":36490},{"reference":false,"start":36920,"end":36990},{"reference":false,"start":37031,"end":37143}],"chapter_max_similar_word_count":5285,"word_similar_count":5285,"chapters":[{"chapter":"绪论","word_count":39759,"word_similar_count":5285,"sources":[{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023715219511","author":"刘福奇，刘波编著","similarity":0.035,"self":false,"similar_word_count":1372,"source":"","title":"Verilog HDL应用程序设计实例精讲","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138222351111","author":"","similarity":0.015,"self":false,"similar_word_count":591,"source":"网页","title":"一种基于多FPGA的逻辑划分方法的研究与实现 - 道客巴巴","url":"http://www.doc88.com/p%2D5018773543832.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000544119911","author":"杜建国","similarity":0.014,"self":false,"similar_word_count":549,"source":"国防工业出版社","title":"Verilog HDL 硬件描述语言","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183161741911","author":"","similarity":0.012,"self":false,"similar_word_count":496,"source":"网页","title":"从生物学到神经元：人工神经网络 ( ANN ) 简介","url":"http://mp.weixin.qq.com/s?src=11&timestamp=1621549141&ver=3081&signature=9dGN1s-PtmZKjYnEDdXNjZ6bs*04-AGz-Av*UjggnWYZPF7G8AC01ZJht8D7CMGUI-KdkMxtgzyhLX4Uxr7E5F0-AlNxeEYS*57Ms6JNn9MtKbU8S6i3NluyHdVw3GA4&new=1"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120761737511","author":"","similarity":0.012,"self":false,"similar_word_count":474,"source":"网页","title":"FPGA工艺映射算法研究与分析 - 豆丁网","url":"https://www.docin.com/p-797934379.html"},{"reference":false,"teacher":"","datatype":"book","year":"2004","docid":"1900000832107511","author":"丁学钧;刘建臣主编","similarity":0.01,"self":false,"similar_word_count":414,"source":"国防工业出版社","title":"AutoCAD 2004实用教程  中文版","url":""},{"reference":false,"teacher":"","datatype":"book","year":"2002","docid":"1900023633940511","author":"袁俊泉等编著","similarity":0.007,"self":false,"similar_word_count":279,"source":"","title":"Verilog HDL数字系统设计及其应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190761327111","author":"","similarity":0.004,"self":false,"similar_word_count":168,"source":"网页","title":"FPGA学习笔记（四）FPGA概要_oyzy_Sean的篝火-CSDN博客","url":"https://blog.csdn.net/qq_33194301/article/details/103400318#commentBox"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000191300761211","author":"","similarity":0.004,"self":false,"similar_word_count":157,"source":"网页","title":"Verilog HDL入门基础之行为级建模","url":"https://wenku.baidu.com/view/b3810d9b5ef7ba0d4a733b82"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135249839711","author":"","similarity":0.004,"self":false,"similar_word_count":146,"source":"网页","title":"第6章 vhdl时间控制和赋值语句 - 豆丁网","url":"http://www.docin.com/p%2D2352327672.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139313011911","author":"","similarity":0.004,"self":false,"similar_word_count":141,"source":"网页","title":"verilog课件6.1-3 - 道客巴巴","url":"http://www.doc88.com/p%2D3129197869370.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000160699485011","author":"","similarity":0.003,"self":false,"similar_word_count":138,"source":"网页","title":"集成学习 · 智能信息融合实验室","url":"https://blog.so-link.org/blog/ml/melon/ch08.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000203566665711","author":"","similarity":0.003,"self":false,"similar_word_count":135,"source":"网页","title":"FPGA设计流程及原理-电子发烧友网","url":"http://www.elecfans.com/d/1378365.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117978237811","author":"","similarity":0.003,"self":false,"similar_word_count":128,"source":"网页","title":"verilog 课件 编程 - 豆丁网","url":"http://www.docin.com/p-1218600280.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000079599488811","author":"","similarity":0.003,"self":false,"similar_word_count":122,"source":"网页","title":"阻塞与非阻塞赋值_电子技术_中国百科网","url":"http://www.chinabaike.com/2011/0116/173326.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188228535911","author":"融智学双通课","similarity":0.003,"self":false,"similar_word_count":119,"source":"网页","title":"如何快速理解机器学习的含义？","url":"http://m.toutiao.com/i6937819339340988935"},{"reference":false,"teacher":"","datatype":"book","year":"2009","docid":"1900023628304711","author":"刘刚…等编著","similarity":0.002,"self":false,"similar_word_count":97,"source":"","title":"微电子器件与IC设计基础","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000130331965511","author":"","similarity":0.002,"self":false,"similar_word_count":86,"source":"网页","title":"机器学习总结（二）bagging与随机森林_???111的博客-CSDN博客","url":"https://blog.csdn.net/weixin_30470643/article/details/98261610"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000137225786211","author":"","similarity":0.002,"self":false,"similar_word_count":81,"source":"网页","title":"ML_集成学习与Boosting模型_还没想好的博客-CSDN博客_boosting算法","url":"https://blog.csdn.net/weixin_44177568/article/details/99580551"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000179218349411","author":"","similarity":0.002,"self":false,"similar_word_count":80,"source":"网页","title":"verilog中的一些语法和技巧","url":"https://www.docin.com/p%2D2331298442.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139286381511","author":"","similarity":0.002,"self":false,"similar_word_count":78,"source":"网页","title":"基于分类器的数学模型","url":"https://blog.csdn.net/weixin_44010117/article/details/107209172"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023845356311","author":"陈海虹","similarity":0.002,"self":false,"similar_word_count":76,"source":"成都：电子科技大学出版社","title":"机器学习原理及应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000107466903911","author":"csdn","similarity":0.002,"self":false,"similar_word_count":76,"source":"网页","title":"集成学习_人工智能_得克特-CSDN博客","url":"https://blog.csdn.net/weixin_40548136/article/details/89604282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000099531543111","author":"","similarity":0.002,"self":false,"similar_word_count":74,"source":"网页","title":"第5章行为描述(一)：模块基本结构","url":"http://cache.baiducontent.com/c?m=9d78d513d9d431a44f9e90697c10c010684381132bd7a6027ea4843e91732d43501794ac54510705a3d27c1116ae394b9a862105341450bc8cb8835e9afbcc2775ce6176310b87320fce5cea8e5125b676cd0bb2f30ee7cda16fccb390c4df2255ca520f7e83f2885b1714bd35b64b6f&p=c0759a45d59a03fb1fa9c7710f4b&newp=8734c916d9c111a058eed43d615992695d0fc20e3fd5d501298ffe0cc4241a1a1a3aecbf2324110ed0c77e6305ad425eeefa3c75340234f1f689df08d2ecce7e&user=baidu&fm=sc&query=site%3Adocin%2Ecom+%B9%A6%C4%DC%2D%D0%D0%CE%AA%2D%BD%E1%B9%B9&qid=9b73f1fe00054b07&p1=3"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118484198911","author":"","similarity":0.002,"self":false,"similar_word_count":72,"source":"网页","title":"标准误差standard error,均方根误差中误差(RMSE,root m - 道客巴巴","url":"http://www.doc88.com/p-1661941710381.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000105741580511","author":"","similarity":0.002,"self":false,"similar_word_count":66,"source":"网页","title":"5大算法技术，10个学习包，机器学习的干货收藏了","url":"http://m.toutiao.com/i6773632377852789259/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000192630159511","author":"","similarity":0.002,"self":false,"similar_word_count":65,"source":"网页","title":"基于lut结构的fpga的工艺映射算法的研究","url":"https://www.docin.com/p%2D119648656.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000437751211","author":"","similarity":0.002,"self":false,"similar_word_count":64,"source":"大学生论文联合库","title":"数字频率发生器","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195223375811","author":"","similarity":0.002,"self":false,"similar_word_count":63,"source":"网页","title":"工艺映射","url":"https://blog.csdn.net/weixin_44146373/article/month/2020/07"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003389855311","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":62,"source":"微电子学","title":"速度优化再分解设计方法","url":""},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030899588211","author":"谢雨桐","similarity":0.002,"self":false,"similar_word_count":61,"source":"城市住宅","title":"机器学习在建筑节能中的应用","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177068394911","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"集成电路设计中的逻辑加速优化算法","url":"https://wenku.baidu.com/view/8b1f2897951ea76e58fafab069dc5022abea4604"},{"reference":false,"teacher":"","datatype":"journal","year":"2001","docid":"1000003386423011","author":"罗晓春;林争辉","similarity":0.002,"self":false,"similar_word_count":60,"source":"计算机工程","title":"集成电路设计中的逻辑加速优化算法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000139553504411","author":"","similarity":0.002,"self":false,"similar_word_count":60,"source":"网页","title":"机器学习学习笔记-西瓜书_龙海L的博客-CSDN博客","url":"https://blog.csdn.net/qq_36523203/article/details/105802247"},{"reference":false,"teacher":"","datatype":"book","year":"2018","docid":"1900023759582811","author":"丁磊主编;张海笑，冯永晋，江志文编著","similarity":0.001,"self":false,"similar_word_count":58,"source":"","title":"普通高等学校电类规划教材  数字逻辑与EDA设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082030187211","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"bagging总结","url":"https://blog.csdn.net/u012063773/article/details/80724612"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000010354498311","author":"","similarity":0.001,"self":false,"similar_word_count":58,"source":"网页","title":"阻塞与非阻塞赋值 - 华清远见 | 程序员的学习天堂 - 博客频道 - CSDN.NET","url":"http://blog.csdn.net/farsight2009/article/details/4325449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000138922963611","author":"","similarity":0.001,"self":false,"similar_word_count":57,"source":"网页","title":"Verilog HDL基础 - 豆丁网","url":"https://www.docin.com/p%2D2066779345.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000183507262511","author":"","similarity":0.001,"self":false,"similar_word_count":56,"source":"网页","title":"2019年10月_doudou_wsx的博客_兜-兜_CSDN博客","url":"https://blog.csdn.net/doudou_wsx/article/month/2019/10"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000030209219211","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"Verilog HDL语言中always敏感信号对比异同性-微电子学论文-微电子学论文-学路网","url":"https://www.xue63.com/lunwen/70/87811.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118062415311","author":"","similarity":0.001,"self":false,"similar_word_count":54,"source":"网页","title":"第一节数据与信息特征","url":"https://wenku.baidu.com/view/7910cc5b4531b90d6c85ec3a87c24028915f8504.html?fr=search"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106062608311","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"基于哨兵3A-OLCI影像的内陆湖泊藻蓝蛋白浓度反演算法研究 - 道客巴巴","url":"http://www.doc88.com/p-0019123721074.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143881533411","author":"","similarity":0.001,"self":false,"similar_word_count":53,"source":"网页","title":"机器学习（1）_张艳秋的博客-CSDN博客","url":"https://blog.csdn.net/sumaoyan1787/article/details/91855340#comments"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000531686611","author":"南夷非","similarity":0.001,"self":false,"similar_word_count":53,"source":"大学生论文联合库","title":"图像处理技术","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000106764079211","author":"csdn","similarity":0.001,"self":false,"similar_word_count":52,"source":"网页","title":"集成学习之Bagging/Boosting分类和回归_人工智能_扫地小僧Tommy-CSDN博客","url":"https://blog.csdn.net/weixin_43096996/article/details/100544819"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000110791518511","author":"csdn","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"基于模型的数据采集与分析","url":"https://blog.csdn.net/yanying1113/article/details/86101516"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000055409152011","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"机器学习教程 之 集成学习算法： 深入刨析AdaBoost - CSDN博客","url":"http://blog.csdn.net/Liangjun_Feng/article/details/78123583"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000155397363111","author":"","similarity":0.001,"self":false,"similar_word_count":51,"source":"网页","title":"【西瓜书】第八章 集成学习 | 陆陆技术笔记","url":"http://lunarnai.cn/2017/09/18/watermelon-chap-8/"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000135795011511","author":"","similarity":0.001,"self":false,"similar_word_count":50,"source":"网页","title":"XILINX 7系列FPGA_Slice_存储器_XADC篇_sazc的博客-CSDN博客","url":"https://blog.csdn.net/qq_35712169/article/details/105111310"},{"reference":false,"teacher":"","datatype":"journal","year":"2009","docid":"1000006719680711","author":"沈智芳","similarity":0.001,"self":false,"similar_word_count":50,"source":"湖北第二师范学院学报","title":"ComConnect多级高速片上总线互连结构研究","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000031722729511","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"Adaboost/Xgboost学习及实践 - CSDN博客","url":"http://blog.csdn.net/savant_ning/article/details/75136958"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000189662307611","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"等精度测量","url":"https://www.doc88.com/p%2D407189170687.html"},{"reference":false,"teacher":"","datatype":"unionThesisLibrary","year":"2017","docid":"2200000570679811","author":"-","similarity":0.001,"self":false,"similar_word_count":49,"source":"大学生论文联合库","title":"基于时延神经网络的飞机重着陆评阅","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000188062025211","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"什么是并合 标准偏差  并合 标准偏差 的计算公式是什么","url":"http://www.doc88.com/p%2D478114452185.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120580984311","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于FPGA的EPON ONU设计与实现.pdf - 豆丁网","url":"http://www.docin.com/p-1149984087.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000186098081911","author":"","similarity":0.001,"self":false,"similar_word_count":49,"source":"网页","title":"基于EDA的ALU设计","url":"https://wenku.baidu.com/view/7b0e2b7d1cb91a37f111f18583d049649b660e0c"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000118992500811","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"基于USB2.0和FPGA的图像采集、存储系统研究.doc - 豆丁网","url":"https://www.docin.com/p-466457344.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000117476774611","author":"csdn","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"机器学习实战2-基于scikit-learn端对端的机器学习项目_知识搬运工的博客-CSDN博客","url":"https://blog.csdn.net/qq_30815237/article/details/87904596"},{"reference":false,"teacher":"","datatype":"journal","year":"2020","docid":"1000030691609411","author":"邢岳;田正宏;杜辉","similarity":0.001,"self":false,"similar_word_count":48,"source":"《长江科学院院报》","title":"碾压混凝土坝层间结合质量智能评价方法","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082078623411","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深入机器学习系列之：Random Forest","url":"https://blog.csdn.net/ympzuelx3aiap7q/article/details/85043282"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000129247961111","author":"","similarity":0.001,"self":false,"similar_word_count":48,"source":"网页","title":"深度学习的学习率调节实践_极客网","url":"https://www.fromgeek.com/ai/342745.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000146790090711","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"大数据相关理论和技术(2)","url":"https://wenku.baidu.com/view/b1b49ef9793e0912a21614791711cc7930b7786b"},{"reference":false,"teacher":"","datatype":"book","year":"2016","docid":"1900023828791111","author":"张吉力，张喻平，关丽梅主编;黄涛，吴强副主编;王社，魏郧华，胡凯，蔡振参编","similarity":0.001,"self":false,"similar_word_count":47,"source":"武汉：华中科技大学出版社","title":"MySQL数据库理实一体化教程","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000016188337811","author":"","similarity":0.001,"self":false,"similar_word_count":47,"source":"网页","title":"基于分类器理论的数字化图像处理方法","url":"https://blog.csdn.net/u010665216/article/details/78400449"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000177893423411","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"Vrilog入门之归纳总结与细节解析","url":"https://wenku.baidu.com/view/984c8c8c767f5acfa0c7cd18"},{"reference":false,"teacher":"","datatype":"book","year":"","docid":"1900023885801611","author":"杨全胜主编","similarity":0.001,"self":false,"similar_word_count":46,"source":"","title":"计算机系统综合课程设计","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000143175526611","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于集成学习的南太平洋长鳍金枪鱼渔场预报模型研究","url":"http://www.doc88.com/p%2D09329296476996.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000104784138911","author":"","similarity":0.001,"self":false,"similar_word_count":46,"source":"网页","title":"基于深度学习的单目标跟踪方法研究 - 道客巴巴","url":"https://www.doc88.com/p-9953550396755.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000187873307311","author":"","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"无线传感器网络节点SoC的原型验证","url":"http://www.doc88.com/p%2D89416909707401.html"},{"reference":false,"teacher":"","datatype":"book","year":"2017","docid":"1900023720243711","author":"刘凡平编著","similarity":0.001,"self":false,"similar_word_count":43,"source":"","title":"大数据时代的算法  机器学习、人工智能及其典型实例","url":""},{"reference":false,"teacher":"","datatype":"chinaMeeting","year":"2014","docid":"1300000198113911","author":"崔东文;金波","similarity":0.001,"self":false,"similar_word_count":43,"source":"云南省水利学会第九届四次理事会暨2014年度学术交流会","title":"随机森林回归模型在水生态文明评价中的应用——以文山州为例","url":""},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000113620987811","author":"csdn","similarity":0.001,"self":false,"similar_word_count":43,"source":"网页","title":"集成学习—随机森林原理（理解与论文研读）_大数据_weixin_44750583的博客-CSDN博客","url":"https://blog.csdn.net/weixin_44750583/article/details/99431770"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000082145235511","author":"","similarity":0.001,"self":false,"similar_word_count":42,"source":"网页","title":"(周志华)读书笔记 -- 第五章 神经网络","url":"https://blog.csdn.net/geng333abc/article/details/68486504"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000015110431211","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"RMSProp均方根反向传播法 - zrh_CSDN的博客 - CSDN博客","url":"https://blog.csdn.net/zrh_CSDN/article/details/81259881"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000193345064111","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"人工智能技术之一：深度造假","url":"http://www.doc88.com/p%2D27347129934091.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000195285691911","author":"","similarity":0.001,"self":false,"similar_word_count":41,"source":"网页","title":"基于web的数据挖掘","url":"https://blog.51cto.com/u_15127596/2749880"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000198071294011","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"计算机视觉技术在手势识别中的应用","url":"https://my.oschina.net/u/3521704/blog/4673784"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000190331742911","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"(硕士论文） FPGA布局算法研究与设计_NoRestriction","url":"http://www.doc88.com/p%2D8768059939679.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000131832145111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"数字系统设计与Verilog HDL(第3版) - 道客巴巴","url":"http://www.doc88.com/p%2D0087332228399.html"},{"reference":false,"teacher":"","datatype":"webpage","year":"","docid":"9000120755765111","author":"","similarity":0.001,"self":false,"similar_word_count":40,"source":"网页","title":"【CN110327034A】一种基于深度特征融合网络的心动...","url":"https://wenku.baidu.com/view/87c64bd4974bcf84b9d528ea81c758f5f71f2909.html?fr=search"}],"similarity":0.133,"similarityPercentage":"13.3%","text":"<p>研究背景</p><p>论文研究背景</p><p>随着市场环境的逐步晋级,市场对与IC功能的需求越来越严苛,IC的设计的集成度在工艺的进步下也逐步增加。目前的ASIC<em class='similar'>(Application Specific Integrated Circuit,</em><em class='similar'>专用集成电路)</em><em class='similar'>设计,</em>也被称为SoC<em class='similar'>(System on Chip,</em><em class='similar'>片上系统)</em><em class='similar'>的集成电路设计技术已得到认可与应用,</em>且当代的SoC设计也不再限制于一块芯片上。通常,<em class='similar'>ASIC设计拥有低功耗、</em>流片成本低、迭代速度快等优势,<em class='similar'>所以ASIC可包含更为复杂和灵活的集成逻辑设计。</em><em class='similar'>同样正是由于现代ASIC设计的高复杂度,</em><em class='similar'>使得其研发设计的风险也在大幅增加。</em><em class='similar'>一旦芯片设计失败,</em><em class='similar'>将会导致大量研发成本的损失,</em><em class='similar'>所以,</em><em class='similar'>IC的正确性验证正在逐步成为具有很高复杂度的IC研发流程中所必须且关键的环节。</em>现阶段集成电路设计中验证所占用的研发周期通常会占用到整体研发周期的半数以上,所以找到高效、准确且可实施的验证手段将成为关键。目前,最常见的验证方法是利用软件进行仿真,<em class='similar'>虽然软件仿真具有简单易用且可行性高的优势,</em><em class='similar'>但是在处理较复杂的集成电路设计时,</em>很难保证其验证效率[6]。<em class='similar'>而基于FPGA的原型验证,</em>依靠其可反复刷写、<em class='similar'>可真实模拟设计中的逻辑功能行为以及能够较为全面且系统的反映逻辑功能等优势,</em><em class='similar'>被越来越多的验证团队所采用</em>[6]。</p><p><em class='similar'>目前随着超常规性能ASIC芯片设计规模与电路复杂度的提升以及集成电路设计体系结构的不断升级与创新,</em>SoC设计的规模在急速膨胀,<em class='similar'>研发流程中的验证阶段已成为高性能芯片研发周期中的关键环节,</em><em class='similar'>因此为保证验证的高效性和准确性,</em><em class='similar'>许多EDA或集成电路设计公司相继推出了许多相对高级的验证手段。</em>在具有超高复杂与高性能IC验证上,主流验证手段基本分为以下三种:使用软件仿真、硬件加速仿真、FPGA原型验证。<em class='similar'>通过软件进行仿真是验证集成电路设计功能正确性上最常采用的方法,</em>因为其具有仿真数据精确、使用方便灵活等优势,因此对于集成规模或复杂度较小的IC模块的正确性验证通常会采用Simulation的方法。但是,当芯片整体复杂与集成度的提升,软件仿真与模拟的效率也在不断下降,同时也将难以覆盖整体IC功能的验证,验证所追求的时间和性能效率也将难以保证,从而很难高效的实现验证结果[3]。针对软件仿真在超大规模集成电路设计中的局限性,<em class='similar'>各大EDA厂家与集成电路研发厂家进而通过使用硬件加速器来实现仿真验证,</em>其主要思想是基于硬件运算速度远高于软件的原理,<em class='similar'>将软件仿真中的复杂运算逻辑通过转移至硬件来加速计算的效率,</em><em class='similar'>最后硬件将加速计算后的结果反馈给上位机即EDA软件,</em><em class='similar'>从而提升整体的验证效率。</em><em class='similar'>而且硬件加速器验证的仿真环境也更加真实,</em><em class='similar'>相比于完全使用软件来实现</em>仿真,由于使用硬件加速器进行仿真使用了真实的硬件环境,所以可以更加准确、<em class='similar'>真实、</em><em class='similar'>有效的反馈集成电路设计系统所存在的各种问题,</em>进而可以帮助集成电路开发人员精确的发现使用软件仿真无法捕获的异常数据,<em class='similar'>这对于验证工程师的调试很有帮助,</em><em class='similar'>典型的硬件仿真器有Cadence公司的Palladium和Mentor公司的Veloce系列</em>[35]。<em class='similar'>但是硬件仿真器也并不是</em>完美的,因为实现硬件加速仿真需要适配不同的集成电路设计结构,同时还需要重新适配与调整支持硬件加速器的EDA软件与硬件加速设备间的通信接口,若所需要进行验证的集成电路设计发生改变,那原有的硬件加速固件可能无法进行复用,可能导致需要重新设计或更换硬件固件及调整相关接口的适配。从实现本质出发,本文的所提及的高密度原型验证系统也可基于硬件仿真器来实现,但硬件仿真器的生产或因设计变更发生的调整成本高昂,<em class='similar'>而且由于当代先进FPGA的技术发展及配套软件已经较为完备,</em>所以通过基于FPGA可反复擦除的特性,使用先进FPGA来进行高密度原型验证成为了当下集成电路设计验证阶段较优的选择。<em class='similar'>随着FPGA性能的不断提升,</em><em class='similar'>基于FPGA的原型验证逐渐成为大规模复杂芯片验证的选择。</em></p><p>高密度FPGA原型验证系统及EDA</p><p>高密度FPGA原型验证系统</p><p>近年来,随着人工智能、GPU、CPU等高性能模块的快速发展与运算需求的增加,仅依赖于一颗先进的FPGA片上逻辑资源已难以满足高性能ASIC芯片设计的需求,因此基于多颗FPGA的高密度原型验证技术将成为最优的选择。</p><p>对于能够使用多FPGA进行正确的验证,则必然需要进行逻辑划分,而为实现正确且合理的逻辑划分,首先要解决的就是设计���辑综合时间长的问题[4]。一个设计规模达到几亿门甚至数十亿门的大规模SoC设计,若使用整个设计先进行综合,再进行逻辑划分的方式,设计的综合时间会非常的漫长,一次综合流程就有可能花费的时间长达数天甚至数周,若设计的规模特别大,甚至会出现编译软件或服务器崩溃的情况[5]。显然,面对超大规模的SoC设计采用RTL(Register Transfer Level,寄存器传输级别)级划分,将会成为最优的选择,RTL-Partition流程如图1.2所示。</p><p>高密度FPGA原型验证流程</p><p>使用RTL划分通过在RTL阶段将设计划分为个子设计后,便可以有效解决设计逻辑综合时间长的问题,同时实现并行编译、综合、布局布线的流程,从而有效提升FPGA原型验证的效率。但为正确实现RTL级的逻辑划分,则需要解决以下几个关键问题:</p><p>(1)首先,在对超大型SoC设计不进行逻辑综合前提下进行RTL级别分割时,需确定最合理的逻辑划分的边界,满足SoC设计的全局时钟树,同时使得进行逻辑划分后的SoC设计满足整个大型FPGA原型验证系统的互联资源和每个划分后的子设计不超出每个FPGA可综合的资源的数量(为增加FPGA综合及布局布线的成功率,常使用FPGA资源总量的60%-70%);</p><p>(2)其次,由于无法对设计进行整体综合,则无法获得设计在FPGA上所需的准确片上资源数量,则如何对设计在RTL级进行快速资源估算,在不进行逻辑综合为前提下获得设计中每个模块的资源,从而为确认划分的边界提供参考依据将成为关键问题;</p><p>(3)最后,如何通过已经获得的RTL级设计的资源与大型原型FPGA设计平台相结合,能同时满足FPGA间的互联结构、互联资源、片上逻辑资源等条件实现合理的逻辑划分,并且划分结果与原始设计逻辑等价;</p><p>本文将主要讨论上述问题中的(1)(2),即如何对RTL设计进行快速且满足RTL级逻辑划分所需精度的快速逻辑资源估算方法并尝试结合机器学习探究解决该问题的方法。</p><p>国内外研究现状</p><p><em class='similar'>当集成电路开发人员通过基于硬件描述语言完成对集成电路寄存器传输级</em><em class='similar'>(Register Transfer Level,</em>RTL)的软件编码后,RTL级设计将通过几个基本步骤,从而最终转化为用于配置FPGA内部结构的比特流文件。RTL需要经过的基本设计步骤,<em class='similar'>包括逻辑综合、</em><em class='similar'>逻辑优化、</em><em class='similar'>技术映射、</em><em class='similar'>布局、</em><em class='similar'>布线等</em>[2]。</p><p>FPGA的硬件组成结构中包含许多不同类别的片上资源,主要有实现逻辑电路所需要的逻辑资源,用于提供外部输入/输出接口的资源,以及连接并导通前两种资源的布线资源。具体来讲,一般包括触发器(F-F)、数字处理单元(DSP)、查找表(LUT)、块状存储(Block RAM,BRAM)等多种片上起源。其中,LUT和FF等逻辑资源一般存在于逻辑块LB(Logic Block或slice)中。</p><p>由于高密度FPGA原型验证整个流程如图1.2包含多个步骤,即RTL级设计组网布局、RTL级设计划分、逻辑综合、工艺映射、单个FPGA的布局和布线等,由于高密度FPGA原型验证流程步骤繁多且耗时较长,设计者在编写和修改RTL描述时,无法快速预估待划分电路在FPGA上实现时需要的片上硬件资源数量,这样就可能导致无法完成综合流程或者无法完成FPGA布局布线,或互联关系复杂,无法满足FPGA间组网关系,从而需要多次设计迭代来解决上述问题。另外,在逻辑综合流程中,每一部分RTL级描述所需要的实际FPGA片上资源的数量,也将对RTL到门级网表的转化与优化过程有指导意义。</p><p>综上所述,在RTL级划分阶段如何能够快速且准确的得到RTL级描述所需要的FPGA片上资源使用量,是一个很关键且重要的问题。虽然在国内也有部分针对大型设计提供EDA及FPGA原型验证厂家,但是对于在划分阶段涉及的资源估算问题在我国国内暂时没有可商业使用的较成熟的解决方案。</p><p>随着FPGA设计规模的越来越大,对于片上资源估算这一环节的重要性越发明显,也是必不可少的步骤,使得FPGA资源估算这一问题也逐渐成为学者和EDA厂商的研究重点,随之而来的也是多种多样的估算方法也都各有优劣。</p><p>2008年Xilinx公司Paul Schumacher 和 Pradip Jha提出由于用户在对FPGA设计的开发使用过程中,无法规避对设计进行逻辑综合这一步骤,从而可以通过使用快速逻辑综合生成的网表结构,通过在设计的宏观层面对现有的器件匹配库对原设计进行匹配替换,从而得到初步的资源估算结果,使用该方法可以较快速的得到不计精度的资源粗略估计值[17]。</p><p>2008年Xilinx公司快速资源估算模型[17]</p><p>2011年代尔夫特工业大学Roel Meeuws等人提出可以通过深度学习建立基于统计方法的高级定量硬件预测模型设想,并做出了初步的验证,为人工智能在资源估计这一问题上的实现建立可行性分析[11]。</p><p>2017年法国瓦伦西亚大学Mariem MakniLAMIH发布的论文中提出一种面向异构FPGA的SoC片上资源估算方法,其出发点是通过结合HSL(High Level Sythesis,高层次综合)报告构建模型对布局后FPGA真实面积进行估算[13]。</p><p>2018年Steve Dai,Yuan Zhou等人在IEEE会议上发表的论文中提出了一种通过提取HLS报告相关信息特征对FPGA布局布线后资源及时序进行预测的方法,并且达到了一个较好的预测结果,由于HLS是比RTL级在设计流程上更高层级、更抽象的表述方法,所以该方法的提出进一步为通过RTL级特征预测实际所需FPGA片上资源提供了可行性[12]。</p><p>通过对国内外研究现状的分析,我们可以发现在面向高密度FPGA原型验证系统的RTL级资源估算方面我国还存在较大的待填补的空白。</p><p>研究的意义</p><p>对于高密度FPGA原型验证系统而言,面向的设计都是规模上千万门或设计规模超过亿门,更有甚者规模超过百亿门,需要上百片当代先进FPGA才可容纳下整个设计,但是对于给定的RTL描述,它所需的FPGA片上硬件资源数量一般需要在完成逻辑打包和布线后,才可以全部得到。但对于规模较大的电路设计,从RTL描述到布线的设计综合流程往往需要花费几个小时乃至数十小时。当出现片上资源不足的问题时,设计者需要修改RTL描述并进行耗时较长的设计综合流程迭代。</p><p>若用户的设计超过百亿门时,进行一次迭代所耗费的时间成本与人力成本都将是不可预计的,所以若可以在不进行综合、布局布线等流程时���速获得所需要的所需要资源的估计值,将会为缩短开发人员的迭代周期提供帮助。同时由于高密度FPGA原型验证划分阶段需要以设计资源使用情况来划分合理的分割边界,合理的分割边界将会对设计在满足硬件FPGA组网前提下为系统的运行,规划,验证,调试提供良好的帮助,而分割边界的确认需要以RTL设计中的每个层级中每个节点的Instance的各项资源作为依据。</p><p>综上所述不论对于开发人员还是对于高密度FPGA原型系统而言,能够快速且精确的获取到大型设计所需的FPGA片上资源及对应层级所需的资源的估计值将具有巨大的意义。</p><p>主要内容及组织结构</p><p>针对我国需要开发具有自主知识产权的大型FPGA原型验证流程和相应的支持EDA软件,本文首先介绍了FPGA的基本结构及大型FPGA原型验证流程中的逻辑综合、技术映射与机器学习模型的一般方法作了详细描述,最后分别以上述基本流程为基础实现了以传统流程为基础的快速资源估算模型及以机器学习为基础的RTL级资源估算模型。本文的组织结构如下:</p><p>绪论主要介绍了当前集成电路设计阶段中验证阶段的重要性及相关的验证手段,并介绍了高密度FPGA原型验证系统与快速资源估算在RTL划分阶段的重要性、意义与待解决的关键问题,并对论文中的主要工作内容进行简要叙述。</p><p>FPGA资源估算方法介绍了FPGA的基本结构与资源组成,并进一步介绍了FPGA设计与验证流程中的快速逻辑综合与技术映射的相关原理,为第三章资源估算模型的实现打下基础,同时分析了EDA工具与机器学习的可能性,并着重介绍了本文第四章实现所用的特征提取方法与机器学习模型。</p><p>快速RTL级资源估算模型的设计与实习本章主要介绍了基于C++与第三方Parser,结合第二章所述的相关原理与方法,如何设计及实现RTL级设计进行快速资源估算的模型,并再次基础上为进一步提升运算速度与估算准确度并满足高密度FPGA原型验证系统RTLPartition的需求,设计并实现了BottomToUp算法,并论述了模型中增加的优化方法与约束项。</p><p>基于机器学习的RTL级资源估算本章主要结合第二章所述的机器学习模型方法,通过分析进一步RTL语法与综合、技术映射的关系,基于C++实现了面向RTL设计的自动化特征提取器,并通过尝试多种机器学习模型,基于Python构建了面向RTL级设计的机器学习资源估算模型,并使用多个Case进行验证,并对模型的预测结果进行分析。</p><p>总结与展望总体概括了论文的工作,并总结了论文中可改进的方式方法与方向。</p><p>FPGA资源估计方法</p><p>FPGA是一种现代研发场景下常见的可编程逻辑器件,是一种可以用来实现任意逻辑电路的集成电路[43]。FPGA的出现是当代集成电路快速发展的一个缩影。上世纪,由于研发、设计集成电路的成本急剧增加,集成电路研发企业都想要找到一种即满足功能需求又价格低廉的芯片。FPGA在这样强烈的市场需求下,应时而生。相对于其他相同种类的芯片,由于其可反复擦除的特性,使得基于FPGA进行研发的容错率更好,成本降低。在目前的多数集成电路研发团队的研发过程中,研发团队会先基于一定数量的FPGA芯片对集成电路功能、算法进行实现,并根据实际情况进行修改直到设计达到预期的效果,最后再将达到要求的设计用ASIC实现并最终投入生产。</p><p>FPGA的本质结构是在现场可编程的门阵列芯片。但FPGA实际上并不是仅依靠简单的门级结构所组成。本章将主要介绍FPGA的基本构成资源及高密度FPGA原型验证的基本流程。</p><p>FPGA基本结构与资源组成</p><p>FPGA的基本构成包含以下部分:</p><p><em class='similar'>第一部分是实现逻辑电路的逻辑要素即逻辑块</em>(Logic Block,LB)也就是我们常说的基本逻辑单元,可编程逻辑中逻辑块的实现方式有多种类型,比如最早的乘积项和现在的查找表、数据选择器等,但是无论使用哪种方式来实现底层逻辑块,<em class='similar'>其本质都是由可以实现任意电路逻辑的可编程部分触发器即Flip-Flop等数据存储电路和数据选择器组成</em>[43]。逻辑块是在FPGA设计开发或原型验证流程中最为紧俏的资源种类之一,各大FPGA厂商对各自的逻辑块结构有不同的定义,但基本原理都是类似的,<em class='similar'>如Xilinx公司设计研发的FPGA其最小基本逻辑单元为CLB</em><em class='similar'>(Configurable Logic Block)</em>,是以LUT来构成的。</p><p>第二部分则是用以组成信号输入和输出的重要部分即IO块,主要用于与FPGA外部信号进行交互,随着电路功能的逐步增强,外部IO模块也逐渐成为多FPGA原型验证系统中的紧俏资源。</p><p>第三部分是连接FPGA内部互联资源的内部布线资源。</p><p>FPGA基本组成图示</p><p>上述FPGA三部分主要组成具体包括以下内容:<em class='similar'>输入输出块、</em><em class='similar'>可编程的内嵌式RAM块、</em><em class='similar'>可编程逻辑单元、</em><em class='similar'>内部布线资源等。</em>可编程逻辑单元负责逻辑功能的实现,布线资源则能够将各个单元进行链接,而内嵌RAM可配置为各种存储形式,输入输出负责FPGA与外部模块的通信,在最新及更先进的FPGA上还会集成DSP、LUTRAM、CARRY等高级资源,如Xilinx最新的Virtex-7系列FPGA。而在上述FPGA的结构中,设计者及支持EDA软件中最关心、最重要的资源种类是可编程逻辑单元,它由LUT和FF所组成。LUT在功能上实际等效为一种特殊的静态存储器SRAM。</p><p>可编程逻辑单元中,LUT表示的是一张内存表,其存储的字数或容量实际取决于存储地址的位数。FPGA上LUT的基本存储单元大多使用静态随机存储器实现。LUT单元的具体结构如图2.2所示<br />LUT结构图示</p><p>如图2.2中所示的查找表,它拥有三个输入,则说明其可实现任何逻辑运算函数为三输入。一般输入的LUT由个静态随机存储单元和一个输入的数据复选器组成。</p><p>LUT基本工作原理</p><p>LUT基本工作原理如图2.3所示,上图左侧为电路的实现逻辑及真值表,上图右侧则对应的等效查找表。由图2.3可以知,查找表中的实际内容是将逻辑的输入等效转化为对应的存储地址,对应的输出的则是存储地址中的具体内容。最终的结果是查找表将对应的复杂逻辑运算对等的映射为存储器中的数值,这也是使用FPGA进行验证效率远远高于使用软件模拟的方法的主要因素。所以LUT资源是在对大型集成电路设计使用FPGA进行原型验证时的紧俏资源。此外,当面对的是时序逻辑电路,则FPGA会通过在每个查找表的后侧通过触发器的配置来完成。</p><p>D触发器</p><p>可编程逻辑单元中的另一种重要资源FF(Flip Flop)触发器,其基本结构如图2.4所示,其基本原理同数字电路设计使用的触发器原理相同,也称为双稳态门,或称双稳态触发器。触发器电路之间是存在连接关系的或存在直接联系的,从而形成数字集成电路的逻辑门。在FPGA中存在有多种类型的FF,如切换触发器、重置触发器、JK触发器和D信号触发器等。常见的触发器结构通常包含最多2个输入信号、时钟信号及输出信号。触发器资源通常在大型RTL设计进行高密度FPGA原型验证时也是一种常常面临资源紧俏的情况。</p><p>FPGA逻辑综合与技术映射</p><p>在本文中提到的FPGA原型验证方法流程中的起点如图2.5均为RTL级硬件描述语言代码,故本章我们先对硬件描述语言verilog HDL语法及逻辑进行简略的介绍,同时进一步介绍基于Verilog HDL的逻辑综合及工艺映射基本原理及基本算法,上述内容将为后续我们进一步建立可工程化的快速资源估算模型提供基础。</p><p>行为级硬件描述语言</p><p>FPGA设计基本流程</p><p>Verilog HDL是以软件编码的形式来表达硬件行为级的一种高级硬件描述语言,其通常以文本或字符的形式来描述数字逻辑系统的逻辑行为与系统结构。通过合理的使用该语言可以表示正确表示所期望的电路实现的行为逻辑或复杂的逻辑运算表达等。<em class='similar'>Verilog HDL是当前集成电路开发与设计环境中最常使用的的两种硬件描述语言之一,</em><em class='similar'>其在20世纪80年代中期开发出来。</em>根据IEEE标准所说明的,<em class='similar'>Verilog HDL是一种用来描述和创建电路系统所</em>有阶段的表示形式,<em class='similar'>由于Verilog HDL是机器可读的、</em><em class='similar'>人类可读的,</em><em class='similar'>所以该语言能够支持对硬件设计进行开发、</em>正确性验证、<em class='similar'>合成和测试、</em><em class='similar'>硬件设计数据的通信和维护、</em>修改[16]。</p><p><em class='similar'>在Verilog HDL中有两种基本语句:</em><em class='similar'>一种是连续型赋值语句,</em>通过使用连续性赋值表达式,用于在实际运行中驱动FPGA中的连续线网,<em class='similar'>从而实现基本建模;</em><em class='similar'>另一种是过程型赋值语句,</em>在过程性赋值语句的行为级描述中,<em class='similar'>将使用寄存器来存储寄存器与线网间的运算结果,</em><em class='similar'>从而实现行为级的描述建模。</em>一个完整的RTL级行为描述设计通常会包含多个模块,每个模块的内部代码将用于描述该模块所对应的逻辑功能或行为描述[16]。这些模块将被开发者进行抽象,然后通过线网结构来进行连接或通信。</p><p>而在典型FPGA设计流程中,或大型高密度FPGA原型验证流程中,首选通过使用Verilog HDL等硬件描述语言开发寄存器传输级即RTL级代码来描述电路设计的行为级逻辑。RTL级描述通过逻辑综合得到电路网表(Netlist),通过对网表进行优化、技术映射、FPGA布局布线等操作后,最后生成FPGA配置数据(bitstream)。其中对于大型原型验证系统最为关注的前端工程就是逻辑综合和技术映射,这个过程是验证Verilog HDL语法正确性和计算该设计所需FPGA片上资源总数的重要过程。其中逻辑综合和技术映射的过程就是将Verilog HDL语言描述的寄存器级代码转换映射至具有工艺概念的逻辑器件的过程,也是本文中结合机器学习人工智能进行FPGA资源估算设计过程中重点关注的过程。</p><p>FPGA逻辑综合</p><p><em class='similar'>对于FPGA数字电路设计而言综合简而言之就是从使用硬件描述语言构造的行为级描述电路的抽象级模型构造出对应的门级电路网表的过程。</em></p><p><em class='similar'>综合细分行为综合与逻辑综合,</em><em class='similar'>行为综合是从算法表示、</em><em class='similar'>行为描述转换到RTL级,</em>如HLS综合;本文将重点关注逻辑综合的基本原理,而逻辑综合是将开发者编写的RTL级描述代码转换至包含有多级触发的逻辑门级的过程,也是在FPGA片上资源估算过程中关注的重要步骤之一,后续将主要介绍逻辑综合这一对高密度FPGA原型验证系统较为重要的流程。</p><p>FPGA逻辑综合流程</p><p>综合是整个ASIC设计流程中的一个中间步骤,综合后生成的网表文件,其本质是基于导线来进行连接的RTL级功能块(如FF、LB和MUX等)所组成。综合产生网表文件后,逻辑优化器会读入经过初步逻辑综合后生成的门级网表,下一步根据使用者提前配置的相关约束对网表进行针对性的优化,如时序、面积等。并且,这些资源约束或称为面积约束和时序约束也能够指定逻辑综合器合理的选取或生成RTL级功能块,逻辑综合流程如图2.6所示。既然综合器的目标是能将硬件描述语言转换成为底层的门级网表,那么综合器必定有一种映射的机制,能够实现Verilog代码中的���些变量、组件映射成对应的硬件元件,这种映射机制将是后续我们基于机器学习进行资源映射方法研究所重点关注的对象。</p><p>由于本文中主要涉及计算RTL模块构造器从工艺库中提取对应的语法及模块进行Technology Mapping映射后所得到的资源,所以当我们聚焦于本文所述的基于机器学习资源估算模型,更加关注于Verilog HDL语句是如何被映射成实际硬件器件的,如:数据类型将被映射成为何种硬件,<em class='similar'>常量是如何进一步转换成逻辑数值的,</em><em class='similar'>语句是如何转换成硬件的。</em>下面我们将详细分析下综合中各个Verilog HDL语句及器件的综合原则。</p><p>1、储值单元的综合原则</p><p>对于FPGA上的实际硬件主要有三种基本的存储数值的单元分别是:线网、锁存器、触发器,分别对应于Verilog语言中的net和reg类型关键字,其综合的映射原则是对net类型的关键字在综合后将映射为FPGA片上的布线资源,而reg类型关键字综合后将根据行为级描述的逻辑可能被综合为片上布线资源、触发器资源或锁存器资源即存储器资源,当reg在always模块中即时序电路逻辑中以临时变量被使用时其综合结果取决于设计的具体逻辑实现[44]。</p><p>2、连续赋值语句的综合原则</p><p>连续赋值语句综合图示</p><p>连续赋值语句(Continuous Assignment)语句对应的硬件实现如图2.7所示,在EDA工具中逻辑综合器会将该语句右侧的表达式逻辑进行计算,用于驱动该语句中左侧的net类型变量,连续赋值语句的右侧表达式中逻辑功能实现后,赋值表达式中信号的改变都会被立刻表现再被赋值的变量数据上[16]。</p><p>3、过程赋值语句的综合原则</p><p><em class='similar'>过程过程赋值语句</em>(Procejural Assignment)<em class='similar'>语句对应的FPGA的硬件实现与连续性赋值相似,</em><em class='similar'>即从赋值运算符即‘=’或‘&lt;=’的右侧计算后抽取出逻辑,</em><em class='similar'>用于驱动赋值语句左边的变量,</em><em class='similar'>但是它实现的语法前提是驱动赋值语句左边的变量是reg类型变量,</em>且只有Always语<em class='similar'>句块中的过程赋值语句才可以被综合器综合,</em><em class='similar'>若出现在initial语句块中将被仅用于仿真。</em><em class='similar'>过程赋值语句有以下两种分别为:</em><em class='similar'>阻塞赋值语句</em><em class='similar'>(Blocking Assignment Statement)</em><em class='similar'>、非阻塞赋值语句</em><em class='similar'>(Non-blocking Assignment Statement)</em></p><p>阻塞赋值语句综合</p><p>阻塞赋值语句综合图例</p><p>阻塞赋值语句简而言之就是在一个always语句块中,语句的执行顺序是依据一定的规则有规律的顺序执行,在综合时将会在依据赋值语句逻辑原理结合always块的触发器来实现逻辑综合,阻塞赋值语句RTL级描述与电路映射如图2.8所示。</p><p>非阻塞赋值语句综合</p><p>非阻塞赋值语句综合图例</p><p><em class='similar'>非阻塞赋值是在always块中的语句都是并行执行的,</em><em class='similar'>非阻塞赋值语句RTL级描述与电路映射图2.9所示,</em>对比上图可以得到对于一个always块中的阻塞或非阻塞语句的综合最大的区别在于是并行还是顺序执行,但是对于综合后器件的数量,也就是我们所关心的资源数量并没有明显的影响,主要影响使用资源数量的关键在于赋值语句右边的驱动逻辑的组成。</p><p>4、逻辑运算的综合原则</p><p>进行逻辑综合时Verilog HDL语法中的逻辑运算符将会被直接转换成对应的基本逻辑门,如与或非、异或门等[43]。</p><p>非阻塞赋值语句综合图例</p><p>5、算术运算符的综合原则:</p><p>在Verilog HDL语句中支持各种算术运算符如、、、等,在进行综合时RTL构造器会将其构造为加法器、减法器、除法器等源语器件。如图2.11所示为加法运算综合后器件映射图。</p><p>算数运算符综合图例</p><p>always语句块的综合原则</p><p>在Verilog HDL设计中用的最多的就是always语句块,always关键字用于描述组合逻辑和时序逻辑,两种逻辑的主要区别在于敏感触发信号是否为时序信号,alway语句块中多包裹其余语法使用,单独使用不具有任何意义。</p><p>if及条件语句的综合原则</p><p>在Verilog HDL语句中的单条if-then语句常表达条件判断行为,故常被综合为MUX数据复选器,若为嵌套组合预计,常会被逻辑综合为收到触发条件控制的纯组合逻辑电路,如图2.12所示。</p><p>if语句综合图例</p><p>case语句的综合原则</p><p>在Verilog HDL语句种,<em class='similar'>case包含两类条件表达式和选择项表达式,</em><em class='similar'>case语句可以看作是嵌套的if语句,</em>所以其综合原则与嵌套if条件语句类似,如图2.13所示。</p><p>case语句综合图例</p><p>10、循环语句的综合</p><p>对于循环语句,在逻辑综合时依据行为级的逻辑描述若其循环体内部逻辑不存在依赖性或关联性,则循环体内部语句将被展开为并行语句后进行逻辑综合,且语句执行先后顺序不会影响到最终的结果,如:For循环��句在逻辑综合后会依据循环体内部的逻辑构成级联的链式组合逻辑电路。</p><p>循环语句综合图例</p><p>11、函数语句的综合</p><p><em class='similar'>在verilog HDL语句中。</em>function如C++的内联函数一样,进行逻辑综合时,将会被直接展开成对应代码放在对应的模块中。<em class='similar'>任何在函数中定义的局部变量都被当做单纯的临时变量,</em>且由于其所表述的行为级逻辑并没有时序控制,因此function逻辑综合结果是组合逻辑,如图2.15所示。</p><p>函数语句综合图例</p><p>FPGA技术映射</p><p>在综合优化过程中,<em class='similar'>技术映射是将技术映射作为综合优化的重要组成部分,</em><em class='similar'>也是FPGA支持软件工具EDA中最为关键的部分,</em>技术映射是面向FPGA的EDA软件中至关重要的一步,<em class='similar'>其映射和优化结果对整个FPGA设计流程中下一阶段的布局布线等步骤有着决定性的作用,</em>由于其重要性,国内外也研发出了一些列针对不同目标的工艺映射办法,面向面积优化、面向时序约束等</p><p><em class='similar'>工艺映射是指将不依赖于任何工艺的门级网表转换为由特定FPGA逻辑单元所表示的网表的过程</em>[43]。本文此处所提及的逻辑单元均为使用LUT、MUX、<em class='similar'>FF作为基本逻辑单元所构成的FPGA的最小逻辑单位。</em>技术映射是从RTL级出发对所描述的硬件行为实际转换为FPGA片上器件的重要步骤,<em class='similar'>因此对FPGA片上最终实现的电路的面积、</em><em class='similar'>功耗、</em>运行速度等方面相当重要。</p><p>工艺映射流程图</p><p>技术映射的本质是将电路所描述的行为逻辑所对应的布尔网络,通过算法与特定FPGA的工艺器件库,将布尔网络转换为对应FPGA最小逻辑单元的过程。其目的是对用户输入的RTL级电路经过逻辑综合后构成的布尔网络通过先进的算法来进行划分,使得原设计中的每一小块电路的逻辑功能可以借由FPGA的一部分CLB来实现。我们可以参考图2.16来进一步对技术映射的流程进行分析。</p><p><em class='similar'>由图2.16可以发现工艺映射的流程是完成门级网表的输入至实际工艺下可实现的工艺网表输出这一个过程,</em><em class='similar'>门级网表我们可以理解为是由一组组逻辑表达式构成的的布尔网络,</em><em class='similar'>该布尔网络图上的个节点均为任意的逻辑功能组合单元。</em></p><p>由图2.16可以看出划分是工艺映射流程的第一个步骤,划分的本质是对已经获得的用以表示电路逻辑的布尔网络依据其所实现的功能逻辑进行分割,划分步骤会将将由多个输出组成的布尔网络等价转化为一组仅有一个输出的布尔子网,从而将布尔图进行简化,进而提升技术映射的效率及简化其过程。当划分完毕,<em class='similar'>原始布尔网络所代表的逻辑电路便转换为一个个仅具有单一输出的布尔子网络。</em><em class='similar'>根据工艺映射算法的不同,</em><em class='similar'>原电路均可被构造成由一张DAG图或一组树来表示</em>[15]。</p><p>电设计转化为DAG图</p><p><em class='similar'>逻辑分解是则将电路进行在逻辑上等价的一种转换,</em><em class='similar'>其根本目的是将复杂的逻辑单元用最基本的逻辑形式来进行表达,</em><em class='similar'>以便于后续的器件匹配和映射</em>[45]。<em class='similar'>布尔网络在经过逻辑分解操作后,</em><em class='similar'>其原本的���本的布尔网络的节点之间将只会保留基本的函数逻辑关系。</em></p><p>逻辑划分</p><p><em class='similar'>经过划分和逻辑分解之后下一步就是匹配。</em><em class='similar'>而匹配则是在划分与逻辑分解后,</em><em class='similar'>将与工艺无关的布尔网络与工艺库相结合。</em>其本质就是使用FPGA厂商所<em class='similar'>提供的实际工艺下可实现的逻辑单元或更高级的片上器件对布尔图进行等效匹配,</em><em class='similar'>是把理想的布尔网络用库中的实际单元实现的过程</em>[45]。目的是使得FPGA片上所对应的实际工艺器件最终可以实现布尔图所表述的电路逻辑。</p><p><em class='similar'>在EDA流程中技术映射的最终步骤是对完成逻辑匹配后的树或图进行实际工艺的覆盖,</em><em class='similar'>其作用是根据实际电路的要求,</em><em class='similar'>在所有节点的多种可行匹配集中选出足够的匹配来覆盖整个网络的所有节点</em>[47]。分离出满足器件要求、用户约束的部分子图来<em class='similar'>进行匹配</em>,<em class='similar'>并从匹配集中选出对应的器件库单元,</em><em class='similar'>完成布尔网图到工艺网表的实际映射。</em><em class='similar'>要保证每完成的一组匹配单元,</em><em class='similar'>其每个单元的扇入和其他组的匹配后的单元的扇出进行相通,</em>且每组单元间不应存在叠加的情况。工艺映射核心算法的优化方向<em class='similar'>是如何在满足一定约束的条件下分割布尔网表、</em><em class='similar'>如何选取最合适的匹配集,</em>从而满足用户所期望的对面积、<em class='similar'>功耗、</em>速度的需求。当完成技术映射后,<em class='similar'>EDA工具将以实际的门级网表的形式输出,</em>所构成的网表也是在高密度FPGA原型验证系统中基于网表进行FPGA划分的基本输入。</p><p>器件覆盖</p><p>下面我们通过分析具有代表性的FlowMap的LUT工艺映射原理,借由以下实例对工艺映射流程进行进一步说明。</p><p>无论多么先进的FPGA芯片中其基本资源中其查找表的输入数是既定的,如LUT1、LUT2、LUT3等,基于图2.2可知,查找表可以实现所有输入不大于其本身输入数量的任意逻辑。而FPGA的工艺映射的目的就是要从目标电路的布尔逻辑图中不断划分出输入数在组成该FPGA的最小查找表之内的等效逻辑。</p><p>首先将图2.17中的门级网表转换为图中的DAG有向图的方式来表示。最上层的节点成为主输入,最下层的节点称为主输出,从而可以得到如图2.18所示的映射范围,图2.19所示为在映射范围下进行切分和标注求解的过程及将映射范围的有向图依据主输入及主输出进行逻辑分层,从而标注拓扑序列,进而完成覆盖。其具体步骤伪代码如图2.20所示。</p><p>Mapping算法伪代码</p><p>通过上述计算可以得到每一层的标注为依据上层计算所得出的最小值,从而可以保证使用最浅的逻辑层深度。之后对电路的主输出开始进行器件映射,每映射一个后主输出将发生变更,对所有的主输出依次进行算法映射后,便可得到相对应的查找表及网表图,如21所示。</p><p>对目标电路进行切分和映射方法的历史发展中,有很多根据不同工艺、不同划分或覆盖思路形成的优秀技术映射算法,如:哥伦比亚大学Steve Wilton团队所开发的更倾向于改善逻辑电路映射后功耗的EMAP算法、多伦多大学Stephen Brown团队所开发的应用比较广泛的IMAP算法等[2]。</p><p>机器学习模型与资源估计方法</p><p>本章前两节主要叙述了关于面向FPGA的逻辑综合与技术映射的基本流程,为本文后续建立基于传统意义上的快速资源估算模型建立基本方法论,而本节将主要介绍再上述两节所述的传统资源获取办法的框架基础下,结合机器学习来构建的FPGA设计资源估算的可行性与模型的方法,包括机器学习与EDA相结合的可行性、随机森林模型,人工神经网络(ANN)及学习模型评估指标。</p><p>机器学习与EDA结合的可行性</p><p><em class='similar'>机器学习是面向多学科的交叉学科,</em><em class='similar'>其涵盖概率论,</em><em class='similar'>统计学,</em><em class='similar'>近似理论和复杂算法等知识,</em><em class='similar'>使用计算机作为工具并致力于真实实时的模拟人类学习方式,</em><em class='similar'>并将现有内容进行对应知识体系的划分来有效的提高学习效率的方法</em>[3]。</p><p>通过机器学习的定义同时结合FPGA设计逻辑综合流程及技术映射原理,我们可以得出对于大型FPGA设计在综合阶段存在的资源估算的时间长的弊端,我们可以使用机器学习方式以Verilog HDL的各种语法及参数的数量及值作为特征,Vivado综合的资源数值为标签,来训练监督学习的回归模型,从而实现快速的资源估算。基于机器学习实现资源估计方法的流程如图<br />机器学习实现RTL级设计资源估算流程</p><p>特征提取方法</p><p>对于机器学习或人工智能而言,模型的选择与好坏并不能最终决定预测精度的上限与下限,最终模型的上限取决于特征与样本的优劣,所以特征对于机器学习模型的学习与预测是相当重要的。</p><p>特征的优化和清洗将对机器学习最终的结果产生较大的影响,所以在选择学习模型与训练器前需要先对样本进行特征提取,对于在RTL级进行资源预测这个命题,我们需要在RTL级提取尽可能多的语法特征,从而确保不会丢失重要特征,虽然会获得很多无关特征或冗余特征,但在进行特征工程及训练模型迭代时可以进一步对特征进行优化,从而保留相关特征和重要特征。</p><p>由于RTL级设计是基于Verilog HDL语言开发的编程语言,所以我们采用尽可能细致的特征提取方法,即将Verilog HDL抽象为数据结构,并结合IEEE 1800所示Verilog语法标准,通过进一步解析数据结构来尽可能全面的提取Verilog HDL语言的语法特征,从而构建在基于2.2节原理的基础上的合理特征集。具体的特征提取算法与特征提取的构建将在错误!未找到引用源。进行详尽的阐述。</p><p>随机森林</p><p><em class='similar'>在机器学习中,</em><em class='similar'>随机森林是通过包含多个基于决策树弱学习器进而构成的强学习器。</em><em class='similar'>随机森林是Leo Breiman和Adele Cutler发展出推行出的一种比较先进的面向机器学习的算法。</em>这个算法是多学习集成学习的典型模型之一。</p><p>Bagging</p><p><em class='similar'>Bagging是并行式集成学习中比较具有代表性的机器学习方法,</em>它的算法核心是基于自主采样法来构造的,<em class='similar'>即给定一个数据集拥有固定m个数据样本,</em><em class='similar'>学习算法先随机拿出一个样本放入采样集中,</em><em class='similar'>再通过将该出去的样本放回数据集,</em><em class='similar'>使得在每一次采样时均有可能取到之前的样本,</em><em class='similar'>这样经过覆盖所有样本的次数的随机采样,</em><em class='similar'>我们可以获得包含m个数据的采样样本集。</em>由式(2-1)可知采样集中将会出现训练集中约三分之二的数据[44]。</p><p>(2-1)</p><p>通过上述算法可以采样出个含个训练样本的采样数据集,随后使用每个采样集对弱学习器进行训练,再通过将这些弱学习器的预测结果进行进一步的数据结合,从而实现Bagging算法的流程。我们进一步分析其算法复杂度来估计其学习效率,<em class='similar'>若基学习器的时间复杂度为,</em>则通过上述方法可知该算法的复杂度约为,<em class='similar'>考虑到采样与决策时的时间复杂度很小,</em><em class='similar'>而通常是较大样本数据而言是一个较小的常数,</em><em class='similar'>因此,</em><em class='similar'>训练使用Bagging集成的学习器与使用一个弱学习算法训练所需要的时间复杂度同阶,</em>从而证明Bagging是具有较低时间复杂度、较高学习效率的集成学习算法[49]。</p><p><em class='similar'>从偏差-方差分解的角度看,</em><em class='similar'>如何预测结果的降低方差是Bagging算法主要关注的方向,</em><em class='similar'>因此它在受样本的干扰较大的学习器上的优秀表现更为明显</em>[50]。Bagging的算法伪代码如图2.22所示。</p><p>Bagging算法伪代码</p><p>决策树</p><p>决策树是一种常见的机器学习算法,决策树算法的最终目标是构造具有泛化能力强,处理未见样本能力强的二叉树,该树能够对泛化样本进行正确且合理的决策,其基本流程遵循基本的分治思想,决策树学习算法伪代码实现如图2.23所示。</p><p>决策树学习基本算法</p><p>显然基于图2.23中的伪代码可知决策树是依靠递归来生成的算法过程。在决策树的决策过程中我们更关心的肯定是如何划分,或者说如何能够使得划分的特征是特征集中的最优属性,同时考虑划分的特征类别尽可能的一致,即结点的&quot;纯度&quot;,决策树中衡量一个结点的纯度的高低有以下几类指标:</p><p>信息熵公式:</p><p>(2-2)</p><p>增益率公式:</p><p>(2-3)</p><p>基尼指数:</p><p>(2-4)</p><p>信息熵、增益率与基尼指数将很好的描述一个数据节点对最终预测结果间的信息相关度,从而保证决策树在每个分支进行决策时尽可能的提高决策的正确性。总的来说决策树算法是比较简单的一种基于0、1对数据进行划分的简单决策型机器学习算法,决策树还不能满足本论文中对RTL级设计进行资源估算这种复杂命题,但是使用多颗弱决策树构成的随机森林,将从决策复杂度上较好的满足我们对资源估算这种复杂问题的计算需求。</p><p>随机森林</p><p><em class='similar'>随机森林是Bagging的变体,</em><em class='similar'>是基于Bagging的算法思路扩展而来,</em>其本质也是一种由多个弱学习器所集成的强学习器。<em class='similar'>RF在通过在训练过程中引入一种随机特征选择机制,</em><em class='similar'>并以Bagging使用决策树作为基本弱学习器的基础上构建得来。</em><em class='similar'>具体来说,</em><em class='similar'>传统决策树在选择划分属性时是在当前树节点的特征集合</em>(假定有个特征)<em class='similar'>中选择一个最优属性;</em><em class='similar'>而在RF中,</em><em class='similar'>对基决策树的每个结点,</em><em class='similar'>先从该结点的属性的集合中随机选择一个包含个属性的子集,</em><em class='similar'>然后再从这个子集中选择一个最优特征用于下一步的划分</em>[30]。</p><p>随机森林在花样繁多的决策与回归命题中展现了远远超乎预期的强大的性能,随机森林通过增加随机属性的选择这一弱小的改动所构成的源于Bagging的学习期,成功的继承了Bagging中所具有的多样性学习方法,而且由于随机森林中若学习器的选择多样性不仅来自样本扰动,还来自本身样本属性的扰动,这就使得最终集成后的强学习器在泛化性能上有较好的提升,且可通过多个弱学习器之间差异度的互补来增强其性能。</p><p><em class='similar'>通过对随机森林算法进行研究,</em><em class='similar'>发现随机森林相较于传统的机器学习模型具有训练速度快、</em>预测效果好、<em class='similar'>泛化能力强、</em>鲁棒性强等多种优势,可以非常有效的避免模型在学习过程中过拟合的现象出现,适用于拥有高维度的样本数据的处理。</p><p>随机森林的回归预测结果是棵决策树的预测结果进行求均而得到的,它满足以下定理:</p><p>定理1当时,</p><p>(2-5)</p><p><em class='similar'>式(2-5)</em><em class='similar'>右侧部分表示随机森林的泛化误差,</em>将其记为。<em class='similar'>则表示一课决策树的平均泛化误差即</em><br />(2-6)</p><p>定理2对所有随机生成的训练集都有,</p><p>(2-7)</p><p>式(2-7)<em class='similar'>中是在与相互独立的情况下,</em><em class='similar'>���差和的加权相关系数。</em></p><p><em class='similar'>上述定理1和定理2给定了使随机森林精确的前提是:</em><em class='similar'>残差间的相关系数低以及错误决策树数目较少。</em><em class='similar'>为降低决策树的平均误差,</em><em class='similar'>随机森林回归选择对相关系数进行加权处理。</em><em class='similar'>随机森林</em>的具体算法步骤伪代码可概括为下图2.24所示。</p><p>随机森林模型算法伪代码</p><p>人工神经网络</p><p><em class='similar'>深度学习的核心是人工神经网络,</em>其在当代用途广泛、功能强大并具有良好的扩展性,<em class='similar'>使得其非常适合处理大型和具有高度复杂的机器学习任务,</em>例如图像识别分类、或者语音识别等[44]。下面将主要介绍人工神经网络中的感知器计算原理及多层感知机。</p><p>感知器</p><p>神经元计算图示</p><p><em class='similar'>感知器架构是最为简单的神经网络基础结构模型之一。</em>其结构如图2.25所示,<em class='similar'>图中所示神经元结构称为阈值逻辑单元</em>(TLU),<em class='similar'>也称为阈值逻辑值单元</em>(LTU)。该神经元的IO均为数字信号,<em class='similar'>而不是二进制的0/1值,</em><em class='similar'>并且每个输入连接都有对应的相关联的权重值</em>[44]。<em class='similar'>TLU来计算输入的加权和,</em><em class='similar'>其中阶跃函数将使用加权和来输出学习结果,</em>在感知器中公式(2-8,9)所示为最常用的阶跃函数,Heaviside阶跃与sng函数。</p><p>(2-8)</p><p>sgn(z)={█(-1,&amp;z&lt;0@0,&amp;z=0@+1,&amp;z&gt;0)┤(2-9)</p><p>感知器是一层阈值逻辑单元单元所构成的,<em class='similar'>每个阈值逻辑单元单元与全部的Input信号相连接。</em><em class='similar'>当一层神经层中的所有神经元都与上一神经层的每个神经节点相接时,</em><em class='similar'>通常将这一层的全部神经元节点称为全连接层。</em><em class='similar'>所有与输入信号相接的全部神经元形成输入神经层,</em>用以与感知器的输入数据互联。同时,每一个神经元会特别增加一个具有特殊意义的偏置特征,并通过特殊的神经元来保证其输出始终为1。具有,作为输入的感知器如图2.26所示。该感知器可以将输入的数据同时借由输入层来分为多个不同的0/1类,并作为多输出。</p><p>感知器结构图示</p><p>借助线性代数的数学关系,通过公式(2-10)可以计算出当存在多个输入时计算全连接层感知机的输出结果,且计算是高效的。</p><p>(2-10)</p><p><em class='similar'>关于感知器的训练算法,</em><em class='similar'>其很大程度上受到规则的启发,</em>当两个神经元在某种情况下经常进行交互时,<em class='similar'>这两个神经元之间的互联关系便会得到加强,</em>也就是说,当两个神经元被同时激活时,其间的权重值将会变化。更具体的说,<em class='similar'>感知器每一次训练被送入一个训练样本,</em><em class='similar'>同时每个训练样本进行预测。</em><em class='similar'>从而对产生错误</em>预测的神经元的权重进行调整,<em class='similar'>从而增强来自输入的连接权重,</em><em class='similar'>这些神经元权重将有助于正确的预测,</em>具体如公式(2-11)所示。</p><p>(2-11)</p><p>多层感知机</p><p>多层感知器也称深度人工神经网络,则是在上述感知器的基础上,<em class='similar'>由一层输入层、</em><em class='similar'>一层或多层TLU作为隐藏层和一层输出层组成。</em><em class='similar'>靠近输入层级常称为较低层,</em><em class='similar'>靠近输出的层通常为较高层。</em><em class='similar'>每一层都拥有一个偏置神经元并全接至下一层神经元。</em></p><p>多层感知机结构图示</p><p><em class='similar'>常见的多层感知机的网络结构是如图2.27所示的多层级结构,</em><em class='similar'>每层的单个神经元与下一层神经元之间实现全部连接,</em><em class='similar'>同层的神经元间也不会出现相互之间的连接,</em><em class='similar'>跨层的神将元之间也不存在连接关系。</em><em class='similar'>这种网络结构通常称为&quot;多层前馈神经网络&quot;,</em>即多层感知器,<em class='similar'>其中输入层神经元用以输入外部输入,</em><em class='similar'>隐藏层和输出层用以处理神经信号,</em><em class='similar'>最终结果由输出层输出预测结果;</em>换句话说,<em class='similar'>输入层只用于接收样本数据的输入,</em><em class='similar'>隐藏层和输出层包含函数神经元来对输入的数据进行学习。</em><em class='similar'>神经网络的学习过程是根据训</em><em class='similar'>练样本的输入来调整神经元将之间的权重值和各个功能神经元的阈值,</em>神经网络所学习的主要内容包含在连接权重和阈值中。</p><p>当它进入ANN内部的隐藏层时,它处于深度神经模式(DNN)中,可进行前向传播和后向传播。只穿越电平两次,一前一后两种传播算法可以计算每个模型参数的网络误差梯度。误差梯度是用以学习如何更好的修复每个连接权重和每个偏移项错误。当找到这些梯度时,会对梯度进行有效的梯度下降运算,直到梯度难以拟合,然后它会更新整个过程。常见的DNN网络超参数与典型值如表2.1所示,后续基于机器学习建立快速资源估算模型会进一步对超参数进行调整及介绍。</p><p>典型多层感知机架构</p><p>机器学习性能评估指标</p><p>评价模型性能的指标有很多种,需要我们根据特定的任务选择合适的评价指标。不恰当的评价指标不仅无法模型进行评估,反而会造成误导,得出错误的结论。一个评价指标可以展现模型在某一方面的能力,所以一般情况下,需要构造多个评价指标,来对模型进行全面的分析。针对大型RTL设计的FPGA资源估算模型的需求分析,其为回归问题模型,对于回归问题模型的特点有如下几种模型性能评估指标:</p><p>均方误差</p><p>均方误差是在回归问题的机器学习模型中常见的衡量泛化误差的学习指标,均方误差是反映样本真实值与实际预测值之间差异程度的度量[20]。评价点估计的常用标准即均方误差均方误差公式如(2-12)所示。</p><p>(2-12)</p><p>式(2-11)说明,<em class='similar'>均方误差由点估计的方差与偏差的和的平方两部分组成。</em></p><p>均方根误差</p><p><em class='similar'>均方根误差,</em><em class='similar'>也称做标准误差,</em><em class='similar'>均方根误差是预测值与真实值偏差的平方与采样次数的比值的平方根,</em><em class='similar'>在实际测量中,</em><em class='similar'>观测次数总是有限的,</em><em class='similar'>真值只能用最可信赖</em><em class='similar'>(最佳)</em><em class='similar'>值来代替。</em><em class='similar'>标准误差对一组测量中的超大值或超小值所产生的错误值反映非常敏感,</em><em class='similar'>所以,</em><em class='similar'>标准误差能够很好地反映出机器学习预测的精度。</em><em class='similar'>这也是均方根误差在工</em>程领域中尝尝作为评估指标的理由。因此,均方根误差是常用来度量预测值同真实值之间的偏差,其计算过程公式如(2-13)所示。</p><p>(2-13)</p><p>3、R-Squared</p><p>是统计学里常用的统计量,的名字是coefficient of determination,另一个名字是Nash-Sutcliffe model efficiency coefficient。给定一系列真值和对应的预测值,的定义如公式(2-13)所示。</p><p>(2-14)</p><p>的含义是,预测值解释了变量的方差的比例差距,其度量的是预测值对于实际值的拟合程度。进一步理解,假定的方差为1,则使用表示该模型之后,的残差的方差减少了多少。比如等于0.8,则使用该模型之后残差的方差为原始值方差的20%。</p><p>:最理想情况,所有的预测值等于真值。</p><p>:一种可能情况是&quot;简单预测所有值等于平均值&quot;,��所有都等于真实值的平均数。</p><p>:模型预测能力差,比&quot;简单预测所有值等于平均值&quot;的效果还差。这表示可能用了错误模型,或者模型假设不合理。</p><p>的最小值没有下限,因为预测可以任意程度的差。因此,其范围是。</p><p>快速RTL级资源估算模型的设计与实现</p><p>本章将结合对第二章所述的FPGA逻辑综合原理与技术映射原理的研究,使用C++语言设计并构建基于传统框架下的快速资源估算模型,并基于该模型结合第一章所述高密度FPGA原型验证系统所需要解决的关键问题及基本需求增加算法优化与约束项优化,实现符合基本原理与能够解决实际工程问题的快速RTL级设计资源估算模型。</p><p>Verific及相关数据结构</p><p>Verific平台介绍</p><p>Verific Design Automation是Verific公司开发的一款用于解析与构建SystemVerilog、VHDL和UPF的解析器平台,使其客户能够以低成本快速开发高级EDA产品。</p><p>Verific分析创建解析树并执行类型推断以解析标识符的含义。解析器/分析器模块支持整个系统Verilog IEEE 1800(包括Verilog IEEE 1364)、VHDL-IEEE-1076和UPF-IEEE-1801语言。生成的解析树/数据模型附带了大量成熟的C++ API。Verific的解析器平台分发为C++源代码,并在所有32位和64位UNIX、Linux、MAC和Windows操作系统上进行编译。Verific的解析器平台目前在全球许多公司的生产和开发中使用,从EDA初创公司到《财富》500强半导体供应商等。</p><p>我们将使用Verific,并基于Verific生成的语法树来完成后续的模型构建操作,由于Verific具有当前行业认可的Parse和Analyze功能,并基于C++平台实现开发,提供广泛的语法树API作为二次开发的基础,故我们选择在Verific的基础上实现可商业化使用的快速资源估算模型。首先需先对Verific所构造的基本数据结构进行相关了解及分析,从而选择构造合理的数据机构及API进行模型建模实现;Verific主要数据结构分为以下两个主要部分:基于RTL的语法树结构和基于Netlist的Database结构,下文将主要介绍构建资源估算模型使用的主要数据结构。</p><p>Parse-Tree数据结构</p><p>Verific在RTL级别Verilog VHDL的语法树Parser上有丰富的经验,通过对语法进行文本级别的流解析在内存中构建层次树(Hierarchy-Tree)结构用以表述Verilog VHDL语法信息,层次结构树(hier Tree)是设计层次结构的独立于语言的表示形式。设计的层次结构由Verilog语言中使用的模块实例化和生成语句定义。随后在本文档中,我们将此数据结构称为hier树或Parse-Tree。这个层次结构树结构是一个轻量级的静态详细层,位于分析的解析树之上,保存着关于各种设计对象的关键信息。树的每个节点都存储有关它所表示的设计对象的信息,以及该层次结构路径中特定于该设计对象的参数和泛型等常量的值。语法树结构主要由以下几种类结构:</p><p>①VeriTreeNode是所有Verilog树节点元素的基类。因此,它包含行文件信息和在所有解析树节点上的数据信息。其中VeriExpression、VeriIdDef、VeriStatement等中非常常用的派生类,用于对Verilog Design作进一步数据构造,下图为VeriTreeNode的继承示图:</p><p>VeriTreeNode类视图</p><p>②VeriIdDef是标识符定义树节点,是标识符节点的基类。Verilog中声明的任何标识符都将成为VeriIdDef结构类。下图为VeriIdDef的类关系视图,其中VeriidDef的继承类VeriModuleID、VeriOperatorID、VeriInstID等为进一步对Verilog语言语法的描述类。</p><p>③VeriExpression是所有Verilog表达式解析树节点的基类。其继承类用于描述包括常量、名称引用、运算符以及出现在实例化端口关联列表和模块端口列表中的端口关联信息等。下图为VeriExpression的类关系视图。</p><p>④VeriStatement是所有Verilog statement 节点的基类,包括所有Always语句块等语法</p><p>⑤VeriModule位于任何Verilog解析树的顶部,是模块节点的基类。它以解析树的形式表示一个完整的Verilog模块。VeriModules存储在静态哈希表中,该哈希表表示已分析的所有Verilog模块。</p><p>VeriModule类视图</p><p>上述5种数据结构为Verific中最基本的基类,所有语法树的语法表述及存储均可由其中一种进行表述,在本文中所有RTL代码的语法将会使用上述类进行语法树处理及构造,从而获取正确的设计层级及内容。</p><p>Netlist数据结构</p><p>由于传统技术映射是在网表级的基础上通过器件库使用图划分算法,将网表节点映射至对应的器件,所以为构建基于传统方法的快速资源估算模型,也需要使用Verific的Netlist数据结构来实现,Verific Netlist Database数据结构如下:</p><p>Verific-Netlist-DataBase数据结构图</p><p>①Libset是一个单例对象(只实例化一次的对象),它包含(char*)lib_name到Library*映射的映射。Libset没有所有者,因此被视为全局对象;</p><p>②Library是Libset拥有的对象,它包含所有Module模块命名到cell指针映射的映射。库对应于它的VHDL或Verilog等价物。例如,在VHDL中,将用户实体/体系结构对分析到一个名为&quot;user&quot;的库中,然后详细描述解析树,那么将创建一个名为&quot;user&quot;的库对象并将其添加到全局库集中。</p><p>③Cell是库所拥有的对象,它包含Netlist_name到netlist*映射的映射。当处理Verilog时,单元是包含单个网络列表的模块。就VHDL而言,单元是一个可以有多种体系结构(网络表)的实体。</p><p>④网络列表是数据库层次结构中的关键组件。它是一个由单元拥有的对象,包含其他网络列表实例化形式的功能(通过称为网络、端口和端口引用的对象连接在一起)。它还包含一组自身正在实例化的引用(从其他网络列表中)。</p><p>如上图所示,基本数据结构为LibSet用以存储所有的Library库,Library库为设计网表存储基本数据结构,Cell结构对应为VHDL代码中Module模块,每个Cell尤其仅有一个对应的Netlist结构,Netlist结构用以存储该Module所有互联信息及实例化信息,如:Port、Net、Instance,包括Net位宽、方向等。</p><p>基于Verific的上述数据结构以及相关的API,使得我们可以在后续基于C++语言实现传统快速资源估算模型提供基本数据基础。</p><p>资源估算模型流程与构造</p><p>本节将主要介绍使用C++构建基于传统框架下的快速资源估算模型的算法分析及具体实现步骤。</p><p>资源估算模型流程设计</p><p>基于第二章节所述逻辑综合及资源映射原理,我们对模型的构建做出进一步的分析,模型输入为RTL级设计文件即Verilog VHDL文件,模型输出为该设计所需FPGA资源数目,其中对于面向大型RTL设计Partition中所需的最重要的关键的资源为FF及LUT,文件流如下图所示。</p><p>快速资源估算模型文件流</p><p>基于Technology Mapping的原理进一步分析,为实现传统框架下较为准确的资源估算,则需要将输入的原始设计从RTL级代码转换至Netlist级别才能实现进一步的Technology Mapping,但是由于获取最直接的网表解构就需要使用综合器对RTL设计进行综合,通过前面对综合原理的分析,可知道综合主要分为以下几步,即RTL设计细化,Flatten,综合优化,综合约束,技术映射等几个步骤,但由于需要面向大型FPGA设计,综合器耗时太长,所以我们选择通过使用Verific来对设计进行静态细化及初步细化,使RTL级设计在内存中转变为伪网表,通过在内存中对伪网表进行Flatten操作,将伪网表所有的层级结构UnGroup至顶层,从而实现与基本综合器相对应的操作的快速版本,对Flatten至顶层的设计依据TechMapping原理使用已经获得的器件库进行器件匹配,基于本节分析及初步设计结果,着手使用Verific对传统资源估算进行进一步分析及模型构建,具体流程如图所示,关键操作及相关原理将在下文着重叙述。</p><p>快速资源估算模型流程图示</p><p>资源估算模型构造实现</p><p>我们以上一节中对快速资源估算模型分析的流程进行进一步的分析,同时进行实现:</p><p>1、Parse-Design操作</p><p>通过将原始设计使用Verific的Parser接口进行设计读入,由于需要商业使用,需要考虑多种用户输入情况,首先考虑常见的通过Filelist进行读入,并支持对于文件正确性校验及报错,并支持输入文件包括.sv\\.v\\.vh\\.svh等多种文件输入,同时支持通过路径进行设计输入,并对设计进行正确性校验,如图3.6所示。</p><p>快速资源估算模型Parse-Design流程</p><p>2、Elaborate操作</p><p>通过对上一步骤获得的完整输入设计的Parse-Tree进行Elaborate,从而获得对应设计的由Verific GTec Cell构成的伪Netlist的设计文件,Elaborate后的设计语法依旧满足Verilog HDL的语法信息,RTL Elaborate会使用门级的网表来表示之的RTL级代码。Elaborate会将RTL级代码进行逻辑展开,获得具有符合电路逻辑的门级视图网络和门级逻辑电路的VerilogHDL表述,该步骤为FPGA设计流程中综合的前置步骤,为下一步进行优化的技术映射做好基础工作,Elaborate操作如图3.10所示。</p><p>RTL Elaborate操作图示</p><p>3、Flatten操作</p><p>在步骤2的基础上,我们将对设计进行Flatten操作,Flatten操作顾名思义是将现有包含层级关系的层级设计进行展平操作,也可以称为ungroup操作,参考下图样例可以更好的说明Flatten操作对于设计的操作,如图3.8所示。</p><p>Flatten操作电路图示</p><p>Flatten操作树结构图示</p><p>在FPGA设计综合流程中Flatten操作会将一些层次树底层的Module、逻辑提升至顶层,将可以合并的逻辑进行合并,同时将一些冗余的互联Net进行优化,为进步一的综合优化和器件映射做好准备,因为对于FPGA或者数字集成电路而言,它是没有层次的概念的,所以Flatten操作可以更好的让寄存器级设计与物理器件之间建立更进一步的联系。</p><p>4、基本器件库</p><p>由于我们中所设计的快速资源估算模型是面向Xilinx的FPGA的模型,所使用的基本器件库是Xilinx公司Virtex系列器件库,其中主要包含的为基本逻辑单元即CLB,具体为MUX、LUT1~6、各形式的触发器即FF、FDR等,一些IP器件由于知识产权等问题无法直接使用,如图3.10以LUT、FF、MUX为例进行说明。</p><p>RTL级基本器件库</p><p>5、Technology Mapping</p><p>对步骤4中完成Flatten后的网表文件进行Technology Mapping,具体原理如2.2.1节中所述,具体操作为:将Flatten后的Netlist网表文件依据设计逻辑对将步骤4中的器件库的器件进行匹配和覆盖使用算法为EMAP,匹配后的网表将不存在基本的门级逻辑(布尔逻辑),而将会被器件库中的基本逻辑器件所替代,如MUX、D-FLIP-FLOP触发器、4-输入LUT器件等。</p><p>6、估算结果展示</p><p>下图为以上述思路构建的快速资源估算模型的初步估算结果,如图图3.11可以获得输入的RTL设计所使用的FPGA片上LUT1-6、BUFG、FF等器件资源数量。</p><p>快速资源估算模型计算结果</p><p>快速资源估算模型优化</p><p>通过图3.11与Vivado综合后结果对比,可以发现,在无优化的情况下仅对设计进行细化及基本技术映射虽然可以得到基本的资源,且在速度上得到了有效的提升,但是存在较大的误差,通过分析Xilinx的综合器Vivado细节及TechMapping,我们可以知道在与FPGA板载器件进行基本逻辑单元及触发器映射时存在优化项,可以理解为约束项,如:面积约束、功耗约束、时序约束、逻辑门约束等多种约束;结合面向大型RTL设计分割流程的实际需求,增加以下优化方案。</p><p>BottomToUP算法的设计与实现</p><p>由于使用Verific进行Elaborate处理及Flatten后无法得到每个层级对应的资源数量,且对整个设计进行Elaborate及Flatten所花费的时间较高,同时由于该资源估算模型面向RTLPartition进行使用,所以需要每个层级每个Inst的资源用于确认RTLPartition时正确的分割边界,所以我们从Verilog HDL与FPGA片上资源映射关系角度出发,在不考虑优化的前提下,每个Module的资源是由其所例化的Instance对应的Module的资源与该Module本身的胶水逻辑所组成,如下图样例所示,红框标注分别为例化Instance与胶水逻辑。</p><p>RTL代码中的Glue Logic和Instance</p><p>以上述分析为出发点,我们希望可以结合Verilog HDL设计的结构化建模方式,以该方式为参考,能够更加准确,更加快速的计算每个Module和Instance节点的资源,我们以RTL设计及计算资源所需数据为出发,设计以下数据机构用于存储每个节点的资源,如图3.13所示。</p><p>BottomToUp算法数据结构</p><p>RTL设计树结构示意图</p><p>通过以上述数据结构,用以实现Bottom to up的计算方式,通过对RTL设计树层次如图3.14所示,进行树遍历算法及递归算法构造存储当前Parse_tree对应的树结构及查找表,该查找表用以存储已被计算过的Module的资源,同时对多个不同参数例化的Module分别计算资源同时通过匹配算法将树结构上的节点与已计算资源节点进行匹配,本算法可以最大程度的减少重复计算,同时为减少网表结构带来的peak memory过大问题,每次计算都将使用不同的库进行技术映射,并在计算完毕后进行释放。另外由于本算法设计数据结构从资源复用角度出发,在用户的设计发生迭代时只用重新计算资源变更层级以上部分层级的资源,从而减少了当设计变更引起的重复运算。并且为支持用户在不同的设计层级对设计进行运算的需求,数据结构中的level变量用以存储当前设计层级,若输入指定不同层级时,可以根据指定层级分层次进行计算,从而<em class='similar'>加快计算速度</em>。<em class='similar'>算法伪代码如图3.15所示。</em></p><p>BottomToUp算法伪代码</p><p>通过上图所示算法,在3.2节实现的快速资源估算模型的基础实现快速层次资源估算,输入为RTL级Verilog HDL设计,输出为该设计每个层级所使用的资源数量及相对应的树结构层次,若在输入时提供FPGA型号和资源,程序也会评估该设计所需要的FPGA的数量。如图3.16所示。</p><p>快速资源估算执行图示</p><p>可复用估算结果的Json文件</p><p>优化后快速资源估算模型输出报告</p><p>图3.18中为开源设计openrisc经过该快速资源估算模型新增的Bottom-to-Up算法计算所获得资源数量与每个Hierarchy对应的资源数量,从图中我们可以看到经过资源计算后设计的具体层级,每个层级前标注序号为该Instance节点名称及对应的树层级结构层次,节点后中括号内分别为RTLPartition流程所关注的十种资源数目,同时可以获得在给定的FPGA_Type、FPGA资源阈值下该设计所需的FPGA数量并且会输出如图3.17所示的一份Json文件用以存储每个Module对应的资源,便于复用。</p><p>经过同Vivado进行对比后发现,虽然该算法已经很好的解决了资源估算的速度问题,但是在准确度上还存在可优化空间及约束项,经过对逻辑综合与技术映射技术的进一步分析我们将在Elaborate后增加优化策略与约束策略,从而使估计结果更加符合实际应用场景。</p><p>冗余逻辑优化及合并</p><p>在进行逻辑综合和技术映射时,EDA综合器会对集成电路的规模、运行速度进行优化。综合的优化过程中会去掉常数输入、悬空输出等信号,还会针对源文件中未连接的输入或具有多个驱动的输出等问题报告错误或者警告[16]。若EDA工具发现设计存在部分缺陷如非关键输出悬空能,通常EDA工具都将依据自己的方式进行优化修复,但多所带的结果是可能优化结果并不满足设计者的初衷。综合常见的优化过程还对逻辑进行组合置换,从而进一步减少集成电路所需FPGA资源、功耗、并尽可能提升系统运行速度与减少阻塞。</p><p>通过前述步骤得到的快速资源估算模型,虽然已经可以得到资源的结果,同时若使用Bottom-to-Up的算法可以得到每个层级的资源结果,但是我们通过第二章的综合和技术映射的原理可以得知,在实际的综合和技术映射过程中,是对设计进行了大量的优化和处理的操作,所以如果我们不对当前的快速资源估算模型进行优化和约束,那么该模型的结果是不可用,没有价值和意义的。</p><p>所以我们为使我们资源估算的精确度更加高,所以需要符合逻辑综合和优化的过程,通过分析逻辑综合流程,在逻辑综合的工程中会对冗余逻辑进行优化,比如一些复选器或单纯的数值传递等非有效逻辑进行合并。</p><p>快速资源模型将会查找并发现没有负载或被禁用的逻辑(例如,当选择线保持高位时,驱动多路复用器上第一个选择的逻辑),并假设消耗了零资源。一旦找到一个这样的元件,所有驱动逻辑也会被移除,同时采取预防措施确保其他逻辑也不会被该元件驱动。</p><p>最小面积优化方法</p><p>通过本文第二章中对逻辑综合过程中优化步骤的分析,我们知道在综合开发环境会对RTL代码进行很多优化,从而提高设计的性能、有效降低硬件资源消耗等,所以在快速资源估算模型中也需加入相关优化项,来对RTL设计进行进一步的优化,从而使得资源估算模型的结果更加的精确。</p><p>首先我们考虑资源共享,即在互斥条件下共享算术逻辑单元,主要有关系运算、加法运算、减法运算、除法运算等。</p><p>LUT-5 Base FPGA结构图示</p><p>根据FPGA的结构,可以知道不同系列、不同世代、不同型号的FPGA在逻辑单元的组成上是有很大区别的,比如对于赛灵思的VU440,其基本逻辑单元即CLB单元是以LUT5为基础,同理也有以LUT1、LUT2、LUT3、LUT4、LUT6为基础,支持至最高为LUT8的FPGA,由于LUT1~8之间存在换算关系,LUT的本质就是如图3.18的2进制查找表,故而2个LUT1可以合并组成为一个LUT2,同理以LUT5为Base的FPGA,可以使用多个LUT5来组成LUT6等高维度资源,从而有效的是缩小FPGA布线后使用的面积即器件使用的数量。</p><p>4输入查找表真值表</p><p>在进行资源共享优化时我们遵循以下原则:</p><p>运算符和操作数均相同,则一定可以贡献逻辑单元。</p><p>对于具有相同运算符的表达式,且操作数或操作表达式相同时,为实现逻辑共享我们可以加入一个多路复用开关来完成。</p><p>相同运算符,不同的操作或运算符,可以共用一个逻辑运算单元[16]。</p><p>不同的运算符,相同的操作数,可以共用一个逻辑运算单元。</p><p>对于运算符不相同的运算表达式,若其有且仅有一个公共的操作数,则为实现逻辑共用可以引入MUX来实现。</p><p><em class='similar'>不同运算符、</em><em class='similar'>不同操作数,</em><em class='similar'>可以通过引入两个多路开关,</em>从而实现逻辑单元的共用。</p><p>除去资源共享优化外,本文基于对RTL代码的分析,通过对公共子表达式增加逻辑优化合并,使并借由数据结构来保存公共部分的运算结果数值,这样在模块内部后续使用相同表达式的地方则可以直接调用该值。</p><p>所以基于以上原理,在进行冗余逻辑优化和合并的基础上,可以增加最小面积优化方法,在资源估算时,以LUT4为base进行初步资源估算,在当前基础上,以LUT4之间的优化方法,我们可以以高维度LUT为Base的FPGA作为方向,将多个LUT在合理的范围内进行合并,合理的范围即在一个Module内的组合逻辑或连续赋值、阻塞赋值、非阻塞赋值等LUT合并至LUT6,从而实现以最小面积为目标的优化策略。</p><p>资源估算模型将找到具有共同输入的共同元素类型并假设共享资源。例如,如果找到两个加法器,均为 A+B,则假定加法器逻辑是共享的。对合并的元素数量设置限制,以限制扇出。同时模型将查找将使用LUT实现的二进制逻辑函数序列,并根据树的唯一输入数和输出数对其进行优化。</p><p>结果分析</p><p>快速资源估算模型无优化结果对比</p><p>快速资源估算模型增加优化结果对比</p><p>表3.1、表3.2分别为快速资源估算模型在5个基本Case下,未增加优化项与优化算法的估算结果与增加优化项及优化算法后的准确值与估算时间的对比,通过分析我们可以发现在不增加优化项及优化算法的情况下在使用资源量即电路逻辑复杂度较低的情况下准确度较好,但随着设计规模的增加电路复杂度的上升其预测资源准确度越来越差,由于对电路的过度精细化导致在面对设计规模较大的电路时由于内存原因导致无法得到估算结果,但是在时间性能上已经较综合布局得到较高的提升最小的设计时间提升约15倍,随着设计负责度的增加,在时间性能提升越明显,同时对比优化后结果可以得出首先由于设计规模较大无法计算的资源已经可以得到结果,且各个Case的估算结果准确度较好,LUT资源估算平均准确度达90.11%,FF资源估算平均准确度达88%,并且在时间性能上进一步提升,较未优化模型提升2倍,已满足在高密度FPGA原型验证系统划分阶段中对超大型设计进行快速资源估算并借以确定划分边界的实际需求。</p><p>本章小结</p><p>本章详细叙述了,在以第二章理论为基础的前提下,使用Verific基础数据结构基于C++语言构建面向高密度FPGA原型验证系统RTLPartition的FPGA设计的快速资源估算模型,同时提供多种优化及约束方案,对模型进行约束及二次优化,使得对设计在FPGA上的资源估算精确度达90%以上,并得到了较好的时间性能,在超过百亿门的电路估算时间仅需几十分钟,时间较完整的综合流程缩短200%以上,同时快速资源估算模型为支持高密度FPGA原型验证系统,为用户提供多种额外功能,如用户指定资源输入、对应不同FPGA的使用数量评估等作为商业软件对用户的友好性功能。同时也为后续基于人工智能的FPGA资源估算模型提供思路及开发基础。</p><p>基于机器学习的RTL级资源估算</p><p>对于机器学习项目,决定预测准确度的上限并不取决于模型的算法的高深或模型算法的先进性,而决定模型预测上限的是特征的全面性、准确性和样本。所以特征的选择和提取尤为重要。</p><p>本章主要阐述基于第二章中提到特征提取方法,使用Verific的Parse-tree来对输入的RTL设计进行二次解析并提取所需要的信息作为后续机器学习的输入特征。构建基于C++的自动化特征提取器并对样本数据构建数据集,并对数据集样本进行分析,洞见特征数据间的数学联系及统计学关系,并尝试多种机器学习回归模型,选择表现较好模型进行进一步训练。</p><p>Verilog HDL 语法特征分析</p><p>基于前一步骤实现的基于Verific的快速资源估算建模所获取的资源之间的映射关系,优化技巧等理论及实践基础,我们发现对于综合后技术映射的基本逻辑就是将Verilog HDL预计合理的使用FPGA上的器件来实现Verilog代码中所需要的数字逻辑,所以我们可以分析将Verilog HDL设计语言和器件间的典型关系,提取VerilogHDL中的语法特征,通过这些特征来构建机器学习模型,从而实现更加快速精确的大型FPGA设计所需要的FPGA片上资源数量,首先我们基于IEEE1801所给出的Verilog的技术文档,对VerilogHDL进行全面特征提取。</p><p>通过对Verilog HDL基本语法分析结合IEEE Verilog 标准、RTL样例设计,拟提取Verlog HDL语法特征对应关键字如表4.1所示。</p><p>Verilog主要语法类型与关键字</p><p>语法类型语法关键字</p><p>端口 Input Output Inout</p><p>线网 Wire Reg</p><p><em class='similar'>逻辑运算符、</em><em class='similar'>算术运算符、</em><em class='similar'>关系运算符+-*/^|&amp;</em></p><p>连续赋值语句 Assign</p><p>Always过程块 Always</p><p>过程赋值语句=&lt;=</p><p>条件表达式 If else then</p><p>条件分支语句 case</p><p>循环语句 For While Repeat</p><p>函数语句 Function</p><p>RTL级设计特征提取方法设计</p><p>首先我们通过第二章的综合及技术映射原理已知Verilog HDL语句的综合原则及对应的FPGA片上器件的映射规则,所以我们基于以上原理,借由Verific的Parse-Tree对当前读入的Verilog设计进行二次解析,具体流程图如下:</p><p>特征提取器结构图</p><p>通过解析Verific读入设计时构建的Parse-tree对所有Verific进行提取主要包含以下所述特征。</p><p>(1)端口信息特征提取</p><p>首先对于FPGA上的IO资源是通过RTL中Module的端口映射而来,所以我们首先提取Module的端口信息,对于一个Module的端口信息在Verific的Parse-Tree数据结构中存储在VeriModule类下的VeriDataDeclar类下面,所以我们通过重载Verific提供的Visitor虚函数来获取端口数据类型指针,通过解析VeriDataDeclar下的数据解析出端口数量包括Input、Output、Inout,同时通过解析VeriDataDeclar下的VeriDatatype数据类型,获取对应的端口位宽,并存储为RTL_InputWidth、RTL_OutputWidth、RTL_InoutWidth特征,实现对Module端口特征信息的提取。</p><p>(2)线网信息特征提取</p><p>Verilog VHDL线网类型语法在RTL级描述中也是很重要的存在,基于第二章中描述的综合及技术映射理论可知,线网通常用于赋值语句左右,或被映射为寄存器结构,所以获取Verilog设计的线网类数据信息对于机器学习模型的训练而言应相对重要。</p><p>对于线网结构在Verilog HDL语法中主要体现为Wire和Reg关键字,在Verific的Parse-Tree数据结构中线网结构被构造为VeriNetDecl类进行存储,我们通过重载Visitor基类来获取Module下的全部的VeriNetDecl类,通过解析可获得Reg和Wire关键字的数量以及对应的信号位宽,分别存储为特征RTL_Reg、RTL_RegWidth、RTL_Wire、RTL_WireWidth特征,从而实现对Module线网信息的特征提取。</p><p>(3)操作符及运算表达式特征提取</p><p>在Verilog HDL语法中,表达式的本质就是通过将操作数值或操作变量、<em class='similar'>通过运算符或操作符进行结合运算的表达式,</em>所以在Verilog HDL语言结构中可理解为一致,<em class='similar'>即通过运算符运算得到一个结果,</em><em class='similar'>从语义上说,</em><em class='similar'>这个结果即为运算后得到的的函数值;</em>而操作运算符的类型与C语言类似,如图4.2所示。</p><p>Verilog操作符图示</p><p>首先已知逻辑运算符、算术运算符和关系运算符等操作符在进行逻辑综合后会被综合器转换为对应的逻辑运算门,所以符号表达式的特征信息也是关键特征,所以我们通过如下方式对表达式进行解析从而获得,首先整个表达式在Verific的Parse-tree中被存储在VeriExpression类下,通过解析VeriExpression类获得表达式存储类VeriOpenbinery类,通过判断VeriOpenbinery类下的Type类型获取运算符类型,如OR、AND、PLUS、AlTERSHIFT等,并存储至特征Hash表中,通过获取运算符左右两侧表达式,通过递归算法递归解析剩余运算符两次表达式,从而获取运算符两次表达式位宽,并存储至特征Hash表中,递归完毕后既可以完成对运算符表达式的特征提取,算法伪代码如图4.3所示。</p><p>运算符特征提取伪代码</p><p>(4)连续赋值语句特征提取</p><p>连续赋值语句是在Verilog HDL语法中比较重要且常用的语句,常被综合为FF及LUT等关键器件,所以连续赋值语句的特征提取尤为重要,由于连续赋值语句常包含组合或嵌套式语法,通过IEEE标准中对Verilog连续赋值语句的定义可知,连续赋值语句左侧只能为线网结构即wire类型,而右侧可以包含逻辑运算符(&amp;、|、~)、算术运算符(+、-、*、/)、选择表达式(A?B:C)等多种语法嵌套组合。</p><p>由于需要解析嵌套语法且种类较多,所以采用递归算法对表达式进行解析,首先根据=号左右获取AssignStatement,由于左侧只能为线网结构,所以将表达式左侧存储为AssignRightWidth用以存储assign语句左侧位宽,右侧进一步根据符号进行拆分,若存在逻辑运算符则存储逻辑运算符数量如AND(&amp;)、or(&amp;)等符号特征,并存储数量,则先以符号进行左右两侧拆分,若存在括号,则先进行括号匹配,对提取出的表达式进行进一步递归解析,同时计算符号两侧位宽,并保存为ANDRIGHTWIDTH、ANDLEFTWIDTH等;若表达式右侧为选择表达式,则存储选择表达式数量为QUESTIONCOLON特征,进一步解析该选择表达式分别提取if条件并存储为QUESTIONCOLONIF特征,若if条件存在逻辑或算术运算同理递归调用进行解析并存储至对应特征,else则存储至QUESTIONCOLONELSE特征,同时解析else的逻辑与算术运算,同时存储至对应特征中,then语句则存储至QUESTIONCOLONTHEN特征中,同时递归解析Then语句中的逻辑与算术运算并存储至对应的特征统计中,算法伪代码如图4.4所示。</p><p>连续赋值语句特征提取伪代码</p><p>(5)过程结构体特征提取</p><p><em class='similar'>Verilog HDL语法中的过程机构体,</em><em class='similar'>都是由语法关键字initial或always和其块内内容语句所构成的,</em>由于initial语句是不可综合语句,所以在该特征提取方案中不考虑initial过程块。通过对Always语法分析,<em class='similar'>always语句块中的内容块主要由赋值语句和高级程序语句</em><em class='similar'>(包括条件分支语句和循环控制语句)</em><em class='similar'>这两种行为语句构成</em>[16],其语法格式如下,如图4.6所示。</p><p>Verilog Always过程块语法格式</p><p>由于Always过程块的触发是根据敏感事件列表中的变量是否可以被触发来控制,敏感事件列表通常可有1个或多个表达式来组成。</p><p>所以对于Always块的特征信息的提取,主要分为三部分:</p><p>获取Always语法块数量;</p><p>获取Always语法块敏感事件列表、并解析宽度;</p><p>获取Always语法块内容(由于语法块中包含语法种类较多,将在后续着重叙述);</p><p>在Verific Parse-tree中always块构造存储在VeriAlwaysSatement类中,通过重载Visitor函数,来获取Parse-Tree中的Always结构体的数量,通过统计数量可以获得RTL设计中Always块的数量,通过解析获取到的VeriAlwaysStatement结构中的VeriEventExpress类获取Always的敏感事件列表,由于敏感事件列表中多由表达式构成,所以通过使用前述0、0所提及的递归方法来获取敏感事件表达式的宽度,并存储至特征AlwaysEventWidth中;从而完成对Always结构体数量与Always结构敏感事件列表的特征信息提取。</p><p>Always特征提取伪代码|</p><p>(6)过程赋值语句特征提取</p><p>Verilog过程赋值语句语法格式</p><p><em class='similar'>过程赋值语句的语法格式如图4.7所示,</em><em class='similar'>其中赋值操作符可以是&quot;=&quot;或&quot;&lt;=&quot;之一,</em><em class='similar'>它们分别代表了阻塞型和非阻塞型赋值类型。</em><em class='similar'>过程赋值语句只能用于对变量型数据进行赋值操作,</em>结合第二章的逻辑综合原理可知,赋值语句右侧的赋值表达式可以用以逻辑表达,从而综合为逻辑资源,所以过程赋值语句的特征信息提取也相对重要,<em class='similar'>由于过程赋值语句中的赋值表达式可以使任何合法的表达式,</em>存在符号表达式等,所以我们在0、0、0的递归提取方法的基础上对过程赋值表达式进行特征提取,提取特征类别分别为,阻塞型赋值语句数量BlockAssign,阻塞型赋值语句左右位宽BlockAssignRIghtWidth、BlockAssignLeftWidth、阻塞型赋值语句左右线网数量BlockAssignRightNum、BlockAssignLeftNum;非阻塞型赋值赋值语句NonBlockAssign、非阻塞型赋值语句左右位宽NonBlockAssignRightWidth、NonBlockAssignLeftWidth,其中符号表达式部分,将被存储在对应的符号表达式特征中提取过程与方法思路与连续赋值语句一致,可参见图4.4。由于过程赋值表达式主要被用于过程块中,所以0中对语法块内容的提取将在该部分体现。</p><p>(7)If-else条件分支语句特征提取</p><p>条件分支语句对于硬件的行为描述及其重要,且常被综合为FF和LUT器件,是一种高级语言的抽象表达,故在特征信息提取时,也是重点关注的语法;</p><p>If-else语句为Verilog语法中高级语句,多用于Always Blcok中,<em class='similar'>图4.5中已经提及过程块中常由两种普通的过程赋值语句及高级程序语句,</em><em class='similar'>高级程序语句就包含分支语句和循环控制语句,</em><em class='similar'>分支语句包含条件分支语句及case条件控制语句,</em>该小节主要分析if-else条件分支语句的特征提取,case条件控制语句将在下小节进行分析。</p><p>通过Verilog HDL语法可知,if-else条件分支语句的作用是复选,即通过是否满足给定的判断条件来判断下一步电路需要执行的操作或逻辑。其主要语法形式如图4.8所示。</p><p>Verilog If条件语句语法格式</p><p>由于if-else条件分支语句常用语Always过程块中,所以我们在0模块的基础上对if-else条件分支语句进行解析,在Verific-Parse-tree中,条件分支语句被存储为VeriQuestionColon类中,通过解析该类可获得if-else条件语句块数量特征Questioncolon,,由于if-else条件语句存在多条件或多if-else条件嵌套组成,所以采用递归方式分别解析if条件、if条件内容、else分支内容、then条件内容,由于if条件内容为条件表达式,所以可以采用0模块进行解析,并存储特征QUESTIONCOLONIF;if条件内容为赋值表达式,所以可以使用0中对过程赋值语句的提取方法来提取,并存储至对应的过程赋值特征中,同理可对Else内容块及Then内容块解析,并提取特征QUESTIONCOLONELSE、QUESTIONCOLONTHEN。从而完成对if-else条件分支语句的特征提取。</p><p>If条件语句特征提取伪代码</p><p>(8)Case条件分支语句特征提取</p><p>基于0中对Verilog HLD分支控制语句的分析可知,case分支控制语句与if-else语句在功能上大同小异,均是实现分支控制选择,但Case语句可以用较少的语法表达提供较多的分支选择,在实际开发中多用于表述状态机的行为级描述,其在实现多路选择控制上更加简便和直观,其通常用于描述译码或状态机,其语法格式如图4.10所示。</p><p>Verilog Case语句语法格式</p><p>在Verific-Parse-Tree中Case语句块被解析构造存储至VeriCase类中,通过统计该类数量可获得Case数量存储至CaseNum特征,VeriCase类中包括Case控制表达式及分支表到式及分支语句块,模块需要对该类及表达式进行解析,解析控制表达式可用0中所述方法进行递归提取,从而获得控制表达式数量CASECONDITIONNUM、控制表达式位宽CASECONDITIONWIDTH、以及分支数量CASTITEM,由于分支语句块内容多为赋值语句,所以可以使用0中模块进行对应特征提取。Case条件分支语句特征提取伪代码如图4.11所示。</p><p>Case条件分支语句特征提取伪代码</p><p>(9)循环语句特征提取</p><p><em class='similar'>与条件分支语句表达含义一致,</em><em class='similar'>循环控制语句也是高级Verilog HDL程序语句的一种,</em><em class='similar'>Verilog提供的循环控制语句关键字有forever、</em>repeat、<em class='similar'>while、</em>for四种,<em class='similar'>其中除去forever语句是一种无限的循环语句外,</em>其余的三种循环语句都是根据指定循环条件或循环次数进行循环;循环控制语句语法格式如图4.12所示。</p><p>Verilog循环语句语法格式</p><p>对于循环语句其逻辑综合后为将循环体按循环次数展开,所以也需要对其提取特定特征,主要分为以下两部分即循环次数,循环体内容。</p><p>对于For循环体,由于其循环次数在for语句条件表达式部分,需要解析出for循环初始值、判断条件、补偿、从而计算出整个循环语句块的循环总次数,for循环语句块在Verific-Parse-tree中被构造为VeriFor结构,其中循环次数部分需要二次解析,通过解析后通过计算初始值-终止值/步长来获得循环次数,并存储于特征RTL_ForItem,同时将for结构体数量存储于特征RTL_ForBlock,对于循环体而言,其内容可嵌套if-else、赋值表达式等多种语法,需要使用递归算法对循环体进行解析,使用0、0中所提及的算法进行特征抽取,同时需要对统计的数量再乘以循环体个数,并存储至特征内。</p><p>对于while循环体,由于其判决条件存在与其条件表达式中,所以需要我们通过二次解析条件表达式来获取终止值,同时需要通过判断终止值的变量表达式来计算循环体次数。</p><p>对于repeat循环体,由于repeat循环体的循环次数在其循环次数表达式中,只需对循环次数表达式进行二次解析获得循环次数即可,同理使用上述方法解析循环体特征信息,并存储至对应特征中;</p><p>对于forever循环语句,只需要将Forever语句中的forever循环体内容进行解析即可完成对forever特征的提取,通过以上方式完成对Verilog循环语句的特征提取。</p><p>循环语句特征提取伪代码</p><p>(10)函数语句特征提取</p><p><em class='similar'>Verilog HDL语言中也包含类似于其他编程语言中的函数概念一样的语法,</em><em class='similar'>函数</em><em class='similar'>(Function)</em>的语法形式如下,如图4.14所示。</p><p>Verilog HDL Function语法结构</p><p>function函数定义由于只能被定义在Module中,不被允许在Always过程块内调用且函数模块必须具备相应的IO端口用以提供外部互联。</p><p><em class='similar'>在Verilog HDL语句中,</em><em class='similar'>函数代表了纯组合逻辑。</em><em class='similar'>在函数语句块中定义的全部的变量在综合时都会被定为临时变量,</em><em class='similar'>仅被综合映射为成片上导线</em>[16]。<em class='similar'>由于Function内部代表了纯组合逻辑,</em>所以对于Function内部的逻辑表达及Function的端口及调用数量进行特征分析及提取;</p><p>在Verific的Parse-tree中Function被构造存储于VeriFunction类中,通过重载Visitor函数获取该RTL设计下的VeriFunction类,并统计其数量并存储至FunctionNum特征中,同时进一步获取Function的内部逻辑结构,同时对内部逻辑使用0、0、0模块中提到的方法对组合逻辑进行提取,并存储至对应的类中。从而完成对Funtcon的特征提取。</p><p>自动化特征提取器的实现</p><p>本节将叙述基于4.2节所述的特征提取方法构造对应的模块,使用C++设计并开发特征提取器程序,特征提取器流程框图如图4.15所示,输入为包含待所有待提取特征设计文件绝对或相对路径的Filelist,输出为包含特征的Fileli。使用C++14语言进行开发测试,从而完成自动多Case特征提取器的实现。</p><p>RTL语法特征提取器流程图</p><p>该自动化特征提取器,基本涵盖VerilogHDL的所有关键语法及在逻辑综合和技术映射中常用的重要语法信息。包括逻辑运算如(or、shift)的位宽信息、算术运算符的位宽信息、连续赋值运算的位宽信息、阻塞及非阻塞赋值运算的位宽信息、高级运算语法的解析如循环体、函数体、判断决策语句等。</p><p>数据集分析</p><p>数据集构建</p><p>由于机器学习本质上是使用大量的样本数据,通过计算机实现的数学模型,来探索并计算输入特征之间的数学关系,从而实现预测,所以需要使用大量的样本数据来构建数据集,所以我们使用300个Verilog HDL设计及其在Xilinx Vivado综合工具上综合后输出的资源利用率结果来作为基础数据集及预测标签。</p><p>VerilogHDL数据集来自GitHub、Opencore等开源网站,基本数据集涉及CPU、加法器、乘法器、GPU、机器学习等多种类型。部分数据集展示如表4.2所示,数据集主要描述描述数据如表4.3所示。</p><p>部分基本数据集数据图示</p><p>数据集基本概要</p><p>数据集分析</p><p>数据可视化</p><p>我们对数据集使用第四章构造的特征提取器进行特征提取后对数据进行可视化,将可以便于我们对数据进行进一步的分析,使用直方图来展示数据,如图4.16所示。</p><p>特征数据集直方图</p><p>相关性分析</p><p><em class='similar'>数据是对事实进行观察后产生的结果的描述,</em><em class='similar'>是对客观事物一种数学逻辑归纳,</em><em class='similar'>是用于表示客观事物的最好的原始素材</em>[3]。<em class='similar'>数据相关性是指数据之间存在某种关系,</em><em class='similar'>如正相关,</em><em class='similar'>负相关。</em>所以我们需要通过对提取的特征在样本数据下进行相关性分析,来进一步分析特征的对预测值的重要程度,其指标为标准相关系数也称为皮尔逊系数r。使用错误!未找到引用源。所构建的特征提取器所提取的特征进行整体特征分析可以得到如图4.17所示的特征热力图与表4.4、表4.5、表4.6、表4.7所示的各个资源与RTL级特征间的皮尔逊相关系数。</p><p>特征热力图</p><p>RTL级特征与LUT资源的相关性数据</p><p>RTL级特征与FF资源的相关性数据</p><p>RTL级特征与BUFG资源的相关性数据</p><p>RTL级特征与IO资源的相关性数据</p><p>通过分析我们可以得到FPGA片上资源LUT对应的RTL级代码使用4.2节所述的特征提取器所提取的特征之间的相关性关系,我们可以发现较多特征与LUT、FF、BUFG、IO资源具有典型相关性,进一步验证了通过4.2节构造的特征提取器提取的特征基本符合第二章中逻辑综合原理与技术映射原理,证明该特征提取存在合理性,同时相关性分析也为我们下一步特征工程特征降维删除不相关体征提供参考及依据。</p><p>特征工程</p><p>本研究共计提取了67项特征,<em class='similar'>这些特征的数据取值范围差别很大,</em><em class='similar'>量纲也不同,</em>如端口数量为个,而位宽大小为位且数量级不同等,没有办法进行比较。所以我们需要对特征进行进一步的预处理,使其能够更加适合在机器学习环境下进行预测。则我们需要构造特征工程流水线来帮助我们减少复用操作,从而在样本数据集发生更新时能够快速处理。</p><p>特征预处理</p><p>数据清理</p><p>机器学习算法无法在存在缺失值的特征上来进行学习,但每次进行手动数据填补或清洗将带来巨大的人力损耗,所以我们可以基于流水线的方式,通过构造些自动化方法其完成对数据的清洗处理,首先就是对于数据存在缺失的情况,为解决它我们选用三种解决办法:</p><p>放弃这些数据缺失的区域;</p><p>放弃整个属性;</p><p>将确实的特征值或实际值以书记进行填充,比如0或者平均数、中位数等;</p><p>通过对预测目标和特征属性的分析,由于该特征目标为预测准确设计所需FPGA资源数值,所以对于数据存在缺失的数据类型,我们选择放弃这些数据缺失的数据,从而不对预测结果产生影响。</p><p>处理文本和分类属性</p><p>由于特征中可能存在除数值属性外的其余数据表达形式的特征,由于机器学习模型是数学模型,所以我们需要将文本数据属性和具有分类含义的数据属性进行抽象处理:</p><p>使用OrdinalEncoder顺序编码对文本属性进行编码;</p><p>使用OneHotEncoder独热编码对分类属性进行编码;</p><p>特征缩放</p><p>由于样本存在较大的差异性,且不同的模型对于数据差异的敏感度不同,<em class='similar'>所以需要对特征数据进行的一项重要操作就是特征缩放。</em><em class='similar'>若输入的样本的特征数据存在较大的数值差异,</em><em class='similar'>往往会导致机器学习算法的性能表现不佳,</em><em class='similar'>当然也有极少数特例,</em>比如提取特征中的端口数量和端口位宽就很有可能存在数量级上的差异。</p><p>在机器学习领域最常用的同比例缩放所有属性特征的两种常用方法:</p><p>最小-最大缩放(归一化)</p><p>归一化的操作较为简单,即将样本数值重新处理后使其使其最终范围归于区间[0,1]之间,具体的实现方法是将该样本值减去样本数据集中的最小值比上样本最大值与样本最小值的差。</p><p>标准化方法</p><p>与归一化方法相比,标准化则完全不同,其本质将特征数据值先减去平均值,再与方差相除,进而使得特征数据具备满足单位方差的分布。</p><p>标准化方法与最小-最大缩放的典型区别与其优势便是标准化处理不会将输入的特征数值绑定到特定范围内,但是标准化方法对于异常值的敏感程度或受影响程度将会减小。</p><p>转换流水线</p><p>由于上述特征预处理需要使用正确的顺序来执行,<em class='similar'>所以我们采用scikit-learn提供的pipeline类来支持我们实现上述对数据的转换,</em>构造流水线转换器如图4.18所示。</p><p>特征预处理流水线</p><p>当数据集经过特征预处理流水线处理后,完成基本特征工程便具备了进入模型进行训练的基础。经特征工程处理后最终输入特征张量为61*218,标签为使用Xilinx公司Vivado软件进行综合及布局布线后获得的准确资源利用率数值。</p><p>模型框架选择</p><p>模型训练开发流程</p><p>机器学习模型训练开发流程如图4.19所示,在完成数据分析,特征分析,特征工程后,我们需要先数据集进行划分选择合适的机器学习模型来进行预测,首先我们不知道选择哪种模型的时候,先对各种回归模型进行初步尝试,指标采用R2和RMSE进行评估,然后选择在初始参数及该特征下表现较好的模型框架进一步对模型参数进行配置。</p><p>我们分别使用线性回归、决策树、SVM向量机、随机森林、深度神经网络来对数据集进行初步的训练,从而选择出两种有前途的特种进行进一步的训练和微调从而实现我们的预测目标。</p><p>首先我们对数据集进行划分,我们随机抽样20%的数据来构成验证集,数据集中剩余80%的样本作为训练集,为保证训练及验证的全面覆盖<em class='similar'>,我们在验证时使用5折交叉验证来对我们的模型进行预测验证</em>[29]。以下结果均采用标准参数对LUT资源进行尝试预测,预测结果如图4.20所示。</p><p>各模型尝试预测LUT资源结果</p><p>通过上图所示对多种机器学习模型进行原始参数初步尝试后,我们可以发现在该特征提取及样本集上线性回归、决策树的表现的初始模型预测表现较差,但是随机森林、MLP这两种模型在标准参数下存在较好的的预测性能,<em class='similar'>所以本文下面将着重以随机森林及深度神经网络来进行进一步的预测模型训练及参数调整。</em></p><p>机器学习模型训练</p><p>Keras是基于Python语言且具有高度抽象化且拥有易用性高的API群的神经网络库。</p><p>Keras能够非常快速的搭建网络模型,以便迅速的将使用者的想法进行实现。基于上述目的Keras具有以下特征,首先,其可以在CPU与GPU上无缝的切换运行;第二,拥有非常简洁且友好的调用接口,减小了研究人员的工作量;第三,模块化设计,使用者可以根据需求非常方便的配置自己的模型;第四,支持支持任意的网络架构。基于上述的优势,本文选择 Keras作为机器学习的基本框架。</p><p>机器学习模型训练及调优流程</p><p>随机森林</p><p>本节在错误!未找到引用源。所尝试的随机森林模型的基础上对随机森林参数进行调优,并通过学习率曲线结合随机搜索与网格搜索对参数进行进一步优化,我们将主要调整影响度较大的n_estimators与max_depth参数用于寻找最优模型。RF模型进行训练、调优的流程如图4.21所示。</p><p>LUT资源模型训练</p><p>随机森林预测LUT模型参数搜索学习曲线</p><p>随机森林LUT预测模型学习曲线</p><p>依据图4.21所示对随机森林预测LUT模型进行训练,首先通过多次迭代依据借由随机森林模型提供的特征贡献度对特征进行二次调优,通过放弃贡献度较低的模型来提升模型准确度,最终输入张量为59*220。在完成特征二次调整的基础上对模型进行超参调整,主要参数n_estimators与max_depth的的学习曲线如图4.22所示,验证方法使用10折交叉验证,得到在n_estimators取33与max_depth取12时评价指标RMSE最优。</p><p>FF资源模型训练</p><p>随机森林预测FF特征搜索学习曲线</p><p>随机森林FF预测模型学习曲线</p><p>依据图4.21所示对随机森林预测FF模型进行训练,训练流程与4.7.2.2方法一致,通过迭代训练与参数调优,主要参数n_estimators与max_depth的的学习曲线如图4.24所示,验证方法使用10折交叉验证,得到在n_estimators取89与max_depth取7时评价指标RMSE最优。</p><p>人工神经网络</p><p>预测LUT资源模型训练</p><p>神经网络学习曲线,左图为超参数调优前学习曲线</p><p>依据图4.21所示流程图构建神经网络模型,为探究初始数据集在模型上的表现特征,通过对未进行超参数调整的模型进行1000训练可得如图4.26所示学习曲线,通过分析可发现初步训练模型存在过拟合情况,为解决过拟合情况,通过使用随机森林迭代构建的特征,并调整模型深度与宽度来解决该问题,分别使用随机搜索与网格搜索对模型隐藏层层数、神经元数、学习率及采样数进行调整,均采用5折交叉验证及提前终止回调用于终止搜索裁判,通过参数搜索可得神经网络模型如图4.27所示,神经网络包括输入及输出层、隐藏层共计6层,输入层宽度为59,由于为典型回归模型故输出层宽度为1,隐藏层共4层,对应神经元数分别为59、96、110、58,学习率使用搜索最佳学习率为0.000107,对模型进行200轮次训练。神经网络训练学习曲线如图4.28所示,通过观察学习曲线可以发现通过特征迭代与超参数调优已经解决过拟合问题,且拟合情况较好。</p><p>神经网络模型结构图</p><p>神经网络与LUT模型学习曲线</p><p>预测FF资源模型训练</p><p>依据图4.21所示流程图构建神经网络模型,使用神经网络模型预测FF资源的训练方法与4.7.2.1基本一致,分别通过随机搜索与网格搜索对神经网络模型进行空间搜索,得到如图4.29所示的神经网络结构,隐藏层共3层,对应神经元数分别为53、162、27,学习率使用搜索最佳学习率为0.00013,对模型进行235轮次训练。神经网络学习曲线如图4.30所示,我们可以发现模型训练曲线拟合度较好并未出现明显的过或欠拟合情况。</p><p>神经网络模型结构图</p><p>神经网络模型预测FF资源学习曲线</p><p>结果与分析</p><p>机器学习模型验证结果</p><p>模型评估</p><p>图4.31为机器学习模型在验证集上预测值与基准值的验证结果,X轴为验证集的准确值,Y轴为预测值。图(a)、图(b)分别为使用随机森林模型对LUT资源、FF资源进行预测的验证结果,图(c)、图(d)为人工神经网络模型对LUT资源、FF资源进行预测的验证结果。各模型验证集评估指标如表4.8所示,结合R方评估指标与图4.31我们可以发现机器学习模型在4.3节中构造的特征提取器的基础上得到了较好的拟合结果,验证了对VerilogHDL语言特取的特征对LUT与FF资源的预测有较好的数学描述。但同时也能发现在LUT、FF资源的预测上人工神经网络这种对非线性特征的学习能力较高的模型表现结果优于随机森林,对LUT预测和FF分别的模型确定性系数达73.4%、85.06%,证明模型已经可以较好的描述特征所代表的数学意义,同时均方根误差对LUT、FF资源分别为和。我们在测试数据集的基础上选取了模型评价指标较高的模型的结果进行分析,结果表明,在使用随机森林对RTL级设计RTL特征进行资源估算后与基准值进行对比,达到了31.3391、13.2000误差的精度,得到了一个较为满意的结果,同时由于该模型预测结果面向为高密度原型验证系统,主要应用于RTL-Partition阶段,基于其对FPGA片上资源利用率存在阈值,即常规情况下划分结果平均占用FPGA资源的50%~70%,且在划分系统程序中可以通过设定资源阈值控制来调整误差,所以当前模型输出的结果基本符合高密度FPGA原型验证系统的需求,同时除去精度外其更加聚焦于时间性能上的提升,通过统计RF、MLP的模型预测时间,我们可以明显看到机器学习在时间性能方面的巨大优势。</p><p>本章小结</p><p>本章叙述了本文中面向机器学习进行资源估算中最为重要的一部分,本章通过结合第二章所述的特征提取方法,通过对Verilog HDL语言分析,结合其语法在逻辑综合、技术映射上的特征关系,完成特征提取器的设计,通过C++完成开发,实现对RTL级代码的特征提取,为下一步建立机器学习模型的建立打好基础。</p><p>并提出了使用机器学习来进行RTL设计在RTL级对其所需FPGA片上资源估算的方法,在对原始数据集进行特征缩放、特征标准化、特征降维等特征工程处理后分别使用RF、MLP进行回归预测,叙述了对多种机器学习模型在标准参数下对使用文本方法所构建的数据集的预测性能表现及对随机森林、深度神经网络进行进一步预测、参数微调等方法及结果的叙述,最终我们得到了对RTL级设计FPGA片上资源利用率预测符合预期且合理的模型。</p>"},{"chapter":"总结与展望","word_count":1545,"word_similar_count":0,"sources":[],"similarity":0,"similarityPercentage":"0.0%","text":"<p>工作总结</p><p>本文的主要研究方向集中在高密度FPGA原型验证系统软件设计CAD流程中的划分阶段的资源估算领域,研究主要面向的是超大型的SoC设计的RTL级描述,研究主要分为三个方面:首先介绍了原型验证流程中FPGA的设计综合流程,包括逻辑综合原理,逻辑综合中Verilog HDL语法对应的逻辑综合原则,技术映射原理,现阶段工业界常用技术映射算法的描述,其次基于该原理结合高密度FPGA原型验证系统划分阶段需求设计并实现了快速资源估算模型,最后提出在EDA软件中结合机器学习方法,将资源估算与机器学习相结合,最终实现以下内容:</p><p>1、实现以传统思路框架为基础的快速资源估算模型,用户输入RTL级设计即可以快速得到设计所需要得FPGA片上资源数量如LUT、FF、BUFG等资源,有效提升了在超大型集成电路设计原型验证RTL划分阶段的迭代速度。</p><p>2、并在此基础上加入了合理的LUT优化算法,Bottom-To-Up算法,使该快速资源估算模型更加匹配实际划分需求及面向不同设计种类的优化方法及面向不同需求的优化方法,并增加可复用资源结构定义,并支持用户自定义功能user-define,使得原型验证划分阶段的迭代速度和实用性得到显著提升,有效提升约2.2倍,由于自主开发故拥有完善的C++输入输出接口,可集成在商业软件中,且实际应用至Player-Pro RTL Partition工业商用软件中,并在实际客户应用场景中得到检验。</p><p>3、以EDA与机器学习相结合的思路,结合逻辑综合及技术映射原理,构建面向RTL级集成电路行为描述的特征提取器,以Xilinx EDA设计软件为标签,尝试训练了线性回归、决策树、SVM、随机森林、人工神经网络等多种机器学习模型,使运行速率提升15倍,平均准确度达75%,同时验证了EDA软件与人工智能相结合的可行性,进一步提升了在超大规模集成电路设计FPGA原型验证的划分阶段的迭代速度,为EDA与原型验证流程相结合的研究打下基础。</p><p>通过以上三点,本文论述的工作为我国自主研发EDA与高密度FPGA原型验证系统的RTLPartition提供了可使用的工程软件,并在使用机器学习对从RTL级设计出发进行FPGA资源估算领域填补了空白。同时也为EDA软件与人工智能的结合验证了可行性。</p><p>工作展望</p><p>面向RTL级设计的FPGA快速资源估算问题结合了图论、可行性问题、逻辑分解、逻辑优化等众多方面特性,具有一定挑战性,随着设计规模的逐渐增大,在验证方面的需求特性也在增加,如何能有效的快速且准确的得到RTL设计所需的FPGA片上资源,并能有效合理的支持原型验证系统的RTL-Partition划分是未来EDA流程中将面临的一大问题。</p><p>本文虽在这方面做了一些研究和实现,但仍需在一下方面做出进一步的改进:</p><p>1.目前虽然实现快速资源估算模型,并增加了符合实际映射原理的优化及约束选项,但是在特殊的FPGA板上器件映射计算方面依然存在较大误差,如BRAM、LUTRAM等先进器件,所以可以考虑后续在这方面增加进一步的研究,使得资源估算更加精确。</p><p>2.虽然在本文中验证了机器学习方法与资源估算相结合的可行性,但是还处于初步阶段,精确度及估算器件类型上还有待增加,如可参照文章【】中提到的多级估算方法,将初步得到的一般器件估算结果进行二级抽象,得到更高级别的资源类型。</p><p>3.在面向资源估算的机器学习模型中增加更高层级抽象特征,增加实际模型泛化率,可参照文章【】利用HLS高层次综合方法快速构建样本设计从而增加模型训练样本数量,使得机器学习模型的泛化程度更高更有效。</p><p>4.神经网络资源估算模型还可以进一步增加不同设计在不同约束下进行综合的样本,使得机器学习模型可以支撑不同约束下的资源估算结果,如面积优化、功率优化等约束选项。</p>"}],"similarity":0.128,"last_part_similar_count":4024,"similarityPercentage":"12.8%","chapter_similar_count":1,"chapter_min_similar_word_count":5285,"front_part_similar_count":1261},"date":"2022-03-03 19:44:06","no":"0795efa0-37e7-44e6-aace-718668ab56c3"}